{"version":3,"file":"index.js","sources":["../node_modules/react/cjs/react.development.js","../node_modules/react/index.js","../node_modules/scheduler/cjs/scheduler.development.js","../node_modules/scheduler/index.js","../node_modules/react-dom/cjs/react-dom.development.js","../node_modules/react-dom/index.js","../node_modules/@remix-run/router/dist/router.js","../node_modules/react-dom/client.js","../node_modules/react-router/dist/index.js","../node_modules/react-router-dom/dist/index.js","../node_modules/recoil/es/index.js","../src/Components/ColumnDataContainer.jsx","../node_modules/object-assign/index.js","../node_modules/prop-types/checkPropTypes.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types/lib/has.js","../node_modules/@iconscout/react-unicons/node_modules/react/cjs/react.development.js","../node_modules/@iconscout/react-unicons/node_modules/react/index.js","../node_modules/react-is/cjs/react-is.development.js","../node_modules/react-is/index.js","../node_modules/prop-types/factoryWithTypeCheckers.js","../node_modules/prop-types/index.js","../node_modules/@iconscout/react-unicons/icons/uil-film.js","../src/Components/Card.jsx","../node_modules/@firebase/util/dist/index.esm2017.js","../node_modules/@firebase/component/dist/esm/index.esm2017.js","../node_modules/@firebase/logger/dist/esm/index.esm2017.js","../node_modules/idb/build/wrap-idb-value.js","../node_modules/idb/build/index.js","../node_modules/@firebase/app/dist/esm/index.esm2017.js","../node_modules/firebase/app/dist/esm/index.esm.js","../node_modules/@firebase/webchannel-wrapper/dist/esm/index.esm2017.js","../node_modules/@firebase/firestore/dist/index.esm2017.js","../node_modules/@firebase/functions/dist/index.esm2017.js","../src/videosList.js","../src/main.js","../src/Integrations/AirtableRequest.jsx","../src/Components/FlexOne.jsx","../src/Components/Text.jsx","../src/Icons/index.jsx","../src/state/index.js","../src/Components/Header.jsx","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../src/Components/RememberMe.jsx","../node_modules/@iconscout/react-unicons/icons/uil-notebooks.js","../src/Components/SideNavigationPanel.jsx","../src/Components/FormUpload/formUpload.jsx","../src/App.jsx","../src/index.js"],"sourcesContent":["/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var ReactVersion = '18.2.0';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  transition: null\n};\n\nvar ReactCurrentActQueue = {\n  current: null,\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n  isBatchingLegacy: false,\n  didScheduleLegacyUpdate: false\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar ReactDebugCurrentFrame = {};\nvar currentExtraStackFrame = null;\nfunction setExtraStackFrame(stack) {\n  {\n    currentExtraStackFrame = stack;\n  }\n}\n\n{\n  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n    {\n      currentExtraStackFrame = stack;\n    }\n  }; // Stack implementation injected by the current renderer.\n\n\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner\n};\n\n{\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar assign = Object.assign;\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n  }\n\n  var propName; // Original props are copied\n\n  var props = assign({}, element.props); // Reserved names are extracted\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = key.replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getElementKey(element, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    {\n      checkKeyStringCoercion(element.key);\n    }\n\n    return escape('' + element.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    var _child = children;\n    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n\n    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n\n    if (isArray(mappedChild)) {\n      var escapedChildKey = '';\n\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n\n      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n        return c;\n      });\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n\n        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n        // eslint-disable-next-line react-internal/safe-string-coercion\n        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);\n      }\n\n      array.push(mappedChild);\n    }\n\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n      var iterableChildren = children;\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(iterableChildren);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n      }\n    } else if (type === 'object') {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      var childrenString = String(children);\n      throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  var count = 0;\n  mapIntoArray(children, result, '', '', function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  var n = 0;\n  mapChildren(children, function () {\n    n++; // Don't return anything\n  });\n  return n;\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  mapChildren(children, function () {\n    forEachFunc.apply(this, arguments); // Don't return anything.\n  }, forEachContext);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  return mapChildren(children, function (child) {\n    return child;\n  }) || [];\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    throw new Error('React.Children.only expected to receive a single React element child.');\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue) {\n  // TODO: Second argument used to be an optional `calculateChangedBits`\n  // function. Warn to reserve for future use?\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null,\n    // Add these to use same hidden class in VM as ServerContext\n    _defaultValue: null,\n    _globalName: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n  var hasWarnedAboutDisplayNameOnConsumer = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      },\n      displayName: {\n        get: function () {\n          return context.displayName;\n        },\n        set: function (displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nvar Uninitialized = -1;\nvar Pending = 0;\nvar Resolved = 1;\nvar Rejected = 2;\n\nfunction lazyInitializer(payload) {\n  if (payload._status === Uninitialized) {\n    var ctor = payload._result;\n    var thenable = ctor(); // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n\n    thenable.then(function (moduleObject) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var resolved = payload;\n        resolved._status = Resolved;\n        resolved._result = moduleObject;\n      }\n    }, function (error) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var rejected = payload;\n        rejected._status = Rejected;\n        rejected._result = error;\n      }\n    });\n\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      var pending = payload;\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n\n  if (payload._status === Resolved) {\n    var moduleObject = payload._result;\n\n    {\n      if (moduleObject === undefined) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n      }\n    }\n\n    {\n      if (!('default' in moduleObject)) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n      }\n    }\n\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nfunction lazy(ctor) {\n  var payload = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor\n  };\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes; // $FlowFixMe\n\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!render.name && !render.displayName) {\n          render.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!type.name && !type.displayName) {\n          type.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  {\n    if (dispatcher === null) {\n      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n    }\n  } // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n\n\n  return dispatcher;\n}\nfunction useContext(Context) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    // TODO: add a more generic warning for invalid values.\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useInsertionEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\nfunction useTransition() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\nfunction useDeferredValue(value) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value);\n}\nfunction useId() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\nfunction useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher$1.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher$1.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      setExtraStackFrame(stack);\n    } else {\n      setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n  }\n\n  {\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nfunction startTransition(scope, options) {\n  var prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  var currentTransition = ReactCurrentBatchConfig.transition;\n\n  {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  try {\n    scope();\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nvar didWarnAboutMessageChannel = false;\nvar enqueueTaskImpl = null;\nfunction enqueueTask(task) {\n  if (enqueueTaskImpl === null) {\n    try {\n      // read require off the module object to get around the bundlers.\n      // we don't want them to detect a require and bundle a Node polyfill.\n      var requireString = ('require' + Math.random()).slice(0, 7);\n      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n      // version of setImmediate, bypassing fake timers if any.\n\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n    } catch (_err) {\n      // we're in a browser\n      // we can't use regular timers because they may still be faked\n      // so we try MessageChannel+postMessage instead\n      enqueueTaskImpl = function (callback) {\n        {\n          if (didWarnAboutMessageChannel === false) {\n            didWarnAboutMessageChannel = true;\n\n            if (typeof MessageChannel === 'undefined') {\n              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n            }\n          }\n        }\n\n        var channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(undefined);\n      };\n    }\n  }\n\n  return enqueueTaskImpl(task);\n}\n\nvar actScopeDepth = 0;\nvar didWarnNoAwaitAct = false;\nfunction act(callback) {\n  {\n    // `act` calls can be nested, so we track the depth. This represents the\n    // number of `act` scopes on the stack.\n    var prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n\n    if (ReactCurrentActQueue.current === null) {\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\n      // will detect the queue and use it instead of Scheduler.\n      ReactCurrentActQueue.current = [];\n    }\n\n    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n    var result;\n\n    try {\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n      // set to `true` while the given callback is executed, not for updates\n      // triggered during an async event, because this is how the legacy\n      // implementation of `act` behaved.\n      ReactCurrentActQueue.isBatchingLegacy = true;\n      result = callback(); // Replicate behavior of original `act` implementation in legacy mode,\n      // which flushed updates immediately after the scope function exits, even\n      // if it's an async function.\n\n      if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {\n        var queue = ReactCurrentActQueue.current;\n\n        if (queue !== null) {\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n          flushActQueue(queue);\n        }\n      }\n    } catch (error) {\n      popActScope(prevActScopeDepth);\n      throw error;\n    } finally {\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n    }\n\n    if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n      var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait\n      // for it to resolve before exiting the current scope.\n\n      var wasAwaited = false;\n      var thenable = {\n        then: function (resolve, reject) {\n          wasAwaited = true;\n          thenableResult.then(function (returnValue) {\n            popActScope(prevActScopeDepth);\n\n            if (actScopeDepth === 0) {\n              // We've exited the outermost act scope. Recursively flush the\n              // queue until there's no remaining work.\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }, function (error) {\n            // The callback threw an error.\n            popActScope(prevActScopeDepth);\n            reject(error);\n          });\n        }\n      };\n\n      {\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\n          // eslint-disable-next-line no-undef\n          Promise.resolve().then(function () {}).then(function () {\n            if (!wasAwaited) {\n              didWarnNoAwaitAct = true;\n\n              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n            }\n          });\n        }\n      }\n\n      return thenable;\n    } else {\n      var returnValue = result; // The callback is not an async function. Exit the current scope\n      // immediately, without awaiting.\n\n      popActScope(prevActScopeDepth);\n\n      if (actScopeDepth === 0) {\n        // Exiting the outermost act scope. Flush the queue.\n        var _queue = ReactCurrentActQueue.current;\n\n        if (_queue !== null) {\n          flushActQueue(_queue);\n          ReactCurrentActQueue.current = null;\n        } // Return a thenable. If the user awaits it, we'll flush again in\n        // case additional work was scheduled by a microtask.\n\n\n        var _thenable = {\n          then: function (resolve, reject) {\n            // Confirm we haven't re-entered another `act` scope, in case\n            // the user does something weird like await the thenable\n            // multiple times.\n            if (ReactCurrentActQueue.current === null) {\n              // Recursively flush the queue until there's no remaining work.\n              ReactCurrentActQueue.current = [];\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }\n        };\n        return _thenable;\n      } else {\n        // Since we're inside a nested `act` scope, the returned thenable\n        // immediately resolves. The outer scope will flush the queue.\n        var _thenable2 = {\n          then: function (resolve, reject) {\n            resolve(returnValue);\n          }\n        };\n        return _thenable2;\n      }\n    }\n  }\n}\n\nfunction popActScope(prevActScopeDepth) {\n  {\n    if (prevActScopeDepth !== actScopeDepth - 1) {\n      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n    }\n\n    actScopeDepth = prevActScopeDepth;\n  }\n}\n\nfunction recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n  {\n    var queue = ReactCurrentActQueue.current;\n\n    if (queue !== null) {\n      try {\n        flushActQueue(queue);\n        enqueueTask(function () {\n          if (queue.length === 0) {\n            // No additional work was scheduled. Finish.\n            ReactCurrentActQueue.current = null;\n            resolve(returnValue);\n          } else {\n            // Keep flushing work until there's none left.\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n          }\n        });\n      } catch (error) {\n        reject(error);\n      }\n    } else {\n      resolve(returnValue);\n    }\n  }\n}\n\nvar isFlushing = false;\n\nfunction flushActQueue(queue) {\n  {\n    if (!isFlushing) {\n      // Prevent re-entrance.\n      isFlushing = true;\n      var i = 0;\n\n      try {\n        for (; i < queue.length; i++) {\n          var callback = queue[i];\n\n          do {\n            callback = callback(true);\n          } while (callback !== null);\n        }\n\n        queue.length = 0;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        queue = queue.slice(i + 1);\n        throw error;\n      } finally {\n        isFlushing = false;\n      }\n    }\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.startTransition = startTransition;\nexports.unstable_act = act;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useDeferredValue = useDeferredValue;\nexports.useEffect = useEffect;\nexports.useId = useId;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useInsertionEffect = useInsertionEffect;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.useSyncExternalStore = useSyncExternalStore;\nexports.useTransition = useTransition;\nexports.version = ReactVersion;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @license React\n * scheduler.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var enableSchedulerDebugging = false;\nvar enableProfiling = false;\nvar frameYieldMs = 5;\n\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\nfunction peek(heap) {\n  return heap.length === 0 ? null : heap[0];\n}\nfunction pop(heap) {\n  if (heap.length === 0) {\n    return null;\n  }\n\n  var first = heap[0];\n  var last = heap.pop();\n\n  if (last !== first) {\n    heap[0] = last;\n    siftDown(heap, last, 0);\n  }\n\n  return first;\n}\n\nfunction siftUp(heap, node, i) {\n  var index = i;\n\n  while (index > 0) {\n    var parentIndex = index - 1 >>> 1;\n    var parent = heap[parentIndex];\n\n    if (compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  var index = i;\n  var length = heap.length;\n  var halfLength = length >>> 1;\n\n  while (index < halfLength) {\n    var leftIndex = (index + 1) * 2 - 1;\n    var left = heap[leftIndex];\n    var rightIndex = leftIndex + 1;\n    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.\n\n    if (compare(left, node) < 0) {\n      if (rightIndex < length && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (rightIndex < length && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  var diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n\n// TODO: Use symbols?\nvar ImmediatePriority = 1;\nvar UserBlockingPriority = 2;\nvar NormalPriority = 3;\nvar LowPriority = 4;\nvar IdlePriority = 5;\n\nfunction markTaskErrored(task, ms) {\n}\n\n/* eslint-disable no-var */\n\nvar hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\n\nif (hasPerformanceNow) {\n  var localPerformance = performance;\n\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date;\n  var initialTime = localDate.now();\n\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n} // Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\n\n\nvar maxSigned31BitInt = 1073741823; // Times out immediately\n\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out\n\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000; // Never times out\n\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap\n\nvar taskQueue = [];\nvar timerQueue = []; // Incrementing id counter. Used to maintain insertion order.\n\nvar taskIdCounter = 1; // Pausing the scheduler is useful for debugging.\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.\n\nvar isPerformingWork = false;\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.\n\nvar localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;\nvar localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;\nvar localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom\n\nvar isInputPending = typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  var timer = peek(timerQueue);\n\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      var firstTimer = peek(timerQueue);\n\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n\n\n  isHostCallbackScheduled = false;\n\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  var previousPriorityLevel = currentPriorityLevel;\n\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          var currentTime = exports.unstable_now();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  var currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n\n  while (currentTask !== null && !(enableSchedulerDebugging )) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n\n    var callback = currentTask.callback;\n\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n\n      var continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = exports.unstable_now();\n\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n      } else {\n\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n\n    currentTask = peek(taskQueue);\n  } // Return whether there's additional work\n\n\n  if (currentTask !== null) {\n    return true;\n  } else {\n    var firstTimer = peek(timerQueue);\n\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = exports.unstable_now();\n  var startTime;\n\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n  var newTask = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: startTime,\n    expirationTime: expirationTime,\n    sortIndex: -1\n  };\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      } // Schedule a timeout.\n\n\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    // wait until the next time we yield.\n\n\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n}\n\nfunction unstable_continueExecution() {\n\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n\n\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nvar isMessageLoopRunning = false;\nvar scheduledHostCallback = null;\nvar taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main\n// thread, like user events. By default, it yields multiple times per frame.\n// It does not attempt to align with frame boundaries, since most tasks don't\n// need to be frame aligned; for those that do, use requestAnimationFrame.\n\nvar frameInterval = frameYieldMs;\nvar startTime = -1;\n\nfunction shouldYieldToHost() {\n  var timeElapsed = exports.unstable_now() - startTime;\n\n  if (timeElapsed < frameInterval) {\n    // The main thread has only been blocked for a really short amount of time;\n    // smaller than a single frame. Don't yield yet.\n    return false;\n  } // The main thread has been blocked for a non-negligible amount of time. We\n\n\n  return true;\n}\n\nfunction requestPaint() {\n\n}\n\nfunction forceFrameRate(fps) {\n  if (fps < 0 || fps > 125) {\n    // Using console['error'] to evade Babel and ESLint\n    console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');\n    return;\n  }\n\n  if (fps > 0) {\n    frameInterval = Math.floor(1000 / fps);\n  } else {\n    // reset the framerate\n    frameInterval = frameYieldMs;\n  }\n}\n\nvar performWorkUntilDeadline = function () {\n  if (scheduledHostCallback !== null) {\n    var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread\n    // has been blocked.\n\n    startTime = currentTime;\n    var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the\n    // error can be observed.\n    //\n    // Intentionally not using a try-catch, since that makes some debugging\n    // techniques harder. Instead, if `scheduledHostCallback` errors, then\n    // `hasMoreWork` will remain true, and we'll continue the work loop.\n\n    var hasMoreWork = true;\n\n    try {\n      hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\n    } finally {\n      if (hasMoreWork) {\n        // If there's more work, schedule the next message event at the end\n        // of the preceding one.\n        schedulePerformWorkUntilDeadline();\n      } else {\n        isMessageLoopRunning = false;\n        scheduledHostCallback = null;\n      }\n    }\n  } else {\n    isMessageLoopRunning = false;\n  } // Yielding to the browser will give it a chance to paint, so we can\n};\n\nvar schedulePerformWorkUntilDeadline;\n\nif (typeof localSetImmediate === 'function') {\n  // Node.js and old IE.\n  // There's a few reasons for why we prefer setImmediate.\n  //\n  // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.\n  // (Even though this is a DOM fork of the Scheduler, you could get here\n  // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)\n  // https://github.com/facebook/react/issues/20756\n  //\n  // But also, it runs earlier which is the semantic we want.\n  // If other browsers ever implement it, it's better to use it.\n  // Although both of these would be inferior to native scheduling.\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\n} else if (typeof MessageChannel !== 'undefined') {\n  // DOM and Worker environments.\n  // We prefer MessageChannel because of the 4ms setTimeout clamping.\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else {\n  // We should only fallback here in non-browser environments.\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\n}\n\nfunction requestHostCallback(callback) {\n  scheduledHostCallback = callback;\n\n  if (!isMessageLoopRunning) {\n    isMessageLoopRunning = true;\n    schedulePerformWorkUntilDeadline();\n  }\n}\n\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\n\nfunction cancelHostTimeout() {\n  localClearTimeout(taskTimeoutID);\n  taskTimeoutID = -1;\n}\n\nvar unstable_requestPaint = requestPaint;\nvar unstable_Profiling =  null;\n\nexports.unstable_IdlePriority = IdlePriority;\nexports.unstable_ImmediatePriority = ImmediatePriority;\nexports.unstable_LowPriority = LowPriority;\nexports.unstable_NormalPriority = NormalPriority;\nexports.unstable_Profiling = unstable_Profiling;\nexports.unstable_UserBlockingPriority = UserBlockingPriority;\nexports.unstable_cancelCallback = unstable_cancelCallback;\nexports.unstable_continueExecution = unstable_continueExecution;\nexports.unstable_forceFrameRate = forceFrameRate;\nexports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\nexports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\nexports.unstable_next = unstable_next;\nexports.unstable_pauseExecution = unstable_pauseExecution;\nexports.unstable_requestPaint = unstable_requestPaint;\nexports.unstable_runWithPriority = unstable_runWithPriority;\nexports.unstable_scheduleCallback = unstable_scheduleCallback;\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = unstable_wrapCallback;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * @license React\n * react-dom.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\nvar Scheduler = require('scheduler');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nvar suppressWarning = false;\nfunction setSuppressWarning(newSuppressWarning) {\n  {\n    suppressWarning = newSuppressWarning;\n  }\n} // In DEV, calls to console.warn and console.error get replaced\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    if (!suppressWarning) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    if (!suppressWarning) {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar FunctionComponent = 0;\nvar ClassComponent = 1;\nvar IndeterminateComponent = 2; // Before we know whether it is function or class\n\nvar HostRoot = 3; // Root of a host tree. Could be nested inside another node.\n\nvar HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\n\nvar HostComponent = 5;\nvar HostText = 6;\nvar Fragment = 7;\nvar Mode = 8;\nvar ContextConsumer = 9;\nvar ContextProvider = 10;\nvar ForwardRef = 11;\nvar Profiler = 12;\nvar SuspenseComponent = 13;\nvar MemoComponent = 14;\nvar SimpleMemoComponent = 15;\nvar LazyComponent = 16;\nvar IncompleteClassComponent = 17;\nvar DehydratedFragment = 18;\nvar SuspenseListComponent = 19;\nvar ScopeComponent = 21;\nvar OffscreenComponent = 22;\nvar LegacyHiddenComponent = 23;\nvar CacheComponent = 24;\nvar TracingMarkerComponent = 25;\n\n// -----------------------------------------------------------------------------\n\nvar enableClientRenderFallbackOnTextMismatch = true; // TODO: Need to review this code one more time before landing\n// the react-reconciler package.\n\nvar enableNewReconciler = false; // Support legacy Primer support on internal FB www\n\nvar enableLazyContextPropagation = false; // FB-only usage. The new API has different semantics.\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n\nvar enableSuspenseAvoidThisFallback = false; // Enables unstable_avoidThisFallback feature in Fizz\n// React DOM Chopping Block\n//\n// Similar to main Chopping Block but only flags related to React DOM. These are\n// grouped because we will likely batch all of them into a single major release.\n// -----------------------------------------------------------------------------\n// Disable support for comment nodes as React DOM containers. Already disabled\n// in open source, but www codebase still relies on it. Need to remove.\n\nvar disableCommentsAsDOMContainers = true; // Disable javascript: URL strings in href for XSS protection.\n// and client rendering, mostly to allow JSX attributes to apply to the custom\n// element's object properties instead of only HTML attributes.\n// https://github.com/facebook/react/issues/11347\n\nvar enableCustomElementPropertySupport = false; // Disables children for <textarea> elements\nvar warnAboutStringRefs = false; // -----------------------------------------------------------------------------\n// Debugging and DevTools\n// -----------------------------------------------------------------------------\n// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,\n// for an experimental timeline tool.\n\nvar enableSchedulingProfiler = true; // Helps identify side effects in render-phase lifecycle hooks and setState\n\nvar enableProfilerTimer = true; // Record durations for commit and passive effects phases.\n\nvar enableProfilerCommitHooks = true; // Phase param passed to onRender callback differentiates between an \"update\" and a \"cascading-update\".\n\nvar allNativeEvents = new Set();\n/**\n * Mapping from registration name to event name\n */\n\n\nvar registrationNameDependencies = {};\n/**\n * Mapping from lowercase registration names to the properly cased version,\n * used to warn in the case of missing event handlers. Available\n * only in true.\n * @type {Object}\n */\n\nvar possibleRegistrationNames =  {} ; // Trust the developer to only use possibleRegistrationNames in true\n\nfunction registerTwoPhaseEvent(registrationName, dependencies) {\n  registerDirectEvent(registrationName, dependencies);\n  registerDirectEvent(registrationName + 'Capture', dependencies);\n}\nfunction registerDirectEvent(registrationName, dependencies) {\n  {\n    if (registrationNameDependencies[registrationName]) {\n      error('EventRegistry: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName);\n    }\n  }\n\n  registrationNameDependencies[registrationName] = dependencies;\n\n  {\n    var lowerCasedName = registrationName.toLowerCase();\n    possibleRegistrationNames[lowerCasedName] = registrationName;\n\n    if (registrationName === 'onDoubleClick') {\n      possibleRegistrationNames.ondblclick = registrationName;\n    }\n  }\n\n  for (var i = 0; i < dependencies.length; i++) {\n    allNativeEvents.add(dependencies[i]);\n  }\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\n\nfunction checkAttributeStringCoercion(value, attributeName) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided `%s` attribute is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', attributeName, typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\nfunction checkPropStringCoercion(value, propName) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided `%s` prop is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', propName, typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\nfunction checkCSSPropertyStringCoercion(value, propName) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided `%s` CSS property is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', propName, typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\nfunction checkHtmlStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided HTML markup uses a value of unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\nfunction checkFormFieldValueStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('Form field values (value, checked, defaultValue, or defaultChecked props)' + ' must be strings, not %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\n// A reserved attribute.\n// It is handled by React separately and shouldn't be written to the DOM.\nvar RESERVED = 0; // A simple string attribute.\n// Attributes that aren't in the filter are presumed to have this type.\n\nvar STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called\n// \"enumerated\" attributes with \"true\" and \"false\" as possible values.\n// When true, it should be set to a \"true\" string.\n// When false, it should be set to a \"false\" string.\n\nvar BOOLEANISH_STRING = 2; // A real boolean attribute.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n\nvar BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n// For any other value, should be present with that value.\n\nvar OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.\n// When falsy, it should be removed.\n\nvar NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.\n// When falsy, it should be removed.\n\nvar POSITIVE_NUMERIC = 6;\n\n/* eslint-disable max-len */\nvar ATTRIBUTE_NAME_START_CHAR = \":A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\";\n/* eslint-enable max-len */\n\nvar ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + \"\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\";\nvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');\nvar illegalAttributeNameCache = {};\nvar validatedAttributeNameCache = {};\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {\n    return true;\n  }\n\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {\n    return false;\n  }\n\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n\n  illegalAttributeNameCache[attributeName] = true;\n\n  {\n    error('Invalid attribute name: `%s`', attributeName);\n  }\n\n  return false;\n}\nfunction shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {\n  if (propertyInfo !== null) {\n    return propertyInfo.type === RESERVED;\n  }\n\n  if (isCustomComponentTag) {\n    return false;\n  }\n\n  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {\n    return true;\n  }\n\n  return false;\n}\nfunction shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {\n  if (propertyInfo !== null && propertyInfo.type === RESERVED) {\n    return false;\n  }\n\n  switch (typeof value) {\n    case 'function': // $FlowIssue symbol is perfectly valid here\n\n    case 'symbol':\n      // eslint-disable-line\n      return true;\n\n    case 'boolean':\n      {\n        if (isCustomComponentTag) {\n          return false;\n        }\n\n        if (propertyInfo !== null) {\n          return !propertyInfo.acceptsBooleans;\n        } else {\n          var prefix = name.toLowerCase().slice(0, 5);\n          return prefix !== 'data-' && prefix !== 'aria-';\n        }\n      }\n\n    default:\n      return false;\n  }\n}\nfunction shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {\n  if (value === null || typeof value === 'undefined') {\n    return true;\n  }\n\n  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {\n    return true;\n  }\n\n  if (isCustomComponentTag) {\n\n    return false;\n  }\n\n  if (propertyInfo !== null) {\n\n    switch (propertyInfo.type) {\n      case BOOLEAN:\n        return !value;\n\n      case OVERLOADED_BOOLEAN:\n        return value === false;\n\n      case NUMERIC:\n        return isNaN(value);\n\n      case POSITIVE_NUMERIC:\n        return isNaN(value) || value < 1;\n    }\n  }\n\n  return false;\n}\nfunction getPropertyInfo(name) {\n  return properties.hasOwnProperty(name) ? properties[name] : null;\n}\n\nfunction PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {\n  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;\n  this.attributeName = attributeName;\n  this.attributeNamespace = attributeNamespace;\n  this.mustUseProperty = mustUseProperty;\n  this.propertyName = name;\n  this.type = type;\n  this.sanitizeURL = sanitizeURL;\n  this.removeEmptyString = removeEmptyString;\n} // When adding attributes to this list, be sure to also add them to\n// the `possibleStandardNames` module to ensure casing and incorrect\n// name warnings.\n\n\nvar properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.\n\nvar reservedProps = ['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular\n// elements (not just inputs). Now that ReactDOMInput assigns to the\n// defaultValue property -- do we need this?\n'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'];\n\nreservedProps.forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // A few React string attributes have a different name.\n// This is a mapping from React prop names to the attribute names.\n\n[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {\n  var name = _ref[0],\n      attributeName = _ref[1];\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are \"enumerated\" HTML attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n\n['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are \"enumerated\" SVG attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n// Since these are SVG attributes, their attribute names are case-sensitive.\n\n['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML boolean attributes.\n\n['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM\n// on the client side because the browsers are inconsistent. Instead we call focus().\n'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'disableRemotePlayback', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata\n'itemScope'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are the few React props that we set as DOM properties\n// rather than attributes. These are all booleans.\n\n['checked', // Note: `option.selected` is not updated if `select.multiple` is\n// disabled with `removeAttribute`. We have special logic for handling this.\n'multiple', 'muted', 'selected' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML attributes that are \"overloaded booleans\": they behave like\n// booleans, but can also accept a string value.\n\n['capture', 'download' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML attributes that must be positive numbers.\n\n['cols', 'rows', 'size', 'span' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML attributes that must be numbers.\n\n['rowSpan', 'start'].forEach(function (name) {\n  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n});\nvar CAMELIZE = /[\\-\\:]([a-z])/g;\n\nvar capitalize = function (token) {\n  return token[1].toUpperCase();\n}; // This is a list of all SVG attributes that need special casing, namespacing,\n// or boolean value assignment. Regular attributes that just accept strings\n// and have the same names are omitted, just like in the HTML attribute filter.\n// Some of these attributes can be hard to find. This list was created by\n// scraping the MDN documentation.\n\n\n['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // String SVG attributes with the xlink namespace.\n\n['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, 'http://www.w3.org/1999/xlink', false, // sanitizeURL\n  false);\n}); // String SVG attributes with the xml namespace.\n\n['xml:base', 'xml:lang', 'xml:space' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(function (attributeName) {\n  var name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, 'http://www.w3.org/XML/1998/namespace', false, // sanitizeURL\n  false);\n}); // These attribute exists both in HTML and SVG.\n// The attribute name is case-sensitive in SVG so we can't just use\n// the React name like we do for attributes that exist only in HTML.\n\n['tabIndex', 'crossOrigin'].forEach(function (attributeName) {\n  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty\n  attributeName.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These attributes accept URLs. These must not allow javascript: URLS.\n// These will also need to accept Trusted Types object in the future.\n\nvar xlinkHref = 'xlinkHref';\nproperties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty\n'xlink:href', 'http://www.w3.org/1999/xlink', true, // sanitizeURL\nfalse);\n['src', 'href', 'action', 'formAction'].forEach(function (attributeName) {\n  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty\n  attributeName.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  true, // sanitizeURL\n  true);\n});\n\n// and any newline or tab are filtered out as if they're not part of the URL.\n// https://url.spec.whatwg.org/#url-parsing\n// Tab or newline are defined as \\r\\n\\t:\n// https://infra.spec.whatwg.org/#ascii-tab-or-newline\n// A C0 control is a code point in the range \\u0000 NULL to \\u001F\n// INFORMATION SEPARATOR ONE, inclusive:\n// https://infra.spec.whatwg.org/#c0-control-or-space\n\n/* eslint-disable max-len */\n\nvar isJavaScriptProtocol = /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*\\:/i;\nvar didWarn = false;\n\nfunction sanitizeURL(url) {\n  {\n    if (!didWarn && isJavaScriptProtocol.test(url)) {\n      didWarn = true;\n\n      error('A future version of React will block javascript: URLs as a security precaution. ' + 'Use event handlers instead if you can. If you need to generate unsafe HTML try ' + 'using dangerouslySetInnerHTML instead. React was passed %s.', JSON.stringify(url));\n    }\n  }\n}\n\n/**\n * Get the value for a property on a node. Only used in DEV for SSR validation.\n * The \"expected\" argument is used as a hint of what the expected value is.\n * Some properties have multiple equivalent values.\n */\nfunction getValueForProperty(node, name, expected, propertyInfo) {\n  {\n    if (propertyInfo.mustUseProperty) {\n      var propertyName = propertyInfo.propertyName;\n      return node[propertyName];\n    } else {\n      // This check protects multiple uses of `expected`, which is why the\n      // react-internal/safe-string-coercion rule is disabled in several spots\n      // below.\n      {\n        checkAttributeStringCoercion(expected, name);\n      }\n\n      if ( propertyInfo.sanitizeURL) {\n        // If we haven't fully disabled javascript: URLs, and if\n        // the hydration is successful of a javascript: URL, we\n        // still want to warn on the client.\n        // eslint-disable-next-line react-internal/safe-string-coercion\n        sanitizeURL('' + expected);\n      }\n\n      var attributeName = propertyInfo.attributeName;\n      var stringValue = null;\n\n      if (propertyInfo.type === OVERLOADED_BOOLEAN) {\n        if (node.hasAttribute(attributeName)) {\n          var value = node.getAttribute(attributeName);\n\n          if (value === '') {\n            return true;\n          }\n\n          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n            return value;\n          } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n          if (value === '' + expected) {\n            return expected;\n          }\n\n          return value;\n        }\n      } else if (node.hasAttribute(attributeName)) {\n        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n          // We had an attribute but shouldn't have had one, so read it\n          // for the error message.\n          return node.getAttribute(attributeName);\n        }\n\n        if (propertyInfo.type === BOOLEAN) {\n          // If this was a boolean, it doesn't matter what the value is\n          // the fact that we have it is the same as the expected.\n          return expected;\n        } // Even if this property uses a namespace we use getAttribute\n        // because we assume its namespaced name is the same as our config.\n        // To use getAttributeNS we need the local name which we don't have\n        // in our config atm.\n\n\n        stringValue = node.getAttribute(attributeName);\n      }\n\n      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n        return stringValue === null ? expected : stringValue; // eslint-disable-next-line react-internal/safe-string-coercion\n      } else if (stringValue === '' + expected) {\n        return expected;\n      } else {\n        return stringValue;\n      }\n    }\n  }\n}\n/**\n * Get the value for a attribute on a node. Only used in DEV for SSR validation.\n * The third argument is used as a hint of what the expected value is. Some\n * attributes have multiple equivalent values.\n */\n\nfunction getValueForAttribute(node, name, expected, isCustomComponentTag) {\n  {\n    if (!isAttributeNameSafe(name)) {\n      return;\n    }\n\n    if (!node.hasAttribute(name)) {\n      return expected === undefined ? undefined : null;\n    }\n\n    var value = node.getAttribute(name);\n\n    {\n      checkAttributeStringCoercion(expected, name);\n    }\n\n    if (value === '' + expected) {\n      return expected;\n    }\n\n    return value;\n  }\n}\n/**\n * Sets the value for a property on a node.\n *\n * @param {DOMElement} node\n * @param {string} name\n * @param {*} value\n */\n\nfunction setValueForProperty(node, name, value, isCustomComponentTag) {\n  var propertyInfo = getPropertyInfo(name);\n\n  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {\n    return;\n  }\n\n  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {\n    value = null;\n  }\n\n\n  if (isCustomComponentTag || propertyInfo === null) {\n    if (isAttributeNameSafe(name)) {\n      var _attributeName = name;\n\n      if (value === null) {\n        node.removeAttribute(_attributeName);\n      } else {\n        {\n          checkAttributeStringCoercion(value, name);\n        }\n\n        node.setAttribute(_attributeName,  '' + value);\n      }\n    }\n\n    return;\n  }\n\n  var mustUseProperty = propertyInfo.mustUseProperty;\n\n  if (mustUseProperty) {\n    var propertyName = propertyInfo.propertyName;\n\n    if (value === null) {\n      var type = propertyInfo.type;\n      node[propertyName] = type === BOOLEAN ? false : '';\n    } else {\n      // Contrary to `setAttribute`, object properties are properly\n      // `toString`ed by IE8/9.\n      node[propertyName] = value;\n    }\n\n    return;\n  } // The rest are treated as attributes with special cases.\n\n\n  var attributeName = propertyInfo.attributeName,\n      attributeNamespace = propertyInfo.attributeNamespace;\n\n  if (value === null) {\n    node.removeAttribute(attributeName);\n  } else {\n    var _type = propertyInfo.type;\n    var attributeValue;\n\n    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {\n      // If attribute type is boolean, we know for sure it won't be an execution sink\n      // and we won't require Trusted Type here.\n      attributeValue = '';\n    } else {\n      // `setAttribute` with objects becomes only `[object]` in IE8/9,\n      // ('' + value) makes it output the correct toString()-value.\n      {\n        {\n          checkAttributeStringCoercion(value, attributeName);\n        }\n\n        attributeValue = '' + value;\n      }\n\n      if (propertyInfo.sanitizeURL) {\n        sanitizeURL(attributeValue.toString());\n      }\n    }\n\n    if (attributeNamespace) {\n      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);\n    } else {\n      node.setAttribute(attributeName, attributeValue);\n    }\n  }\n}\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_SCOPE_TYPE = Symbol.for('react.scope');\nvar REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\n\nfunction describeClassComponentFrame(ctor, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(ctor, true);\n  }\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nfunction describeFiber(fiber) {\n  var owner =  fiber._debugOwner ? fiber._debugOwner.type : null ;\n  var source =  fiber._debugSource ;\n\n  switch (fiber.tag) {\n    case HostComponent:\n      return describeBuiltInComponentFrame(fiber.type);\n\n    case LazyComponent:\n      return describeBuiltInComponentFrame('Lazy');\n\n    case SuspenseComponent:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case SuspenseListComponent:\n      return describeBuiltInComponentFrame('SuspenseList');\n\n    case FunctionComponent:\n    case IndeterminateComponent:\n    case SimpleMemoComponent:\n      return describeFunctionComponentFrame(fiber.type);\n\n    case ForwardRef:\n      return describeFunctionComponentFrame(fiber.type.render);\n\n    case ClassComponent:\n      return describeClassComponentFrame(fiber.type);\n\n    default:\n      return '';\n  }\n}\n\nfunction getStackByFiberInDevAndProd(workInProgress) {\n  try {\n    var info = '';\n    var node = workInProgress;\n\n    do {\n      info += describeFiber(node);\n      node = node.return;\n    } while (node);\n\n    return info;\n  } catch (x) {\n    return '\\nError generating stack: ' + x.message + '\\n' + x.stack;\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nfunction getWrappedName$1(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n} // Keep in sync with shared/getComponentNameFromType\n\n\nfunction getContextName$1(type) {\n  return type.displayName || 'Context';\n}\n\nfunction getComponentNameFromFiber(fiber) {\n  var tag = fiber.tag,\n      type = fiber.type;\n\n  switch (tag) {\n    case CacheComponent:\n      return 'Cache';\n\n    case ContextConsumer:\n      var context = type;\n      return getContextName$1(context) + '.Consumer';\n\n    case ContextProvider:\n      var provider = type;\n      return getContextName$1(provider._context) + '.Provider';\n\n    case DehydratedFragment:\n      return 'DehydratedFragment';\n\n    case ForwardRef:\n      return getWrappedName$1(type, type.render, 'ForwardRef');\n\n    case Fragment:\n      return 'Fragment';\n\n    case HostComponent:\n      // Host component type is the display name (e.g. \"div\", \"View\")\n      return type;\n\n    case HostPortal:\n      return 'Portal';\n\n    case HostRoot:\n      return 'Root';\n\n    case HostText:\n      return 'Text';\n\n    case LazyComponent:\n      // Name comes from the type in this case; we don't have a tag.\n      return getComponentNameFromType(type);\n\n    case Mode:\n      if (type === REACT_STRICT_MODE_TYPE) {\n        // Don't be less specific than shared/getComponentNameFromType\n        return 'StrictMode';\n      }\n\n      return 'Mode';\n\n    case OffscreenComponent:\n      return 'Offscreen';\n\n    case Profiler:\n      return 'Profiler';\n\n    case ScopeComponent:\n      return 'Scope';\n\n    case SuspenseComponent:\n      return 'Suspense';\n\n    case SuspenseListComponent:\n      return 'SuspenseList';\n\n    case TracingMarkerComponent:\n      return 'TracingMarker';\n    // The display name for this tags come from the user-provided type:\n\n    case ClassComponent:\n    case FunctionComponent:\n    case IncompleteClassComponent:\n    case IndeterminateComponent:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      if (typeof type === 'function') {\n        return type.displayName || type.name || null;\n      }\n\n      if (typeof type === 'string') {\n        return type;\n      }\n\n      break;\n\n  }\n\n  return null;\n}\n\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar current = null;\nvar isRendering = false;\nfunction getCurrentFiberOwnerNameInDevOrNull() {\n  {\n    if (current === null) {\n      return null;\n    }\n\n    var owner = current._debugOwner;\n\n    if (owner !== null && typeof owner !== 'undefined') {\n      return getComponentNameFromFiber(owner);\n    }\n  }\n\n  return null;\n}\n\nfunction getCurrentFiberStackInDev() {\n  {\n    if (current === null) {\n      return '';\n    } // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n\n\n    return getStackByFiberInDevAndProd(current);\n  }\n}\n\nfunction resetCurrentFiber() {\n  {\n    ReactDebugCurrentFrame.getCurrentStack = null;\n    current = null;\n    isRendering = false;\n  }\n}\nfunction setCurrentFiber(fiber) {\n  {\n    ReactDebugCurrentFrame.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;\n    current = fiber;\n    isRendering = false;\n  }\n}\nfunction getCurrentFiber() {\n  {\n    return current;\n  }\n}\nfunction setIsRendering(rendering) {\n  {\n    isRendering = rendering;\n  }\n}\n\n// Flow does not allow string concatenation of most non-string types. To work\n// around this limitation, we use an opaque type that can only be obtained by\n// passing the value through getToStringValue first.\nfunction toString(value) {\n  // The coercion safety check is performed in getToStringValue().\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction getToStringValue(value) {\n  switch (typeof value) {\n    case 'boolean':\n    case 'number':\n    case 'string':\n    case 'undefined':\n      return value;\n\n    case 'object':\n      {\n        checkFormFieldValueStringCoercion(value);\n      }\n\n      return value;\n\n    default:\n      // function, symbol are assigned as empty strings\n      return '';\n  }\n}\n\nvar hasReadOnlyValue = {\n  button: true,\n  checkbox: true,\n  image: true,\n  hidden: true,\n  radio: true,\n  reset: true,\n  submit: true\n};\nfunction checkControlledValueProps(tagName, props) {\n  {\n    if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {\n      error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n    }\n\n    if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {\n      error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n    }\n  }\n}\n\nfunction isCheckable(elem) {\n  var type = elem.type;\n  var nodeName = elem.nodeName;\n  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');\n}\n\nfunction getTracker(node) {\n  return node._valueTracker;\n}\n\nfunction detachTracker(node) {\n  node._valueTracker = null;\n}\n\nfunction getValueFromNode(node) {\n  var value = '';\n\n  if (!node) {\n    return value;\n  }\n\n  if (isCheckable(node)) {\n    value = node.checked ? 'true' : 'false';\n  } else {\n    value = node.value;\n  }\n\n  return value;\n}\n\nfunction trackValueOnNode(node) {\n  var valueField = isCheckable(node) ? 'checked' : 'value';\n  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);\n\n  {\n    checkFormFieldValueStringCoercion(node[valueField]);\n  }\n\n  var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail\n  // and don't track value will cause over reporting of changes,\n  // but it's better then a hard failure\n  // (needed for certain tests that spyOn input values and Safari)\n\n  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {\n    return;\n  }\n\n  var get = descriptor.get,\n      set = descriptor.set;\n  Object.defineProperty(node, valueField, {\n    configurable: true,\n    get: function () {\n      return get.call(this);\n    },\n    set: function (value) {\n      {\n        checkFormFieldValueStringCoercion(value);\n      }\n\n      currentValue = '' + value;\n      set.call(this, value);\n    }\n  }); // We could've passed this the first time\n  // but it triggers a bug in IE11 and Edge 14/15.\n  // Calling defineProperty() again should be equivalent.\n  // https://github.com/facebook/react/issues/11768\n\n  Object.defineProperty(node, valueField, {\n    enumerable: descriptor.enumerable\n  });\n  var tracker = {\n    getValue: function () {\n      return currentValue;\n    },\n    setValue: function (value) {\n      {\n        checkFormFieldValueStringCoercion(value);\n      }\n\n      currentValue = '' + value;\n    },\n    stopTracking: function () {\n      detachTracker(node);\n      delete node[valueField];\n    }\n  };\n  return tracker;\n}\n\nfunction track(node) {\n  if (getTracker(node)) {\n    return;\n  } // TODO: Once it's just Fiber we can move this to node._wrapperState\n\n\n  node._valueTracker = trackValueOnNode(node);\n}\nfunction updateValueIfChanged(node) {\n  if (!node) {\n    return false;\n  }\n\n  var tracker = getTracker(node); // if there is no tracker at this point it's unlikely\n  // that trying again will succeed\n\n  if (!tracker) {\n    return true;\n  }\n\n  var lastValue = tracker.getValue();\n  var nextValue = getValueFromNode(node);\n\n  if (nextValue !== lastValue) {\n    tracker.setValue(nextValue);\n    return true;\n  }\n\n  return false;\n}\n\nfunction getActiveElement(doc) {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nvar didWarnValueDefaultValue = false;\nvar didWarnCheckedDefaultChecked = false;\nvar didWarnControlledToUncontrolled = false;\nvar didWarnUncontrolledToControlled = false;\n\nfunction isControlled(props) {\n  var usesChecked = props.type === 'checkbox' || props.type === 'radio';\n  return usesChecked ? props.checked != null : props.value != null;\n}\n/**\n * Implements an <input> host component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\n\n\nfunction getHostProps(element, props) {\n  var node = element;\n  var checked = props.checked;\n  var hostProps = assign({}, props, {\n    defaultChecked: undefined,\n    defaultValue: undefined,\n    value: undefined,\n    checked: checked != null ? checked : node._wrapperState.initialChecked\n  });\n  return hostProps;\n}\nfunction initWrapperState(element, props) {\n  {\n    checkControlledValueProps('input', props);\n\n    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {\n      error('%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);\n\n      didWarnCheckedDefaultChecked = true;\n    }\n\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n      error('%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);\n\n      didWarnValueDefaultValue = true;\n    }\n  }\n\n  var node = element;\n  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;\n  node._wrapperState = {\n    initialChecked: props.checked != null ? props.checked : props.defaultChecked,\n    initialValue: getToStringValue(props.value != null ? props.value : defaultValue),\n    controlled: isControlled(props)\n  };\n}\nfunction updateChecked(element, props) {\n  var node = element;\n  var checked = props.checked;\n\n  if (checked != null) {\n    setValueForProperty(node, 'checked', checked, false);\n  }\n}\nfunction updateWrapper(element, props) {\n  var node = element;\n\n  {\n    var controlled = isControlled(props);\n\n    if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {\n      error('A component is changing an uncontrolled input to be controlled. ' + 'This is likely caused by the value changing from undefined to ' + 'a defined value, which should not happen. ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components');\n\n      didWarnUncontrolledToControlled = true;\n    }\n\n    if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {\n      error('A component is changing a controlled input to be uncontrolled. ' + 'This is likely caused by the value changing from a defined to ' + 'undefined, which should not happen. ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components');\n\n      didWarnControlledToUncontrolled = true;\n    }\n  }\n\n  updateChecked(element, props);\n  var value = getToStringValue(props.value);\n  var type = props.type;\n\n  if (value != null) {\n    if (type === 'number') {\n      if (value === 0 && node.value === '' || // We explicitly want to coerce to number here if possible.\n      // eslint-disable-next-line\n      node.value != value) {\n        node.value = toString(value);\n      }\n    } else if (node.value !== toString(value)) {\n      node.value = toString(value);\n    }\n  } else if (type === 'submit' || type === 'reset') {\n    // Submit/reset inputs need the attribute removed completely to avoid\n    // blank-text buttons.\n    node.removeAttribute('value');\n    return;\n  }\n\n  {\n    // When syncing the value attribute, the value comes from a cascade of\n    // properties:\n    //  1. The value React property\n    //  2. The defaultValue React property\n    //  3. Otherwise there should be no change\n    if (props.hasOwnProperty('value')) {\n      setDefaultValue(node, props.type, value);\n    } else if (props.hasOwnProperty('defaultValue')) {\n      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));\n    }\n  }\n\n  {\n    // When syncing the checked attribute, it only changes when it needs\n    // to be removed, such as transitioning from a checkbox into a text input\n    if (props.checked == null && props.defaultChecked != null) {\n      node.defaultChecked = !!props.defaultChecked;\n    }\n  }\n}\nfunction postMountWrapper(element, props, isHydrating) {\n  var node = element; // Do not assign value if it is already set. This prevents user text input\n  // from being lost during SSR hydration.\n\n  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {\n    var type = props.type;\n    var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the\n    // default value provided by the browser. See: #12872\n\n    if (isButton && (props.value === undefined || props.value === null)) {\n      return;\n    }\n\n    var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input\n    // from being lost during SSR hydration.\n\n    if (!isHydrating) {\n      {\n        // When syncing the value attribute, the value property should use\n        // the wrapperState._initialValue property. This uses:\n        //\n        //   1. The value React property when present\n        //   2. The defaultValue React property when present\n        //   3. An empty string\n        if (initialValue !== node.value) {\n          node.value = initialValue;\n        }\n      }\n    }\n\n    {\n      // Otherwise, the value attribute is synchronized to the property,\n      // so we assign defaultValue to the same thing as the value property\n      // assignment step above.\n      node.defaultValue = initialValue;\n    }\n  } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n  // this is needed to work around a chrome bug where setting defaultChecked\n  // will sometimes influence the value of checked (even after detachment).\n  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n  // We need to temporarily unset name to avoid disrupting radio button groups.\n\n\n  var name = node.name;\n\n  if (name !== '') {\n    node.name = '';\n  }\n\n  {\n    // When syncing the checked attribute, both the checked property and\n    // attribute are assigned at the same time using defaultChecked. This uses:\n    //\n    //   1. The checked React property when present\n    //   2. The defaultChecked React property when present\n    //   3. Otherwise, false\n    node.defaultChecked = !node.defaultChecked;\n    node.defaultChecked = !!node._wrapperState.initialChecked;\n  }\n\n  if (name !== '') {\n    node.name = name;\n  }\n}\nfunction restoreControlledState(element, props) {\n  var node = element;\n  updateWrapper(node, props);\n  updateNamedCousins(node, props);\n}\n\nfunction updateNamedCousins(rootNode, props) {\n  var name = props.name;\n\n  if (props.type === 'radio' && name != null) {\n    var queryRoot = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = queryRoot.parentNode;\n    } // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form. It might not even be in the\n    // document. Let's just use the local `querySelectorAll` to ensure we don't\n    // miss anything.\n\n\n    {\n      checkAttributeStringCoercion(name, 'name');\n    }\n\n    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n    for (var i = 0; i < group.length; i++) {\n      var otherNode = group[i];\n\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      } // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React radio buttons with non-React ones.\n\n\n      var otherProps = getFiberCurrentPropsFromNode(otherNode);\n\n      if (!otherProps) {\n        throw new Error('ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.');\n      } // We need update the tracked value on the named cousin since the value\n      // was changed but the input saw no event or value set\n\n\n      updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n\n      updateWrapper(otherNode, otherProps);\n    }\n  }\n} // In Chrome, assigning defaultValue to certain input types triggers input validation.\n// For number inputs, the display value loses trailing decimal points. For email inputs,\n// Chrome raises \"The specified value <x> is not a valid email address\".\n//\n// Here we check to see if the defaultValue has actually changed, avoiding these problems\n// when the user is inputting text\n//\n// https://github.com/facebook/react/issues/7253\n\n\nfunction setDefaultValue(node, type, value) {\n  if ( // Focused number inputs synchronize on blur. See ChangeEventPlugin.js\n  type !== 'number' || getActiveElement(node.ownerDocument) !== node) {\n    if (value == null) {\n      node.defaultValue = toString(node._wrapperState.initialValue);\n    } else if (node.defaultValue !== toString(value)) {\n      node.defaultValue = toString(value);\n    }\n  }\n}\n\nvar didWarnSelectedSetOnOption = false;\nvar didWarnInvalidChild = false;\nvar didWarnInvalidInnerHTML = false;\n/**\n * Implements an <option> host component that warns when `selected` is set.\n */\n\nfunction validateProps(element, props) {\n  {\n    // If a value is not provided, then the children must be simple.\n    if (props.value == null) {\n      if (typeof props.children === 'object' && props.children !== null) {\n        React.Children.forEach(props.children, function (child) {\n          if (child == null) {\n            return;\n          }\n\n          if (typeof child === 'string' || typeof child === 'number') {\n            return;\n          }\n\n          if (!didWarnInvalidChild) {\n            didWarnInvalidChild = true;\n\n            error('Cannot infer the option value of complex children. ' + 'Pass a `value` prop or use a plain string as children to <option>.');\n          }\n        });\n      } else if (props.dangerouslySetInnerHTML != null) {\n        if (!didWarnInvalidInnerHTML) {\n          didWarnInvalidInnerHTML = true;\n\n          error('Pass a `value` prop if you set dangerouslyInnerHTML so React knows ' + 'which value should be selected.');\n        }\n      }\n    } // TODO: Remove support for `selected` in <option>.\n\n\n    if (props.selected != null && !didWarnSelectedSetOnOption) {\n      error('Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');\n\n      didWarnSelectedSetOnOption = true;\n    }\n  }\n}\nfunction postMountWrapper$1(element, props) {\n  // value=\"\" should make a value attribute (#6219)\n  if (props.value != null) {\n    element.setAttribute('value', toString(getToStringValue(props.value)));\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\nvar didWarnValueDefaultValue$1;\n\n{\n  didWarnValueDefaultValue$1 = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  var ownerName = getCurrentFiberOwnerNameInDevOrNull();\n\n  if (ownerName) {\n    return '\\n\\nCheck the render method of `' + ownerName + '`.';\n  }\n\n  return '';\n}\n\nvar valuePropNames = ['value', 'defaultValue'];\n/**\n * Validation function for `value` and `defaultValue`.\n */\n\nfunction checkSelectPropTypes(props) {\n  {\n    checkControlledValueProps('select', props);\n\n    for (var i = 0; i < valuePropNames.length; i++) {\n      var propName = valuePropNames[i];\n\n      if (props[propName] == null) {\n        continue;\n      }\n\n      var propNameIsArray = isArray(props[propName]);\n\n      if (props.multiple && !propNameIsArray) {\n        error('The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());\n      } else if (!props.multiple && propNameIsArray) {\n        error('The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());\n      }\n    }\n  }\n}\n\nfunction updateOptions(node, multiple, propValue, setDefaultSelected) {\n  var options = node.options;\n\n  if (multiple) {\n    var selectedValues = propValue;\n    var selectedValue = {};\n\n    for (var i = 0; i < selectedValues.length; i++) {\n      // Prefix to avoid chaos with special keys.\n      selectedValue['$' + selectedValues[i]] = true;\n    }\n\n    for (var _i = 0; _i < options.length; _i++) {\n      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);\n\n      if (options[_i].selected !== selected) {\n        options[_i].selected = selected;\n      }\n\n      if (selected && setDefaultSelected) {\n        options[_i].defaultSelected = true;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    var _selectedValue = toString(getToStringValue(propValue));\n\n    var defaultSelected = null;\n\n    for (var _i2 = 0; _i2 < options.length; _i2++) {\n      if (options[_i2].value === _selectedValue) {\n        options[_i2].selected = true;\n\n        if (setDefaultSelected) {\n          options[_i2].defaultSelected = true;\n        }\n\n        return;\n      }\n\n      if (defaultSelected === null && !options[_i2].disabled) {\n        defaultSelected = options[_i2];\n      }\n    }\n\n    if (defaultSelected !== null) {\n      defaultSelected.selected = true;\n    }\n  }\n}\n/**\n * Implements a <select> host component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\n\n\nfunction getHostProps$1(element, props) {\n  return assign({}, props, {\n    value: undefined\n  });\n}\nfunction initWrapperState$1(element, props) {\n  var node = element;\n\n  {\n    checkSelectPropTypes(props);\n  }\n\n  node._wrapperState = {\n    wasMultiple: !!props.multiple\n  };\n\n  {\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {\n      error('Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components');\n\n      didWarnValueDefaultValue$1 = true;\n    }\n  }\n}\nfunction postMountWrapper$2(element, props) {\n  var node = element;\n  node.multiple = !!props.multiple;\n  var value = props.value;\n\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  } else if (props.defaultValue != null) {\n    updateOptions(node, !!props.multiple, props.defaultValue, true);\n  }\n}\nfunction postUpdateWrapper(element, props) {\n  var node = element;\n  var wasMultiple = node._wrapperState.wasMultiple;\n  node._wrapperState.wasMultiple = !!props.multiple;\n  var value = props.value;\n\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  } else if (wasMultiple !== !!props.multiple) {\n    // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n    if (props.defaultValue != null) {\n      updateOptions(node, !!props.multiple, props.defaultValue, true);\n    } else {\n      // Revert the select back to its default unselected state.\n      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);\n    }\n  }\n}\nfunction restoreControlledState$1(element, props) {\n  var node = element;\n  var value = props.value;\n\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  }\n}\n\nvar didWarnValDefaultVal = false;\n\n/**\n * Implements a <textarea> host component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nfunction getHostProps$2(element, props) {\n  var node = element;\n\n  if (props.dangerouslySetInnerHTML != null) {\n    throw new Error('`dangerouslySetInnerHTML` does not make sense on <textarea>.');\n  } // Always set children to the same thing. In IE9, the selection range will\n  // get reset if `textContent` is mutated.  We could add a check in setTextContent\n  // to only set the value if/when the value differs from the node value (which would\n  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this\n  // solution. The value can be a boolean or object so that's why it's forced\n  // to be a string.\n\n\n  var hostProps = assign({}, props, {\n    value: undefined,\n    defaultValue: undefined,\n    children: toString(node._wrapperState.initialValue)\n  });\n\n  return hostProps;\n}\nfunction initWrapperState$2(element, props) {\n  var node = element;\n\n  {\n    checkControlledValueProps('textarea', props);\n\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {\n      error('%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');\n\n      didWarnValDefaultVal = true;\n    }\n  }\n\n  var initialValue = props.value; // Only bother fetching default value if we're going to use it\n\n  if (initialValue == null) {\n    var children = props.children,\n        defaultValue = props.defaultValue;\n\n    if (children != null) {\n      {\n        error('Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');\n      }\n\n      {\n        if (defaultValue != null) {\n          throw new Error('If you supply `defaultValue` on a <textarea>, do not pass children.');\n        }\n\n        if (isArray(children)) {\n          if (children.length > 1) {\n            throw new Error('<textarea> can only have at most one child.');\n          }\n\n          children = children[0];\n        }\n\n        defaultValue = children;\n      }\n    }\n\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n\n    initialValue = defaultValue;\n  }\n\n  node._wrapperState = {\n    initialValue: getToStringValue(initialValue)\n  };\n}\nfunction updateWrapper$1(element, props) {\n  var node = element;\n  var value = getToStringValue(props.value);\n  var defaultValue = getToStringValue(props.defaultValue);\n\n  if (value != null) {\n    // Cast `value` to a string to ensure the value is set correctly. While\n    // browsers typically do this as necessary, jsdom doesn't.\n    var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed\n\n    if (newValue !== node.value) {\n      node.value = newValue;\n    }\n\n    if (props.defaultValue == null && node.defaultValue !== newValue) {\n      node.defaultValue = newValue;\n    }\n  }\n\n  if (defaultValue != null) {\n    node.defaultValue = toString(defaultValue);\n  }\n}\nfunction postMountWrapper$3(element, props) {\n  var node = element; // This is in postMount because we need access to the DOM node, which is not\n  // available until after the component has mounted.\n\n  var textContent = node.textContent; // Only set node.value if textContent is equal to the expected\n  // initial value. In IE10/IE11 there is a bug where the placeholder attribute\n  // will populate textContent as well.\n  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/\n\n  if (textContent === node._wrapperState.initialValue) {\n    if (textContent !== '' && textContent !== null) {\n      node.value = textContent;\n    }\n  }\n}\nfunction restoreControlledState$2(element, props) {\n  // DOM component is still mounted; update\n  updateWrapper$1(element, props);\n}\n\nvar HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nvar MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\nvar SVG_NAMESPACE = 'http://www.w3.org/2000/svg'; // Assumes there is no parent namespace.\n\nfunction getIntrinsicNamespace(type) {\n  switch (type) {\n    case 'svg':\n      return SVG_NAMESPACE;\n\n    case 'math':\n      return MATH_NAMESPACE;\n\n    default:\n      return HTML_NAMESPACE;\n  }\n}\nfunction getChildNamespace(parentNamespace, type) {\n  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {\n    // No (or default) parent namespace: potential entry point.\n    return getIntrinsicNamespace(type);\n  }\n\n  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {\n    // We're leaving SVG.\n    return HTML_NAMESPACE;\n  } // By default, pass namespace below.\n\n\n  return parentNamespace;\n}\n\n/* globals MSApp */\n\n/**\n * Create a function which has 'unsafe' privileges (required by windows8 apps)\n */\nvar createMicrosoftUnsafeLocalFunction = function (func) {\n  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n    return function (arg0, arg1, arg2, arg3) {\n      MSApp.execUnsafeLocalFunction(function () {\n        return func(arg0, arg1, arg2, arg3);\n      });\n    };\n  } else {\n    return func;\n  }\n};\n\nvar reusableSVGContainer;\n/**\n * Set the innerHTML property of a node\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\n\nvar setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {\n  if (node.namespaceURI === SVG_NAMESPACE) {\n\n    if (!('innerHTML' in node)) {\n      // IE does not have innerHTML for SVG nodes, so instead we inject the\n      // new markup in a temp node and then move the child nodes across into\n      // the target node\n      reusableSVGContainer = reusableSVGContainer || document.createElement('div');\n      reusableSVGContainer.innerHTML = '<svg>' + html.valueOf().toString() + '</svg>';\n      var svgNode = reusableSVGContainer.firstChild;\n\n      while (node.firstChild) {\n        node.removeChild(node.firstChild);\n      }\n\n      while (svgNode.firstChild) {\n        node.appendChild(svgNode.firstChild);\n      }\n\n      return;\n    }\n  }\n\n  node.innerHTML = html;\n});\n\n/**\n * HTML nodeType values that represent the type of the node\n */\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\nvar DOCUMENT_NODE = 9;\nvar DOCUMENT_FRAGMENT_NODE = 11;\n\n/**\n * Set the textContent property of a node. For text updates, it's faster\n * to set the `nodeValue` of the Text node directly instead of using\n * `.textContent` which will remove the existing node and create a new one.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\n\nvar setTextContent = function (node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n\n    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n\n  node.textContent = text;\n};\n\n// List derived from Gecko source code:\n// https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js\nvar shorthandToLonghand = {\n  animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],\n  background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],\n  backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],\n  border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],\n  borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],\n  borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],\n  borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],\n  borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],\n  borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],\n  borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],\n  borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],\n  borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],\n  borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],\n  borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],\n  borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],\n  borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],\n  borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],\n  columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],\n  columns: ['columnCount', 'columnWidth'],\n  flex: ['flexBasis', 'flexGrow', 'flexShrink'],\n  flexFlow: ['flexDirection', 'flexWrap'],\n  font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],\n  fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],\n  gap: ['columnGap', 'rowGap'],\n  grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],\n  gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],\n  gridColumn: ['gridColumnEnd', 'gridColumnStart'],\n  gridColumnGap: ['columnGap'],\n  gridGap: ['columnGap', 'rowGap'],\n  gridRow: ['gridRowEnd', 'gridRowStart'],\n  gridRowGap: ['rowGap'],\n  gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],\n  listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],\n  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],\n  marker: ['markerEnd', 'markerMid', 'markerStart'],\n  mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],\n  maskPosition: ['maskPositionX', 'maskPositionY'],\n  outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],\n  overflow: ['overflowX', 'overflowY'],\n  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],\n  placeContent: ['alignContent', 'justifyContent'],\n  placeItems: ['alignItems', 'justifyItems'],\n  placeSelf: ['alignSelf', 'justifySelf'],\n  textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],\n  textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],\n  transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],\n  wordWrap: ['overflowWrap']\n};\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nvar isUnitlessNumber = {\n  animationIterationCount: true,\n  aspectRatio: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridArea: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\n\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\n\n\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\n\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @return {string} Normalized style value with dimensions applied.\n */\n\nfunction dangerousStyleValue(name, value, isCustomProperty) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n\n  if (isEmpty) {\n    return '';\n  }\n\n  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {\n    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n  }\n\n  {\n    checkCSSPropertyStringCoercion(value, name);\n  }\n\n  return ('' + value).trim();\n}\n\nvar uppercasePattern = /([A-Z])/g;\nvar msPattern = /^ms-/;\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n */\n\nfunction hyphenateStyleName(name) {\n  return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');\n}\n\nvar warnValidStyle = function () {};\n\n{\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n  var msPattern$1 = /^-ms-/;\n  var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon\n\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n  var warnedForNaNValue = false;\n  var warnedForInfinityValue = false;\n\n  var camelize = function (string) {\n    return string.replace(hyphenPattern, function (_, character) {\n      return character.toUpperCase();\n    });\n  };\n\n  var warnHyphenatedStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n\n    error('Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests\n    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n    // is converted to lowercase `ms`.\n    camelize(name.replace(msPattern$1, 'ms-')));\n  };\n\n  var warnBadVendoredStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n\n    error('Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n\n    error(\"Style property values shouldn't contain a semicolon. \" + 'Try \"%s: %s\" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));\n  };\n\n  var warnStyleValueIsNaN = function (name, value) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n\n    error('`NaN` is an invalid value for the `%s` css style property.', name);\n  };\n\n  var warnStyleValueIsInfinity = function (name, value) {\n    if (warnedForInfinityValue) {\n      return;\n    }\n\n    warnedForInfinityValue = true;\n\n    error('`Infinity` is an invalid value for the `%s` css style property.', name);\n  };\n\n  warnValidStyle = function (name, value) {\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value);\n    }\n\n    if (typeof value === 'number') {\n      if (isNaN(value)) {\n        warnStyleValueIsNaN(name, value);\n      } else if (!isFinite(value)) {\n        warnStyleValueIsInfinity(name, value);\n      }\n    }\n  };\n}\n\nvar warnValidStyle$1 = warnValidStyle;\n\n/**\n * Operations for dealing with CSS properties.\n */\n\n/**\n * This creates a string that is expected to be equivalent to the style\n * attribute generated by server-side rendering. It by-passes warnings and\n * security checks so it's not safe to use this value for anything other than\n * comparison. It is only used in DEV for SSR validation.\n */\n\nfunction createDangerousStringForStyles(styles) {\n  {\n    var serialized = '';\n    var delimiter = '';\n\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n\n      var styleValue = styles[styleName];\n\n      if (styleValue != null) {\n        var isCustomProperty = styleName.indexOf('--') === 0;\n        serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);\n        delimiter = ';';\n      }\n    }\n\n    return serialized || null;\n  }\n}\n/**\n * Sets the value for multiple styles on a node.  If a value is specified as\n * '' (empty string), the corresponding style property will be unset.\n *\n * @param {DOMElement} node\n * @param {object} styles\n */\n\nfunction setValueForStyles(node, styles) {\n  var style = node.style;\n\n  for (var styleName in styles) {\n    if (!styles.hasOwnProperty(styleName)) {\n      continue;\n    }\n\n    var isCustomProperty = styleName.indexOf('--') === 0;\n\n    {\n      if (!isCustomProperty) {\n        warnValidStyle$1(styleName, styles[styleName]);\n      }\n    }\n\n    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);\n\n    if (styleName === 'float') {\n      styleName = 'cssFloat';\n    }\n\n    if (isCustomProperty) {\n      style.setProperty(styleName, styleValue);\n    } else {\n      style[styleName] = styleValue;\n    }\n  }\n}\n\nfunction isValueEmpty(value) {\n  return value == null || typeof value === 'boolean' || value === '';\n}\n/**\n * Given {color: 'red', overflow: 'hidden'} returns {\n *   color: 'color',\n *   overflowX: 'overflow',\n *   overflowY: 'overflow',\n * }. This can be read as \"the overflowY property was set by the overflow\n * shorthand\". That is, the values are the property that each was derived from.\n */\n\n\nfunction expandShorthandMap(styles) {\n  var expanded = {};\n\n  for (var key in styles) {\n    var longhands = shorthandToLonghand[key] || [key];\n\n    for (var i = 0; i < longhands.length; i++) {\n      expanded[longhands[i]] = key;\n    }\n  }\n\n  return expanded;\n}\n/**\n * When mixing shorthand and longhand property names, we warn during updates if\n * we expect an incorrect result to occur. In particular, we warn for:\n *\n * Updating a shorthand property (longhand gets overwritten):\n *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}\n *   becomes .style.font = 'baz'\n * Removing a shorthand property (longhand gets lost too):\n *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}\n *   becomes .style.font = ''\n * Removing a longhand property (should revert to shorthand; doesn't):\n *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}\n *   becomes .style.fontVariant = ''\n */\n\n\nfunction validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {\n  {\n    if (!nextStyles) {\n      return;\n    }\n\n    var expandedUpdates = expandShorthandMap(styleUpdates);\n    var expandedStyles = expandShorthandMap(nextStyles);\n    var warnedAbout = {};\n\n    for (var key in expandedUpdates) {\n      var originalKey = expandedUpdates[key];\n      var correctOriginalKey = expandedStyles[key];\n\n      if (correctOriginalKey && originalKey !== correctOriginalKey) {\n        var warningKey = originalKey + ',' + correctOriginalKey;\n\n        if (warnedAbout[warningKey]) {\n          continue;\n        }\n\n        warnedAbout[warningKey] = true;\n\n        error('%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + \"avoid this, don't mix shorthand and non-shorthand properties \" + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);\n      }\n    }\n  }\n}\n\n// For HTML, certain tags should omit their close tag. We keep a list for\n// those special-case tags.\nvar omittedCloseTags = {\n  area: true,\n  base: true,\n  br: true,\n  col: true,\n  embed: true,\n  hr: true,\n  img: true,\n  input: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.\n\n};\n\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nvar voidElementTags = assign({\n  menuitem: true\n}, omittedCloseTags);\n\nvar HTML = '__html';\n\nfunction assertValidProps(tag, props) {\n  if (!props) {\n    return;\n  } // Note the use of `==` which checks for null or undefined.\n\n\n  if (voidElementTags[tag]) {\n    if (props.children != null || props.dangerouslySetInnerHTML != null) {\n      throw new Error(tag + \" is a void element tag and must neither have `children` nor \" + 'use `dangerouslySetInnerHTML`.');\n    }\n  }\n\n  if (props.dangerouslySetInnerHTML != null) {\n    if (props.children != null) {\n      throw new Error('Can only set one of `children` or `props.dangerouslySetInnerHTML`.');\n    }\n\n    if (typeof props.dangerouslySetInnerHTML !== 'object' || !(HTML in props.dangerouslySetInnerHTML)) {\n      throw new Error('`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://reactjs.org/link/dangerously-set-inner-html ' + 'for more information.');\n    }\n  }\n\n  {\n    if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {\n      error('A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.');\n    }\n  }\n\n  if (props.style != null && typeof props.style !== 'object') {\n    throw new Error('The `style` prop expects a mapping from style properties to values, ' + \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" + 'using JSX.');\n  }\n}\n\nfunction isCustomComponent(tagName, props) {\n  if (tagName.indexOf('-') === -1) {\n    return typeof props.is === 'string';\n  }\n\n  switch (tagName) {\n    // These are reserved SVG and MathML elements.\n    // We don't mind this list too much because we expect it to never grow.\n    // The alternative is to track the namespace in a few places which is convoluted.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      return false;\n\n    default:\n      return true;\n  }\n}\n\n// When adding attributes to the HTML or SVG allowed attribute list, be sure to\n// also add them to this module to ensure casing and incorrect name\n// warnings.\nvar possibleStandardNames = {\n  // HTML\n  accept: 'accept',\n  acceptcharset: 'acceptCharset',\n  'accept-charset': 'acceptCharset',\n  accesskey: 'accessKey',\n  action: 'action',\n  allowfullscreen: 'allowFullScreen',\n  alt: 'alt',\n  as: 'as',\n  async: 'async',\n  autocapitalize: 'autoCapitalize',\n  autocomplete: 'autoComplete',\n  autocorrect: 'autoCorrect',\n  autofocus: 'autoFocus',\n  autoplay: 'autoPlay',\n  autosave: 'autoSave',\n  capture: 'capture',\n  cellpadding: 'cellPadding',\n  cellspacing: 'cellSpacing',\n  challenge: 'challenge',\n  charset: 'charSet',\n  checked: 'checked',\n  children: 'children',\n  cite: 'cite',\n  class: 'className',\n  classid: 'classID',\n  classname: 'className',\n  cols: 'cols',\n  colspan: 'colSpan',\n  content: 'content',\n  contenteditable: 'contentEditable',\n  contextmenu: 'contextMenu',\n  controls: 'controls',\n  controlslist: 'controlsList',\n  coords: 'coords',\n  crossorigin: 'crossOrigin',\n  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',\n  data: 'data',\n  datetime: 'dateTime',\n  default: 'default',\n  defaultchecked: 'defaultChecked',\n  defaultvalue: 'defaultValue',\n  defer: 'defer',\n  dir: 'dir',\n  disabled: 'disabled',\n  disablepictureinpicture: 'disablePictureInPicture',\n  disableremoteplayback: 'disableRemotePlayback',\n  download: 'download',\n  draggable: 'draggable',\n  enctype: 'encType',\n  enterkeyhint: 'enterKeyHint',\n  for: 'htmlFor',\n  form: 'form',\n  formmethod: 'formMethod',\n  formaction: 'formAction',\n  formenctype: 'formEncType',\n  formnovalidate: 'formNoValidate',\n  formtarget: 'formTarget',\n  frameborder: 'frameBorder',\n  headers: 'headers',\n  height: 'height',\n  hidden: 'hidden',\n  high: 'high',\n  href: 'href',\n  hreflang: 'hrefLang',\n  htmlfor: 'htmlFor',\n  httpequiv: 'httpEquiv',\n  'http-equiv': 'httpEquiv',\n  icon: 'icon',\n  id: 'id',\n  imagesizes: 'imageSizes',\n  imagesrcset: 'imageSrcSet',\n  innerhtml: 'innerHTML',\n  inputmode: 'inputMode',\n  integrity: 'integrity',\n  is: 'is',\n  itemid: 'itemID',\n  itemprop: 'itemProp',\n  itemref: 'itemRef',\n  itemscope: 'itemScope',\n  itemtype: 'itemType',\n  keyparams: 'keyParams',\n  keytype: 'keyType',\n  kind: 'kind',\n  label: 'label',\n  lang: 'lang',\n  list: 'list',\n  loop: 'loop',\n  low: 'low',\n  manifest: 'manifest',\n  marginwidth: 'marginWidth',\n  marginheight: 'marginHeight',\n  max: 'max',\n  maxlength: 'maxLength',\n  media: 'media',\n  mediagroup: 'mediaGroup',\n  method: 'method',\n  min: 'min',\n  minlength: 'minLength',\n  multiple: 'multiple',\n  muted: 'muted',\n  name: 'name',\n  nomodule: 'noModule',\n  nonce: 'nonce',\n  novalidate: 'noValidate',\n  open: 'open',\n  optimum: 'optimum',\n  pattern: 'pattern',\n  placeholder: 'placeholder',\n  playsinline: 'playsInline',\n  poster: 'poster',\n  preload: 'preload',\n  profile: 'profile',\n  radiogroup: 'radioGroup',\n  readonly: 'readOnly',\n  referrerpolicy: 'referrerPolicy',\n  rel: 'rel',\n  required: 'required',\n  reversed: 'reversed',\n  role: 'role',\n  rows: 'rows',\n  rowspan: 'rowSpan',\n  sandbox: 'sandbox',\n  scope: 'scope',\n  scoped: 'scoped',\n  scrolling: 'scrolling',\n  seamless: 'seamless',\n  selected: 'selected',\n  shape: 'shape',\n  size: 'size',\n  sizes: 'sizes',\n  span: 'span',\n  spellcheck: 'spellCheck',\n  src: 'src',\n  srcdoc: 'srcDoc',\n  srclang: 'srcLang',\n  srcset: 'srcSet',\n  start: 'start',\n  step: 'step',\n  style: 'style',\n  summary: 'summary',\n  tabindex: 'tabIndex',\n  target: 'target',\n  title: 'title',\n  type: 'type',\n  usemap: 'useMap',\n  value: 'value',\n  width: 'width',\n  wmode: 'wmode',\n  wrap: 'wrap',\n  // SVG\n  about: 'about',\n  accentheight: 'accentHeight',\n  'accent-height': 'accentHeight',\n  accumulate: 'accumulate',\n  additive: 'additive',\n  alignmentbaseline: 'alignmentBaseline',\n  'alignment-baseline': 'alignmentBaseline',\n  allowreorder: 'allowReorder',\n  alphabetic: 'alphabetic',\n  amplitude: 'amplitude',\n  arabicform: 'arabicForm',\n  'arabic-form': 'arabicForm',\n  ascent: 'ascent',\n  attributename: 'attributeName',\n  attributetype: 'attributeType',\n  autoreverse: 'autoReverse',\n  azimuth: 'azimuth',\n  basefrequency: 'baseFrequency',\n  baselineshift: 'baselineShift',\n  'baseline-shift': 'baselineShift',\n  baseprofile: 'baseProfile',\n  bbox: 'bbox',\n  begin: 'begin',\n  bias: 'bias',\n  by: 'by',\n  calcmode: 'calcMode',\n  capheight: 'capHeight',\n  'cap-height': 'capHeight',\n  clip: 'clip',\n  clippath: 'clipPath',\n  'clip-path': 'clipPath',\n  clippathunits: 'clipPathUnits',\n  cliprule: 'clipRule',\n  'clip-rule': 'clipRule',\n  color: 'color',\n  colorinterpolation: 'colorInterpolation',\n  'color-interpolation': 'colorInterpolation',\n  colorinterpolationfilters: 'colorInterpolationFilters',\n  'color-interpolation-filters': 'colorInterpolationFilters',\n  colorprofile: 'colorProfile',\n  'color-profile': 'colorProfile',\n  colorrendering: 'colorRendering',\n  'color-rendering': 'colorRendering',\n  contentscripttype: 'contentScriptType',\n  contentstyletype: 'contentStyleType',\n  cursor: 'cursor',\n  cx: 'cx',\n  cy: 'cy',\n  d: 'd',\n  datatype: 'datatype',\n  decelerate: 'decelerate',\n  descent: 'descent',\n  diffuseconstant: 'diffuseConstant',\n  direction: 'direction',\n  display: 'display',\n  divisor: 'divisor',\n  dominantbaseline: 'dominantBaseline',\n  'dominant-baseline': 'dominantBaseline',\n  dur: 'dur',\n  dx: 'dx',\n  dy: 'dy',\n  edgemode: 'edgeMode',\n  elevation: 'elevation',\n  enablebackground: 'enableBackground',\n  'enable-background': 'enableBackground',\n  end: 'end',\n  exponent: 'exponent',\n  externalresourcesrequired: 'externalResourcesRequired',\n  fill: 'fill',\n  fillopacity: 'fillOpacity',\n  'fill-opacity': 'fillOpacity',\n  fillrule: 'fillRule',\n  'fill-rule': 'fillRule',\n  filter: 'filter',\n  filterres: 'filterRes',\n  filterunits: 'filterUnits',\n  floodopacity: 'floodOpacity',\n  'flood-opacity': 'floodOpacity',\n  floodcolor: 'floodColor',\n  'flood-color': 'floodColor',\n  focusable: 'focusable',\n  fontfamily: 'fontFamily',\n  'font-family': 'fontFamily',\n  fontsize: 'fontSize',\n  'font-size': 'fontSize',\n  fontsizeadjust: 'fontSizeAdjust',\n  'font-size-adjust': 'fontSizeAdjust',\n  fontstretch: 'fontStretch',\n  'font-stretch': 'fontStretch',\n  fontstyle: 'fontStyle',\n  'font-style': 'fontStyle',\n  fontvariant: 'fontVariant',\n  'font-variant': 'fontVariant',\n  fontweight: 'fontWeight',\n  'font-weight': 'fontWeight',\n  format: 'format',\n  from: 'from',\n  fx: 'fx',\n  fy: 'fy',\n  g1: 'g1',\n  g2: 'g2',\n  glyphname: 'glyphName',\n  'glyph-name': 'glyphName',\n  glyphorientationhorizontal: 'glyphOrientationHorizontal',\n  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',\n  glyphorientationvertical: 'glyphOrientationVertical',\n  'glyph-orientation-vertical': 'glyphOrientationVertical',\n  glyphref: 'glyphRef',\n  gradienttransform: 'gradientTransform',\n  gradientunits: 'gradientUnits',\n  hanging: 'hanging',\n  horizadvx: 'horizAdvX',\n  'horiz-adv-x': 'horizAdvX',\n  horizoriginx: 'horizOriginX',\n  'horiz-origin-x': 'horizOriginX',\n  ideographic: 'ideographic',\n  imagerendering: 'imageRendering',\n  'image-rendering': 'imageRendering',\n  in2: 'in2',\n  in: 'in',\n  inlist: 'inlist',\n  intercept: 'intercept',\n  k1: 'k1',\n  k2: 'k2',\n  k3: 'k3',\n  k4: 'k4',\n  k: 'k',\n  kernelmatrix: 'kernelMatrix',\n  kernelunitlength: 'kernelUnitLength',\n  kerning: 'kerning',\n  keypoints: 'keyPoints',\n  keysplines: 'keySplines',\n  keytimes: 'keyTimes',\n  lengthadjust: 'lengthAdjust',\n  letterspacing: 'letterSpacing',\n  'letter-spacing': 'letterSpacing',\n  lightingcolor: 'lightingColor',\n  'lighting-color': 'lightingColor',\n  limitingconeangle: 'limitingConeAngle',\n  local: 'local',\n  markerend: 'markerEnd',\n  'marker-end': 'markerEnd',\n  markerheight: 'markerHeight',\n  markermid: 'markerMid',\n  'marker-mid': 'markerMid',\n  markerstart: 'markerStart',\n  'marker-start': 'markerStart',\n  markerunits: 'markerUnits',\n  markerwidth: 'markerWidth',\n  mask: 'mask',\n  maskcontentunits: 'maskContentUnits',\n  maskunits: 'maskUnits',\n  mathematical: 'mathematical',\n  mode: 'mode',\n  numoctaves: 'numOctaves',\n  offset: 'offset',\n  opacity: 'opacity',\n  operator: 'operator',\n  order: 'order',\n  orient: 'orient',\n  orientation: 'orientation',\n  origin: 'origin',\n  overflow: 'overflow',\n  overlineposition: 'overlinePosition',\n  'overline-position': 'overlinePosition',\n  overlinethickness: 'overlineThickness',\n  'overline-thickness': 'overlineThickness',\n  paintorder: 'paintOrder',\n  'paint-order': 'paintOrder',\n  panose1: 'panose1',\n  'panose-1': 'panose1',\n  pathlength: 'pathLength',\n  patterncontentunits: 'patternContentUnits',\n  patterntransform: 'patternTransform',\n  patternunits: 'patternUnits',\n  pointerevents: 'pointerEvents',\n  'pointer-events': 'pointerEvents',\n  points: 'points',\n  pointsatx: 'pointsAtX',\n  pointsaty: 'pointsAtY',\n  pointsatz: 'pointsAtZ',\n  prefix: 'prefix',\n  preservealpha: 'preserveAlpha',\n  preserveaspectratio: 'preserveAspectRatio',\n  primitiveunits: 'primitiveUnits',\n  property: 'property',\n  r: 'r',\n  radius: 'radius',\n  refx: 'refX',\n  refy: 'refY',\n  renderingintent: 'renderingIntent',\n  'rendering-intent': 'renderingIntent',\n  repeatcount: 'repeatCount',\n  repeatdur: 'repeatDur',\n  requiredextensions: 'requiredExtensions',\n  requiredfeatures: 'requiredFeatures',\n  resource: 'resource',\n  restart: 'restart',\n  result: 'result',\n  results: 'results',\n  rotate: 'rotate',\n  rx: 'rx',\n  ry: 'ry',\n  scale: 'scale',\n  security: 'security',\n  seed: 'seed',\n  shaperendering: 'shapeRendering',\n  'shape-rendering': 'shapeRendering',\n  slope: 'slope',\n  spacing: 'spacing',\n  specularconstant: 'specularConstant',\n  specularexponent: 'specularExponent',\n  speed: 'speed',\n  spreadmethod: 'spreadMethod',\n  startoffset: 'startOffset',\n  stddeviation: 'stdDeviation',\n  stemh: 'stemh',\n  stemv: 'stemv',\n  stitchtiles: 'stitchTiles',\n  stopcolor: 'stopColor',\n  'stop-color': 'stopColor',\n  stopopacity: 'stopOpacity',\n  'stop-opacity': 'stopOpacity',\n  strikethroughposition: 'strikethroughPosition',\n  'strikethrough-position': 'strikethroughPosition',\n  strikethroughthickness: 'strikethroughThickness',\n  'strikethrough-thickness': 'strikethroughThickness',\n  string: 'string',\n  stroke: 'stroke',\n  strokedasharray: 'strokeDasharray',\n  'stroke-dasharray': 'strokeDasharray',\n  strokedashoffset: 'strokeDashoffset',\n  'stroke-dashoffset': 'strokeDashoffset',\n  strokelinecap: 'strokeLinecap',\n  'stroke-linecap': 'strokeLinecap',\n  strokelinejoin: 'strokeLinejoin',\n  'stroke-linejoin': 'strokeLinejoin',\n  strokemiterlimit: 'strokeMiterlimit',\n  'stroke-miterlimit': 'strokeMiterlimit',\n  strokewidth: 'strokeWidth',\n  'stroke-width': 'strokeWidth',\n  strokeopacity: 'strokeOpacity',\n  'stroke-opacity': 'strokeOpacity',\n  suppresscontenteditablewarning: 'suppressContentEditableWarning',\n  suppresshydrationwarning: 'suppressHydrationWarning',\n  surfacescale: 'surfaceScale',\n  systemlanguage: 'systemLanguage',\n  tablevalues: 'tableValues',\n  targetx: 'targetX',\n  targety: 'targetY',\n  textanchor: 'textAnchor',\n  'text-anchor': 'textAnchor',\n  textdecoration: 'textDecoration',\n  'text-decoration': 'textDecoration',\n  textlength: 'textLength',\n  textrendering: 'textRendering',\n  'text-rendering': 'textRendering',\n  to: 'to',\n  transform: 'transform',\n  typeof: 'typeof',\n  u1: 'u1',\n  u2: 'u2',\n  underlineposition: 'underlinePosition',\n  'underline-position': 'underlinePosition',\n  underlinethickness: 'underlineThickness',\n  'underline-thickness': 'underlineThickness',\n  unicode: 'unicode',\n  unicodebidi: 'unicodeBidi',\n  'unicode-bidi': 'unicodeBidi',\n  unicoderange: 'unicodeRange',\n  'unicode-range': 'unicodeRange',\n  unitsperem: 'unitsPerEm',\n  'units-per-em': 'unitsPerEm',\n  unselectable: 'unselectable',\n  valphabetic: 'vAlphabetic',\n  'v-alphabetic': 'vAlphabetic',\n  values: 'values',\n  vectoreffect: 'vectorEffect',\n  'vector-effect': 'vectorEffect',\n  version: 'version',\n  vertadvy: 'vertAdvY',\n  'vert-adv-y': 'vertAdvY',\n  vertoriginx: 'vertOriginX',\n  'vert-origin-x': 'vertOriginX',\n  vertoriginy: 'vertOriginY',\n  'vert-origin-y': 'vertOriginY',\n  vhanging: 'vHanging',\n  'v-hanging': 'vHanging',\n  videographic: 'vIdeographic',\n  'v-ideographic': 'vIdeographic',\n  viewbox: 'viewBox',\n  viewtarget: 'viewTarget',\n  visibility: 'visibility',\n  vmathematical: 'vMathematical',\n  'v-mathematical': 'vMathematical',\n  vocab: 'vocab',\n  widths: 'widths',\n  wordspacing: 'wordSpacing',\n  'word-spacing': 'wordSpacing',\n  writingmode: 'writingMode',\n  'writing-mode': 'writingMode',\n  x1: 'x1',\n  x2: 'x2',\n  x: 'x',\n  xchannelselector: 'xChannelSelector',\n  xheight: 'xHeight',\n  'x-height': 'xHeight',\n  xlinkactuate: 'xlinkActuate',\n  'xlink:actuate': 'xlinkActuate',\n  xlinkarcrole: 'xlinkArcrole',\n  'xlink:arcrole': 'xlinkArcrole',\n  xlinkhref: 'xlinkHref',\n  'xlink:href': 'xlinkHref',\n  xlinkrole: 'xlinkRole',\n  'xlink:role': 'xlinkRole',\n  xlinkshow: 'xlinkShow',\n  'xlink:show': 'xlinkShow',\n  xlinktitle: 'xlinkTitle',\n  'xlink:title': 'xlinkTitle',\n  xlinktype: 'xlinkType',\n  'xlink:type': 'xlinkType',\n  xmlbase: 'xmlBase',\n  'xml:base': 'xmlBase',\n  xmllang: 'xmlLang',\n  'xml:lang': 'xmlLang',\n  xmlns: 'xmlns',\n  'xml:space': 'xmlSpace',\n  xmlnsxlink: 'xmlnsXlink',\n  'xmlns:xlink': 'xmlnsXlink',\n  xmlspace: 'xmlSpace',\n  y1: 'y1',\n  y2: 'y2',\n  y: 'y',\n  ychannelselector: 'yChannelSelector',\n  z: 'z',\n  zoomandpan: 'zoomAndPan'\n};\n\nvar ariaProperties = {\n  'aria-current': 0,\n  // state\n  'aria-description': 0,\n  'aria-details': 0,\n  'aria-disabled': 0,\n  // state\n  'aria-hidden': 0,\n  // state\n  'aria-invalid': 0,\n  // state\n  'aria-keyshortcuts': 0,\n  'aria-label': 0,\n  'aria-roledescription': 0,\n  // Widget Attributes\n  'aria-autocomplete': 0,\n  'aria-checked': 0,\n  'aria-expanded': 0,\n  'aria-haspopup': 0,\n  'aria-level': 0,\n  'aria-modal': 0,\n  'aria-multiline': 0,\n  'aria-multiselectable': 0,\n  'aria-orientation': 0,\n  'aria-placeholder': 0,\n  'aria-pressed': 0,\n  'aria-readonly': 0,\n  'aria-required': 0,\n  'aria-selected': 0,\n  'aria-sort': 0,\n  'aria-valuemax': 0,\n  'aria-valuemin': 0,\n  'aria-valuenow': 0,\n  'aria-valuetext': 0,\n  // Live Region Attributes\n  'aria-atomic': 0,\n  'aria-busy': 0,\n  'aria-live': 0,\n  'aria-relevant': 0,\n  // Drag-and-Drop Attributes\n  'aria-dropeffect': 0,\n  'aria-grabbed': 0,\n  // Relationship Attributes\n  'aria-activedescendant': 0,\n  'aria-colcount': 0,\n  'aria-colindex': 0,\n  'aria-colspan': 0,\n  'aria-controls': 0,\n  'aria-describedby': 0,\n  'aria-errormessage': 0,\n  'aria-flowto': 0,\n  'aria-labelledby': 0,\n  'aria-owns': 0,\n  'aria-posinset': 0,\n  'aria-rowcount': 0,\n  'aria-rowindex': 0,\n  'aria-rowspan': 0,\n  'aria-setsize': 0\n};\n\nvar warnedProperties = {};\nvar rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\nvar rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\nfunction validateProperty(tagName, name) {\n  {\n    if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {\n      return true;\n    }\n\n    if (rARIACamel.test(name)) {\n      var ariaName = 'aria-' + name.slice(4).toLowerCase();\n      var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM\n      // DOM properties, then it is an invalid aria-* attribute.\n\n      if (correctName == null) {\n        error('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);\n\n        warnedProperties[name] = true;\n        return true;\n      } // aria-* attributes should be lowercase; suggest the lowercase version.\n\n\n      if (name !== correctName) {\n        error('Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);\n\n        warnedProperties[name] = true;\n        return true;\n      }\n    }\n\n    if (rARIA.test(name)) {\n      var lowerCasedName = name.toLowerCase();\n      var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM\n      // DOM properties, then it is an invalid aria-* attribute.\n\n      if (standardName == null) {\n        warnedProperties[name] = true;\n        return false;\n      } // aria-* attributes should be lowercase; suggest the lowercase version.\n\n\n      if (name !== standardName) {\n        error('Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);\n\n        warnedProperties[name] = true;\n        return true;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction warnInvalidARIAProps(type, props) {\n  {\n    var invalidProps = [];\n\n    for (var key in props) {\n      var isValid = validateProperty(type, key);\n\n      if (!isValid) {\n        invalidProps.push(key);\n      }\n    }\n\n    var unknownPropString = invalidProps.map(function (prop) {\n      return '`' + prop + '`';\n    }).join(', ');\n\n    if (invalidProps.length === 1) {\n      error('Invalid aria prop %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);\n    } else if (invalidProps.length > 1) {\n      error('Invalid aria props %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);\n    }\n  }\n}\n\nfunction validateProperties(type, props) {\n  if (isCustomComponent(type, props)) {\n    return;\n  }\n\n  warnInvalidARIAProps(type, props);\n}\n\nvar didWarnValueNull = false;\nfunction validateProperties$1(type, props) {\n  {\n    if (type !== 'input' && type !== 'textarea' && type !== 'select') {\n      return;\n    }\n\n    if (props != null && props.value === null && !didWarnValueNull) {\n      didWarnValueNull = true;\n\n      if (type === 'select' && props.multiple) {\n        error('`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);\n      } else {\n        error('`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);\n      }\n    }\n  }\n}\n\nvar validateProperty$1 = function () {};\n\n{\n  var warnedProperties$1 = {};\n  var EVENT_NAME_REGEX = /^on./;\n  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;\n  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\n  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\n  validateProperty$1 = function (tagName, name, value, eventRegistry) {\n    if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {\n      return true;\n    }\n\n    var lowerCasedName = name.toLowerCase();\n\n    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {\n      error('React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');\n\n      warnedProperties$1[name] = true;\n      return true;\n    } // We can't rely on the event system being injected on the server.\n\n\n    if (eventRegistry != null) {\n      var registrationNameDependencies = eventRegistry.registrationNameDependencies,\n          possibleRegistrationNames = eventRegistry.possibleRegistrationNames;\n\n      if (registrationNameDependencies.hasOwnProperty(name)) {\n        return true;\n      }\n\n      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;\n\n      if (registrationName != null) {\n        error('Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);\n\n        warnedProperties$1[name] = true;\n        return true;\n      }\n\n      if (EVENT_NAME_REGEX.test(name)) {\n        error('Unknown event handler property `%s`. It will be ignored.', name);\n\n        warnedProperties$1[name] = true;\n        return true;\n      }\n    } else if (EVENT_NAME_REGEX.test(name)) {\n      // If no event plugins have been injected, we are in a server environment.\n      // So we can't tell if the event name is correct for sure, but we can filter\n      // out known bad ones like `onclick`. We can't suggest a specific replacement though.\n      if (INVALID_EVENT_NAME_REGEX.test(name)) {\n        error('Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);\n      }\n\n      warnedProperties$1[name] = true;\n      return true;\n    } // Let the ARIA attribute hook validate ARIA attributes\n\n\n    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {\n      return true;\n    }\n\n    if (lowerCasedName === 'innerhtml') {\n      error('Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (lowerCasedName === 'aria') {\n      error('The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {\n      error('Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (typeof value === 'number' && isNaN(value)) {\n      error('Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    var propertyInfo = getPropertyInfo(name);\n    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.\n\n    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      var standardName = possibleStandardNames[lowerCasedName];\n\n      if (standardName !== name) {\n        error('Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);\n\n        warnedProperties$1[name] = true;\n        return true;\n      }\n    } else if (!isReserved && name !== lowerCasedName) {\n      // Unknown attributes should have lowercase casing since that's how they\n      // will be cased anyway with server rendering.\n      error('React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {\n      if (value) {\n        error('Received `%s` for a non-boolean attribute `%s`.\\n\\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s=\"%s\" or %s={value.toString()}.', value, name, name, value, name);\n      } else {\n        error('Received `%s` for a non-boolean attribute `%s`.\\n\\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s=\"%s\" or %s={value.toString()}.\\n\\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);\n      }\n\n      warnedProperties$1[name] = true;\n      return true;\n    } // Now that we've validated casing, do not validate\n    // data types for reserved props\n\n\n    if (isReserved) {\n      return true;\n    } // Warn when a known attribute is a bad type\n\n\n    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {\n      warnedProperties$1[name] = true;\n      return false;\n    } // Warn when passing the strings 'false' or 'true' into a boolean prop\n\n\n    if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {\n      error('Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string \"false\".', name, value);\n\n      warnedProperties$1[name] = true;\n      return true;\n    }\n\n    return true;\n  };\n}\n\nvar warnUnknownProperties = function (type, props, eventRegistry) {\n  {\n    var unknownProps = [];\n\n    for (var key in props) {\n      var isValid = validateProperty$1(type, key, props[key], eventRegistry);\n\n      if (!isValid) {\n        unknownProps.push(key);\n      }\n    }\n\n    var unknownPropString = unknownProps.map(function (prop) {\n      return '`' + prop + '`';\n    }).join(', ');\n\n    if (unknownProps.length === 1) {\n      error('Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);\n    } else if (unknownProps.length > 1) {\n      error('Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);\n    }\n  }\n};\n\nfunction validateProperties$2(type, props, eventRegistry) {\n  if (isCustomComponent(type, props)) {\n    return;\n  }\n\n  warnUnknownProperties(type, props, eventRegistry);\n}\n\nvar IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;\nvar IS_NON_DELEGATED = 1 << 1;\nvar IS_CAPTURE_PHASE = 1 << 2;\n// set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when\n// we call willDeferLaterForLegacyFBSupport, thus not bailing out\n// will result in endless cycles like an infinite loop.\n// We also don't want to defer during event replaying.\n\nvar SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;\n\n// This exists to avoid circular dependency between ReactDOMEventReplaying\n// and DOMPluginEventSystem.\nvar currentReplayingEvent = null;\nfunction setReplayingEvent(event) {\n  {\n    if (currentReplayingEvent !== null) {\n      error('Expected currently replaying event to be null. This error ' + 'is likely caused by a bug in React. Please file an issue.');\n    }\n  }\n\n  currentReplayingEvent = event;\n}\nfunction resetReplayingEvent() {\n  {\n    if (currentReplayingEvent === null) {\n      error('Expected currently replaying event to not be null. This error ' + 'is likely caused by a bug in React. Please file an issue.');\n    }\n  }\n\n  currentReplayingEvent = null;\n}\nfunction isReplayingEvent(event) {\n  return event === currentReplayingEvent;\n}\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\n\nfunction getEventTarget(nativeEvent) {\n  // Fallback to nativeEvent.srcElement for IE9\n  // https://github.com/facebook/react/issues/12506\n  var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963\n\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  } // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n\n\n  return target.nodeType === TEXT_NODE ? target.parentNode : target;\n}\n\nvar restoreImpl = null;\nvar restoreTarget = null;\nvar restoreQueue = null;\n\nfunction restoreStateOfTarget(target) {\n  // We perform this translation at the end of the event loop so that we\n  // always receive the correct fiber here\n  var internalInstance = getInstanceFromNode(target);\n\n  if (!internalInstance) {\n    // Unmounted\n    return;\n  }\n\n  if (typeof restoreImpl !== 'function') {\n    throw new Error('setRestoreImplementation() needs to be called to handle a target for controlled ' + 'events. This error is likely caused by a bug in React. Please file an issue.');\n  }\n\n  var stateNode = internalInstance.stateNode; // Guard against Fiber being unmounted.\n\n  if (stateNode) {\n    var _props = getFiberCurrentPropsFromNode(stateNode);\n\n    restoreImpl(internalInstance.stateNode, internalInstance.type, _props);\n  }\n}\n\nfunction setRestoreImplementation(impl) {\n  restoreImpl = impl;\n}\nfunction enqueueStateRestore(target) {\n  if (restoreTarget) {\n    if (restoreQueue) {\n      restoreQueue.push(target);\n    } else {\n      restoreQueue = [target];\n    }\n  } else {\n    restoreTarget = target;\n  }\n}\nfunction needsStateRestore() {\n  return restoreTarget !== null || restoreQueue !== null;\n}\nfunction restoreStateIfNeeded() {\n  if (!restoreTarget) {\n    return;\n  }\n\n  var target = restoreTarget;\n  var queuedTargets = restoreQueue;\n  restoreTarget = null;\n  restoreQueue = null;\n  restoreStateOfTarget(target);\n\n  if (queuedTargets) {\n    for (var i = 0; i < queuedTargets.length; i++) {\n      restoreStateOfTarget(queuedTargets[i]);\n    }\n  }\n}\n\n// the renderer. Such as when we're dispatching events or if third party\n// libraries need to call batchedUpdates. Eventually, this API will go away when\n// everything is batched by default. We'll then have a similar API to opt-out of\n// scheduled work and instead do synchronous work.\n// Defaults\n\nvar batchedUpdatesImpl = function (fn, bookkeeping) {\n  return fn(bookkeeping);\n};\n\nvar flushSyncImpl = function () {};\n\nvar isInsideEventHandler = false;\n\nfunction finishEventHandler() {\n  // Here we wait until all updates have propagated, which is important\n  // when using controlled components within layers:\n  // https://github.com/facebook/react/issues/1698\n  // Then we restore state of any controlled component.\n  var controlledComponentsHavePendingUpdates = needsStateRestore();\n\n  if (controlledComponentsHavePendingUpdates) {\n    // If a controlled event was fired, we may need to restore the state of\n    // the DOM node back to the controlled value. This is necessary when React\n    // bails out of the update without touching the DOM.\n    // TODO: Restore state in the microtask, after the discrete updates flush,\n    // instead of early flushing them here.\n    flushSyncImpl();\n    restoreStateIfNeeded();\n  }\n}\n\nfunction batchedUpdates(fn, a, b) {\n  if (isInsideEventHandler) {\n    // If we are currently inside another batch, we need to wait until it\n    // fully completes before restoring state.\n    return fn(a, b);\n  }\n\n  isInsideEventHandler = true;\n\n  try {\n    return batchedUpdatesImpl(fn, a, b);\n  } finally {\n    isInsideEventHandler = false;\n    finishEventHandler();\n  }\n} // TODO: Replace with flushSync\nfunction setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushSyncImpl) {\n  batchedUpdatesImpl = _batchedUpdatesImpl;\n  flushSyncImpl = _flushSyncImpl;\n}\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n    case 'onMouseEnter':\n      return !!(props.disabled && isInteractive(type));\n\n    default:\n      return false;\n  }\n}\n/**\n * @param {object} inst The instance, which is the source of events.\n * @param {string} registrationName Name of listener (e.g. `onClick`).\n * @return {?function} The stored callback.\n */\n\n\nfunction getListener(inst, registrationName) {\n  var stateNode = inst.stateNode;\n\n  if (stateNode === null) {\n    // Work in progress (ex: onload events in incremental mode).\n    return null;\n  }\n\n  var props = getFiberCurrentPropsFromNode(stateNode);\n\n  if (props === null) {\n    // Work in progress.\n    return null;\n  }\n\n  var listener = props[registrationName];\n\n  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {\n    return null;\n  }\n\n  if (listener && typeof listener !== 'function') {\n    throw new Error(\"Expected `\" + registrationName + \"` listener to be a function, instead got a value of `\" + typeof listener + \"` type.\");\n  }\n\n  return listener;\n}\n\nvar passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n\nif (canUseDOM) {\n  try {\n    var options = {}; // $FlowFixMe: Ignore Flow complaining about needing a value\n\n    Object.defineProperty(options, 'passive', {\n      get: function () {\n        passiveBrowserEventsSupported = true;\n      }\n    });\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, options);\n  } catch (e) {\n    passiveBrowserEventsSupported = false;\n  }\n}\n\nfunction invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {\n  var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n}\n\nvar invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n\n{\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // unintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n    var fakeNode = document.createElement('react');\n\n    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {\n      // If document doesn't exist we know for sure we will crash in this method\n      // when we call document.createEvent(). However this can cause confusing\n      // errors: https://github.com/facebook/create-react-app/issues/3482\n      // So we preemptively throw with a better message instead.\n      if (typeof document === 'undefined' || document === null) {\n        throw new Error('The `document` global was defined when React was initialized, but is not ' + 'defined anymore. This can happen in a test environment if a component ' + 'schedules an update from an asynchronous callback, but the test has already ' + 'finished running. To solve this, you can either unmount the component at ' + 'the end of your test (and ensure that any asynchronous operations get ' + 'canceled in `componentWillUnmount`), or you can change the test itself ' + 'to be asynchronous.');\n      }\n\n      var evt = document.createEvent('Event');\n      var didCall = false; // Keeps track of whether the user-provided callback threw an error. We\n      // set this to true at the beginning, then set it to false right after\n      // calling the function. If the function errors, `didError` will never be\n      // set to false. This strategy works even if the browser is flaky and\n      // fails to call our global error handler, because it doesn't rely on\n      // the error event at all.\n\n      var didError = true; // Keeps track of the value of window.event so that we can reset it\n      // during the callback to let user code access window.event in the\n      // browsers that support it.\n\n      var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event\n      // dispatching: https://github.com/facebook/react/issues/13688\n\n      var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');\n\n      function restoreAfterDispatch() {\n        // We immediately remove the callback from event listeners so that\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n        // nested call would trigger the fake event handlers of any call higher\n        // in the stack.\n        fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the\n        // window.event assignment in both IE <= 10 as they throw an error\n        // \"Member not found\" in strict mode, and in Firefox which does not\n        // support window.event.\n\n        if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {\n          window.event = windowEvent;\n        }\n      } // Create an event handler for our fake event. We will synchronously\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n      // call the user-provided callback.\n\n\n      var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n      function callCallback() {\n        didCall = true;\n        restoreAfterDispatch();\n        func.apply(context, funcArgs);\n        didError = false;\n      } // Create a global error event handler. We use this to capture the value\n      // that was thrown. It's possible that this error handler will fire more\n      // than once; for example, if non-React code also calls `dispatchEvent`\n      // and a handler for that event throws. We should be resilient to most of\n      // those cases. Even if our error event handler fires more than once, the\n      // last error event is always used. If the callback actually does error,\n      // we know that the last error event is the correct one, because it's not\n      // possible for anything else to have happened in between our callback\n      // erroring and the code that follows the `dispatchEvent` call below. If\n      // the callback doesn't error, but the error event was fired, we know to\n      // ignore it because `didError` will be false, as described above.\n\n\n      var error; // Use this to track whether the error event is ever called.\n\n      var didSetError = false;\n      var isCrossOriginError = false;\n\n      function handleWindowError(event) {\n        error = event.error;\n        didSetError = true;\n\n        if (error === null && event.colno === 0 && event.lineno === 0) {\n          isCrossOriginError = true;\n        }\n\n        if (event.defaultPrevented) {\n          // Some other error handler has prevented default.\n          // Browsers silence the error report if this happens.\n          // We'll remember this to later decide whether to log it or not.\n          if (error != null && typeof error === 'object') {\n            try {\n              error._suppressLogging = true;\n            } catch (inner) {// Ignore.\n            }\n          }\n        }\n      } // Create a fake event type.\n\n\n      var evtType = \"react-\" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers\n\n      window.addEventListener('error', handleWindowError);\n      fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function\n      // errors, it will trigger our global error handler.\n\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n\n      if (windowEventDescriptor) {\n        Object.defineProperty(window, 'event', windowEventDescriptor);\n      }\n\n      if (didCall && didError) {\n        if (!didSetError) {\n          // The callback errored, but the error event never fired.\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error('An error was thrown inside one of your components, but React ' + \"doesn't know what it was. This is likely due to browser \" + 'flakiness. React does its best to preserve the \"Pause on ' + 'exceptions\" behavior of the DevTools, which requires some ' + \"DEV-mode only tricks. It's possible that these don't work in \" + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');\n        } else if (isCrossOriginError) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error(\"A cross-origin error was thrown. React doesn't have access to \" + 'the actual error object in development. ' + 'See https://reactjs.org/link/crossorigin-error for more information.');\n        }\n\n        this.onError(error);\n      } // Remove our event listeners\n\n\n      window.removeEventListener('error', handleWindowError);\n\n      if (!didCall) {\n        // Something went really wrong, and our event was not dispatched.\n        // https://github.com/facebook/react/issues/16734\n        // https://github.com/facebook/react/issues/16585\n        // Fall back to the production implementation.\n        restoreAfterDispatch();\n        return invokeGuardedCallbackProd.apply(this, arguments);\n      }\n    };\n  }\n}\n\nvar invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;\n\nvar hasError = false;\nvar caughtError = null; // Used by event system to capture/rethrow the first error.\n\nvar hasRethrowError = false;\nvar rethrowError = null;\nvar reporter = {\n  onError: function (error) {\n    hasError = true;\n    caughtError = error;\n  }\n};\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\n\nfunction invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl$1.apply(reporter, arguments);\n}\n/**\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\n * TODO: See if caughtError and rethrowError can be unified.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\n\nfunction invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {\n  invokeGuardedCallback.apply(this, arguments);\n\n  if (hasError) {\n    var error = clearCaughtError();\n\n    if (!hasRethrowError) {\n      hasRethrowError = true;\n      rethrowError = error;\n    }\n  }\n}\n/**\n * During execution of guarded functions we will capture the first error which\n * we will rethrow to be handled by the top level error handler.\n */\n\nfunction rethrowCaughtError() {\n  if (hasRethrowError) {\n    var error = rethrowError;\n    hasRethrowError = false;\n    rethrowError = null;\n    throw error;\n  }\n}\nfunction hasCaughtError() {\n  return hasError;\n}\nfunction clearCaughtError() {\n  if (hasError) {\n    var error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    throw new Error('clearCaughtError was called but no error was captured. This error ' + 'is likely caused by a bug in React. Please file an issue.');\n  }\n}\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\nfunction get(key) {\n  return key._reactInternals;\n}\nfunction has(key) {\n  return key._reactInternals !== undefined;\n}\nfunction set(key, value) {\n  key._reactInternals = value;\n}\n\n// Don't change these two values. They're used by React Dev Tools.\nvar NoFlags =\n/*                      */\n0;\nvar PerformedWork =\n/*                */\n1; // You can change the rest (and add more).\n\nvar Placement =\n/*                    */\n2;\nvar Update =\n/*                       */\n4;\nvar ChildDeletion =\n/*                */\n16;\nvar ContentReset =\n/*                 */\n32;\nvar Callback =\n/*                     */\n64;\nvar DidCapture =\n/*                   */\n128;\nvar ForceClientRender =\n/*            */\n256;\nvar Ref =\n/*                          */\n512;\nvar Snapshot =\n/*                     */\n1024;\nvar Passive =\n/*                      */\n2048;\nvar Hydrating =\n/*                    */\n4096;\nvar Visibility =\n/*                   */\n8192;\nvar StoreConsistency =\n/*             */\n16384;\nvar LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency; // Union of all commit flags (flags with the lifetime of a particular commit)\n\nvar HostEffectMask =\n/*               */\n32767; // These are not really side effects, but we still reuse this field.\n\nvar Incomplete =\n/*                   */\n32768;\nvar ShouldCapture =\n/*                */\n65536;\nvar ForceUpdateForLegacySuspense =\n/* */\n131072;\nvar Forked =\n/*                       */\n1048576; // Static tags describe aspects of a fiber that are not specific to a render,\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\n// This enables us to defer more work in the unmount case,\n// since we can defer traversing the tree during layout to look for Passive effects,\n// and instead rely on the static flag as a signal that there may be cleanup work.\n\nvar RefStatic =\n/*                    */\n2097152;\nvar LayoutStatic =\n/*                 */\n4194304;\nvar PassiveStatic =\n/*                */\n8388608; // These flags allow us to traverse to fibers that have effects on mount\n// without traversing the entire tree after every commit for\n// double invoking\n\nvar MountLayoutDev =\n/*               */\n16777216;\nvar MountPassiveDev =\n/*              */\n33554432; // Groups of flags that are used in the commit phase to skip over trees that\n// don't contain effects, by checking subtreeFlags.\n\nvar BeforeMutationMask = // TODO: Remove Update flag from before mutation phase by re-landing Visibility\n// flag logic (see #20043)\nUpdate | Snapshot | ( 0);\nvar MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;\nvar LayoutMask = Update | Callback | Ref | Visibility; // TODO: Split into PassiveMountMask and PassiveUnmountMask\n\nvar PassiveMask = Passive | ChildDeletion; // Union of tags that don't get reset on clones.\n// This allows certain concepts to persist without recalculating them,\n// e.g. whether a subtree contains passive effects or portals.\n\nvar StaticMask = LayoutStatic | PassiveStatic | RefStatic;\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nfunction getNearestMountedFiber(fiber) {\n  var node = fiber;\n  var nearestMounted = fiber;\n\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    var nextNode = node;\n\n    do {\n      node = nextNode;\n\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  } // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n\n\n  return null;\n}\nfunction getSuspenseInstanceFromFiber(fiber) {\n  if (fiber.tag === SuspenseComponent) {\n    var suspenseState = fiber.memoizedState;\n\n    if (suspenseState === null) {\n      var current = fiber.alternate;\n\n      if (current !== null) {\n        suspenseState = current.memoizedState;\n      }\n    }\n\n    if (suspenseState !== null) {\n      return suspenseState.dehydrated;\n    }\n  }\n\n  return null;\n}\nfunction getContainerFromFiber(fiber) {\n  return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;\n}\nfunction isFiberMounted(fiber) {\n  return getNearestMountedFiber(fiber) === fiber;\n}\nfunction isMounted(component) {\n  {\n    var owner = ReactCurrentOwner.current;\n\n    if (owner !== null && owner.tag === ClassComponent) {\n      var ownerFiber = owner;\n      var instance = ownerFiber.stateNode;\n\n      if (!instance._warnedAboutRefsInRender) {\n        error('%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentNameFromFiber(ownerFiber) || 'A component');\n      }\n\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  var fiber = get(component);\n\n  if (!fiber) {\n    return false;\n  }\n\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber) {\n    throw new Error('Unable to find node on an unmounted component.');\n  }\n}\n\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  var alternate = fiber.alternate;\n\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    var nearestMounted = getNearestMountedFiber(fiber);\n\n    if (nearestMounted === null) {\n      throw new Error('Unable to find node on an unmounted component.');\n    }\n\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n\n    return fiber;\n  } // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n\n\n  var a = fiber;\n  var b = alternate;\n\n  while (true) {\n    var parentA = a.return;\n\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n\n    var parentB = parentA.alternate;\n\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      var nextParent = parentA.return;\n\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      } // If there's no parent, we're at the root.\n\n\n      break;\n    } // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n\n\n    if (parentA.child === parentB.child) {\n      var child = parentA.child;\n\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n\n        child = child.sibling;\n      } // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n\n\n      throw new Error('Unable to find node on an unmounted component.');\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      var didFindChild = false;\n      var _child = parentA.child;\n\n      while (_child) {\n        if (_child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n\n        if (_child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n\n        _child = _child.sibling;\n      }\n\n      if (!didFindChild) {\n        // Search parent B's child set\n        _child = parentB.child;\n\n        while (_child) {\n          if (_child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n\n          if (_child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n\n          _child = _child.sibling;\n        }\n\n        if (!didFindChild) {\n          throw new Error('Child was not found in either parent set. This indicates a bug ' + 'in React related to the return pointer. Please file an issue.');\n        }\n      }\n    }\n\n    if (a.alternate !== b) {\n      throw new Error(\"Return fibers should always be each others' alternates. \" + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n  } // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n\n\n  if (a.tag !== HostRoot) {\n    throw new Error('Unable to find node on an unmounted component.');\n  }\n\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  } // Otherwise B has to be current branch.\n\n\n  return alternate;\n}\nfunction findCurrentHostFiber(parent) {\n  var currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;\n}\n\nfunction findCurrentHostFiberImpl(node) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  var child = node.child;\n\n  while (child !== null) {\n    var match = findCurrentHostFiberImpl(child);\n\n    if (match !== null) {\n      return match;\n    }\n\n    child = child.sibling;\n  }\n\n  return null;\n}\n\nfunction findCurrentHostFiberWithNoPortals(parent) {\n  var currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null ? findCurrentHostFiberWithNoPortalsImpl(currentParent) : null;\n}\n\nfunction findCurrentHostFiberWithNoPortalsImpl(node) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  var child = node.child;\n\n  while (child !== null) {\n    if (child.tag !== HostPortal) {\n      var match = findCurrentHostFiberWithNoPortalsImpl(child);\n\n      if (match !== null) {\n        return match;\n      }\n    }\n\n    child = child.sibling;\n  }\n\n  return null;\n}\n\n// This module only exists as an ESM wrapper around the external CommonJS\nvar scheduleCallback = Scheduler.unstable_scheduleCallback;\nvar cancelCallback = Scheduler.unstable_cancelCallback;\nvar shouldYield = Scheduler.unstable_shouldYield;\nvar requestPaint = Scheduler.unstable_requestPaint;\nvar now = Scheduler.unstable_now;\nvar getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;\nvar ImmediatePriority = Scheduler.unstable_ImmediatePriority;\nvar UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;\nvar NormalPriority = Scheduler.unstable_NormalPriority;\nvar LowPriority = Scheduler.unstable_LowPriority;\nvar IdlePriority = Scheduler.unstable_IdlePriority;\n// this doesn't actually exist on the scheduler, but it *does*\n// on scheduler/unstable_mock, which we'll need for internal testing\nvar unstable_yieldValue = Scheduler.unstable_yieldValue;\nvar unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue;\n\nvar rendererID = null;\nvar injectedHook = null;\nvar injectedProfilingHooks = null;\nvar hasLoggedError = false;\nvar isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\nfunction injectInternals(internals) {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n\n  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n\n  if (!hook.supportsFiber) {\n    {\n      error('The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://reactjs.org/link/react-devtools');\n    } // DevTools exists, even though it doesn't support Fiber.\n\n\n    return true;\n  }\n\n  try {\n    if (enableSchedulingProfiler) {\n      // Conditionally inject these hooks only if Timeline profiler is supported by this build.\n      // This gives DevTools a way to feature detect that isn't tied to version number\n      // (since profiling and timeline are controlled by different feature flags).\n      internals = assign({}, internals, {\n        getLaneLabelMap: getLaneLabelMap,\n        injectProfilingHooks: injectProfilingHooks\n      });\n    }\n\n    rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.\n\n    injectedHook = hook;\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    {\n      error('React instrumentation encountered an error: %s.', err);\n    }\n  }\n\n  if (hook.checkDCE) {\n    // This is the real DevTools.\n    return true;\n  } else {\n    // This is likely a hook installed by Fast Refresh runtime.\n    return false;\n  }\n}\nfunction onScheduleRoot(root, children) {\n  {\n    if (injectedHook && typeof injectedHook.onScheduleFiberRoot === 'function') {\n      try {\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\n      } catch (err) {\n        if ( !hasLoggedError) {\n          hasLoggedError = true;\n\n          error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\nfunction onCommitRoot(root, eventPriority) {\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {\n    try {\n      var didError = (root.current.flags & DidCapture) === DidCapture;\n\n      if (enableProfilerTimer) {\n        var schedulerPriority;\n\n        switch (eventPriority) {\n          case DiscreteEventPriority:\n            schedulerPriority = ImmediatePriority;\n            break;\n\n          case ContinuousEventPriority:\n            schedulerPriority = UserBlockingPriority;\n            break;\n\n          case DefaultEventPriority:\n            schedulerPriority = NormalPriority;\n            break;\n\n          case IdleEventPriority:\n            schedulerPriority = IdlePriority;\n            break;\n\n          default:\n            schedulerPriority = NormalPriority;\n            break;\n        }\n\n        injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);\n      } else {\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n      }\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\nfunction onPostCommitRoot(root) {\n  if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === 'function') {\n    try {\n      injectedHook.onPostCommitFiberRoot(rendererID, root);\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\nfunction onCommitUnmount(fiber) {\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\nfunction setIsStrictModeForDevtools(newIsStrictMode) {\n  {\n    if (typeof unstable_yieldValue === 'function') {\n      // We're in a test because Scheduler.unstable_yieldValue only exists\n      // in SchedulerMock. To reduce the noise in strict mode tests,\n      // suppress warnings and disable scheduler yielding during the double render\n      unstable_setDisableYieldValue(newIsStrictMode);\n      setSuppressWarning(newIsStrictMode);\n    }\n\n    if (injectedHook && typeof injectedHook.setStrictMode === 'function') {\n      try {\n        injectedHook.setStrictMode(rendererID, newIsStrictMode);\n      } catch (err) {\n        {\n          if (!hasLoggedError) {\n            hasLoggedError = true;\n\n            error('React instrumentation encountered an error: %s', err);\n          }\n        }\n      }\n    }\n  }\n} // Profiler API hooks\n\nfunction injectProfilingHooks(profilingHooks) {\n  injectedProfilingHooks = profilingHooks;\n}\n\nfunction getLaneLabelMap() {\n  {\n    var map = new Map();\n    var lane = 1;\n\n    for (var index = 0; index < TotalLanes; index++) {\n      var label = getLabelForLane(lane);\n      map.set(lane, label);\n      lane *= 2;\n    }\n\n    return map;\n  }\n}\n\nfunction markCommitStarted(lanes) {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStarted === 'function') {\n      injectedProfilingHooks.markCommitStarted(lanes);\n    }\n  }\n}\nfunction markCommitStopped() {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStopped === 'function') {\n      injectedProfilingHooks.markCommitStopped();\n    }\n  }\n}\nfunction markComponentRenderStarted(fiber) {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStarted === 'function') {\n      injectedProfilingHooks.markComponentRenderStarted(fiber);\n    }\n  }\n}\nfunction markComponentRenderStopped() {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStopped === 'function') {\n      injectedProfilingHooks.markComponentRenderStopped();\n    }\n  }\n}\nfunction markComponentPassiveEffectMountStarted(fiber) {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted === 'function') {\n      injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);\n    }\n  }\n}\nfunction markComponentPassiveEffectMountStopped() {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped === 'function') {\n      injectedProfilingHooks.markComponentPassiveEffectMountStopped();\n    }\n  }\n}\nfunction markComponentPassiveEffectUnmountStarted(fiber) {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted === 'function') {\n      injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);\n    }\n  }\n}\nfunction markComponentPassiveEffectUnmountStopped() {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped === 'function') {\n      injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();\n    }\n  }\n}\nfunction markComponentLayoutEffectMountStarted(fiber) {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted === 'function') {\n      injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);\n    }\n  }\n}\nfunction markComponentLayoutEffectMountStopped() {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped === 'function') {\n      injectedProfilingHooks.markComponentLayoutEffectMountStopped();\n    }\n  }\n}\nfunction markComponentLayoutEffectUnmountStarted(fiber) {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted === 'function') {\n      injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);\n    }\n  }\n}\nfunction markComponentLayoutEffectUnmountStopped() {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped === 'function') {\n      injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();\n    }\n  }\n}\nfunction markComponentErrored(fiber, thrownValue, lanes) {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentErrored === 'function') {\n      injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);\n    }\n  }\n}\nfunction markComponentSuspended(fiber, wakeable, lanes) {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentSuspended === 'function') {\n      injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);\n    }\n  }\n}\nfunction markLayoutEffectsStarted(lanes) {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStarted === 'function') {\n      injectedProfilingHooks.markLayoutEffectsStarted(lanes);\n    }\n  }\n}\nfunction markLayoutEffectsStopped() {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStopped === 'function') {\n      injectedProfilingHooks.markLayoutEffectsStopped();\n    }\n  }\n}\nfunction markPassiveEffectsStarted(lanes) {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStarted === 'function') {\n      injectedProfilingHooks.markPassiveEffectsStarted(lanes);\n    }\n  }\n}\nfunction markPassiveEffectsStopped() {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStopped === 'function') {\n      injectedProfilingHooks.markPassiveEffectsStopped();\n    }\n  }\n}\nfunction markRenderStarted(lanes) {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStarted === 'function') {\n      injectedProfilingHooks.markRenderStarted(lanes);\n    }\n  }\n}\nfunction markRenderYielded() {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderYielded === 'function') {\n      injectedProfilingHooks.markRenderYielded();\n    }\n  }\n}\nfunction markRenderStopped() {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStopped === 'function') {\n      injectedProfilingHooks.markRenderStopped();\n    }\n  }\n}\nfunction markRenderScheduled(lane) {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderScheduled === 'function') {\n      injectedProfilingHooks.markRenderScheduled(lane);\n    }\n  }\n}\nfunction markForceUpdateScheduled(fiber, lane) {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markForceUpdateScheduled === 'function') {\n      injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);\n    }\n  }\n}\nfunction markStateUpdateScheduled(fiber, lane) {\n  {\n    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markStateUpdateScheduled === 'function') {\n      injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);\n    }\n  }\n}\n\nvar NoMode =\n/*                         */\n0; // TODO: Remove ConcurrentMode by reading from the root tag instead\n\nvar ConcurrentMode =\n/*                 */\n1;\nvar ProfileMode =\n/*                    */\n2;\nvar StrictLegacyMode =\n/*               */\n8;\nvar StrictEffectsMode =\n/*              */\n16;\n\n// TODO: This is pretty well supported by browsers. Maybe we can drop it.\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\nvar log = Math.log;\nvar LN2 = Math.LN2;\n\nfunction clz32Fallback(x) {\n  var asUint = x >>> 0;\n\n  if (asUint === 0) {\n    return 32;\n  }\n\n  return 31 - (log(asUint) / LN2 | 0) | 0;\n}\n\n// If those values are changed that package should be rebuilt and redeployed.\n\nvar TotalLanes = 31;\nvar NoLanes =\n/*                        */\n0;\nvar NoLane =\n/*                          */\n0;\nvar SyncLane =\n/*                        */\n1;\nvar InputContinuousHydrationLane =\n/*    */\n2;\nvar InputContinuousLane =\n/*             */\n4;\nvar DefaultHydrationLane =\n/*            */\n8;\nvar DefaultLane =\n/*                     */\n16;\nvar TransitionHydrationLane =\n/*                */\n32;\nvar TransitionLanes =\n/*                       */\n4194240;\nvar TransitionLane1 =\n/*                        */\n64;\nvar TransitionLane2 =\n/*                        */\n128;\nvar TransitionLane3 =\n/*                        */\n256;\nvar TransitionLane4 =\n/*                        */\n512;\nvar TransitionLane5 =\n/*                        */\n1024;\nvar TransitionLane6 =\n/*                        */\n2048;\nvar TransitionLane7 =\n/*                        */\n4096;\nvar TransitionLane8 =\n/*                        */\n8192;\nvar TransitionLane9 =\n/*                        */\n16384;\nvar TransitionLane10 =\n/*                       */\n32768;\nvar TransitionLane11 =\n/*                       */\n65536;\nvar TransitionLane12 =\n/*                       */\n131072;\nvar TransitionLane13 =\n/*                       */\n262144;\nvar TransitionLane14 =\n/*                       */\n524288;\nvar TransitionLane15 =\n/*                       */\n1048576;\nvar TransitionLane16 =\n/*                       */\n2097152;\nvar RetryLanes =\n/*                            */\n130023424;\nvar RetryLane1 =\n/*                             */\n4194304;\nvar RetryLane2 =\n/*                             */\n8388608;\nvar RetryLane3 =\n/*                             */\n16777216;\nvar RetryLane4 =\n/*                             */\n33554432;\nvar RetryLane5 =\n/*                             */\n67108864;\nvar SomeRetryLane = RetryLane1;\nvar SelectiveHydrationLane =\n/*          */\n134217728;\nvar NonIdleLanes =\n/*                          */\n268435455;\nvar IdleHydrationLane =\n/*               */\n268435456;\nvar IdleLane =\n/*                        */\n536870912;\nvar OffscreenLane =\n/*                   */\n1073741824; // This function is used for the experimental timeline (react-devtools-timeline)\n// It should be kept in sync with the Lanes values above.\n\nfunction getLabelForLane(lane) {\n  {\n    if (lane & SyncLane) {\n      return 'Sync';\n    }\n\n    if (lane & InputContinuousHydrationLane) {\n      return 'InputContinuousHydration';\n    }\n\n    if (lane & InputContinuousLane) {\n      return 'InputContinuous';\n    }\n\n    if (lane & DefaultHydrationLane) {\n      return 'DefaultHydration';\n    }\n\n    if (lane & DefaultLane) {\n      return 'Default';\n    }\n\n    if (lane & TransitionHydrationLane) {\n      return 'TransitionHydration';\n    }\n\n    if (lane & TransitionLanes) {\n      return 'Transition';\n    }\n\n    if (lane & RetryLanes) {\n      return 'Retry';\n    }\n\n    if (lane & SelectiveHydrationLane) {\n      return 'SelectiveHydration';\n    }\n\n    if (lane & IdleHydrationLane) {\n      return 'IdleHydration';\n    }\n\n    if (lane & IdleLane) {\n      return 'Idle';\n    }\n\n    if (lane & OffscreenLane) {\n      return 'Offscreen';\n    }\n  }\n}\nvar NoTimestamp = -1;\nvar nextTransitionLane = TransitionLane1;\nvar nextRetryLane = RetryLane1;\n\nfunction getHighestPriorityLanes(lanes) {\n  switch (getHighestPriorityLane(lanes)) {\n    case SyncLane:\n      return SyncLane;\n\n    case InputContinuousHydrationLane:\n      return InputContinuousHydrationLane;\n\n    case InputContinuousLane:\n      return InputContinuousLane;\n\n    case DefaultHydrationLane:\n      return DefaultHydrationLane;\n\n    case DefaultLane:\n      return DefaultLane;\n\n    case TransitionHydrationLane:\n      return TransitionHydrationLane;\n\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return lanes & TransitionLanes;\n\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      return lanes & RetryLanes;\n\n    case SelectiveHydrationLane:\n      return SelectiveHydrationLane;\n\n    case IdleHydrationLane:\n      return IdleHydrationLane;\n\n    case IdleLane:\n      return IdleLane;\n\n    case OffscreenLane:\n      return OffscreenLane;\n\n    default:\n      {\n        error('Should have found matching lanes. This is a bug in React.');\n      } // This shouldn't be reachable, but as a fallback, return the entire bitmask.\n\n\n      return lanes;\n  }\n}\n\nfunction getNextLanes(root, wipLanes) {\n  // Early bailout if there's no pending work left.\n  var pendingLanes = root.pendingLanes;\n\n  if (pendingLanes === NoLanes) {\n    return NoLanes;\n  }\n\n  var nextLanes = NoLanes;\n  var suspendedLanes = root.suspendedLanes;\n  var pingedLanes = root.pingedLanes; // Do not work on any idle work until all the non-idle work has finished,\n  // even if the work is suspended.\n\n  var nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n\n  if (nonIdlePendingLanes !== NoLanes) {\n    var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n\n    if (nonIdleUnblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n    } else {\n      var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n\n      if (nonIdlePingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n      }\n    }\n  } else {\n    // The only remaining work is Idle.\n    var unblockedLanes = pendingLanes & ~suspendedLanes;\n\n    if (unblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(unblockedLanes);\n    } else {\n      if (pingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(pingedLanes);\n      }\n    }\n  }\n\n  if (nextLanes === NoLanes) {\n    // This should only be reachable if we're suspended\n    // TODO: Consider warning in this path if a fallback timer is not scheduled.\n    return NoLanes;\n  } // If we're already in the middle of a render, switching lanes will interrupt\n  // it and we'll lose our progress. We should only do this if the new lanes are\n  // higher priority.\n\n\n  if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't\n  // bother waiting until the root is complete.\n  (wipLanes & suspendedLanes) === NoLanes) {\n    var nextLane = getHighestPriorityLane(nextLanes);\n    var wipLane = getHighestPriorityLane(wipLanes);\n\n    if ( // Tests whether the next lane is equal or lower priority than the wip\n    // one. This works because the bits decrease in priority as you go left.\n    nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The\n    // only difference between default updates and transition updates is that\n    // default updates do not support refresh transitions.\n    nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) {\n      // Keep working on the existing in-progress tree. Do not interrupt.\n      return wipLanes;\n    }\n  }\n\n  if ((nextLanes & InputContinuousLane) !== NoLanes) {\n    // When updates are sync by default, we entangle continuous priority updates\n    // and default updates, so they render in the same batch. The only reason\n    // they use separate lanes is because continuous updates should interrupt\n    // transitions, but default updates should not.\n    nextLanes |= pendingLanes & DefaultLane;\n  } // Check for entangled lanes and add them to the batch.\n  //\n  // A lane is said to be entangled with another when it's not allowed to render\n  // in a batch that does not also include the other lane. Typically we do this\n  // when multiple updates have the same source, and we only want to respond to\n  // the most recent event from that source.\n  //\n  // Note that we apply entanglements *after* checking for partial work above.\n  // This means that if a lane is entangled during an interleaved event while\n  // it's already rendering, we won't interrupt it. This is intentional, since\n  // entanglement is usually \"best effort\": we'll try our best to render the\n  // lanes in the same batch, but it's not worth throwing out partially\n  // completed work in order to do it.\n  // TODO: Reconsider this. The counter-argument is that the partial work\n  // represents an intermediate state, which we don't want to show to the user.\n  // And by spending extra time finishing it, we're increasing the amount of\n  // time it takes to show the final state, which is what they are actually\n  // waiting for.\n  //\n  // For those exceptions where entanglement is semantically important, like\n  // useMutableSource, we should ensure that there is no partial work at the\n  // time we apply the entanglement.\n\n\n  var entangledLanes = root.entangledLanes;\n\n  if (entangledLanes !== NoLanes) {\n    var entanglements = root.entanglements;\n    var lanes = nextLanes & entangledLanes;\n\n    while (lanes > 0) {\n      var index = pickArbitraryLaneIndex(lanes);\n      var lane = 1 << index;\n      nextLanes |= entanglements[index];\n      lanes &= ~lane;\n    }\n  }\n\n  return nextLanes;\n}\nfunction getMostRecentEventTime(root, lanes) {\n  var eventTimes = root.eventTimes;\n  var mostRecentEventTime = NoTimestamp;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    var eventTime = eventTimes[index];\n\n    if (eventTime > mostRecentEventTime) {\n      mostRecentEventTime = eventTime;\n    }\n\n    lanes &= ~lane;\n  }\n\n  return mostRecentEventTime;\n}\n\nfunction computeExpirationTime(lane, currentTime) {\n  switch (lane) {\n    case SyncLane:\n    case InputContinuousHydrationLane:\n    case InputContinuousLane:\n      // User interactions should expire slightly more quickly.\n      //\n      // NOTE: This is set to the corresponding constant as in Scheduler.js.\n      // When we made it larger, a product metric in www regressed, suggesting\n      // there's a user interaction that's being starved by a series of\n      // synchronous updates. If that theory is correct, the proper solution is\n      // to fix the starvation. However, this scenario supports the idea that\n      // expiration times are an important safeguard when starvation\n      // does happen.\n      return currentTime + 250;\n\n    case DefaultHydrationLane:\n    case DefaultLane:\n    case TransitionHydrationLane:\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return currentTime + 5000;\n\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      // TODO: Retries should be allowed to expire if they are CPU bound for\n      // too long, but when I made this change it caused a spike in browser\n      // crashes. There must be some other underlying bug; not super urgent but\n      // ideally should figure out why and fix it. Unfortunately we don't have\n      // a repro for the crashes, only detected via production metrics.\n      return NoTimestamp;\n\n    case SelectiveHydrationLane:\n    case IdleHydrationLane:\n    case IdleLane:\n    case OffscreenLane:\n      // Anything idle priority or lower should never expire.\n      return NoTimestamp;\n\n    default:\n      {\n        error('Should have found matching lanes. This is a bug in React.');\n      }\n\n      return NoTimestamp;\n  }\n}\n\nfunction markStarvedLanesAsExpired(root, currentTime) {\n  // TODO: This gets called every time we yield. We can optimize by storing\n  // the earliest expiration time on the root. Then use that to quickly bail out\n  // of this function.\n  var pendingLanes = root.pendingLanes;\n  var suspendedLanes = root.suspendedLanes;\n  var pingedLanes = root.pingedLanes;\n  var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their\n  // expiration time. If so, we'll assume the update is being starved and mark\n  // it as expired to force it to finish.\n\n  var lanes = pendingLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    var expirationTime = expirationTimes[index];\n\n    if (expirationTime === NoTimestamp) {\n      // Found a pending lane with no expiration time. If it's not suspended, or\n      // if it's pinged, assume it's CPU-bound. Compute a new expiration time\n      // using the current time.\n      if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {\n        // Assumes timestamps are monotonically increasing.\n        expirationTimes[index] = computeExpirationTime(lane, currentTime);\n      }\n    } else if (expirationTime <= currentTime) {\n      // This lane expired\n      root.expiredLanes |= lane;\n    }\n\n    lanes &= ~lane;\n  }\n} // This returns the highest priority pending lanes regardless of whether they\n// are suspended.\n\nfunction getHighestPriorityPendingLanes(root) {\n  return getHighestPriorityLanes(root.pendingLanes);\n}\nfunction getLanesToRetrySynchronouslyOnError(root) {\n  var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n\n  if (everythingButOffscreen !== NoLanes) {\n    return everythingButOffscreen;\n  }\n\n  if (everythingButOffscreen & OffscreenLane) {\n    return OffscreenLane;\n  }\n\n  return NoLanes;\n}\nfunction includesSyncLane(lanes) {\n  return (lanes & SyncLane) !== NoLanes;\n}\nfunction includesNonIdleWork(lanes) {\n  return (lanes & NonIdleLanes) !== NoLanes;\n}\nfunction includesOnlyRetries(lanes) {\n  return (lanes & RetryLanes) === lanes;\n}\nfunction includesOnlyNonUrgentLanes(lanes) {\n  var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;\n  return (lanes & UrgentLanes) === NoLanes;\n}\nfunction includesOnlyTransitions(lanes) {\n  return (lanes & TransitionLanes) === lanes;\n}\nfunction includesBlockingLane(root, lanes) {\n\n  var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;\n  return (lanes & SyncDefaultLanes) !== NoLanes;\n}\nfunction includesExpiredLane(root, lanes) {\n  // This is a separate check from includesBlockingLane because a lane can\n  // expire after a render has already started.\n  return (lanes & root.expiredLanes) !== NoLanes;\n}\nfunction isTransitionLane(lane) {\n  return (lane & TransitionLanes) !== NoLanes;\n}\nfunction claimNextTransitionLane() {\n  // Cycle through the lanes, assigning each new transition to the next lane.\n  // In most cases, this means every transition gets its own lane, until we\n  // run out of lanes and cycle back to the beginning.\n  var lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n\n  if ((nextTransitionLane & TransitionLanes) === NoLanes) {\n    nextTransitionLane = TransitionLane1;\n  }\n\n  return lane;\n}\nfunction claimNextRetryLane() {\n  var lane = nextRetryLane;\n  nextRetryLane <<= 1;\n\n  if ((nextRetryLane & RetryLanes) === NoLanes) {\n    nextRetryLane = RetryLane1;\n  }\n\n  return lane;\n}\nfunction getHighestPriorityLane(lanes) {\n  return lanes & -lanes;\n}\nfunction pickArbitraryLane(lanes) {\n  // This wrapper function gets inlined. Only exists so to communicate that it\n  // doesn't matter which bit is selected; you can pick any bit without\n  // affecting the algorithms where its used. Here I'm using\n  // getHighestPriorityLane because it requires the fewest operations.\n  return getHighestPriorityLane(lanes);\n}\n\nfunction pickArbitraryLaneIndex(lanes) {\n  return 31 - clz32(lanes);\n}\n\nfunction laneToIndex(lane) {\n  return pickArbitraryLaneIndex(lane);\n}\n\nfunction includesSomeLane(a, b) {\n  return (a & b) !== NoLanes;\n}\nfunction isSubsetOfLanes(set, subset) {\n  return (set & subset) === subset;\n}\nfunction mergeLanes(a, b) {\n  return a | b;\n}\nfunction removeLanes(set, subset) {\n  return set & ~subset;\n}\nfunction intersectLanes(a, b) {\n  return a & b;\n} // Seems redundant, but it changes the type from a single lane (used for\n// updates) to a group of lanes (used for flushing work).\n\nfunction laneToLanes(lane) {\n  return lane;\n}\nfunction higherPriorityLane(a, b) {\n  // This works because the bit ranges decrease in priority as you go left.\n  return a !== NoLane && a < b ? a : b;\n}\nfunction createLaneMap(initial) {\n  // Intentionally pushing one by one.\n  // https://v8.dev/blog/elements-kinds#avoid-creating-holes\n  var laneMap = [];\n\n  for (var i = 0; i < TotalLanes; i++) {\n    laneMap.push(initial);\n  }\n\n  return laneMap;\n}\nfunction markRootUpdated(root, updateLane, eventTime) {\n  root.pendingLanes |= updateLane; // If there are any suspended transitions, it's possible this new update\n  // could unblock them. Clear the suspended lanes so that we can try rendering\n  // them again.\n  //\n  // TODO: We really only need to unsuspend only lanes that are in the\n  // `subtreeLanes` of the updated fiber, or the update lanes of the return\n  // path. This would exclude suspended updates in an unrelated sibling tree,\n  // since there's no way for this update to unblock it.\n  //\n  // We don't do this if the incoming update is idle, because we never process\n  // idle updates until after all the regular updates have finished; there's no\n  // way it could unblock a transition.\n\n  if (updateLane !== IdleLane) {\n    root.suspendedLanes = NoLanes;\n    root.pingedLanes = NoLanes;\n  }\n\n  var eventTimes = root.eventTimes;\n  var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most\n  // recent event, and we assume time is monotonically increasing.\n\n  eventTimes[index] = eventTime;\n}\nfunction markRootSuspended(root, suspendedLanes) {\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.\n\n  var expirationTimes = root.expirationTimes;\n  var lanes = suspendedLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    expirationTimes[index] = NoTimestamp;\n    lanes &= ~lane;\n  }\n}\nfunction markRootPinged(root, pingedLanes, eventTime) {\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n}\nfunction markRootFinished(root, remainingLanes) {\n  var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n  root.pendingLanes = remainingLanes; // Let's try everything again\n\n  root.suspendedLanes = NoLanes;\n  root.pingedLanes = NoLanes;\n  root.expiredLanes &= remainingLanes;\n  root.mutableReadLanes &= remainingLanes;\n  root.entangledLanes &= remainingLanes;\n  var entanglements = root.entanglements;\n  var eventTimes = root.eventTimes;\n  var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work\n\n  var lanes = noLongerPendingLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    entanglements[index] = NoLanes;\n    eventTimes[index] = NoTimestamp;\n    expirationTimes[index] = NoTimestamp;\n    lanes &= ~lane;\n  }\n}\nfunction markRootEntangled(root, entangledLanes) {\n  // In addition to entangling each of the given lanes with each other, we also\n  // have to consider _transitive_ entanglements. For each lane that is already\n  // entangled with *any* of the given lanes, that lane is now transitively\n  // entangled with *all* the given lanes.\n  //\n  // Translated: If C is entangled with A, then entangling A with B also\n  // entangles C with B.\n  //\n  // If this is hard to grasp, it might help to intentionally break this\n  // function and look at the tests that fail in ReactTransition-test.js. Try\n  // commenting out one of the conditions below.\n  var rootEntangledLanes = root.entangledLanes |= entangledLanes;\n  var entanglements = root.entanglements;\n  var lanes = rootEntangledLanes;\n\n  while (lanes) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n\n    if ( // Is this one of the newly entangled lanes?\n    lane & entangledLanes | // Is this lane transitively entangled with the newly entangled lanes?\n    entanglements[index] & entangledLanes) {\n      entanglements[index] |= entangledLanes;\n    }\n\n    lanes &= ~lane;\n  }\n}\nfunction getBumpedLaneForHydration(root, renderLanes) {\n  var renderLane = getHighestPriorityLane(renderLanes);\n  var lane;\n\n  switch (renderLane) {\n    case InputContinuousLane:\n      lane = InputContinuousHydrationLane;\n      break;\n\n    case DefaultLane:\n      lane = DefaultHydrationLane;\n      break;\n\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      lane = TransitionHydrationLane;\n      break;\n\n    case IdleLane:\n      lane = IdleHydrationLane;\n      break;\n\n    default:\n      // Everything else is already either a hydration lane, or shouldn't\n      // be retried at a hydration lane.\n      lane = NoLane;\n      break;\n  } // Check if the lane we chose is suspended. If so, that indicates that we\n  // already attempted and failed to hydrate at that level. Also check if we're\n  // already rendering that lane, which is rare but could happen.\n\n\n  if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\n    // Give up trying to hydrate and fall back to client render.\n    return NoLane;\n  }\n\n  return lane;\n}\nfunction addFiberToLanesMap(root, fiber, lanes) {\n\n  if (!isDevToolsPresent) {\n    return;\n  }\n\n  var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n\n  while (lanes > 0) {\n    var index = laneToIndex(lanes);\n    var lane = 1 << index;\n    var updaters = pendingUpdatersLaneMap[index];\n    updaters.add(fiber);\n    lanes &= ~lane;\n  }\n}\nfunction movePendingFibersToMemoized(root, lanes) {\n\n  if (!isDevToolsPresent) {\n    return;\n  }\n\n  var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n  var memoizedUpdaters = root.memoizedUpdaters;\n\n  while (lanes > 0) {\n    var index = laneToIndex(lanes);\n    var lane = 1 << index;\n    var updaters = pendingUpdatersLaneMap[index];\n\n    if (updaters.size > 0) {\n      updaters.forEach(function (fiber) {\n        var alternate = fiber.alternate;\n\n        if (alternate === null || !memoizedUpdaters.has(alternate)) {\n          memoizedUpdaters.add(fiber);\n        }\n      });\n      updaters.clear();\n    }\n\n    lanes &= ~lane;\n  }\n}\nfunction getTransitionsForLanes(root, lanes) {\n  {\n    return null;\n  }\n}\n\nvar DiscreteEventPriority = SyncLane;\nvar ContinuousEventPriority = InputContinuousLane;\nvar DefaultEventPriority = DefaultLane;\nvar IdleEventPriority = IdleLane;\nvar currentUpdatePriority = NoLane;\nfunction getCurrentUpdatePriority() {\n  return currentUpdatePriority;\n}\nfunction setCurrentUpdatePriority(newPriority) {\n  currentUpdatePriority = newPriority;\n}\nfunction runWithPriority(priority, fn) {\n  var previousPriority = currentUpdatePriority;\n\n  try {\n    currentUpdatePriority = priority;\n    return fn();\n  } finally {\n    currentUpdatePriority = previousPriority;\n  }\n}\nfunction higherEventPriority(a, b) {\n  return a !== 0 && a < b ? a : b;\n}\nfunction lowerEventPriority(a, b) {\n  return a === 0 || a > b ? a : b;\n}\nfunction isHigherEventPriority(a, b) {\n  return a !== 0 && a < b;\n}\nfunction lanesToEventPriority(lanes) {\n  var lane = getHighestPriorityLane(lanes);\n\n  if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\n    return DiscreteEventPriority;\n  }\n\n  if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\n    return ContinuousEventPriority;\n  }\n\n  if (includesNonIdleWork(lane)) {\n    return DefaultEventPriority;\n  }\n\n  return IdleEventPriority;\n}\n\n// This is imported by the event replaying implementation in React DOM. It's\n// in a separate file to break a circular dependency between the renderer and\n// the reconciler.\nfunction isRootDehydrated(root) {\n  var currentState = root.current.memoizedState;\n  return currentState.isDehydrated;\n}\n\nvar _attemptSynchronousHydration;\n\nfunction setAttemptSynchronousHydration(fn) {\n  _attemptSynchronousHydration = fn;\n}\nfunction attemptSynchronousHydration(fiber) {\n  _attemptSynchronousHydration(fiber);\n}\nvar attemptContinuousHydration;\nfunction setAttemptContinuousHydration(fn) {\n  attemptContinuousHydration = fn;\n}\nvar attemptHydrationAtCurrentPriority;\nfunction setAttemptHydrationAtCurrentPriority(fn) {\n  attemptHydrationAtCurrentPriority = fn;\n}\nvar getCurrentUpdatePriority$1;\nfunction setGetCurrentUpdatePriority(fn) {\n  getCurrentUpdatePriority$1 = fn;\n}\nvar attemptHydrationAtPriority;\nfunction setAttemptHydrationAtPriority(fn) {\n  attemptHydrationAtPriority = fn;\n} // TODO: Upgrade this definition once we're on a newer version of Flow that\n// has this definition built-in.\n\nvar hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.\n\nvar queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.\n// if the last target was dehydrated.\n\nvar queuedFocus = null;\nvar queuedDrag = null;\nvar queuedMouse = null; // For pointer events there can be one latest event per pointerId.\n\nvar queuedPointers = new Map();\nvar queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.\n\nvar queuedExplicitHydrationTargets = [];\nvar discreteReplayableEvents = ['mousedown', 'mouseup', 'touchcancel', 'touchend', 'touchstart', 'auxclick', 'dblclick', 'pointercancel', 'pointerdown', 'pointerup', 'dragend', 'dragstart', 'drop', 'compositionend', 'compositionstart', 'keydown', 'keypress', 'keyup', 'input', 'textInput', // Intentionally camelCase\n'copy', 'cut', 'paste', 'click', 'change', 'contextmenu', 'reset', 'submit'];\nfunction isDiscreteEventThatRequiresHydration(eventType) {\n  return discreteReplayableEvents.indexOf(eventType) > -1;\n}\n\nfunction createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n  return {\n    blockedOn: blockedOn,\n    domEventName: domEventName,\n    eventSystemFlags: eventSystemFlags,\n    nativeEvent: nativeEvent,\n    targetContainers: [targetContainer]\n  };\n}\n\nfunction clearIfContinuousEvent(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case 'focusin':\n    case 'focusout':\n      queuedFocus = null;\n      break;\n\n    case 'dragenter':\n    case 'dragleave':\n      queuedDrag = null;\n      break;\n\n    case 'mouseover':\n    case 'mouseout':\n      queuedMouse = null;\n      break;\n\n    case 'pointerover':\n    case 'pointerout':\n      {\n        var pointerId = nativeEvent.pointerId;\n        queuedPointers.delete(pointerId);\n        break;\n      }\n\n    case 'gotpointercapture':\n    case 'lostpointercapture':\n      {\n        var _pointerId = nativeEvent.pointerId;\n        queuedPointerCaptures.delete(_pointerId);\n        break;\n      }\n  }\n}\n\nfunction accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n  if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {\n    var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);\n\n    if (blockedOn !== null) {\n      var _fiber2 = getInstanceFromNode(blockedOn);\n\n      if (_fiber2 !== null) {\n        // Attempt to increase the priority of this target.\n        attemptContinuousHydration(_fiber2);\n      }\n    }\n\n    return queuedEvent;\n  } // If we have already queued this exact event, then it's because\n  // the different event systems have different DOM event listeners.\n  // We can accumulate the flags, and the targetContainers, and\n  // store a single event to be replayed.\n\n\n  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;\n  var targetContainers = existingQueuedEvent.targetContainers;\n\n  if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) {\n    targetContainers.push(targetContainer);\n  }\n\n  return existingQueuedEvent;\n}\n\nfunction queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n  // These set relatedTarget to null because the replayed event will be treated as if we\n  // moved from outside the window (no target) onto the target once it hydrates.\n  // Instead of mutating we could clone the event.\n  switch (domEventName) {\n    case 'focusin':\n      {\n        var focusEvent = nativeEvent;\n        queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);\n        return true;\n      }\n\n    case 'dragenter':\n      {\n        var dragEvent = nativeEvent;\n        queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);\n        return true;\n      }\n\n    case 'mouseover':\n      {\n        var mouseEvent = nativeEvent;\n        queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);\n        return true;\n      }\n\n    case 'pointerover':\n      {\n        var pointerEvent = nativeEvent;\n        var pointerId = pointerEvent.pointerId;\n        queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));\n        return true;\n      }\n\n    case 'gotpointercapture':\n      {\n        var _pointerEvent = nativeEvent;\n        var _pointerId2 = _pointerEvent.pointerId;\n        queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));\n        return true;\n      }\n  }\n\n  return false;\n} // Check if this target is unblocked. Returns true if it's unblocked.\n\nfunction attemptExplicitHydrationTarget(queuedTarget) {\n  // TODO: This function shares a lot of logic with findInstanceBlockingEvent.\n  // Try to unify them. It's a bit tricky since it would require two return\n  // values.\n  var targetInst = getClosestInstanceFromNode(queuedTarget.target);\n\n  if (targetInst !== null) {\n    var nearestMounted = getNearestMountedFiber(targetInst);\n\n    if (nearestMounted !== null) {\n      var tag = nearestMounted.tag;\n\n      if (tag === SuspenseComponent) {\n        var instance = getSuspenseInstanceFromFiber(nearestMounted);\n\n        if (instance !== null) {\n          // We're blocked on hydrating this boundary.\n          // Increase its priority.\n          queuedTarget.blockedOn = instance;\n          attemptHydrationAtPriority(queuedTarget.priority, function () {\n            attemptHydrationAtCurrentPriority(nearestMounted);\n          });\n          return;\n        }\n      } else if (tag === HostRoot) {\n        var root = nearestMounted.stateNode;\n\n        if (isRootDehydrated(root)) {\n          queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of\n          // a root other than sync.\n\n          return;\n        }\n      }\n    }\n  }\n\n  queuedTarget.blockedOn = null;\n}\n\nfunction queueExplicitHydrationTarget(target) {\n  // TODO: This will read the priority if it's dispatched by the React\n  // event system but not native events. Should read window.event.type, like\n  // we do for updates (getCurrentEventPriority).\n  var updatePriority = getCurrentUpdatePriority$1();\n  var queuedTarget = {\n    blockedOn: null,\n    target: target,\n    priority: updatePriority\n  };\n  var i = 0;\n\n  for (; i < queuedExplicitHydrationTargets.length; i++) {\n    // Stop once we hit the first target with lower priority than\n    if (!isHigherEventPriority(updatePriority, queuedExplicitHydrationTargets[i].priority)) {\n      break;\n    }\n  }\n\n  queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);\n\n  if (i === 0) {\n    attemptExplicitHydrationTarget(queuedTarget);\n  }\n}\n\nfunction attemptReplayContinuousQueuedEvent(queuedEvent) {\n  if (queuedEvent.blockedOn !== null) {\n    return false;\n  }\n\n  var targetContainers = queuedEvent.targetContainers;\n\n  while (targetContainers.length > 0) {\n    var targetContainer = targetContainers[0];\n    var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);\n\n    if (nextBlockedOn === null) {\n      {\n        var nativeEvent = queuedEvent.nativeEvent;\n        var nativeEventClone = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n        setReplayingEvent(nativeEventClone);\n        nativeEvent.target.dispatchEvent(nativeEventClone);\n        resetReplayingEvent();\n      }\n    } else {\n      // We're still blocked. Try again later.\n      var _fiber3 = getInstanceFromNode(nextBlockedOn);\n\n      if (_fiber3 !== null) {\n        attemptContinuousHydration(_fiber3);\n      }\n\n      queuedEvent.blockedOn = nextBlockedOn;\n      return false;\n    } // This target container was successfully dispatched. Try the next.\n\n\n    targetContainers.shift();\n  }\n\n  return true;\n}\n\nfunction attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {\n  if (attemptReplayContinuousQueuedEvent(queuedEvent)) {\n    map.delete(key);\n  }\n}\n\nfunction replayUnblockedEvents() {\n  hasScheduledReplayAttempt = false;\n\n\n  if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {\n    queuedFocus = null;\n  }\n\n  if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {\n    queuedDrag = null;\n  }\n\n  if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {\n    queuedMouse = null;\n  }\n\n  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);\n  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);\n}\n\nfunction scheduleCallbackIfUnblocked(queuedEvent, unblocked) {\n  if (queuedEvent.blockedOn === unblocked) {\n    queuedEvent.blockedOn = null;\n\n    if (!hasScheduledReplayAttempt) {\n      hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are\n      // now unblocked. This first might not actually be unblocked yet.\n      // We could check it early to avoid scheduling an unnecessary callback.\n\n      Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);\n    }\n  }\n}\n\nfunction retryIfBlockedOn(unblocked) {\n  // Mark anything that was blocked on this as no longer blocked\n  // and eligible for a replay.\n  if (queuedDiscreteEvents.length > 0) {\n    scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's\n    // worth it because we expect very few discrete events to queue up and once\n    // we are actually fully unblocked it will be fast to replay them.\n\n    for (var i = 1; i < queuedDiscreteEvents.length; i++) {\n      var queuedEvent = queuedDiscreteEvents[i];\n\n      if (queuedEvent.blockedOn === unblocked) {\n        queuedEvent.blockedOn = null;\n      }\n    }\n  }\n\n  if (queuedFocus !== null) {\n    scheduleCallbackIfUnblocked(queuedFocus, unblocked);\n  }\n\n  if (queuedDrag !== null) {\n    scheduleCallbackIfUnblocked(queuedDrag, unblocked);\n  }\n\n  if (queuedMouse !== null) {\n    scheduleCallbackIfUnblocked(queuedMouse, unblocked);\n  }\n\n  var unblock = function (queuedEvent) {\n    return scheduleCallbackIfUnblocked(queuedEvent, unblocked);\n  };\n\n  queuedPointers.forEach(unblock);\n  queuedPointerCaptures.forEach(unblock);\n\n  for (var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++) {\n    var queuedTarget = queuedExplicitHydrationTargets[_i];\n\n    if (queuedTarget.blockedOn === unblocked) {\n      queuedTarget.blockedOn = null;\n    }\n  }\n\n  while (queuedExplicitHydrationTargets.length > 0) {\n    var nextExplicitTarget = queuedExplicitHydrationTargets[0];\n\n    if (nextExplicitTarget.blockedOn !== null) {\n      // We're still blocked.\n      break;\n    } else {\n      attemptExplicitHydrationTarget(nextExplicitTarget);\n\n      if (nextExplicitTarget.blockedOn === null) {\n        // We're unblocked.\n        queuedExplicitHydrationTargets.shift();\n      }\n    }\n  }\n}\n\nvar ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig; // TODO: can we stop exporting these?\n\nvar _enabled = true; // This is exported in FB builds for use by legacy FB layer infra.\n// We'd like to remove this but it's not clear if this is safe.\n\nfunction setEnabled(enabled) {\n  _enabled = !!enabled;\n}\nfunction isEnabled() {\n  return _enabled;\n}\nfunction createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {\n  var eventPriority = getEventPriority(domEventName);\n  var listenerWrapper;\n\n  switch (eventPriority) {\n    case DiscreteEventPriority:\n      listenerWrapper = dispatchDiscreteEvent;\n      break;\n\n    case ContinuousEventPriority:\n      listenerWrapper = dispatchContinuousEvent;\n      break;\n\n    case DefaultEventPriority:\n    default:\n      listenerWrapper = dispatchEvent;\n      break;\n  }\n\n  return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);\n}\n\nfunction dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n  var previousPriority = getCurrentUpdatePriority();\n  var prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = null;\n\n  try {\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n  }\n}\n\nfunction dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n  var previousPriority = getCurrentUpdatePriority();\n  var prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = null;\n\n  try {\n    setCurrentUpdatePriority(ContinuousEventPriority);\n    dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n  }\n}\n\nfunction dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n  if (!_enabled) {\n    return;\n  }\n\n  {\n    dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n  }\n}\n\nfunction dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n  var blockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n\n  if (blockedOn === null) {\n    dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);\n    clearIfContinuousEvent(domEventName, nativeEvent);\n    return;\n  }\n\n  if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {\n    nativeEvent.stopPropagation();\n    return;\n  } // We need to clear only if we didn't queue because\n  // queueing is accumulative.\n\n\n  clearIfContinuousEvent(domEventName, nativeEvent);\n\n  if (eventSystemFlags & IS_CAPTURE_PHASE && isDiscreteEventThatRequiresHydration(domEventName)) {\n    while (blockedOn !== null) {\n      var fiber = getInstanceFromNode(blockedOn);\n\n      if (fiber !== null) {\n        attemptSynchronousHydration(fiber);\n      }\n\n      var nextBlockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n\n      if (nextBlockedOn === null) {\n        dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);\n      }\n\n      if (nextBlockedOn === blockedOn) {\n        break;\n      }\n\n      blockedOn = nextBlockedOn;\n    }\n\n    if (blockedOn !== null) {\n      nativeEvent.stopPropagation();\n    }\n\n    return;\n  } // This is not replayable so we'll invoke it but without a target,\n  // in case the event system needs to trace it.\n\n\n  dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);\n}\n\nvar return_targetInst = null; // Returns a SuspenseInstance or Container if it's blocked.\n// The return_targetInst field above is conceptually part of the return value.\n\nfunction findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n  // TODO: Warn if _enabled is false.\n  return_targetInst = null;\n  var nativeEventTarget = getEventTarget(nativeEvent);\n  var targetInst = getClosestInstanceFromNode(nativeEventTarget);\n\n  if (targetInst !== null) {\n    var nearestMounted = getNearestMountedFiber(targetInst);\n\n    if (nearestMounted === null) {\n      // This tree has been unmounted already. Dispatch without a target.\n      targetInst = null;\n    } else {\n      var tag = nearestMounted.tag;\n\n      if (tag === SuspenseComponent) {\n        var instance = getSuspenseInstanceFromFiber(nearestMounted);\n\n        if (instance !== null) {\n          // Queue the event to be replayed later. Abort dispatching since we\n          // don't want this event dispatched twice through the event system.\n          // TODO: If this is the first discrete event in the queue. Schedule an increased\n          // priority for this boundary.\n          return instance;\n        } // This shouldn't happen, something went wrong but to avoid blocking\n        // the whole system, dispatch the event without a target.\n        // TODO: Warn.\n\n\n        targetInst = null;\n      } else if (tag === HostRoot) {\n        var root = nearestMounted.stateNode;\n\n        if (isRootDehydrated(root)) {\n          // If this happens during a replay something went wrong and it might block\n          // the whole system.\n          return getContainerFromFiber(nearestMounted);\n        }\n\n        targetInst = null;\n      } else if (nearestMounted !== targetInst) {\n        // If we get an event (ex: img onload) before committing that\n        // component's mount, ignore it for now (that is, treat it as if it was an\n        // event on a non-React tree). We might also consider queueing events and\n        // dispatching them after the mount.\n        targetInst = null;\n      }\n    }\n  }\n\n  return_targetInst = targetInst; // We're not blocked on anything.\n\n  return null;\n}\nfunction getEventPriority(domEventName) {\n  switch (domEventName) {\n    // Used by SimpleEventPlugin:\n    case 'cancel':\n    case 'click':\n    case 'close':\n    case 'contextmenu':\n    case 'copy':\n    case 'cut':\n    case 'auxclick':\n    case 'dblclick':\n    case 'dragend':\n    case 'dragstart':\n    case 'drop':\n    case 'focusin':\n    case 'focusout':\n    case 'input':\n    case 'invalid':\n    case 'keydown':\n    case 'keypress':\n    case 'keyup':\n    case 'mousedown':\n    case 'mouseup':\n    case 'paste':\n    case 'pause':\n    case 'play':\n    case 'pointercancel':\n    case 'pointerdown':\n    case 'pointerup':\n    case 'ratechange':\n    case 'reset':\n    case 'resize':\n    case 'seeked':\n    case 'submit':\n    case 'touchcancel':\n    case 'touchend':\n    case 'touchstart':\n    case 'volumechange': // Used by polyfills:\n    // eslint-disable-next-line no-fallthrough\n\n    case 'change':\n    case 'selectionchange':\n    case 'textInput':\n    case 'compositionstart':\n    case 'compositionend':\n    case 'compositionupdate': // Only enableCreateEventHandleAPI:\n    // eslint-disable-next-line no-fallthrough\n\n    case 'beforeblur':\n    case 'afterblur': // Not used by React but could be by user code:\n    // eslint-disable-next-line no-fallthrough\n\n    case 'beforeinput':\n    case 'blur':\n    case 'fullscreenchange':\n    case 'focus':\n    case 'hashchange':\n    case 'popstate':\n    case 'select':\n    case 'selectstart':\n      return DiscreteEventPriority;\n\n    case 'drag':\n    case 'dragenter':\n    case 'dragexit':\n    case 'dragleave':\n    case 'dragover':\n    case 'mousemove':\n    case 'mouseout':\n    case 'mouseover':\n    case 'pointermove':\n    case 'pointerout':\n    case 'pointerover':\n    case 'scroll':\n    case 'toggle':\n    case 'touchmove':\n    case 'wheel': // Not used by React but could be by user code:\n    // eslint-disable-next-line no-fallthrough\n\n    case 'mouseenter':\n    case 'mouseleave':\n    case 'pointerenter':\n    case 'pointerleave':\n      return ContinuousEventPriority;\n\n    case 'message':\n      {\n        // We might be in the Scheduler callback.\n        // Eventually this mechanism will be replaced by a check\n        // of the current priority on the native scheduler.\n        var schedulerPriority = getCurrentPriorityLevel();\n\n        switch (schedulerPriority) {\n          case ImmediatePriority:\n            return DiscreteEventPriority;\n\n          case UserBlockingPriority:\n            return ContinuousEventPriority;\n\n          case NormalPriority:\n          case LowPriority:\n            // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.\n            return DefaultEventPriority;\n\n          case IdlePriority:\n            return IdleEventPriority;\n\n          default:\n            return DefaultEventPriority;\n        }\n      }\n\n    default:\n      return DefaultEventPriority;\n  }\n}\n\nfunction addEventBubbleListener(target, eventType, listener) {\n  target.addEventListener(eventType, listener, false);\n  return listener;\n}\nfunction addEventCaptureListener(target, eventType, listener) {\n  target.addEventListener(eventType, listener, true);\n  return listener;\n}\nfunction addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {\n  target.addEventListener(eventType, listener, {\n    capture: true,\n    passive: passive\n  });\n  return listener;\n}\nfunction addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {\n  target.addEventListener(eventType, listener, {\n    passive: passive\n  });\n  return listener;\n}\n\n/**\n * These variables store information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n *\n */\nvar root = null;\nvar startText = null;\nvar fallbackText = null;\nfunction initialize(nativeEventTarget) {\n  root = nativeEventTarget;\n  startText = getText();\n  return true;\n}\nfunction reset() {\n  root = null;\n  startText = null;\n  fallbackText = null;\n}\nfunction getData() {\n  if (fallbackText) {\n    return fallbackText;\n  }\n\n  var start;\n  var startValue = startText;\n  var startLength = startValue.length;\n  var end;\n  var endValue = getText();\n  var endLength = endValue.length;\n\n  for (start = 0; start < startLength; start++) {\n    if (startValue[start] !== endValue[start]) {\n      break;\n    }\n  }\n\n  var minEnd = startLength - start;\n\n  for (end = 1; end <= minEnd; end++) {\n    if (startValue[startLength - end] !== endValue[endLength - end]) {\n      break;\n    }\n  }\n\n  var sliceTail = end > 1 ? 1 - end : undefined;\n  fallbackText = endValue.slice(start, sliceTail);\n  return fallbackText;\n}\nfunction getText() {\n  if ('value' in root) {\n    return root.value;\n  }\n\n  return root.textContent;\n}\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  } // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)\n  // report Enter as charCode 10 when ctrl is pressed.\n\n\n  if (charCode === 10) {\n    charCode = 13;\n  } // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n\n\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nfunction functionThatReturnsTrue() {\n  return true;\n}\n\nfunction functionThatReturnsFalse() {\n  return false;\n} // This is intentionally a factory so that we have different returned constructors.\n// If we had a single constructor, it would be megamorphic and engines would deopt.\n\n\nfunction createSyntheticEvent(Interface) {\n  /**\n   * Synthetic events are dispatched by event plugins, typically in response to a\n   * top-level event delegation handler.\n   *\n   * These systems should generally use pooling to reduce the frequency of garbage\n   * collection. The system should check `isPersistent` to determine whether the\n   * event should be released into the pool after being dispatched. Users that\n   * need a persisted event should invoke `persist`.\n   *\n   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n   * normalizing browser quirks. Subclasses do not necessarily have to implement a\n   * DOM interface; custom application-specific events can also subclass this.\n   */\n  function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {\n    this._reactName = reactName;\n    this._targetInst = targetInst;\n    this.type = reactEventType;\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEventTarget;\n    this.currentTarget = null;\n\n    for (var _propName in Interface) {\n      if (!Interface.hasOwnProperty(_propName)) {\n        continue;\n      }\n\n      var normalize = Interface[_propName];\n\n      if (normalize) {\n        this[_propName] = normalize(nativeEvent);\n      } else {\n        this[_propName] = nativeEvent[_propName];\n      }\n    }\n\n    var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n\n    if (defaultPrevented) {\n      this.isDefaultPrevented = functionThatReturnsTrue;\n    } else {\n      this.isDefaultPrevented = functionThatReturnsFalse;\n    }\n\n    this.isPropagationStopped = functionThatReturnsFalse;\n    return this;\n  }\n\n  assign(SyntheticBaseEvent.prototype, {\n    preventDefault: function () {\n      this.defaultPrevented = true;\n      var event = this.nativeEvent;\n\n      if (!event) {\n        return;\n      }\n\n      if (event.preventDefault) {\n        event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE\n      } else if (typeof event.returnValue !== 'unknown') {\n        event.returnValue = false;\n      }\n\n      this.isDefaultPrevented = functionThatReturnsTrue;\n    },\n    stopPropagation: function () {\n      var event = this.nativeEvent;\n\n      if (!event) {\n        return;\n      }\n\n      if (event.stopPropagation) {\n        event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE\n      } else if (typeof event.cancelBubble !== 'unknown') {\n        // The ChangeEventPlugin registers a \"propertychange\" event for\n        // IE. This event does not support bubbling or cancelling, and\n        // any references to cancelBubble throw \"Member not found\".  A\n        // typeof check of \"unknown\" circumvents this issue (and is also\n        // IE specific).\n        event.cancelBubble = true;\n      }\n\n      this.isPropagationStopped = functionThatReturnsTrue;\n    },\n\n    /**\n     * We release all dispatched `SyntheticEvent`s after each event loop, adding\n     * them back into the pool. This allows a way to hold onto a reference that\n     * won't be added back into the pool.\n     */\n    persist: function () {// Modern event system doesn't use pooling.\n    },\n\n    /**\n     * Checks if this event should be released back into the pool.\n     *\n     * @return {boolean} True if this should not be released, false otherwise.\n     */\n    isPersistent: functionThatReturnsTrue\n  });\n  return SyntheticBaseEvent;\n}\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\n\nvar EventInterface = {\n  eventPhase: 0,\n  bubbles: 0,\n  cancelable: 0,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: 0,\n  isTrusted: 0\n};\nvar SyntheticEvent = createSyntheticEvent(EventInterface);\n\nvar UIEventInterface = assign({}, EventInterface, {\n  view: 0,\n  detail: 0\n});\n\nvar SyntheticUIEvent = createSyntheticEvent(UIEventInterface);\nvar lastMovementX;\nvar lastMovementY;\nvar lastMouseEvent;\n\nfunction updateMouseMovementPolyfillState(event) {\n  if (event !== lastMouseEvent) {\n    if (lastMouseEvent && event.type === 'mousemove') {\n      lastMovementX = event.screenX - lastMouseEvent.screenX;\n      lastMovementY = event.screenY - lastMouseEvent.screenY;\n    } else {\n      lastMovementX = 0;\n      lastMovementY = 0;\n    }\n\n    lastMouseEvent = event;\n  }\n}\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\n\nvar MouseEventInterface = assign({}, UIEventInterface, {\n  screenX: 0,\n  screenY: 0,\n  clientX: 0,\n  clientY: 0,\n  pageX: 0,\n  pageY: 0,\n  ctrlKey: 0,\n  shiftKey: 0,\n  altKey: 0,\n  metaKey: 0,\n  getModifierState: getEventModifierState,\n  button: 0,\n  buttons: 0,\n  relatedTarget: function (event) {\n    if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;\n    return event.relatedTarget;\n  },\n  movementX: function (event) {\n    if ('movementX' in event) {\n      return event.movementX;\n    }\n\n    updateMouseMovementPolyfillState(event);\n    return lastMovementX;\n  },\n  movementY: function (event) {\n    if ('movementY' in event) {\n      return event.movementY;\n    } // Don't need to call updateMouseMovementPolyfillState() here\n    // because it's guaranteed to have already run when movementX\n    // was copied.\n\n\n    return lastMovementY;\n  }\n});\n\nvar SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\nvar DragEventInterface = assign({}, MouseEventInterface, {\n  dataTransfer: 0\n});\n\nvar SyntheticDragEvent = createSyntheticEvent(DragEventInterface);\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\nvar FocusEventInterface = assign({}, UIEventInterface, {\n  relatedTarget: 0\n});\n\nvar SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);\n/**\n * @interface Event\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n */\n\nvar AnimationEventInterface = assign({}, EventInterface, {\n  animationName: 0,\n  elapsedTime: 0,\n  pseudoElement: 0\n});\n\nvar SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\n\nvar ClipboardEventInterface = assign({}, EventInterface, {\n  clipboardData: function (event) {\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n  }\n});\n\nvar SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\n\nvar CompositionEventInterface = assign({}, EventInterface, {\n  data: 0\n});\n\nvar SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\n// Happens to share the same list for now.\n\nvar SyntheticInputEvent = SyntheticCompositionEvent;\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\n\nvar normalizeKey = {\n  Esc: 'Escape',\n  Spacebar: ' ',\n  Left: 'ArrowLeft',\n  Up: 'ArrowUp',\n  Right: 'ArrowRight',\n  Down: 'ArrowDown',\n  Del: 'Delete',\n  Win: 'OS',\n  Menu: 'ContextMenu',\n  Apps: 'ContextMenu',\n  Scroll: 'ScrollLock',\n  MozPrintableKey: 'Unidentified'\n};\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\n\nvar translateToKey = {\n  '8': 'Backspace',\n  '9': 'Tab',\n  '12': 'Clear',\n  '13': 'Enter',\n  '16': 'Shift',\n  '17': 'Control',\n  '18': 'Alt',\n  '19': 'Pause',\n  '20': 'CapsLock',\n  '27': 'Escape',\n  '32': ' ',\n  '33': 'PageUp',\n  '34': 'PageDown',\n  '35': 'End',\n  '36': 'Home',\n  '37': 'ArrowLeft',\n  '38': 'ArrowUp',\n  '39': 'ArrowRight',\n  '40': 'ArrowDown',\n  '45': 'Insert',\n  '46': 'Delete',\n  '112': 'F1',\n  '113': 'F2',\n  '114': 'F3',\n  '115': 'F4',\n  '116': 'F5',\n  '117': 'F6',\n  '118': 'F7',\n  '119': 'F8',\n  '120': 'F9',\n  '121': 'F10',\n  '122': 'F11',\n  '123': 'F12',\n  '144': 'NumLock',\n  '145': 'ScrollLock',\n  '224': 'Meta'\n};\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\n\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  } // Browser does not implement `key`, polyfill as much of it as we can.\n\n\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n\n  return '';\n}\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\n\nvar modifierKeyToProp = {\n  Alt: 'altKey',\n  Control: 'ctrlKey',\n  Meta: 'metaKey',\n  Shift: 'shiftKey'\n}; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support\n// getModifierState. If getModifierState is not supported, we map it to a set of\n// modifier keys exposed by the event. In this case, Lock-keys are not supported.\n\nfunction modifierStateGetter(keyArg) {\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\n\nvar KeyboardEventInterface = assign({}, UIEventInterface, {\n  key: getEventKey,\n  code: 0,\n  location: 0,\n  ctrlKey: 0,\n  shiftKey: 0,\n  altKey: 0,\n  metaKey: 0,\n  repeat: 0,\n  locale: 0,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function (event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n\n    return 0;\n  },\n  keyCode: function (event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n\n    return 0;\n  },\n  which: function (event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n\n    return 0;\n  }\n});\n\nvar SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);\n/**\n * @interface PointerEvent\n * @see http://www.w3.org/TR/pointerevents/\n */\n\nvar PointerEventInterface = assign({}, MouseEventInterface, {\n  pointerId: 0,\n  width: 0,\n  height: 0,\n  pressure: 0,\n  tangentialPressure: 0,\n  tiltX: 0,\n  tiltY: 0,\n  twist: 0,\n  pointerType: 0,\n  isPrimary: 0\n});\n\nvar SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\n\nvar TouchEventInterface = assign({}, UIEventInterface, {\n  touches: 0,\n  targetTouches: 0,\n  changedTouches: 0,\n  altKey: 0,\n  metaKey: 0,\n  ctrlKey: 0,\n  shiftKey: 0,\n  getModifierState: getEventModifierState\n});\n\nvar SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n */\n\nvar TransitionEventInterface = assign({}, EventInterface, {\n  propertyName: 0,\n  elapsedTime: 0,\n  pseudoElement: 0\n});\n\nvar SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\nvar WheelEventInterface = assign({}, MouseEventInterface, {\n  deltaX: function (event) {\n    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n  },\n  deltaY: function (event) {\n    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n    'wheelDelta' in event ? -event.wheelDelta : 0;\n  },\n  deltaZ: 0,\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: 0\n});\n\nvar SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);\n\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\n\nvar START_KEYCODE = 229;\nvar canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;\nvar documentMode = null;\n\nif (canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n} // Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\n\n\nvar canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\n\nvar useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\nvar SPACEBAR_CODE = 32;\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\nfunction registerEvents() {\n  registerTwoPhaseEvent('onBeforeInput', ['compositionend', 'keypress', 'textInput', 'paste']);\n  registerTwoPhaseEvent('onCompositionEnd', ['compositionend', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);\n  registerTwoPhaseEvent('onCompositionStart', ['compositionstart', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);\n  registerTwoPhaseEvent('onCompositionUpdate', ['compositionupdate', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);\n} // Track whether we've ever handled a keypress on the space key.\n\n\nvar hasSpaceKeypress = false;\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\n\nfunction isKeypressCommand(nativeEvent) {\n  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n}\n/**\n * Translate native top level events into event types.\n */\n\n\nfunction getCompositionEventType(domEventName) {\n  switch (domEventName) {\n    case 'compositionstart':\n      return 'onCompositionStart';\n\n    case 'compositionend':\n      return 'onCompositionEnd';\n\n    case 'compositionupdate':\n      return 'onCompositionUpdate';\n  }\n}\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n */\n\n\nfunction isFallbackCompositionStart(domEventName, nativeEvent) {\n  return domEventName === 'keydown' && nativeEvent.keyCode === START_KEYCODE;\n}\n/**\n * Does our fallback mode think that this event is the end of composition?\n */\n\n\nfunction isFallbackCompositionEnd(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case 'keyup':\n      // Command keys insert or clear IME input.\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n\n    case 'keydown':\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return nativeEvent.keyCode !== START_KEYCODE;\n\n    case 'keypress':\n    case 'mousedown':\n    case 'focusout':\n      // Events are not possible without cancelling IME.\n      return true;\n\n    default:\n      return false;\n  }\n}\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\n\n\nfunction getDataFromCustomEvent(nativeEvent) {\n  var detail = nativeEvent.detail;\n\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n\n  return null;\n}\n/**\n * Check if a composition event was triggered by Korean IME.\n * Our fallback mode does not work well with IE's Korean IME,\n * so just use native composition events when Korean IME is used.\n * Although CompositionEvent.locale property is deprecated,\n * it is available in IE, where our fallback mode is enabled.\n *\n * @param {object} nativeEvent\n * @return {boolean}\n */\n\n\nfunction isUsingKoreanIME(nativeEvent) {\n  return nativeEvent.locale === 'ko';\n} // Track the current IME composition status, if any.\n\n\nvar isComposing = false;\n/**\n * @return {?object} A SyntheticCompositionEvent.\n */\n\nfunction extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {\n  var eventType;\n  var fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(domEventName);\n  } else if (!isComposing) {\n    if (isFallbackCompositionStart(domEventName, nativeEvent)) {\n      eventType = 'onCompositionStart';\n    }\n  } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) {\n    eventType = 'onCompositionEnd';\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!isComposing && eventType === 'onCompositionStart') {\n      isComposing = initialize(nativeEventTarget);\n    } else if (eventType === 'onCompositionEnd') {\n      if (isComposing) {\n        fallbackData = getData();\n      }\n    }\n  }\n\n  var listeners = accumulateTwoPhaseListeners(targetInst, eventType);\n\n  if (listeners.length > 0) {\n    var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);\n    dispatchQueue.push({\n      event: event,\n      listeners: listeners\n    });\n\n    if (fallbackData) {\n      // Inject data generated from fallback path into the synthetic event.\n      // This matches the property of native CompositionEventInterface.\n      event.data = fallbackData;\n    } else {\n      var customData = getDataFromCustomEvent(nativeEvent);\n\n      if (customData !== null) {\n        event.data = customData;\n      }\n    }\n  }\n}\n\nfunction getNativeBeforeInputChars(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case 'compositionend':\n      return getDataFromCustomEvent(nativeEvent);\n\n    case 'keypress':\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      var which = nativeEvent.which;\n\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case 'textInput':\n      // Record the characters to be added to the DOM.\n      var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to ignore it.\n\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n */\n\n\nfunction getFallbackBeforeInputChars(domEventName, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  // If composition event is available, we extract a string only at\n  // compositionevent, otherwise extract it at fallback events.\n  if (isComposing) {\n    if (domEventName === 'compositionend' || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {\n      var chars = getData();\n      reset();\n      isComposing = false;\n      return chars;\n    }\n\n    return null;\n  }\n\n  switch (domEventName) {\n    case 'paste':\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n\n    case 'keypress':\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (!isKeypressCommand(nativeEvent)) {\n        // IE fires the `keypress` event when a user types an emoji via\n        // Touch keyboard of Windows.  In such a case, the `char` property\n        // holds an emoji character like `\\uD83D\\uDE0A`.  Because its length\n        // is 2, the property `which` does not represent an emoji correctly.\n        // In such a case, we directly return the `char` property instead of\n        // using `which`.\n        if (nativeEvent.char && nativeEvent.char.length > 1) {\n          return nativeEvent.char;\n        } else if (nativeEvent.which) {\n          return String.fromCharCode(nativeEvent.which);\n        }\n      }\n\n      return null;\n\n    case 'compositionend':\n      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;\n\n    default:\n      return null;\n  }\n}\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @return {?object} A SyntheticInputEvent.\n */\n\n\nfunction extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {\n  var chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(domEventName, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(domEventName, nativeEvent);\n  } // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n\n\n  if (!chars) {\n    return null;\n  }\n\n  var listeners = accumulateTwoPhaseListeners(targetInst, 'onBeforeInput');\n\n  if (listeners.length > 0) {\n    var event = new SyntheticInputEvent('onBeforeInput', 'beforeinput', null, nativeEvent, nativeEventTarget);\n    dispatchQueue.push({\n      event: event,\n      listeners: listeners\n    });\n    event.data = chars;\n  }\n}\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\n\n\nfunction extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {\n  extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);\n  extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);\n}\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\nvar supportedInputTypes = {\n  color: true,\n  date: true,\n  datetime: true,\n  'datetime-local': true,\n  email: true,\n  month: true,\n  number: true,\n  password: true,\n  range: true,\n  search: true,\n  tel: true,\n  text: true,\n  time: true,\n  url: true,\n  week: true\n};\n\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\n  if (nodeName === 'input') {\n    return !!supportedInputTypes[elem.type];\n  }\n\n  if (nodeName === 'textarea') {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\n\nfunction isEventSupported(eventNameSuffix) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = (eventName in document);\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  return isSupported;\n}\n\nfunction registerEvents$1() {\n  registerTwoPhaseEvent('onChange', ['change', 'click', 'focusin', 'focusout', 'input', 'keydown', 'keyup', 'selectionchange']);\n}\n\nfunction createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {\n  // Flag this event loop as needing state restore.\n  enqueueStateRestore(target);\n  var listeners = accumulateTwoPhaseListeners(inst, 'onChange');\n\n  if (listeners.length > 0) {\n    var event = new SyntheticEvent('onChange', 'change', null, nativeEvent, target);\n    dispatchQueue.push({\n      event: event,\n      listeners: listeners\n    });\n  }\n}\n/**\n * For IE shims\n */\n\n\nvar activeElement = null;\nvar activeElementInst = null;\n/**\n * SECTION: handle `change` event\n */\n\nfunction shouldUseChangeEvent(elem) {\n  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var dispatchQueue = [];\n  createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n\n  batchedUpdates(runEventInBatch, dispatchQueue);\n}\n\nfunction runEventInBatch(dispatchQueue) {\n  processDispatchQueue(dispatchQueue, 0);\n}\n\nfunction getInstIfValueChanged(targetInst) {\n  var targetNode = getNodeFromInstance(targetInst);\n\n  if (updateValueIfChanged(targetNode)) {\n    return targetInst;\n  }\n}\n\nfunction getTargetInstForChangeEvent(domEventName, targetInst) {\n  if (domEventName === 'change') {\n    return targetInst;\n  }\n}\n/**\n * SECTION: handle `input` event\n */\n\n\nvar isInputEventSupported = false;\n\nif (canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events.\n  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);\n}\n/**\n * (For IE <=9) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\n\n\nfunction startWatchingForValueChange(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\n}\n/**\n * (For IE <=9) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\n\n\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\n  activeElement = null;\n  activeElementInst = null;\n}\n/**\n * (For IE <=9) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\n\n\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n\n  if (getInstIfValueChanged(activeElementInst)) {\n    manualDispatchChangeEvent(nativeEvent);\n  }\n}\n\nfunction handleEventsForInputEventPolyfill(domEventName, target, targetInst) {\n  if (domEventName === 'focusin') {\n    // In IE9, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(target, targetInst);\n  } else if (domEventName === 'focusout') {\n    stopWatchingForValueChange();\n  }\n} // For IE8 and IE9.\n\n\nfunction getTargetInstForInputEventPolyfill(domEventName, targetInst) {\n  if (domEventName === 'selectionchange' || domEventName === 'keyup' || domEventName === 'keydown') {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    return getInstIfValueChanged(activeElementInst);\n  }\n}\n/**\n * SECTION: handle `click` event\n */\n\n\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  var nodeName = elem.nodeName;\n  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n}\n\nfunction getTargetInstForClickEvent(domEventName, targetInst) {\n  if (domEventName === 'click') {\n    return getInstIfValueChanged(targetInst);\n  }\n}\n\nfunction getTargetInstForInputOrChangeEvent(domEventName, targetInst) {\n  if (domEventName === 'input' || domEventName === 'change') {\n    return getInstIfValueChanged(targetInst);\n  }\n}\n\nfunction handleControlledInputBlur(node) {\n  var state = node._wrapperState;\n\n  if (!state || !state.controlled || node.type !== 'number') {\n    return;\n  }\n\n  {\n    // If controlled, assign the value attribute to the current value on blur\n    setDefaultValue(node, 'number', node.value);\n  }\n}\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\n\n\nfunction extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {\n  var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;\n  var getTargetInstFunc, handleEventFunc;\n\n  if (shouldUseChangeEvent(targetNode)) {\n    getTargetInstFunc = getTargetInstForChangeEvent;\n  } else if (isTextInputElement(targetNode)) {\n    if (isInputEventSupported) {\n      getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n    } else {\n      getTargetInstFunc = getTargetInstForInputEventPolyfill;\n      handleEventFunc = handleEventsForInputEventPolyfill;\n    }\n  } else if (shouldUseClickEvent(targetNode)) {\n    getTargetInstFunc = getTargetInstForClickEvent;\n  }\n\n  if (getTargetInstFunc) {\n    var inst = getTargetInstFunc(domEventName, targetInst);\n\n    if (inst) {\n      createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);\n      return;\n    }\n  }\n\n  if (handleEventFunc) {\n    handleEventFunc(domEventName, targetNode, targetInst);\n  } // When blurring, set the value attribute for number inputs\n\n\n  if (domEventName === 'focusout') {\n    handleControlledInputBlur(targetNode);\n  }\n}\n\nfunction registerEvents$2() {\n  registerDirectEvent('onMouseEnter', ['mouseout', 'mouseover']);\n  registerDirectEvent('onMouseLeave', ['mouseout', 'mouseover']);\n  registerDirectEvent('onPointerEnter', ['pointerout', 'pointerover']);\n  registerDirectEvent('onPointerLeave', ['pointerout', 'pointerover']);\n}\n/**\n * For almost every interaction we care about, there will be both a top-level\n * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n * we do not extract duplicate events. However, moving the mouse into the\n * browser from outside will not fire a `mouseout` event. In this case, we use\n * the `mouseover` top-level event.\n */\n\n\nfunction extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {\n  var isOverEvent = domEventName === 'mouseover' || domEventName === 'pointerover';\n  var isOutEvent = domEventName === 'mouseout' || domEventName === 'pointerout';\n\n  if (isOverEvent && !isReplayingEvent(nativeEvent)) {\n    // If this is an over event with a target, we might have already dispatched\n    // the event in the out event of the other target. If this is replayed,\n    // then it's because we couldn't dispatch against this target previously\n    // so we have to do it now instead.\n    var related = nativeEvent.relatedTarget || nativeEvent.fromElement;\n\n    if (related) {\n      // If the related node is managed by React, we can assume that we have\n      // already dispatched the corresponding events during its mouseout.\n      if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) {\n        return;\n      }\n    }\n  }\n\n  if (!isOutEvent && !isOverEvent) {\n    // Must not be a mouse or pointer in or out - ignoring.\n    return;\n  }\n\n  var win; // TODO: why is this nullable in the types but we read from it?\n\n  if (nativeEventTarget.window === nativeEventTarget) {\n    // `nativeEventTarget` is probably a window object.\n    win = nativeEventTarget;\n  } else {\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    var doc = nativeEventTarget.ownerDocument;\n\n    if (doc) {\n      win = doc.defaultView || doc.parentWindow;\n    } else {\n      win = window;\n    }\n  }\n\n  var from;\n  var to;\n\n  if (isOutEvent) {\n    var _related = nativeEvent.relatedTarget || nativeEvent.toElement;\n\n    from = targetInst;\n    to = _related ? getClosestInstanceFromNode(_related) : null;\n\n    if (to !== null) {\n      var nearestMounted = getNearestMountedFiber(to);\n\n      if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) {\n        to = null;\n      }\n    }\n  } else {\n    // Moving to a node from outside the window.\n    from = null;\n    to = targetInst;\n  }\n\n  if (from === to) {\n    // Nothing pertains to our managed components.\n    return;\n  }\n\n  var SyntheticEventCtor = SyntheticMouseEvent;\n  var leaveEventType = 'onMouseLeave';\n  var enterEventType = 'onMouseEnter';\n  var eventTypePrefix = 'mouse';\n\n  if (domEventName === 'pointerout' || domEventName === 'pointerover') {\n    SyntheticEventCtor = SyntheticPointerEvent;\n    leaveEventType = 'onPointerLeave';\n    enterEventType = 'onPointerEnter';\n    eventTypePrefix = 'pointer';\n  }\n\n  var fromNode = from == null ? win : getNodeFromInstance(from);\n  var toNode = to == null ? win : getNodeFromInstance(to);\n  var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + 'leave', from, nativeEvent, nativeEventTarget);\n  leave.target = fromNode;\n  leave.relatedTarget = toNode;\n  var enter = null; // We should only process this nativeEvent if we are processing\n  // the first ancestor. Next time, we will ignore the event.\n\n  var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);\n\n  if (nativeTargetInst === targetInst) {\n    var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + 'enter', to, nativeEvent, nativeEventTarget);\n    enterEvent.target = toNode;\n    enterEvent.relatedTarget = fromNode;\n    enter = enterEvent;\n  }\n\n  accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\n\nfunction shallowEqual(objA, objB) {\n  if (objectIs(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n\n  for (var i = 0; i < keysA.length; i++) {\n    var currentKey = keysA[i];\n\n    if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\n\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n\n  return node;\n}\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\n\n\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n\n    node = node.parentNode;\n  }\n}\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\n\n\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === TEXT_NODE) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\n/**\n * @param {DOMElement} outerNode\n * @return {?object}\n */\n\nfunction getOffsets(outerNode) {\n  var ownerDocument = outerNode.ownerDocument;\n  var win = ownerDocument && ownerDocument.defaultView || window;\n  var selection = win.getSelection && win.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode,\n      anchorOffset = selection.anchorOffset,\n      focusNode = selection.focusNode,\n      focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be \"anonymous divs\", e.g. the\n  // up/down buttons on an <input type=\"number\">. Anonymous divs do not seem to\n  // expose properties, triggering a \"Permission denied error\" if any of its\n  // properties are accessed. The only seemingly possible way to avoid erroring\n  // is to access a property that typically works for non-anonymous divs and\n  // catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n\n  try {\n    /* eslint-disable no-unused-expressions */\n    anchorNode.nodeType;\n    focusNode.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);\n}\n/**\n * Returns {start, end} where `start` is the character/codepoint index of\n * (anchorNode, anchorOffset) within the textContent of `outerNode`, and\n * `end` is the index of (focusNode, focusOffset).\n *\n * Returns null if you pass in garbage input but we should probably just crash.\n *\n * Exported only for testing.\n */\n\nfunction getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {\n  var length = 0;\n  var start = -1;\n  var end = -1;\n  var indexWithinAnchor = 0;\n  var indexWithinFocus = 0;\n  var node = outerNode;\n  var parentNode = null;\n\n  outer: while (true) {\n    var next = null;\n\n    while (true) {\n      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {\n        start = length + anchorOffset;\n      }\n\n      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {\n        end = length + focusOffset;\n      }\n\n      if (node.nodeType === TEXT_NODE) {\n        length += node.nodeValue.length;\n      }\n\n      if ((next = node.firstChild) === null) {\n        break;\n      } // Moving from `node` to its first child `next`.\n\n\n      parentNode = node;\n      node = next;\n    }\n\n    while (true) {\n      if (node === outerNode) {\n        // If `outerNode` has children, this is always the second time visiting\n        // it. If it has no children, this is still the first loop, and the only\n        // valid selection is anchorNode and focusNode both equal to this node\n        // and both offsets 0, in which case we will have handled above.\n        break outer;\n      }\n\n      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {\n        start = length;\n      }\n\n      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {\n        end = length;\n      }\n\n      if ((next = node.nextSibling) !== null) {\n        break;\n      }\n\n      node = parentNode;\n      parentNode = node.parentNode;\n    } // Moving from `node` to its next sibling `next`.\n\n\n    node = next;\n  }\n\n  if (start === -1 || end === -1) {\n    // This should never happen. (Would happen if the anchor/focus nodes aren't\n    // actually inside the passed-in node.)\n    return null;\n  }\n\n  return {\n    start: start,\n    end: end\n  };\n}\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programmatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\n\nfunction setOffsets(node, offsets) {\n  var doc = node.ownerDocument || document;\n  var win = doc && doc.defaultView || window; // Edge fails with \"Object expected\" in some scenarios.\n  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,\n  // fails when pasting 100+ items)\n\n  if (!win.getSelection) {\n    return;\n  }\n\n  var selection = win.getSelection();\n  var length = node.textContent.length;\n  var start = Math.min(offsets.start, length);\n  var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {\n      return;\n    }\n\n    var range = doc.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nfunction isTextNode(node) {\n  return node && node.nodeType === TEXT_NODE;\n}\n\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nfunction isInDocument(node) {\n  return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);\n}\n\nfunction isSameOriginFrame(iframe) {\n  try {\n    // Accessing the contentDocument of a HTMLIframeElement can cause the browser\n    // to throw, e.g. if it has a cross-origin src attribute.\n    // Safari will show an error in the console when the access results in \"Blocked a frame with origin\". e.g:\n    // iframe.contentDocument.defaultView;\n    // A safety way is to access one of the cross origin properties: Window or Location\n    // Which might result in \"SecurityError\" DOM Exception and it is compatible to Safari.\n    // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl\n    return typeof iframe.contentWindow.location.href === 'string';\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction getActiveElementDeep() {\n  var win = window;\n  var element = getActiveElement();\n\n  while (element instanceof win.HTMLIFrameElement) {\n    if (isSameOriginFrame(element)) {\n      win = element.contentWindow;\n    } else {\n      return element;\n    }\n\n    element = getActiveElement(win.document);\n  }\n\n  return element;\n}\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\n\n/**\n * @hasSelectionCapabilities: we get the element types that support selection\n * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`\n * and `selectionEnd` rows.\n */\n\n\nfunction hasSelectionCapabilities(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');\n}\nfunction getSelectionInformation() {\n  var focusedElem = getActiveElementDeep();\n  return {\n    focusedElem: focusedElem,\n    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null\n  };\n}\n/**\n * @restoreSelection: If any selection information was potentially lost,\n * restore it. This is useful when performing operations that could remove dom\n * nodes and place them back in, resulting in focus being lost.\n */\n\nfunction restoreSelection(priorSelectionInformation) {\n  var curFocusedElem = getActiveElementDeep();\n  var priorFocusedElem = priorSelectionInformation.focusedElem;\n  var priorSelectionRange = priorSelectionInformation.selectionRange;\n\n  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n    if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {\n      setSelection(priorFocusedElem, priorSelectionRange);\n    } // Focusing a node can change the scroll position, which is undesirable\n\n\n    var ancestors = [];\n    var ancestor = priorFocusedElem;\n\n    while (ancestor = ancestor.parentNode) {\n      if (ancestor.nodeType === ELEMENT_NODE) {\n        ancestors.push({\n          element: ancestor,\n          left: ancestor.scrollLeft,\n          top: ancestor.scrollTop\n        });\n      }\n    }\n\n    if (typeof priorFocusedElem.focus === 'function') {\n      priorFocusedElem.focus();\n    }\n\n    for (var i = 0; i < ancestors.length; i++) {\n      var info = ancestors[i];\n      info.element.scrollLeft = info.left;\n      info.element.scrollTop = info.top;\n    }\n  }\n}\n/**\n * @getSelection: Gets the selection bounds of a focused textarea, input or\n * contentEditable node.\n * -@input: Look up selection bounds of this input\n * -@return {start: selectionStart, end: selectionEnd}\n */\n\nfunction getSelection(input) {\n  var selection;\n\n  if ('selectionStart' in input) {\n    // Modern browser with input or textarea.\n    selection = {\n      start: input.selectionStart,\n      end: input.selectionEnd\n    };\n  } else {\n    // Content editable or old IE textarea.\n    selection = getOffsets(input);\n  }\n\n  return selection || {\n    start: 0,\n    end: 0\n  };\n}\n/**\n * @setSelection: Sets the selection bounds of a textarea or input and focuses\n * the input.\n * -@input     Set selection bounds of this input or textarea\n * -@offsets   Object of same form that is returned from get*\n */\n\nfunction setSelection(input, offsets) {\n  var start = offsets.start;\n  var end = offsets.end;\n\n  if (end === undefined) {\n    end = start;\n  }\n\n  if ('selectionStart' in input) {\n    input.selectionStart = start;\n    input.selectionEnd = Math.min(end, input.value.length);\n  } else {\n    setOffsets(input, offsets);\n  }\n}\n\nvar skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nfunction registerEvents$3() {\n  registerTwoPhaseEvent('onSelect', ['focusout', 'contextmenu', 'dragend', 'focusin', 'keydown', 'keyup', 'mousedown', 'mouseup', 'selectionchange']);\n}\n\nvar activeElement$1 = null;\nvar activeElementInst$1 = null;\nvar lastSelection = null;\nvar mouseDown = false;\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n */\n\nfunction getSelection$1(node) {\n  if ('selectionStart' in node && hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else {\n    var win = node.ownerDocument && node.ownerDocument.defaultView || window;\n    var selection = win.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  }\n}\n/**\n * Get document associated with the event target.\n */\n\n\nfunction getEventTargetDocument(eventTarget) {\n  return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;\n}\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @param {object} nativeEventTarget\n * @return {?SyntheticEvent}\n */\n\n\nfunction constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  var doc = getEventTargetDocument(nativeEventTarget);\n\n  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {\n    return;\n  } // Only fire when selection has actually changed.\n\n\n  var currentSelection = getSelection$1(activeElement$1);\n\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n    var listeners = accumulateTwoPhaseListeners(activeElementInst$1, 'onSelect');\n\n    if (listeners.length > 0) {\n      var event = new SyntheticEvent('onSelect', 'select', null, nativeEvent, nativeEventTarget);\n      dispatchQueue.push({\n        event: event,\n        listeners: listeners\n      });\n      event.target = activeElement$1;\n    }\n  }\n}\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\n\n\nfunction extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {\n  var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;\n\n  switch (domEventName) {\n    // Track the input node that has focus.\n    case 'focusin':\n      if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n        activeElement$1 = targetNode;\n        activeElementInst$1 = targetInst;\n        lastSelection = null;\n      }\n\n      break;\n\n    case 'focusout':\n      activeElement$1 = null;\n      activeElementInst$1 = null;\n      lastSelection = null;\n      break;\n    // Don't fire the event while the user is dragging. This matches the\n    // semantics of the native select event.\n\n    case 'mousedown':\n      mouseDown = true;\n      break;\n\n    case 'contextmenu':\n    case 'mouseup':\n    case 'dragend':\n      mouseDown = false;\n      constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n      break;\n    // Chrome and IE fire non-standard event when selection is changed (and\n    // sometimes when it hasn't). IE's event fires out of order with respect\n    // to key and input events on deletion, so we discard it.\n    //\n    // Firefox doesn't support selectionchange, so check selection status\n    // after each key entry. The selection changes after keydown and before\n    // keyup, but we check on keydown as well in the case of holding down a\n    // key, when multiple keydown events are fired but only one keyup is.\n    // This is also our approach for IE handling, for the reason above.\n\n    case 'selectionchange':\n      if (skipSelectionChangeEvent) {\n        break;\n      }\n\n    // falls through\n\n    case 'keydown':\n    case 'keyup':\n      constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n  }\n}\n\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\n\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n  return prefixes;\n}\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\n\n\nvar vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n};\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\n\nvar prefixedEventNames = {};\n/**\n * Element to check for prefixes on.\n */\n\nvar style = {};\n/**\n * Bootstrap if a DOM exists.\n */\n\nif (canUseDOM) {\n  style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  } // Same as above\n\n\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\n\n\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  var prefixMap = vendorPrefixes[eventName];\n\n  for (var styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return prefixedEventNames[eventName] = prefixMap[styleProp];\n    }\n  }\n\n  return eventName;\n}\n\nvar ANIMATION_END = getVendorPrefixedEventName('animationend');\nvar ANIMATION_ITERATION = getVendorPrefixedEventName('animationiteration');\nvar ANIMATION_START = getVendorPrefixedEventName('animationstart');\nvar TRANSITION_END = getVendorPrefixedEventName('transitionend');\n\nvar topLevelEventsToReactNames = new Map(); // NOTE: Capitalization is important in this list!\n//\n// E.g. it needs \"pointerDown\", not \"pointerdown\".\n// This is because we derive both React name (\"onPointerDown\")\n// and DOM name (\"pointerdown\") from the same list.\n//\n// Exceptions that don't match this convention are listed separately.\n//\n// prettier-ignore\n\nvar simpleEventPluginEvents = ['abort', 'auxClick', 'cancel', 'canPlay', 'canPlayThrough', 'click', 'close', 'contextMenu', 'copy', 'cut', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'gotPointerCapture', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'lostPointerCapture', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'pointerCancel', 'pointerDown', 'pointerMove', 'pointerOut', 'pointerOver', 'pointerUp', 'progress', 'rateChange', 'reset', 'resize', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchStart', 'volumeChange', 'scroll', 'toggle', 'touchMove', 'waiting', 'wheel'];\n\nfunction registerSimpleEvent(domEventName, reactName) {\n  topLevelEventsToReactNames.set(domEventName, reactName);\n  registerTwoPhaseEvent(reactName, [domEventName]);\n}\n\nfunction registerSimpleEvents() {\n  for (var i = 0; i < simpleEventPluginEvents.length; i++) {\n    var eventName = simpleEventPluginEvents[i];\n    var domEventName = eventName.toLowerCase();\n    var capitalizedEvent = eventName[0].toUpperCase() + eventName.slice(1);\n    registerSimpleEvent(domEventName, 'on' + capitalizedEvent);\n  } // Special cases where event names don't match.\n\n\n  registerSimpleEvent(ANIMATION_END, 'onAnimationEnd');\n  registerSimpleEvent(ANIMATION_ITERATION, 'onAnimationIteration');\n  registerSimpleEvent(ANIMATION_START, 'onAnimationStart');\n  registerSimpleEvent('dblclick', 'onDoubleClick');\n  registerSimpleEvent('focusin', 'onFocus');\n  registerSimpleEvent('focusout', 'onBlur');\n  registerSimpleEvent(TRANSITION_END, 'onTransitionEnd');\n}\n\nfunction extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {\n  var reactName = topLevelEventsToReactNames.get(domEventName);\n\n  if (reactName === undefined) {\n    return;\n  }\n\n  var SyntheticEventCtor = SyntheticEvent;\n  var reactEventType = domEventName;\n\n  switch (domEventName) {\n    case 'keypress':\n      // Firefox creates a keypress event for function keys too. This removes\n      // the unwanted keypress events. Enter is however both printable and\n      // non-printable. One would expect Tab to be as well (but it isn't).\n      if (getEventCharCode(nativeEvent) === 0) {\n        return;\n      }\n\n    /* falls through */\n\n    case 'keydown':\n    case 'keyup':\n      SyntheticEventCtor = SyntheticKeyboardEvent;\n      break;\n\n    case 'focusin':\n      reactEventType = 'focus';\n      SyntheticEventCtor = SyntheticFocusEvent;\n      break;\n\n    case 'focusout':\n      reactEventType = 'blur';\n      SyntheticEventCtor = SyntheticFocusEvent;\n      break;\n\n    case 'beforeblur':\n    case 'afterblur':\n      SyntheticEventCtor = SyntheticFocusEvent;\n      break;\n\n    case 'click':\n      // Firefox creates a click event on right mouse clicks. This removes the\n      // unwanted click events.\n      if (nativeEvent.button === 2) {\n        return;\n      }\n\n    /* falls through */\n\n    case 'auxclick':\n    case 'dblclick':\n    case 'mousedown':\n    case 'mousemove':\n    case 'mouseup': // TODO: Disabled elements should not respond to mouse events\n\n    /* falls through */\n\n    case 'mouseout':\n    case 'mouseover':\n    case 'contextmenu':\n      SyntheticEventCtor = SyntheticMouseEvent;\n      break;\n\n    case 'drag':\n    case 'dragend':\n    case 'dragenter':\n    case 'dragexit':\n    case 'dragleave':\n    case 'dragover':\n    case 'dragstart':\n    case 'drop':\n      SyntheticEventCtor = SyntheticDragEvent;\n      break;\n\n    case 'touchcancel':\n    case 'touchend':\n    case 'touchmove':\n    case 'touchstart':\n      SyntheticEventCtor = SyntheticTouchEvent;\n      break;\n\n    case ANIMATION_END:\n    case ANIMATION_ITERATION:\n    case ANIMATION_START:\n      SyntheticEventCtor = SyntheticAnimationEvent;\n      break;\n\n    case TRANSITION_END:\n      SyntheticEventCtor = SyntheticTransitionEvent;\n      break;\n\n    case 'scroll':\n      SyntheticEventCtor = SyntheticUIEvent;\n      break;\n\n    case 'wheel':\n      SyntheticEventCtor = SyntheticWheelEvent;\n      break;\n\n    case 'copy':\n    case 'cut':\n    case 'paste':\n      SyntheticEventCtor = SyntheticClipboardEvent;\n      break;\n\n    case 'gotpointercapture':\n    case 'lostpointercapture':\n    case 'pointercancel':\n    case 'pointerdown':\n    case 'pointermove':\n    case 'pointerout':\n    case 'pointerover':\n    case 'pointerup':\n      SyntheticEventCtor = SyntheticPointerEvent;\n      break;\n  }\n\n  var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;\n\n  {\n    // Some events don't bubble in the browser.\n    // In the past, React has always bubbled them, but this can be surprising.\n    // We're going to try aligning closer to the browser behavior by not bubbling\n    // them in React either. We'll start by not bubbling onScroll, and then expand.\n    var accumulateTargetOnly = !inCapturePhase && // TODO: ideally, we'd eventually add all events from\n    // nonDelegatedEvents list in DOMPluginEventSystem.\n    // Then we can remove this special list.\n    // This is a breaking change that can wait until React 18.\n    domEventName === 'scroll';\n\n    var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);\n\n    if (_listeners.length > 0) {\n      // Intentionally create event lazily.\n      var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);\n\n      dispatchQueue.push({\n        event: _event,\n        listeners: _listeners\n      });\n    }\n  }\n}\n\n// TODO: remove top-level side effect.\nregisterSimpleEvents();\nregisterEvents$2();\nregisterEvents$1();\nregisterEvents$3();\nregisterEvents();\n\nfunction extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {\n  // TODO: we should remove the concept of a \"SimpleEventPlugin\".\n  // This is the basic functionality of the event system. All\n  // the other plugins are essentially polyfills. So the plugin\n  // should probably be inlined somewhere and have its logic\n  // be core the to event system. This would potentially allow\n  // us to ship builds of React without the polyfilled plugins below.\n  extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);\n  var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0; // We don't process these events unless we are in the\n  // event's native \"bubble\" phase, which means that we're\n  // not in the capture phase. That's because we emulate\n  // the capture phase here still. This is a trade-off,\n  // because in an ideal world we would not emulate and use\n  // the phases properly, like we do with the SimpleEvent\n  // plugin. However, the plugins below either expect\n  // emulation (EnterLeave) or use state localized to that\n  // plugin (BeforeInput, Change, Select). The state in\n  // these modules complicates things, as you'll essentially\n  // get the case where the capture phase event might change\n  // state, only for the following bubble event to come in\n  // later and not trigger anything as the state now\n  // invalidates the heuristics of the event plugin. We\n  // could alter all these plugins to work in such ways, but\n  // that might cause other unknown side-effects that we\n  // can't foresee right now.\n\n  if (shouldProcessPolyfillPlugins) {\n    extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);\n    extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);\n    extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);\n    extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);\n  }\n} // List of events that need to be individually attached to media elements.\n\n\nvar mediaEventTypes = ['abort', 'canplay', 'canplaythrough', 'durationchange', 'emptied', 'encrypted', 'ended', 'error', 'loadeddata', 'loadedmetadata', 'loadstart', 'pause', 'play', 'playing', 'progress', 'ratechange', 'resize', 'seeked', 'seeking', 'stalled', 'suspend', 'timeupdate', 'volumechange', 'waiting']; // We should not delegate these events to the container, but rather\n// set them on the actual target element itself. This is primarily\n// because these events do not consistently bubble in the DOM.\n\nvar nonDelegatedEvents = new Set(['cancel', 'close', 'invalid', 'load', 'scroll', 'toggle'].concat(mediaEventTypes));\n\nfunction executeDispatch(event, listener, currentTarget) {\n  var type = event.type || 'unknown-event';\n  event.currentTarget = currentTarget;\n  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n  event.currentTarget = null;\n}\n\nfunction processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {\n  var previousInstance;\n\n  if (inCapturePhase) {\n    for (var i = dispatchListeners.length - 1; i >= 0; i--) {\n      var _dispatchListeners$i = dispatchListeners[i],\n          instance = _dispatchListeners$i.instance,\n          currentTarget = _dispatchListeners$i.currentTarget,\n          listener = _dispatchListeners$i.listener;\n\n      if (instance !== previousInstance && event.isPropagationStopped()) {\n        return;\n      }\n\n      executeDispatch(event, listener, currentTarget);\n      previousInstance = instance;\n    }\n  } else {\n    for (var _i = 0; _i < dispatchListeners.length; _i++) {\n      var _dispatchListeners$_i = dispatchListeners[_i],\n          _instance = _dispatchListeners$_i.instance,\n          _currentTarget = _dispatchListeners$_i.currentTarget,\n          _listener = _dispatchListeners$_i.listener;\n\n      if (_instance !== previousInstance && event.isPropagationStopped()) {\n        return;\n      }\n\n      executeDispatch(event, _listener, _currentTarget);\n      previousInstance = _instance;\n    }\n  }\n}\n\nfunction processDispatchQueue(dispatchQueue, eventSystemFlags) {\n  var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;\n\n  for (var i = 0; i < dispatchQueue.length; i++) {\n    var _dispatchQueue$i = dispatchQueue[i],\n        event = _dispatchQueue$i.event,\n        listeners = _dispatchQueue$i.listeners;\n    processDispatchQueueItemsInOrder(event, listeners, inCapturePhase); //  event system doesn't use pooling.\n  } // This would be a good time to rethrow if any of the event handlers threw.\n\n\n  rethrowCaughtError();\n}\n\nfunction dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {\n  var nativeEventTarget = getEventTarget(nativeEvent);\n  var dispatchQueue = [];\n  extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);\n  processDispatchQueue(dispatchQueue, eventSystemFlags);\n}\n\nfunction listenToNonDelegatedEvent(domEventName, targetElement) {\n  {\n    if (!nonDelegatedEvents.has(domEventName)) {\n      error('Did not expect a listenToNonDelegatedEvent() call for \"%s\". ' + 'This is a bug in React. Please file an issue.', domEventName);\n    }\n  }\n\n  var isCapturePhaseListener = false;\n  var listenerSet = getEventListenerSet(targetElement);\n  var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);\n\n  if (!listenerSet.has(listenerSetKey)) {\n    addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);\n    listenerSet.add(listenerSetKey);\n  }\n}\nfunction listenToNativeEvent(domEventName, isCapturePhaseListener, target) {\n  {\n    if (nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener) {\n      error('Did not expect a listenToNativeEvent() call for \"%s\" in the bubble phase. ' + 'This is a bug in React. Please file an issue.', domEventName);\n    }\n  }\n\n  var eventSystemFlags = 0;\n\n  if (isCapturePhaseListener) {\n    eventSystemFlags |= IS_CAPTURE_PHASE;\n  }\n\n  addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);\n} // This is only used by createEventHandle when the\nvar listeningMarker = '_reactListening' + Math.random().toString(36).slice(2);\nfunction listenToAllSupportedEvents(rootContainerElement) {\n  if (!rootContainerElement[listeningMarker]) {\n    rootContainerElement[listeningMarker] = true;\n    allNativeEvents.forEach(function (domEventName) {\n      // We handle selectionchange separately because it\n      // doesn't bubble and needs to be on the document.\n      if (domEventName !== 'selectionchange') {\n        if (!nonDelegatedEvents.has(domEventName)) {\n          listenToNativeEvent(domEventName, false, rootContainerElement);\n        }\n\n        listenToNativeEvent(domEventName, true, rootContainerElement);\n      }\n    });\n    var ownerDocument = rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;\n\n    if (ownerDocument !== null) {\n      // The selectionchange event also needs deduplication\n      // but it is attached to the document.\n      if (!ownerDocument[listeningMarker]) {\n        ownerDocument[listeningMarker] = true;\n        listenToNativeEvent('selectionchange', false, ownerDocument);\n      }\n    }\n  }\n}\n\nfunction addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {\n  var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags); // If passive option is not supported, then the event will be\n  // active and not passive.\n\n  var isPassiveListener = undefined;\n\n  if (passiveBrowserEventsSupported) {\n    // Browsers introduced an intervention, making these events\n    // passive by default on document. React doesn't bind them\n    // to document anymore, but changing this now would undo\n    // the performance wins from the change. So we emulate\n    // the existing behavior manually on the roots now.\n    // https://github.com/facebook/react/issues/19651\n    if (domEventName === 'touchstart' || domEventName === 'touchmove' || domEventName === 'wheel') {\n      isPassiveListener = true;\n    }\n  }\n\n  targetContainer =  targetContainer;\n  var unsubscribeListener; // When legacyFBSupport is enabled, it's for when we\n\n\n  if (isCapturePhaseListener) {\n    if (isPassiveListener !== undefined) {\n      unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);\n    } else {\n      unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);\n    }\n  } else {\n    if (isPassiveListener !== undefined) {\n      unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);\n    } else {\n      unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);\n    }\n  }\n}\n\nfunction isMatchingRootContainer(grandContainer, targetContainer) {\n  return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;\n}\n\nfunction dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {\n  var ancestorInst = targetInst;\n\n  if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {\n    var targetContainerNode = targetContainer; // If we are using the legacy FB support flag, we\n\n    if (targetInst !== null) {\n      // The below logic attempts to work out if we need to change\n      // the target fiber to a different ancestor. We had similar logic\n      // in the legacy event system, except the big difference between\n      // systems is that the modern event system now has an event listener\n      // attached to each React Root and React Portal Root. Together,\n      // the DOM nodes representing these roots are the \"rootContainer\".\n      // To figure out which ancestor instance we should use, we traverse\n      // up the fiber tree from the target instance and attempt to find\n      // root boundaries that match that of our current \"rootContainer\".\n      // If we find that \"rootContainer\", we find the parent fiber\n      // sub-tree for that root and make that our ancestor instance.\n      var node = targetInst;\n\n      mainLoop: while (true) {\n        if (node === null) {\n          return;\n        }\n\n        var nodeTag = node.tag;\n\n        if (nodeTag === HostRoot || nodeTag === HostPortal) {\n          var container = node.stateNode.containerInfo;\n\n          if (isMatchingRootContainer(container, targetContainerNode)) {\n            break;\n          }\n\n          if (nodeTag === HostPortal) {\n            // The target is a portal, but it's not the rootContainer we're looking for.\n            // Normally portals handle their own events all the way down to the root.\n            // So we should be able to stop now. However, we don't know if this portal\n            // was part of *our* root.\n            var grandNode = node.return;\n\n            while (grandNode !== null) {\n              var grandTag = grandNode.tag;\n\n              if (grandTag === HostRoot || grandTag === HostPortal) {\n                var grandContainer = grandNode.stateNode.containerInfo;\n\n                if (isMatchingRootContainer(grandContainer, targetContainerNode)) {\n                  // This is the rootContainer we're looking for and we found it as\n                  // a parent of the Portal. That means we can ignore it because the\n                  // Portal will bubble through to us.\n                  return;\n                }\n              }\n\n              grandNode = grandNode.return;\n            }\n          } // Now we need to find it's corresponding host fiber in the other\n          // tree. To do this we can use getClosestInstanceFromNode, but we\n          // need to validate that the fiber is a host instance, otherwise\n          // we need to traverse up through the DOM till we find the correct\n          // node that is from the other tree.\n\n\n          while (container !== null) {\n            var parentNode = getClosestInstanceFromNode(container);\n\n            if (parentNode === null) {\n              return;\n            }\n\n            var parentTag = parentNode.tag;\n\n            if (parentTag === HostComponent || parentTag === HostText) {\n              node = ancestorInst = parentNode;\n              continue mainLoop;\n            }\n\n            container = container.parentNode;\n          }\n        }\n\n        node = node.return;\n      }\n    }\n  }\n\n  batchedUpdates(function () {\n    return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);\n  });\n}\n\nfunction createDispatchListener(instance, listener, currentTarget) {\n  return {\n    instance: instance,\n    listener: listener,\n    currentTarget: currentTarget\n  };\n}\n\nfunction accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly, nativeEvent) {\n  var captureName = reactName !== null ? reactName + 'Capture' : null;\n  var reactEventName = inCapturePhase ? captureName : reactName;\n  var listeners = [];\n  var instance = targetFiber;\n  var lastHostComponent = null; // Accumulate all instances and listeners via the target -> root path.\n\n  while (instance !== null) {\n    var _instance2 = instance,\n        stateNode = _instance2.stateNode,\n        tag = _instance2.tag; // Handle listeners that are on HostComponents (i.e. <div>)\n\n    if (tag === HostComponent && stateNode !== null) {\n      lastHostComponent = stateNode; // createEventHandle listeners\n\n\n      if (reactEventName !== null) {\n        var listener = getListener(instance, reactEventName);\n\n        if (listener != null) {\n          listeners.push(createDispatchListener(instance, listener, lastHostComponent));\n        }\n      }\n    } // If we are only accumulating events for the target, then we don't\n    // continue to propagate through the React fiber tree to find other\n    // listeners.\n\n\n    if (accumulateTargetOnly) {\n      break;\n    } // If we are processing the onBeforeBlur event, then we need to take\n\n    instance = instance.return;\n  }\n\n  return listeners;\n} // We should only use this function for:\n// - BeforeInputEventPlugin\n// - ChangeEventPlugin\n// - SelectEventPlugin\n// This is because we only process these plugins\n// in the bubble phase, so we need to accumulate two\n// phase event listeners (via emulation).\n\nfunction accumulateTwoPhaseListeners(targetFiber, reactName) {\n  var captureName = reactName + 'Capture';\n  var listeners = [];\n  var instance = targetFiber; // Accumulate all instances and listeners via the target -> root path.\n\n  while (instance !== null) {\n    var _instance3 = instance,\n        stateNode = _instance3.stateNode,\n        tag = _instance3.tag; // Handle listeners that are on HostComponents (i.e. <div>)\n\n    if (tag === HostComponent && stateNode !== null) {\n      var currentTarget = stateNode;\n      var captureListener = getListener(instance, captureName);\n\n      if (captureListener != null) {\n        listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));\n      }\n\n      var bubbleListener = getListener(instance, reactName);\n\n      if (bubbleListener != null) {\n        listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));\n      }\n    }\n\n    instance = instance.return;\n  }\n\n  return listeners;\n}\n\nfunction getParent(inst) {\n  if (inst === null) {\n    return null;\n  }\n\n  do {\n    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n\n  if (inst) {\n    return inst;\n  }\n\n  return null;\n}\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\n\n\nfunction getLowestCommonAncestor(instA, instB) {\n  var nodeA = instA;\n  var nodeB = instB;\n  var depthA = 0;\n\n  for (var tempA = nodeA; tempA; tempA = getParent(tempA)) {\n    depthA++;\n  }\n\n  var depthB = 0;\n\n  for (var tempB = nodeB; tempB; tempB = getParent(tempB)) {\n    depthB++;\n  } // If A is deeper, crawl up.\n\n\n  while (depthA - depthB > 0) {\n    nodeA = getParent(nodeA);\n    depthA--;\n  } // If B is deeper, crawl up.\n\n\n  while (depthB - depthA > 0) {\n    nodeB = getParent(nodeB);\n    depthB--;\n  } // Walk in lockstep until we find a match.\n\n\n  var depth = depthA;\n\n  while (depth--) {\n    if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) {\n      return nodeA;\n    }\n\n    nodeA = getParent(nodeA);\n    nodeB = getParent(nodeB);\n  }\n\n  return null;\n}\n\nfunction accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {\n  var registrationName = event._reactName;\n  var listeners = [];\n  var instance = target;\n\n  while (instance !== null) {\n    if (instance === common) {\n      break;\n    }\n\n    var _instance4 = instance,\n        alternate = _instance4.alternate,\n        stateNode = _instance4.stateNode,\n        tag = _instance4.tag;\n\n    if (alternate !== null && alternate === common) {\n      break;\n    }\n\n    if (tag === HostComponent && stateNode !== null) {\n      var currentTarget = stateNode;\n\n      if (inCapturePhase) {\n        var captureListener = getListener(instance, registrationName);\n\n        if (captureListener != null) {\n          listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));\n        }\n      } else if (!inCapturePhase) {\n        var bubbleListener = getListener(instance, registrationName);\n\n        if (bubbleListener != null) {\n          listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));\n        }\n      }\n    }\n\n    instance = instance.return;\n  }\n\n  if (listeners.length !== 0) {\n    dispatchQueue.push({\n      event: event,\n      listeners: listeners\n    });\n  }\n} // We should only use this function for:\n// - EnterLeaveEventPlugin\n// This is because we only process this plugin\n// in the bubble phase, so we need to accumulate two\n// phase event listeners.\n\n\nfunction accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {\n  var common = from && to ? getLowestCommonAncestor(from, to) : null;\n\n  if (from !== null) {\n    accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);\n  }\n\n  if (to !== null && enterEvent !== null) {\n    accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);\n  }\n}\nfunction getListenerSetKey(domEventName, capture) {\n  return domEventName + \"__\" + (capture ? 'capture' : 'bubble');\n}\n\nvar didWarnInvalidHydration = false;\nvar DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';\nvar SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';\nvar SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\nvar AUTOFOCUS = 'autoFocus';\nvar CHILDREN = 'children';\nvar STYLE = 'style';\nvar HTML$1 = '__html';\nvar warnedUnknownTags;\nvar validatePropertiesInDevelopment;\nvar warnForPropDifference;\nvar warnForExtraAttributes;\nvar warnForInvalidEventListener;\nvar canDiffStyleForHydrationWarning;\nvar normalizeHTML;\n\n{\n  warnedUnknownTags = {\n    // There are working polyfills for <dialog>. Let people use it.\n    dialog: true,\n    // Electron ships a custom <webview> tag to display external web content in\n    // an isolated frame and process.\n    // This tag is not present in non Electron environments such as JSDom which\n    // is often used for testing purposes.\n    // @see https://electronjs.org/docs/api/webview-tag\n    webview: true\n  };\n\n  validatePropertiesInDevelopment = function (type, props) {\n    validateProperties(type, props);\n    validateProperties$1(type, props);\n    validateProperties$2(type, props, {\n      registrationNameDependencies: registrationNameDependencies,\n      possibleRegistrationNames: possibleRegistrationNames\n    });\n  }; // IE 11 parses & normalizes the style attribute as opposed to other\n  // browsers. It adds spaces and sorts the properties in some\n  // non-alphabetical order. Handling that would require sorting CSS\n  // properties in the client & server versions or applying\n  // `expectedStyle` to a temporary DOM node to read its `style` attribute\n  // normalized. Since it only affects IE, we're skipping style warnings\n  // in that browser completely in favor of doing all that work.\n  // See https://github.com/facebook/react/issues/11807\n\n\n  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;\n\n  warnForPropDifference = function (propName, serverValue, clientValue) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);\n    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);\n\n    if (normalizedServerValue === normalizedClientValue) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n\n    error('Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));\n  };\n\n  warnForExtraAttributes = function (attributeNames) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    var names = [];\n    attributeNames.forEach(function (name) {\n      names.push(name);\n    });\n\n    error('Extra attributes from the server: %s', names);\n  };\n\n  warnForInvalidEventListener = function (registrationName, listener) {\n    if (listener === false) {\n      error('Expected `%s` listener to be a function, instead got `false`.\\n\\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);\n    } else {\n      error('Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);\n    }\n  }; // Parse the HTML and read it back to normalize the HTML string so that it\n  // can be used for comparison.\n\n\n  normalizeHTML = function (parent, html) {\n    // We could have created a separate document here to avoid\n    // re-initializing custom elements if they exist. But this breaks\n    // how <noscript> is being handled. So we use the same document.\n    // See the discussion in https://github.com/facebook/react/pull/11157.\n    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);\n    testElement.innerHTML = html;\n    return testElement.innerHTML;\n  };\n} // HTML parsing normalizes CR and CRLF to LF.\n// It also can turn \\u0000 into \\uFFFD inside attributes.\n// https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream\n// If we have a mismatch, it might be caused by that.\n// We will still patch up in this case but not fire the warning.\n\n\nvar NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g;\nvar NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\n\nfunction normalizeMarkupForTextOrAttribute(markup) {\n  {\n    checkHtmlStringCoercion(markup);\n  }\n\n  var markupString = typeof markup === 'string' ? markup : '' + markup;\n  return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');\n}\n\nfunction checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {\n  var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);\n  var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);\n\n  if (normalizedServerText === normalizedClientText) {\n    return;\n  }\n\n  if (shouldWarnDev) {\n    {\n      if (!didWarnInvalidHydration) {\n        didWarnInvalidHydration = true;\n\n        error('Text content did not match. Server: \"%s\" Client: \"%s\"', normalizedServerText, normalizedClientText);\n      }\n    }\n  }\n\n  if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) {\n    // In concurrent roots, we throw when there's a text mismatch and revert to\n    // client rendering, up to the nearest Suspense boundary.\n    throw new Error('Text content does not match server-rendered HTML.');\n  }\n}\n\nfunction getOwnerDocumentFromRootContainer(rootContainerElement) {\n  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;\n}\n\nfunction noop() {}\n\nfunction trapClickOnNonInteractiveElement(node) {\n  // Mobile Safari does not fire properly bubble click events on\n  // non-interactive elements, which means delegated click listeners do not\n  // fire. The workaround for this bug involves attaching an empty click\n  // listener on the target node.\n  // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n  // Just set it using the onclick property so that we don't have to manage any\n  // bookkeeping for it. Not sure if we need to clear it when the listener is\n  // removed.\n  // TODO: Only do this for the relevant Safaris maybe?\n  node.onclick = noop;\n}\n\nfunction setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {\n  for (var propKey in nextProps) {\n    if (!nextProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n\n    var nextProp = nextProps[propKey];\n\n    if (propKey === STYLE) {\n      {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      } // Relies on `updateStylesByID` not mutating `styleUpdates`.\n\n\n      setValueForStyles(domElement, nextProp);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      var nextHtml = nextProp ? nextProp[HTML$1] : undefined;\n\n      if (nextHtml != null) {\n        setInnerHTML(domElement, nextHtml);\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string') {\n        // Avoid setting initial textContent when the text is empty. In IE11 setting\n        // textContent on a <textarea> will cause the placeholder to not\n        // show within the <textarea> until it has been focused and blurred again.\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n        var canSetTextContent = tag !== 'textarea' || nextProp !== '';\n\n        if (canSetTextContent) {\n          setTextContent(domElement, nextProp);\n        }\n      } else if (typeof nextProp === 'number') {\n        setTextContent(domElement, '' + nextProp);\n      }\n    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (propKey === AUTOFOCUS) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if ( typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n    } else if (nextProp != null) {\n      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);\n    }\n  }\n}\n\nfunction updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {\n  // TODO: Handle wasCustomComponentTag\n  for (var i = 0; i < updatePayload.length; i += 2) {\n    var propKey = updatePayload[i];\n    var propValue = updatePayload[i + 1];\n\n    if (propKey === STYLE) {\n      setValueForStyles(domElement, propValue);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      setInnerHTML(domElement, propValue);\n    } else if (propKey === CHILDREN) {\n      setTextContent(domElement, propValue);\n    } else {\n      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);\n    }\n  }\n}\n\nfunction createElement(type, props, rootContainerElement, parentNamespace) {\n  var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML\n  // tags get no namespace.\n\n  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);\n  var domElement;\n  var namespaceURI = parentNamespace;\n\n  if (namespaceURI === HTML_NAMESPACE) {\n    namespaceURI = getIntrinsicNamespace(type);\n  }\n\n  if (namespaceURI === HTML_NAMESPACE) {\n    {\n      isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to\n      // allow <SVG> or <mATH>.\n\n      if (!isCustomComponentTag && type !== type.toLowerCase()) {\n        error('<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type);\n      }\n    }\n\n    if (type === 'script') {\n      // Create the script via .innerHTML so its \"parser-inserted\" flag is\n      // set to true and it does not execute\n      var div = ownerDocument.createElement('div');\n\n      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line\n      // This is guaranteed to yield a script element.\n\n      var firstChild = div.firstChild;\n      domElement = div.removeChild(firstChild);\n    } else if (typeof props.is === 'string') {\n      // $FlowIssue `createElement` should be updated for Web Components\n      domElement = ownerDocument.createElement(type, {\n        is: props.is\n      });\n    } else {\n      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.\n      // See discussion in https://github.com/facebook/react/pull/6896\n      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n      domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`\n      // attributes on `select`s needs to be added before `option`s are inserted.\n      // This prevents:\n      // - a bug where the `select` does not scroll to the correct option because singular\n      //  `select` elements automatically pick the first item #13222\n      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239\n      // See https://github.com/facebook/react/issues/13222\n      // and https://github.com/facebook/react/issues/14239\n\n      if (type === 'select') {\n        var node = domElement;\n\n        if (props.multiple) {\n          node.multiple = true;\n        } else if (props.size) {\n          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where\n          // it is possible that no option is selected.\n          //\n          // This is only necessary when a select in \"single selection mode\".\n          node.size = props.size;\n        }\n      }\n    }\n  } else {\n    domElement = ownerDocument.createElementNS(namespaceURI, type);\n  }\n\n  {\n    if (namespaceURI === HTML_NAMESPACE) {\n      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !hasOwnProperty.call(warnedUnknownTags, type)) {\n        warnedUnknownTags[type] = true;\n\n        error('The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);\n      }\n    }\n  }\n\n  return domElement;\n}\nfunction createTextNode(text, rootContainerElement) {\n  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);\n}\nfunction setInitialProperties(domElement, tag, rawProps, rootContainerElement) {\n  var isCustomComponentTag = isCustomComponent(tag, rawProps);\n\n  {\n    validatePropertiesInDevelopment(tag, rawProps);\n  } // TODO: Make sure that we check isMounted before firing any of these events.\n\n\n  var props;\n\n  switch (tag) {\n    case 'dialog':\n      listenToNonDelegatedEvent('cancel', domElement);\n      listenToNonDelegatedEvent('close', domElement);\n      props = rawProps;\n      break;\n\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the load event.\n      listenToNonDelegatedEvent('load', domElement);\n      props = rawProps;\n      break;\n\n    case 'video':\n    case 'audio':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for all the media events.\n      for (var i = 0; i < mediaEventTypes.length; i++) {\n        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);\n      }\n\n      props = rawProps;\n      break;\n\n    case 'source':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the error event.\n      listenToNonDelegatedEvent('error', domElement);\n      props = rawProps;\n      break;\n\n    case 'img':\n    case 'image':\n    case 'link':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for error and load events.\n      listenToNonDelegatedEvent('error', domElement);\n      listenToNonDelegatedEvent('load', domElement);\n      props = rawProps;\n      break;\n\n    case 'details':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the toggle event.\n      listenToNonDelegatedEvent('toggle', domElement);\n      props = rawProps;\n      break;\n\n    case 'input':\n      initWrapperState(domElement, rawProps);\n      props = getHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n\n    case 'option':\n      validateProps(domElement, rawProps);\n      props = rawProps;\n      break;\n\n    case 'select':\n      initWrapperState$1(domElement, rawProps);\n      props = getHostProps$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n\n    case 'textarea':\n      initWrapperState$2(domElement, rawProps);\n      props = getHostProps$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n\n    default:\n      props = rawProps;\n  }\n\n  assertValidProps(tag, props);\n  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      postMountWrapper(domElement, rawProps, false);\n      break;\n\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      postMountWrapper$3(domElement);\n      break;\n\n    case 'option':\n      postMountWrapper$1(domElement, rawProps);\n      break;\n\n    case 'select':\n      postMountWrapper$2(domElement, rawProps);\n      break;\n\n    default:\n      if (typeof props.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n\n      break;\n  }\n} // Calculate the diff between the two objects.\n\nfunction diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {\n  {\n    validatePropertiesInDevelopment(tag, nextRawProps);\n  }\n\n  var updatePayload = null;\n  var lastProps;\n  var nextProps;\n\n  switch (tag) {\n    case 'input':\n      lastProps = getHostProps(domElement, lastRawProps);\n      nextProps = getHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    case 'select':\n      lastProps = getHostProps$1(domElement, lastRawProps);\n      nextProps = getHostProps$1(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    case 'textarea':\n      lastProps = getHostProps$2(domElement, lastRawProps);\n      nextProps = getHostProps$2(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    default:\n      lastProps = lastRawProps;\n      nextProps = nextRawProps;\n\n      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n\n      break;\n  }\n\n  assertValidProps(tag, nextProps);\n  var propKey;\n  var styleName;\n  var styleUpdates = null;\n\n  for (propKey in lastProps) {\n    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n      continue;\n    }\n\n    if (propKey === STYLE) {\n      var lastStyle = lastProps[propKey];\n\n      for (styleName in lastStyle) {\n        if (lastStyle.hasOwnProperty(styleName)) {\n          if (!styleUpdates) {\n            styleUpdates = {};\n          }\n\n          styleUpdates[styleName] = '';\n        }\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) ; else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (propKey === AUTOFOCUS) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      // This is a special case. If any listener updates we need to ensure\n      // that the \"current\" fiber pointer gets updated so we need a commit\n      // to update this element.\n      if (!updatePayload) {\n        updatePayload = [];\n      }\n    } else {\n      // For all other deleted properties we add it to the queue. We use\n      // the allowed property list in the commit phase instead.\n      (updatePayload = updatePayload || []).push(propKey, null);\n    }\n  }\n\n  for (propKey in nextProps) {\n    var nextProp = nextProps[propKey];\n    var lastProp = lastProps != null ? lastProps[propKey] : undefined;\n\n    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n      continue;\n    }\n\n    if (propKey === STYLE) {\n      {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      }\n\n      if (lastProp) {\n        // Unset styles on `lastProp` but not on `nextProp`.\n        for (styleName in lastProp) {\n          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n\n            styleUpdates[styleName] = '';\n          }\n        } // Update styles that changed since `lastProp`.\n\n\n        for (styleName in nextProp) {\n          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n\n            styleUpdates[styleName] = nextProp[styleName];\n          }\n        }\n      } else {\n        // Relies on `updateStylesByID` not mutating `styleUpdates`.\n        if (!styleUpdates) {\n          if (!updatePayload) {\n            updatePayload = [];\n          }\n\n          updatePayload.push(propKey, styleUpdates);\n        }\n\n        styleUpdates = nextProp;\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      var nextHtml = nextProp ? nextProp[HTML$1] : undefined;\n      var lastHtml = lastProp ? lastProp[HTML$1] : undefined;\n\n      if (nextHtml != null) {\n        if (lastHtml !== nextHtml) {\n          (updatePayload = updatePayload || []).push(propKey, nextHtml);\n        }\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string' || typeof nextProp === 'number') {\n        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);\n      }\n    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        // We eagerly listen to this even though we haven't committed yet.\n        if ( typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n\n      if (!updatePayload && lastProp !== nextProp) {\n        // This is a special case. If any listener updates we need to ensure\n        // that the \"current\" props pointer gets updated so we need a commit\n        // to update this element.\n        updatePayload = [];\n      }\n    } else {\n      // For any other property we always add it to the queue and then we\n      // filter it out using the allowed property list during the commit.\n      (updatePayload = updatePayload || []).push(propKey, nextProp);\n    }\n  }\n\n  if (styleUpdates) {\n    {\n      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);\n    }\n\n    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);\n  }\n\n  return updatePayload;\n} // Apply the diff.\n\nfunction updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {\n  // Update checked *before* name.\n  // In the middle of an update, it is possible to have multiple checked.\n  // When a checked radio tries to change name, browser makes another radio's checked false.\n  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {\n    updateChecked(domElement, nextRawProps);\n  }\n\n  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);\n  var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.\n\n  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props\n  // changed.\n\n  switch (tag) {\n    case 'input':\n      // Update the wrapper around inputs *after* updating props. This has to\n      // happen after `updateDOMProperties`. Otherwise HTML5 input validations\n      // raise warnings and prevent the new value from being assigned.\n      updateWrapper(domElement, nextRawProps);\n      break;\n\n    case 'textarea':\n      updateWrapper$1(domElement, nextRawProps);\n      break;\n\n    case 'select':\n      // <select> value update needs to occur after <option> children\n      // reconciliation\n      postUpdateWrapper(domElement, nextRawProps);\n      break;\n  }\n}\n\nfunction getPossibleStandardName(propName) {\n  {\n    var lowerCasedName = propName.toLowerCase();\n\n    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      return null;\n    }\n\n    return possibleStandardNames[lowerCasedName] || null;\n  }\n}\n\nfunction diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement, isConcurrentMode, shouldWarnDev) {\n  var isCustomComponentTag;\n  var extraAttributeNames;\n\n  {\n    isCustomComponentTag = isCustomComponent(tag, rawProps);\n    validatePropertiesInDevelopment(tag, rawProps);\n  } // TODO: Make sure that we check isMounted before firing any of these events.\n\n\n  switch (tag) {\n    case 'dialog':\n      listenToNonDelegatedEvent('cancel', domElement);\n      listenToNonDelegatedEvent('close', domElement);\n      break;\n\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the load event.\n      listenToNonDelegatedEvent('load', domElement);\n      break;\n\n    case 'video':\n    case 'audio':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for all the media events.\n      for (var i = 0; i < mediaEventTypes.length; i++) {\n        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);\n      }\n\n      break;\n\n    case 'source':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the error event.\n      listenToNonDelegatedEvent('error', domElement);\n      break;\n\n    case 'img':\n    case 'image':\n    case 'link':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for error and load events.\n      listenToNonDelegatedEvent('error', domElement);\n      listenToNonDelegatedEvent('load', domElement);\n      break;\n\n    case 'details':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the toggle event.\n      listenToNonDelegatedEvent('toggle', domElement);\n      break;\n\n    case 'input':\n      initWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n\n    case 'option':\n      validateProps(domElement, rawProps);\n      break;\n\n    case 'select':\n      initWrapperState$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n\n    case 'textarea':\n      initWrapperState$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n  }\n\n  assertValidProps(tag, rawProps);\n\n  {\n    extraAttributeNames = new Set();\n    var attributes = domElement.attributes;\n\n    for (var _i = 0; _i < attributes.length; _i++) {\n      var name = attributes[_i].name.toLowerCase();\n\n      switch (name) {\n        // Controlled attributes are not validated\n        // TODO: Only ignore them on controlled tags.\n        case 'value':\n          break;\n\n        case 'checked':\n          break;\n\n        case 'selected':\n          break;\n\n        default:\n          // Intentionally use the original name.\n          // See discussion in https://github.com/facebook/react/pull/10676.\n          extraAttributeNames.add(attributes[_i].name);\n      }\n    }\n  }\n\n  var updatePayload = null;\n\n  for (var propKey in rawProps) {\n    if (!rawProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n\n    var nextProp = rawProps[propKey];\n\n    if (propKey === CHILDREN) {\n      // For text content children we compare against textContent. This\n      // might match additional HTML that is hidden when we read it using\n      // textContent. E.g. \"foo\" will match \"f<span>oo</span>\" but that still\n      // satisfies our requirement. Our requirement is not to produce perfect\n      // HTML and attributes. Ideally we should preserve structure but it's\n      // ok not to if the visible content is still enough to indicate what\n      // even listeners these nodes might be wired up to.\n      // TODO: Warn if there is more than a single textNode as a child.\n      // TODO: Should we use domElement.firstChild.nodeValue to compare?\n      if (typeof nextProp === 'string') {\n        if (domElement.textContent !== nextProp) {\n          if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n            checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);\n          }\n\n          updatePayload = [CHILDREN, nextProp];\n        }\n      } else if (typeof nextProp === 'number') {\n        if (domElement.textContent !== '' + nextProp) {\n          if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n            checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);\n          }\n\n          updatePayload = [CHILDREN, '' + nextProp];\n        }\n      }\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if ( typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n    } else if (shouldWarnDev && true && // Convince Flow we've calculated it (it's DEV-only in this method.)\n    typeof isCustomComponentTag === 'boolean') {\n      // Validate that the properties correspond to their expected values.\n      var serverValue = void 0;\n      var propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);\n\n      if (rawProps[SUPPRESS_HYDRATION_WARNING] === true) ; else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated\n      // TODO: Only ignore them on controlled tags.\n      propKey === 'value' || propKey === 'checked' || propKey === 'selected') ; else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n        var serverHTML = domElement.innerHTML;\n        var nextHtml = nextProp ? nextProp[HTML$1] : undefined;\n\n        if (nextHtml != null) {\n          var expectedHTML = normalizeHTML(domElement, nextHtml);\n\n          if (expectedHTML !== serverHTML) {\n            warnForPropDifference(propKey, serverHTML, expectedHTML);\n          }\n        }\n      } else if (propKey === STYLE) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey);\n\n        if (canDiffStyleForHydrationWarning) {\n          var expectedStyle = createDangerousStringForStyles(nextProp);\n          serverValue = domElement.getAttribute('style');\n\n          if (expectedStyle !== serverValue) {\n            warnForPropDifference(propKey, serverValue, expectedStyle);\n          }\n        }\n      } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey.toLowerCase());\n        serverValue = getValueForAttribute(domElement, propKey, nextProp);\n\n        if (nextProp !== serverValue) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {\n        var isMismatchDueToBadCasing = false;\n\n        if (propertyInfo !== null) {\n          // $FlowFixMe - Should be inferred as not undefined.\n          extraAttributeNames.delete(propertyInfo.attributeName);\n          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);\n        } else {\n          var ownNamespace = parentNamespace;\n\n          if (ownNamespace === HTML_NAMESPACE) {\n            ownNamespace = getIntrinsicNamespace(tag);\n          }\n\n          if (ownNamespace === HTML_NAMESPACE) {\n            // $FlowFixMe - Should be inferred as not undefined.\n            extraAttributeNames.delete(propKey.toLowerCase());\n          } else {\n            var standardName = getPossibleStandardName(propKey);\n\n            if (standardName !== null && standardName !== propKey) {\n              // If an SVG prop is supplied with bad casing, it will\n              // be successfully parsed from HTML, but will produce a mismatch\n              // (and would be incorrectly rendered on the client).\n              // However, we already warn about bad casing elsewhere.\n              // So we'll skip the misleading extra mismatch warning in this case.\n              isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.\n\n              extraAttributeNames.delete(standardName);\n            } // $FlowFixMe - Should be inferred as not undefined.\n\n\n            extraAttributeNames.delete(propKey);\n          }\n\n          serverValue = getValueForAttribute(domElement, propKey, nextProp);\n        }\n\n        var dontWarnCustomElement = enableCustomElementPropertySupport  ;\n\n        if (!dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      }\n    }\n  }\n\n  {\n    if (shouldWarnDev) {\n      if ( // $FlowFixMe - Should be inferred as not undefined.\n      extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        warnForExtraAttributes(extraAttributeNames);\n      }\n    }\n  }\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      postMountWrapper(domElement, rawProps, true);\n      break;\n\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      postMountWrapper$3(domElement);\n      break;\n\n    case 'select':\n    case 'option':\n      // For input and textarea we current always set the value property at\n      // post mount to force it to diverge from attributes. However, for\n      // option and select we don't quite do the same thing and select\n      // is not resilient to the DOM state changing so we don't do that here.\n      // TODO: Consider not doing this for input and textarea.\n      break;\n\n    default:\n      if (typeof rawProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n\n      break;\n  }\n\n  return updatePayload;\n}\nfunction diffHydratedText(textNode, text, isConcurrentMode) {\n  var isDifferent = textNode.nodeValue !== text;\n  return isDifferent;\n}\nfunction warnForDeletedHydratableElement(parentNode, child) {\n  {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n\n    error('Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());\n  }\n}\nfunction warnForDeletedHydratableText(parentNode, child) {\n  {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n\n    error('Did not expect server HTML to contain the text node \"%s\" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());\n  }\n}\nfunction warnForInsertedHydratedElement(parentNode, tag, props) {\n  {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n\n    error('Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());\n  }\n}\nfunction warnForInsertedHydratedText(parentNode, text) {\n  {\n    if (text === '') {\n      // We expect to insert empty text nodes since they're not represented in\n      // the HTML.\n      // TODO: Remove this special case if we can just avoid inserting empty\n      // text nodes.\n      return;\n    }\n\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n\n    error('Expected server HTML to contain a matching text node for \"%s\" in <%s>.', text, parentNode.nodeName.toLowerCase());\n  }\n}\nfunction restoreControlledState$3(domElement, tag, props) {\n  switch (tag) {\n    case 'input':\n      restoreControlledState(domElement, props);\n      return;\n\n    case 'textarea':\n      restoreControlledState$2(domElement, props);\n      return;\n\n    case 'select':\n      restoreControlledState$1(domElement, props);\n      return;\n  }\n}\n\nvar validateDOMNesting = function () {};\n\nvar updatedAncestorInfo = function () {};\n\n{\n  // This validation code was written based on the HTML5 parsing spec:\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  //\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n  // not clear what practical benefit doing so provides); instead, we warn only\n  // for cases where the parser will give a parse tree differing from what React\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\n  // because it still parses correctly; we do warn for other cases like nested\n  // <p> tags where the beginning of the second element implicitly closes the\n  // first, causing a confusing mess.\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\n  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n\n  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n  // TODO: Distinguish by namespace here -- for <title>, including it here\n  // errs on the side of fewer warnings\n  'foreignObject', 'desc', 'title']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n\n  var buttonScopeTags = inScopeTags.concat(['button']); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n\n  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n  var emptyAncestorInfo = {\n    current: null,\n    formTag: null,\n    aTagInScope: null,\n    buttonTagInScope: null,\n    nobrTagInScope: null,\n    pTagInButtonScope: null,\n    listItemTagAutoclosing: null,\n    dlItemTagAutoclosing: null\n  };\n\n  updatedAncestorInfo = function (oldInfo, tag) {\n    var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);\n\n    var info = {\n      tag: tag\n    };\n\n    if (inScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.aTagInScope = null;\n      ancestorInfo.buttonTagInScope = null;\n      ancestorInfo.nobrTagInScope = null;\n    }\n\n    if (buttonScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.pTagInButtonScope = null;\n    } // See rules for 'li', 'dd', 'dt' start tags in\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\n\n    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n      ancestorInfo.listItemTagAutoclosing = null;\n      ancestorInfo.dlItemTagAutoclosing = null;\n    }\n\n    ancestorInfo.current = info;\n\n    if (tag === 'form') {\n      ancestorInfo.formTag = info;\n    }\n\n    if (tag === 'a') {\n      ancestorInfo.aTagInScope = info;\n    }\n\n    if (tag === 'button') {\n      ancestorInfo.buttonTagInScope = info;\n    }\n\n    if (tag === 'nobr') {\n      ancestorInfo.nobrTagInScope = info;\n    }\n\n    if (tag === 'p') {\n      ancestorInfo.pTagInButtonScope = info;\n    }\n\n    if (tag === 'li') {\n      ancestorInfo.listItemTagAutoclosing = info;\n    }\n\n    if (tag === 'dd' || tag === 'dt') {\n      ancestorInfo.dlItemTagAutoclosing = info;\n    }\n\n    return ancestorInfo;\n  };\n  /**\n   * Returns whether\n   */\n\n\n  var isTagValidWithParent = function (tag, parentTag) {\n    // First, let's check if we're in an unusual parsing mode...\n    switch (parentTag) {\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n      case 'select':\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n\n      case 'optgroup':\n        return tag === 'option' || tag === '#text';\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n      // but\n\n      case 'option':\n        return tag === '#text';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n      // No special behavior since these rules fall back to \"in body\" mode for\n      // all except special table nodes which cause bad parsing behavior anyway.\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n\n      case 'tr':\n        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n\n      case 'tbody':\n      case 'thead':\n      case 'tfoot':\n        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n\n      case 'colgroup':\n        return tag === 'col' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n\n      case 'table':\n        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n\n      case 'head':\n        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n\n      case 'html':\n        return tag === 'head' || tag === 'body' || tag === 'frameset';\n\n      case 'frameset':\n        return tag === 'frame';\n\n      case '#document':\n        return tag === 'html';\n    } // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n    // where the parsing rules cause implicit opens or closes to be added.\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\n\n    switch (tag) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\n      case 'rp':\n      case 'rt':\n        return impliedEndTags.indexOf(parentTag) === -1;\n\n      case 'body':\n      case 'caption':\n      case 'col':\n      case 'colgroup':\n      case 'frameset':\n      case 'frame':\n      case 'head':\n      case 'html':\n      case 'tbody':\n      case 'td':\n      case 'tfoot':\n      case 'th':\n      case 'thead':\n      case 'tr':\n        // These tags are only valid with a few parents that have special child\n        // parsing rules -- if we're down here, then none of those matched and\n        // so we allow it only if we don't know what the parent is, as all other\n        // cases are invalid.\n        return parentTag == null;\n    }\n\n    return true;\n  };\n  /**\n   * Returns whether\n   */\n\n\n  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\n    switch (tag) {\n      case 'address':\n      case 'article':\n      case 'aside':\n      case 'blockquote':\n      case 'center':\n      case 'details':\n      case 'dialog':\n      case 'dir':\n      case 'div':\n      case 'dl':\n      case 'fieldset':\n      case 'figcaption':\n      case 'figure':\n      case 'footer':\n      case 'header':\n      case 'hgroup':\n      case 'main':\n      case 'menu':\n      case 'nav':\n      case 'ol':\n      case 'p':\n      case 'section':\n      case 'summary':\n      case 'ul':\n      case 'pre':\n      case 'listing':\n      case 'table':\n      case 'hr':\n      case 'xmp':\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return ancestorInfo.pTagInButtonScope;\n\n      case 'form':\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n      case 'li':\n        return ancestorInfo.listItemTagAutoclosing;\n\n      case 'dd':\n      case 'dt':\n        return ancestorInfo.dlItemTagAutoclosing;\n\n      case 'button':\n        return ancestorInfo.buttonTagInScope;\n\n      case 'a':\n        // Spec says something about storing a list of markers, but it sounds\n        // equivalent to this check.\n        return ancestorInfo.aTagInScope;\n\n      case 'nobr':\n        return ancestorInfo.nobrTagInScope;\n    }\n\n    return null;\n  };\n\n  var didWarn$1 = {};\n\n  validateDOMNesting = function (childTag, childText, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.current;\n    var parentTag = parentInfo && parentInfo.tag;\n\n    if (childText != null) {\n      if (childTag != null) {\n        error('validateDOMNesting: when childText is passed, childTag should be null');\n      }\n\n      childTag = '#text';\n    }\n\n    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n    var invalidParentOrAncestor = invalidParent || invalidAncestor;\n\n    if (!invalidParentOrAncestor) {\n      return;\n    }\n\n    var ancestorTag = invalidParentOrAncestor.tag;\n    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag;\n\n    if (didWarn$1[warnKey]) {\n      return;\n    }\n\n    didWarn$1[warnKey] = true;\n    var tagDisplayName = childTag;\n    var whitespaceInfo = '';\n\n    if (childTag === '#text') {\n      if (/\\S/.test(childText)) {\n        tagDisplayName = 'Text nodes';\n      } else {\n        tagDisplayName = 'Whitespace text nodes';\n        whitespaceInfo = \" Make sure you don't have any extra whitespace between tags on \" + 'each line of your source code.';\n      }\n    } else {\n      tagDisplayName = '<' + childTag + '>';\n    }\n\n    if (invalidParent) {\n      var info = '';\n\n      if (ancestorTag === 'table' && childTag === 'tr') {\n        info += ' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by ' + 'the browser.';\n      }\n\n      error('validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info);\n    } else {\n      error('validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.', tagDisplayName, ancestorTag);\n    }\n  };\n}\n\nvar SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';\nvar SUSPENSE_START_DATA = '$';\nvar SUSPENSE_END_DATA = '/$';\nvar SUSPENSE_PENDING_START_DATA = '$?';\nvar SUSPENSE_FALLBACK_START_DATA = '$!';\nvar STYLE$1 = 'style';\nvar eventsEnabled = null;\nvar selectionInformation = null;\nfunction getRootHostContext(rootContainerInstance) {\n  var type;\n  var namespace;\n  var nodeType = rootContainerInstance.nodeType;\n\n  switch (nodeType) {\n    case DOCUMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE:\n      {\n        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';\n        var root = rootContainerInstance.documentElement;\n        namespace = root ? root.namespaceURI : getChildNamespace(null, '');\n        break;\n      }\n\n    default:\n      {\n        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;\n        var ownNamespace = container.namespaceURI || null;\n        type = container.tagName;\n        namespace = getChildNamespace(ownNamespace, type);\n        break;\n      }\n  }\n\n  {\n    var validatedTag = type.toLowerCase();\n    var ancestorInfo = updatedAncestorInfo(null, validatedTag);\n    return {\n      namespace: namespace,\n      ancestorInfo: ancestorInfo\n    };\n  }\n}\nfunction getChildHostContext(parentHostContext, type, rootContainerInstance) {\n  {\n    var parentHostContextDev = parentHostContext;\n    var namespace = getChildNamespace(parentHostContextDev.namespace, type);\n    var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);\n    return {\n      namespace: namespace,\n      ancestorInfo: ancestorInfo\n    };\n  }\n}\nfunction getPublicInstance(instance) {\n  return instance;\n}\nfunction prepareForCommit(containerInfo) {\n  eventsEnabled = isEnabled();\n  selectionInformation = getSelectionInformation();\n  var activeInstance = null;\n\n  setEnabled(false);\n  return activeInstance;\n}\nfunction resetAfterCommit(containerInfo) {\n  restoreSelection(selectionInformation);\n  setEnabled(eventsEnabled);\n  eventsEnabled = null;\n  selectionInformation = null;\n}\nfunction createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {\n  var parentNamespace;\n\n  {\n    // TODO: take namespace into account when validating.\n    var hostContextDev = hostContext;\n    validateDOMNesting(type, null, hostContextDev.ancestorInfo);\n\n    if (typeof props.children === 'string' || typeof props.children === 'number') {\n      var string = '' + props.children;\n      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);\n      validateDOMNesting(null, string, ownAncestorInfo);\n    }\n\n    parentNamespace = hostContextDev.namespace;\n  }\n\n  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);\n  precacheFiberNode(internalInstanceHandle, domElement);\n  updateFiberProps(domElement, props);\n  return domElement;\n}\nfunction appendInitialChild(parentInstance, child) {\n  parentInstance.appendChild(child);\n}\nfunction finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {\n  setInitialProperties(domElement, type, props, rootContainerInstance);\n\n  switch (type) {\n    case 'button':\n    case 'input':\n    case 'select':\n    case 'textarea':\n      return !!props.autoFocus;\n\n    case 'img':\n      return true;\n\n    default:\n      return false;\n  }\n}\nfunction prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {\n  {\n    var hostContextDev = hostContext;\n\n    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {\n      var string = '' + newProps.children;\n      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);\n      validateDOMNesting(null, string, ownAncestorInfo);\n    }\n  }\n\n  return diffProperties(domElement, type, oldProps, newProps);\n}\nfunction shouldSetTextContent(type, props) {\n  return type === 'textarea' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;\n}\nfunction createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {\n  {\n    var hostContextDev = hostContext;\n    validateDOMNesting(null, text, hostContextDev.ancestorInfo);\n  }\n\n  var textNode = createTextNode(text, rootContainerInstance);\n  precacheFiberNode(internalInstanceHandle, textNode);\n  return textNode;\n}\nfunction getCurrentEventPriority() {\n  var currentEvent = window.event;\n\n  if (currentEvent === undefined) {\n    return DefaultEventPriority;\n  }\n\n  return getEventPriority(currentEvent.type);\n}\n// if a component just imports ReactDOM (e.g. for findDOMNode).\n// Some environments might not have setTimeout or clearTimeout.\n\nvar scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;\nvar cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;\nvar noTimeout = -1;\nvar localPromise = typeof Promise === 'function' ? Promise : undefined; // -------------------\nvar scheduleMicrotask = typeof queueMicrotask === 'function' ? queueMicrotask : typeof localPromise !== 'undefined' ? function (callback) {\n  return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);\n} : scheduleTimeout; // TODO: Determine the best fallback here.\n\nfunction handleErrorInNextTick(error) {\n  setTimeout(function () {\n    throw error;\n  });\n} // -------------------\nfunction commitMount(domElement, type, newProps, internalInstanceHandle) {\n  // Despite the naming that might imply otherwise, this method only\n  // fires if there is an `Update` effect scheduled during mounting.\n  // This happens if `finalizeInitialChildren` returns `true` (which it\n  // does to implement the `autoFocus` attribute on the client). But\n  // there are also other cases when this might happen (such as patching\n  // up text content during hydration mismatch). So we'll check this again.\n  switch (type) {\n    case 'button':\n    case 'input':\n    case 'select':\n    case 'textarea':\n      if (newProps.autoFocus) {\n        domElement.focus();\n      }\n\n      return;\n\n    case 'img':\n      {\n        if (newProps.src) {\n          domElement.src = newProps.src;\n        }\n\n        return;\n      }\n  }\n}\nfunction commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {\n  // Apply the diff to the DOM node.\n  updateProperties(domElement, updatePayload, type, oldProps, newProps); // Update the props handle so that we know which props are the ones with\n  // with current event handlers.\n\n  updateFiberProps(domElement, newProps);\n}\nfunction resetTextContent(domElement) {\n  setTextContent(domElement, '');\n}\nfunction commitTextUpdate(textInstance, oldText, newText) {\n  textInstance.nodeValue = newText;\n}\nfunction appendChild(parentInstance, child) {\n  parentInstance.appendChild(child);\n}\nfunction appendChildToContainer(container, child) {\n  var parentNode;\n\n  if (container.nodeType === COMMENT_NODE) {\n    parentNode = container.parentNode;\n    parentNode.insertBefore(child, container);\n  } else {\n    parentNode = container;\n    parentNode.appendChild(child);\n  } // This container might be used for a portal.\n  // If something inside a portal is clicked, that click should bubble\n  // through the React tree. However, on Mobile Safari the click would\n  // never bubble through the *DOM* tree unless an ancestor with onclick\n  // event exists. So we wouldn't see it and dispatch it.\n  // This is why we ensure that non React root containers have inline onclick\n  // defined.\n  // https://github.com/facebook/react/issues/11918\n\n\n  var reactRootContainer = container._reactRootContainer;\n\n  if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {\n    // TODO: This cast may not be sound for SVG, MathML or custom elements.\n    trapClickOnNonInteractiveElement(parentNode);\n  }\n}\nfunction insertBefore(parentInstance, child, beforeChild) {\n  parentInstance.insertBefore(child, beforeChild);\n}\nfunction insertInContainerBefore(container, child, beforeChild) {\n  if (container.nodeType === COMMENT_NODE) {\n    container.parentNode.insertBefore(child, beforeChild);\n  } else {\n    container.insertBefore(child, beforeChild);\n  }\n}\n\nfunction removeChild(parentInstance, child) {\n  parentInstance.removeChild(child);\n}\nfunction removeChildFromContainer(container, child) {\n  if (container.nodeType === COMMENT_NODE) {\n    container.parentNode.removeChild(child);\n  } else {\n    container.removeChild(child);\n  }\n}\nfunction clearSuspenseBoundary(parentInstance, suspenseInstance) {\n  var node = suspenseInstance; // Delete all nodes within this suspense boundary.\n  // There might be nested nodes so we need to keep track of how\n  // deep we are and only break out when we're back on top.\n\n  var depth = 0;\n\n  do {\n    var nextNode = node.nextSibling;\n    parentInstance.removeChild(node);\n\n    if (nextNode && nextNode.nodeType === COMMENT_NODE) {\n      var data = nextNode.data;\n\n      if (data === SUSPENSE_END_DATA) {\n        if (depth === 0) {\n          parentInstance.removeChild(nextNode); // Retry if any event replaying was blocked on this.\n\n          retryIfBlockedOn(suspenseInstance);\n          return;\n        } else {\n          depth--;\n        }\n      } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) {\n        depth++;\n      }\n    }\n\n    node = nextNode;\n  } while (node); // TODO: Warn, we didn't find the end comment boundary.\n  // Retry if any event replaying was blocked on this.\n\n\n  retryIfBlockedOn(suspenseInstance);\n}\nfunction clearSuspenseBoundaryFromContainer(container, suspenseInstance) {\n  if (container.nodeType === COMMENT_NODE) {\n    clearSuspenseBoundary(container.parentNode, suspenseInstance);\n  } else if (container.nodeType === ELEMENT_NODE) {\n    clearSuspenseBoundary(container, suspenseInstance);\n  } // Retry if any event replaying was blocked on this.\n\n\n  retryIfBlockedOn(container);\n}\nfunction hideInstance(instance) {\n  // TODO: Does this work for all element types? What about MathML? Should we\n  // pass host context to this method?\n  instance = instance;\n  var style = instance.style;\n\n  if (typeof style.setProperty === 'function') {\n    style.setProperty('display', 'none', 'important');\n  } else {\n    style.display = 'none';\n  }\n}\nfunction hideTextInstance(textInstance) {\n  textInstance.nodeValue = '';\n}\nfunction unhideInstance(instance, props) {\n  instance = instance;\n  var styleProp = props[STYLE$1];\n  var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;\n  instance.style.display = dangerousStyleValue('display', display);\n}\nfunction unhideTextInstance(textInstance, text) {\n  textInstance.nodeValue = text;\n}\nfunction clearContainer(container) {\n  if (container.nodeType === ELEMENT_NODE) {\n    container.textContent = '';\n  } else if (container.nodeType === DOCUMENT_NODE) {\n    if (container.documentElement) {\n      container.removeChild(container.documentElement);\n    }\n  }\n} // -------------------\nfunction canHydrateInstance(instance, type, props) {\n  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {\n    return null;\n  } // This has now been refined to an element node.\n\n\n  return instance;\n}\nfunction canHydrateTextInstance(instance, text) {\n  if (text === '' || instance.nodeType !== TEXT_NODE) {\n    // Empty strings are not parsed by HTML so there won't be a correct match here.\n    return null;\n  } // This has now been refined to a text node.\n\n\n  return instance;\n}\nfunction canHydrateSuspenseInstance(instance) {\n  if (instance.nodeType !== COMMENT_NODE) {\n    // Empty strings are not parsed by HTML so there won't be a correct match here.\n    return null;\n  } // This has now been refined to a suspense node.\n\n\n  return instance;\n}\nfunction isSuspenseInstancePending(instance) {\n  return instance.data === SUSPENSE_PENDING_START_DATA;\n}\nfunction isSuspenseInstanceFallback(instance) {\n  return instance.data === SUSPENSE_FALLBACK_START_DATA;\n}\nfunction getSuspenseInstanceFallbackErrorDetails(instance) {\n  var dataset = instance.nextSibling && instance.nextSibling.dataset;\n  var digest, message, stack;\n\n  if (dataset) {\n    digest = dataset.dgst;\n\n    {\n      message = dataset.msg;\n      stack = dataset.stck;\n    }\n  }\n\n  {\n    return {\n      message: message,\n      digest: digest,\n      stack: stack\n    };\n  } // let value = {message: undefined, hash: undefined};\n  // const nextSibling = instance.nextSibling;\n  // if (nextSibling) {\n  //   const dataset = ((nextSibling: any): HTMLTemplateElement).dataset;\n  //   value.message = dataset.msg;\n  //   value.hash = dataset.hash;\n  //   if (true) {\n  //     value.stack = dataset.stack;\n  //   }\n  // }\n  // return value;\n\n}\nfunction registerSuspenseInstanceRetry(instance, callback) {\n  instance._reactRetry = callback;\n}\n\nfunction getNextHydratable(node) {\n  // Skip non-hydratable nodes.\n  for (; node != null; node = node.nextSibling) {\n    var nodeType = node.nodeType;\n\n    if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {\n      break;\n    }\n\n    if (nodeType === COMMENT_NODE) {\n      var nodeData = node.data;\n\n      if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) {\n        break;\n      }\n\n      if (nodeData === SUSPENSE_END_DATA) {\n        return null;\n      }\n    }\n  }\n\n  return node;\n}\n\nfunction getNextHydratableSibling(instance) {\n  return getNextHydratable(instance.nextSibling);\n}\nfunction getFirstHydratableChild(parentInstance) {\n  return getNextHydratable(parentInstance.firstChild);\n}\nfunction getFirstHydratableChildWithinContainer(parentContainer) {\n  return getNextHydratable(parentContainer.firstChild);\n}\nfunction getFirstHydratableChildWithinSuspenseInstance(parentInstance) {\n  return getNextHydratable(parentInstance.nextSibling);\n}\nfunction hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle, shouldWarnDev) {\n  precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events\n  // get attached.\n\n  updateFiberProps(instance, props);\n  var parentNamespace;\n\n  {\n    var hostContextDev = hostContext;\n    parentNamespace = hostContextDev.namespace;\n  } // TODO: Temporary hack to check if we're in a concurrent root. We can delete\n  // when the legacy root API is removed.\n\n\n  var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;\n  return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance, isConcurrentMode, shouldWarnDev);\n}\nfunction hydrateTextInstance(textInstance, text, internalInstanceHandle, shouldWarnDev) {\n  precacheFiberNode(internalInstanceHandle, textInstance); // TODO: Temporary hack to check if we're in a concurrent root. We can delete\n  // when the legacy root API is removed.\n\n  var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;\n  return diffHydratedText(textInstance, text);\n}\nfunction hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {\n  precacheFiberNode(internalInstanceHandle, suspenseInstance);\n}\nfunction getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {\n  var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.\n  // There might be nested nodes so we need to keep track of how\n  // deep we are and only break out when we're back on top.\n\n  var depth = 0;\n\n  while (node) {\n    if (node.nodeType === COMMENT_NODE) {\n      var data = node.data;\n\n      if (data === SUSPENSE_END_DATA) {\n        if (depth === 0) {\n          return getNextHydratableSibling(node);\n        } else {\n          depth--;\n        }\n      } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {\n        depth++;\n      }\n    }\n\n    node = node.nextSibling;\n  } // TODO: Warn, we didn't find the end comment boundary.\n\n\n  return null;\n} // Returns the SuspenseInstance if this node is a direct child of a\n// SuspenseInstance. I.e. if its previous sibling is a Comment with\n// SUSPENSE_x_START_DATA. Otherwise, null.\n\nfunction getParentSuspenseInstance(targetInstance) {\n  var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.\n  // There might be nested nodes so we need to keep track of how\n  // deep we are and only break out when we're back on top.\n\n  var depth = 0;\n\n  while (node) {\n    if (node.nodeType === COMMENT_NODE) {\n      var data = node.data;\n\n      if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {\n        if (depth === 0) {\n          return node;\n        } else {\n          depth--;\n        }\n      } else if (data === SUSPENSE_END_DATA) {\n        depth++;\n      }\n    }\n\n    node = node.previousSibling;\n  }\n\n  return null;\n}\nfunction commitHydratedContainer(container) {\n  // Retry if any event replaying was blocked on this.\n  retryIfBlockedOn(container);\n}\nfunction commitHydratedSuspenseInstance(suspenseInstance) {\n  // Retry if any event replaying was blocked on this.\n  retryIfBlockedOn(suspenseInstance);\n}\nfunction shouldDeleteUnhydratedTailInstances(parentType) {\n  return parentType !== 'head' && parentType !== 'body';\n}\nfunction didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text, isConcurrentMode) {\n  var shouldWarnDev = true;\n  checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);\n}\nfunction didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text, isConcurrentMode) {\n  if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {\n    var shouldWarnDev = true;\n    checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);\n  }\n}\nfunction didNotHydrateInstanceWithinContainer(parentContainer, instance) {\n  {\n    if (instance.nodeType === ELEMENT_NODE) {\n      warnForDeletedHydratableElement(parentContainer, instance);\n    } else if (instance.nodeType === COMMENT_NODE) ; else {\n      warnForDeletedHydratableText(parentContainer, instance);\n    }\n  }\n}\nfunction didNotHydrateInstanceWithinSuspenseInstance(parentInstance, instance) {\n  {\n    // $FlowFixMe: Only Element or Document can be parent nodes.\n    var parentNode = parentInstance.parentNode;\n\n    if (parentNode !== null) {\n      if (instance.nodeType === ELEMENT_NODE) {\n        warnForDeletedHydratableElement(parentNode, instance);\n      } else if (instance.nodeType === COMMENT_NODE) ; else {\n        warnForDeletedHydratableText(parentNode, instance);\n      }\n    }\n  }\n}\nfunction didNotHydrateInstance(parentType, parentProps, parentInstance, instance, isConcurrentMode) {\n  {\n    if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {\n      if (instance.nodeType === ELEMENT_NODE) {\n        warnForDeletedHydratableElement(parentInstance, instance);\n      } else if (instance.nodeType === COMMENT_NODE) ; else {\n        warnForDeletedHydratableText(parentInstance, instance);\n      }\n    }\n  }\n}\nfunction didNotFindHydratableInstanceWithinContainer(parentContainer, type, props) {\n  {\n    warnForInsertedHydratedElement(parentContainer, type);\n  }\n}\nfunction didNotFindHydratableTextInstanceWithinContainer(parentContainer, text) {\n  {\n    warnForInsertedHydratedText(parentContainer, text);\n  }\n}\nfunction didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance, type, props) {\n  {\n    // $FlowFixMe: Only Element or Document can be parent nodes.\n    var parentNode = parentInstance.parentNode;\n    if (parentNode !== null) warnForInsertedHydratedElement(parentNode, type);\n  }\n}\nfunction didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance, text) {\n  {\n    // $FlowFixMe: Only Element or Document can be parent nodes.\n    var parentNode = parentInstance.parentNode;\n    if (parentNode !== null) warnForInsertedHydratedText(parentNode, text);\n  }\n}\nfunction didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props, isConcurrentMode) {\n  {\n    if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {\n      warnForInsertedHydratedElement(parentInstance, type);\n    }\n  }\n}\nfunction didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text, isConcurrentMode) {\n  {\n    if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {\n      warnForInsertedHydratedText(parentInstance, text);\n    }\n  }\n}\nfunction errorHydratingContainer(parentContainer) {\n  {\n    // TODO: This gets logged by onRecoverableError, too, so we should be\n    // able to remove it.\n    error('An error occurred during hydration. The server HTML was replaced with client content in <%s>.', parentContainer.nodeName.toLowerCase());\n  }\n}\nfunction preparePortalMount(portalInstance) {\n  listenToAllSupportedEvents(portalInstance);\n}\n\nvar randomKey = Math.random().toString(36).slice(2);\nvar internalInstanceKey = '__reactFiber$' + randomKey;\nvar internalPropsKey = '__reactProps$' + randomKey;\nvar internalContainerInstanceKey = '__reactContainer$' + randomKey;\nvar internalEventHandlersKey = '__reactEvents$' + randomKey;\nvar internalEventHandlerListenersKey = '__reactListeners$' + randomKey;\nvar internalEventHandlesSetKey = '__reactHandles$' + randomKey;\nfunction detachDeletedInstance(node) {\n  // TODO: This function is only called on host components. I don't think all of\n  // these fields are relevant.\n  delete node[internalInstanceKey];\n  delete node[internalPropsKey];\n  delete node[internalEventHandlersKey];\n  delete node[internalEventHandlerListenersKey];\n  delete node[internalEventHandlesSetKey];\n}\nfunction precacheFiberNode(hostInst, node) {\n  node[internalInstanceKey] = hostInst;\n}\nfunction markContainerAsRoot(hostRoot, node) {\n  node[internalContainerInstanceKey] = hostRoot;\n}\nfunction unmarkContainerAsRoot(node) {\n  node[internalContainerInstanceKey] = null;\n}\nfunction isContainerMarkedAsRoot(node) {\n  return !!node[internalContainerInstanceKey];\n} // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.\n// If the target node is part of a hydrated or not yet rendered subtree, then\n// this may also return a SuspenseComponent or HostRoot to indicate that.\n// Conceptually the HostRoot fiber is a child of the Container node. So if you\n// pass the Container node as the targetNode, you will not actually get the\n// HostRoot back. To get to the HostRoot, you need to pass a child of it.\n// The same thing applies to Suspense boundaries.\n\nfunction getClosestInstanceFromNode(targetNode) {\n  var targetInst = targetNode[internalInstanceKey];\n\n  if (targetInst) {\n    // Don't return HostRoot or SuspenseComponent here.\n    return targetInst;\n  } // If the direct event target isn't a React owned DOM node, we need to look\n  // to see if one of its parents is a React owned DOM node.\n\n\n  var parentNode = targetNode.parentNode;\n\n  while (parentNode) {\n    // We'll check if this is a container root that could include\n    // React nodes in the future. We need to check this first because\n    // if we're a child of a dehydrated container, we need to first\n    // find that inner container before moving on to finding the parent\n    // instance. Note that we don't check this field on  the targetNode\n    // itself because the fibers are conceptually between the container\n    // node and the first child. It isn't surrounding the container node.\n    // If it's not a container, we check if it's an instance.\n    targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];\n\n    if (targetInst) {\n      // Since this wasn't the direct target of the event, we might have\n      // stepped past dehydrated DOM nodes to get here. However they could\n      // also have been non-React nodes. We need to answer which one.\n      // If we the instance doesn't have any children, then there can't be\n      // a nested suspense boundary within it. So we can use this as a fast\n      // bailout. Most of the time, when people add non-React children to\n      // the tree, it is using a ref to a child-less DOM node.\n      // Normally we'd only need to check one of the fibers because if it\n      // has ever gone from having children to deleting them or vice versa\n      // it would have deleted the dehydrated boundary nested inside already.\n      // However, since the HostRoot starts out with an alternate it might\n      // have one on the alternate so we need to check in case this was a\n      // root.\n      var alternate = targetInst.alternate;\n\n      if (targetInst.child !== null || alternate !== null && alternate.child !== null) {\n        // Next we need to figure out if the node that skipped past is\n        // nested within a dehydrated boundary and if so, which one.\n        var suspenseInstance = getParentSuspenseInstance(targetNode);\n\n        while (suspenseInstance !== null) {\n          // We found a suspense instance. That means that we haven't\n          // hydrated it yet. Even though we leave the comments in the\n          // DOM after hydrating, and there are boundaries in the DOM\n          // that could already be hydrated, we wouldn't have found them\n          // through this pass since if the target is hydrated it would\n          // have had an internalInstanceKey on it.\n          // Let's get the fiber associated with the SuspenseComponent\n          // as the deepest instance.\n          var targetSuspenseInst = suspenseInstance[internalInstanceKey];\n\n          if (targetSuspenseInst) {\n            return targetSuspenseInst;\n          } // If we don't find a Fiber on the comment, it might be because\n          // we haven't gotten to hydrate it yet. There might still be a\n          // parent boundary that hasn't above this one so we need to find\n          // the outer most that is known.\n\n\n          suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent\n          // host component also hasn't hydrated yet. We can return it\n          // below since it will bail out on the isMounted check later.\n        }\n      }\n\n      return targetInst;\n    }\n\n    targetNode = parentNode;\n    parentNode = targetNode.parentNode;\n  }\n\n  return null;\n}\n/**\n * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n * instance, or null if the node was not rendered by this React.\n */\n\nfunction getInstanceFromNode(node) {\n  var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];\n\n  if (inst) {\n    if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {\n      return inst;\n    } else {\n      return null;\n    }\n  }\n\n  return null;\n}\n/**\n * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n * DOM node.\n */\n\nfunction getNodeFromInstance(inst) {\n  if (inst.tag === HostComponent || inst.tag === HostText) {\n    // In Fiber this, is just the state node right now. We assume it will be\n    // a host component or host text.\n    return inst.stateNode;\n  } // Without this first invariant, passing a non-DOM-component triggers the next\n  // invariant for a missing parent, which is super confusing.\n\n\n  throw new Error('getNodeFromInstance: Invalid argument.');\n}\nfunction getFiberCurrentPropsFromNode(node) {\n  return node[internalPropsKey] || null;\n}\nfunction updateFiberProps(node, props) {\n  node[internalPropsKey] = props;\n}\nfunction getEventListenerSet(node) {\n  var elementListenerSet = node[internalEventHandlersKey];\n\n  if (elementListenerSet === undefined) {\n    elementListenerSet = node[internalEventHandlersKey] = new Set();\n  }\n\n  return elementListenerSet;\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar valueStack = [];\nvar fiberStack;\n\n{\n  fiberStack = [];\n}\n\nvar index = -1;\n\nfunction createCursor(defaultValue) {\n  return {\n    current: defaultValue\n  };\n}\n\nfunction pop(cursor, fiber) {\n  if (index < 0) {\n    {\n      error('Unexpected pop.');\n    }\n\n    return;\n  }\n\n  {\n    if (fiber !== fiberStack[index]) {\n      error('Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n  valueStack[index] = null;\n\n  {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push(cursor, value, fiber) {\n  index++;\n  valueStack[index] = cursor.current;\n\n  {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nvar warnedAboutMissingGetChildContext;\n\n{\n  warnedAboutMissingGetChildContext = {};\n}\n\nvar emptyContextObject = {};\n\n{\n  Object.freeze(emptyContextObject);\n} // A cursor to the current merged context object on the stack.\n\n\nvar contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.\n\nvar didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\n\nvar previousContext = emptyContextObject;\n\nfunction getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {\n  {\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n      // If the fiber is a context provider itself, when we read its context\n      // we may have already pushed its own child context on the stack. A context\n      // provider should not \"see\" its own child context. Therefore we read the\n      // previous (parent) context instead for a context provider.\n      return previousContext;\n    }\n\n    return contextStackCursor.current;\n  }\n}\n\nfunction cacheContext(workInProgress, unmaskedContext, maskedContext) {\n  {\n    var instance = workInProgress.stateNode;\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n  }\n}\n\nfunction getMaskedContext(workInProgress, unmaskedContext) {\n  {\n    var type = workInProgress.type;\n    var contextTypes = type.contextTypes;\n\n    if (!contextTypes) {\n      return emptyContextObject;\n    } // Avoid recreating masked context unless unmasked context has changed.\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\n\n\n    var instance = workInProgress.stateNode;\n\n    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {\n      return instance.__reactInternalMemoizedMaskedChildContext;\n    }\n\n    var context = {};\n\n    for (var key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    {\n      var name = getComponentNameFromFiber(workInProgress) || 'Unknown';\n      checkPropTypes(contextTypes, context, 'context', name);\n    } // Cache unmasked context so we can avoid recreating masked context unless necessary.\n    // Context is created before the class component is instantiated so check for instance.\n\n\n    if (instance) {\n      cacheContext(workInProgress, unmaskedContext, context);\n    }\n\n    return context;\n  }\n}\n\nfunction hasContextChanged() {\n  {\n    return didPerformWorkStackCursor.current;\n  }\n}\n\nfunction isContextProvider(type) {\n  {\n    var childContextTypes = type.childContextTypes;\n    return childContextTypes !== null && childContextTypes !== undefined;\n  }\n}\n\nfunction popContext(fiber) {\n  {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction popTopLevelContextObject(fiber) {\n  {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction pushTopLevelContextObject(fiber, context, didChange) {\n  {\n    if (contextStackCursor.current !== emptyContextObject) {\n      throw new Error('Unexpected context found on stack. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n\n    push(contextStackCursor, context, fiber);\n    push(didPerformWorkStackCursor, didChange, fiber);\n  }\n}\n\nfunction processChildContext(fiber, type, parentContext) {\n  {\n    var instance = fiber.stateNode;\n    var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n\n    if (typeof instance.getChildContext !== 'function') {\n      {\n        var componentName = getComponentNameFromFiber(fiber) || 'Unknown';\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n\n          error('%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);\n        }\n      }\n\n      return parentContext;\n    }\n\n    var childContext = instance.getChildContext();\n\n    for (var contextKey in childContext) {\n      if (!(contextKey in childContextTypes)) {\n        throw new Error((getComponentNameFromFiber(fiber) || 'Unknown') + \".getChildContext(): key \\\"\" + contextKey + \"\\\" is not defined in childContextTypes.\");\n      }\n    }\n\n    {\n      var name = getComponentNameFromFiber(fiber) || 'Unknown';\n      checkPropTypes(childContextTypes, childContext, 'child context', name);\n    }\n\n    return assign({}, parentContext, childContext);\n  }\n}\n\nfunction pushContextProvider(workInProgress) {\n  {\n    var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.\n    // If the instance does not exist yet, we will push null at first,\n    // and replace it on the stack later when invalidating the context.\n\n    var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n\n    previousContext = contextStackCursor.current;\n    push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);\n    return true;\n  }\n}\n\nfunction invalidateContextProvider(workInProgress, type, didChange) {\n  {\n    var instance = workInProgress.stateNode;\n\n    if (!instance) {\n      throw new Error('Expected to have an instance by this point. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n\n    if (didChange) {\n      // Merge parent and own context.\n      // Skip this if we're not updating due to sCU.\n      // This avoids unnecessarily recomputing memoized values.\n      var mergedContext = processChildContext(workInProgress, type, previousContext);\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.\n      // It is important to unwind the context in the reverse order.\n\n      pop(didPerformWorkStackCursor, workInProgress);\n      pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.\n\n      push(contextStackCursor, mergedContext, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    } else {\n      pop(didPerformWorkStackCursor, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    }\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber) {\n  {\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n    // makes sense elsewhere\n    if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {\n      throw new Error('Expected subtree parent to be a mounted class component. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n\n    var node = fiber;\n\n    do {\n      switch (node.tag) {\n        case HostRoot:\n          return node.stateNode.context;\n\n        case ClassComponent:\n          {\n            var Component = node.type;\n\n            if (isContextProvider(Component)) {\n              return node.stateNode.__reactInternalMemoizedMergedChildContext;\n            }\n\n            break;\n          }\n      }\n\n      node = node.return;\n    } while (node !== null);\n\n    throw new Error('Found unexpected detached subtree parent. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n  }\n}\n\nvar LegacyRoot = 0;\nvar ConcurrentRoot = 1;\n\nvar syncQueue = null;\nvar includesLegacySyncCallbacks = false;\nvar isFlushingSyncQueue = false;\nfunction scheduleSyncCallback(callback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n}\nfunction scheduleLegacySyncCallback(callback) {\n  includesLegacySyncCallbacks = true;\n  scheduleSyncCallback(callback);\n}\nfunction flushSyncCallbacksOnlyInLegacyMode() {\n  // Only flushes the queue if there's a legacy sync callback scheduled.\n  // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So\n  // it might make more sense for the queue to be a list of roots instead of a\n  // list of generic callbacks. Then we can have two: one for legacy roots, one\n  // for concurrent roots. And this method would only flush the legacy ones.\n  if (includesLegacySyncCallbacks) {\n    flushSyncCallbacks();\n  }\n}\nfunction flushSyncCallbacks() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrance.\n    isFlushingSyncQueue = true;\n    var i = 0;\n    var previousUpdatePriority = getCurrentUpdatePriority();\n\n    try {\n      var isSync = true;\n      var queue = syncQueue; // TODO: Is this necessary anymore? The only user code that runs in this\n      // queue is in the render or commit phases.\n\n      setCurrentUpdatePriority(DiscreteEventPriority);\n\n      for (; i < queue.length; i++) {\n        var callback = queue[i];\n\n        do {\n          callback = callback(isSync);\n        } while (callback !== null);\n      }\n\n      syncQueue = null;\n      includesLegacySyncCallbacks = false;\n    } catch (error) {\n      // If something throws, leave the remaining callbacks on the queue.\n      if (syncQueue !== null) {\n        syncQueue = syncQueue.slice(i + 1);\n      } // Resume flushing in the next tick\n\n\n      scheduleCallback(ImmediatePriority, flushSyncCallbacks);\n      throw error;\n    } finally {\n      setCurrentUpdatePriority(previousUpdatePriority);\n      isFlushingSyncQueue = false;\n    }\n  }\n\n  return null;\n}\n\n// TODO: Use the unified fiber stack module instead of this local one?\n// Intentionally not using it yet to derisk the initial implementation, because\n// the way we push/pop these values is a bit unusual. If there's a mistake, I'd\n// rather the ids be wrong than crash the whole reconciler.\nvar forkStack = [];\nvar forkStackIndex = 0;\nvar treeForkProvider = null;\nvar treeForkCount = 0;\nvar idStack = [];\nvar idStackIndex = 0;\nvar treeContextProvider = null;\nvar treeContextId = 1;\nvar treeContextOverflow = '';\nfunction isForkedChild(workInProgress) {\n  warnIfNotHydrating();\n  return (workInProgress.flags & Forked) !== NoFlags;\n}\nfunction getForksAtLevel(workInProgress) {\n  warnIfNotHydrating();\n  return treeForkCount;\n}\nfunction getTreeId() {\n  var overflow = treeContextOverflow;\n  var idWithLeadingBit = treeContextId;\n  var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);\n  return id.toString(32) + overflow;\n}\nfunction pushTreeFork(workInProgress, totalChildren) {\n  // This is called right after we reconcile an array (or iterator) of child\n  // fibers, because that's the only place where we know how many children in\n  // the whole set without doing extra work later, or storing addtional\n  // information on the fiber.\n  //\n  // That's why this function is separate from pushTreeId — it's called during\n  // the render phase of the fork parent, not the child, which is where we push\n  // the other context values.\n  //\n  // In the Fizz implementation this is much simpler because the child is\n  // rendered in the same callstack as the parent.\n  //\n  // It might be better to just add a `forks` field to the Fiber type. It would\n  // make this module simpler.\n  warnIfNotHydrating();\n  forkStack[forkStackIndex++] = treeForkCount;\n  forkStack[forkStackIndex++] = treeForkProvider;\n  treeForkProvider = workInProgress;\n  treeForkCount = totalChildren;\n}\nfunction pushTreeId(workInProgress, totalChildren, index) {\n  warnIfNotHydrating();\n  idStack[idStackIndex++] = treeContextId;\n  idStack[idStackIndex++] = treeContextOverflow;\n  idStack[idStackIndex++] = treeContextProvider;\n  treeContextProvider = workInProgress;\n  var baseIdWithLeadingBit = treeContextId;\n  var baseOverflow = treeContextOverflow; // The leftmost 1 marks the end of the sequence, non-inclusive. It's not part\n  // of the id; we use it to account for leading 0s.\n\n  var baseLength = getBitLength(baseIdWithLeadingBit) - 1;\n  var baseId = baseIdWithLeadingBit & ~(1 << baseLength);\n  var slot = index + 1;\n  var length = getBitLength(totalChildren) + baseLength; // 30 is the max length we can store without overflowing, taking into\n  // consideration the leading 1 we use to mark the end of the sequence.\n\n  if (length > 30) {\n    // We overflowed the bitwise-safe range. Fall back to slower algorithm.\n    // This branch assumes the length of the base id is greater than 5; it won't\n    // work for smaller ids, because you need 5 bits per character.\n    //\n    // We encode the id in multiple steps: first the base id, then the\n    // remaining digits.\n    //\n    // Each 5 bit sequence corresponds to a single base 32 character. So for\n    // example, if the current id is 23 bits long, we can convert 20 of those\n    // bits into a string of 4 characters, with 3 bits left over.\n    //\n    // First calculate how many bits in the base id represent a complete\n    // sequence of characters.\n    var numberOfOverflowBits = baseLength - baseLength % 5; // Then create a bitmask that selects only those bits.\n\n    var newOverflowBits = (1 << numberOfOverflowBits) - 1; // Select the bits, and convert them to a base 32 string.\n\n    var newOverflow = (baseId & newOverflowBits).toString(32); // Now we can remove those bits from the base id.\n\n    var restOfBaseId = baseId >> numberOfOverflowBits;\n    var restOfBaseLength = baseLength - numberOfOverflowBits; // Finally, encode the rest of the bits using the normal algorithm. Because\n    // we made more room, this time it won't overflow.\n\n    var restOfLength = getBitLength(totalChildren) + restOfBaseLength;\n    var restOfNewBits = slot << restOfBaseLength;\n    var id = restOfNewBits | restOfBaseId;\n    var overflow = newOverflow + baseOverflow;\n    treeContextId = 1 << restOfLength | id;\n    treeContextOverflow = overflow;\n  } else {\n    // Normal path\n    var newBits = slot << baseLength;\n\n    var _id = newBits | baseId;\n\n    var _overflow = baseOverflow;\n    treeContextId = 1 << length | _id;\n    treeContextOverflow = _overflow;\n  }\n}\nfunction pushMaterializedTreeId(workInProgress) {\n  warnIfNotHydrating(); // This component materialized an id. This will affect any ids that appear\n  // in its children.\n\n  var returnFiber = workInProgress.return;\n\n  if (returnFiber !== null) {\n    var numberOfForks = 1;\n    var slotIndex = 0;\n    pushTreeFork(workInProgress, numberOfForks);\n    pushTreeId(workInProgress, numberOfForks, slotIndex);\n  }\n}\n\nfunction getBitLength(number) {\n  return 32 - clz32(number);\n}\n\nfunction getLeadingBit(id) {\n  return 1 << getBitLength(id) - 1;\n}\n\nfunction popTreeContext(workInProgress) {\n  // Restore the previous values.\n  // This is a bit more complicated than other context-like modules in Fiber\n  // because the same Fiber may appear on the stack multiple times and for\n  // different reasons. We have to keep popping until the work-in-progress is\n  // no longer at the top of the stack.\n  while (workInProgress === treeForkProvider) {\n    treeForkProvider = forkStack[--forkStackIndex];\n    forkStack[forkStackIndex] = null;\n    treeForkCount = forkStack[--forkStackIndex];\n    forkStack[forkStackIndex] = null;\n  }\n\n  while (workInProgress === treeContextProvider) {\n    treeContextProvider = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n    treeContextOverflow = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n    treeContextId = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n  }\n}\nfunction getSuspendedTreeContext() {\n  warnIfNotHydrating();\n\n  if (treeContextProvider !== null) {\n    return {\n      id: treeContextId,\n      overflow: treeContextOverflow\n    };\n  } else {\n    return null;\n  }\n}\nfunction restoreSuspendedTreeContext(workInProgress, suspendedContext) {\n  warnIfNotHydrating();\n  idStack[idStackIndex++] = treeContextId;\n  idStack[idStackIndex++] = treeContextOverflow;\n  idStack[idStackIndex++] = treeContextProvider;\n  treeContextId = suspendedContext.id;\n  treeContextOverflow = suspendedContext.overflow;\n  treeContextProvider = workInProgress;\n}\n\nfunction warnIfNotHydrating() {\n  {\n    if (!getIsHydrating()) {\n      error('Expected to be hydrating. This is a bug in React. Please file ' + 'an issue.');\n    }\n  }\n}\n\n// This may have been an insertion or a hydration.\n\nvar hydrationParentFiber = null;\nvar nextHydratableInstance = null;\nvar isHydrating = false; // This flag allows for warning supression when we expect there to be mismatches\n// due to earlier mismatches or a suspended fiber.\n\nvar didSuspendOrErrorDEV = false; // Hydration errors that were thrown inside this boundary\n\nvar hydrationErrors = null;\n\nfunction warnIfHydrating() {\n  {\n    if (isHydrating) {\n      error('We should not be hydrating here. This is a bug in React. Please file a bug.');\n    }\n  }\n}\n\nfunction markDidThrowWhileHydratingDEV() {\n  {\n    didSuspendOrErrorDEV = true;\n  }\n}\nfunction didSuspendOrErrorWhileHydratingDEV() {\n  {\n    return didSuspendOrErrorDEV;\n  }\n}\n\nfunction enterHydrationState(fiber) {\n\n  var parentInstance = fiber.stateNode.containerInfo;\n  nextHydratableInstance = getFirstHydratableChildWithinContainer(parentInstance);\n  hydrationParentFiber = fiber;\n  isHydrating = true;\n  hydrationErrors = null;\n  didSuspendOrErrorDEV = false;\n  return true;\n}\n\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {\n\n  nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);\n  hydrationParentFiber = fiber;\n  isHydrating = true;\n  hydrationErrors = null;\n  didSuspendOrErrorDEV = false;\n\n  if (treeContext !== null) {\n    restoreSuspendedTreeContext(fiber, treeContext);\n  }\n\n  return true;\n}\n\nfunction warnUnhydratedInstance(returnFiber, instance) {\n  {\n    switch (returnFiber.tag) {\n      case HostRoot:\n        {\n          didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo, instance);\n          break;\n        }\n\n      case HostComponent:\n        {\n          var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;\n          didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance, // TODO: Delete this argument when we remove the legacy root API.\n          isConcurrentMode);\n          break;\n        }\n\n      case SuspenseComponent:\n        {\n          var suspenseState = returnFiber.memoizedState;\n          if (suspenseState.dehydrated !== null) didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated, instance);\n          break;\n        }\n    }\n  }\n}\n\nfunction deleteHydratableInstance(returnFiber, instance) {\n  warnUnhydratedInstance(returnFiber, instance);\n  var childToDelete = createFiberFromHostInstanceForDeletion();\n  childToDelete.stateNode = instance;\n  childToDelete.return = returnFiber;\n  var deletions = returnFiber.deletions;\n\n  if (deletions === null) {\n    returnFiber.deletions = [childToDelete];\n    returnFiber.flags |= ChildDeletion;\n  } else {\n    deletions.push(childToDelete);\n  }\n}\n\nfunction warnNonhydratedInstance(returnFiber, fiber) {\n  {\n    if (didSuspendOrErrorDEV) {\n      // Inside a boundary that already suspended. We're currently rendering the\n      // siblings of a suspended node. The mismatch may be due to the missing\n      // data, so it's probably a false positive.\n      return;\n    }\n\n    switch (returnFiber.tag) {\n      case HostRoot:\n        {\n          var parentContainer = returnFiber.stateNode.containerInfo;\n\n          switch (fiber.tag) {\n            case HostComponent:\n              var type = fiber.type;\n              var props = fiber.pendingProps;\n              didNotFindHydratableInstanceWithinContainer(parentContainer, type);\n              break;\n\n            case HostText:\n              var text = fiber.pendingProps;\n              didNotFindHydratableTextInstanceWithinContainer(parentContainer, text);\n              break;\n          }\n\n          break;\n        }\n\n      case HostComponent:\n        {\n          var parentType = returnFiber.type;\n          var parentProps = returnFiber.memoizedProps;\n          var parentInstance = returnFiber.stateNode;\n\n          switch (fiber.tag) {\n            case HostComponent:\n              {\n                var _type = fiber.type;\n                var _props = fiber.pendingProps;\n                var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;\n                didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props, // TODO: Delete this argument when we remove the legacy root API.\n                isConcurrentMode);\n                break;\n              }\n\n            case HostText:\n              {\n                var _text = fiber.pendingProps;\n\n                var _isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;\n\n                didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text, // TODO: Delete this argument when we remove the legacy root API.\n                _isConcurrentMode);\n                break;\n              }\n          }\n\n          break;\n        }\n\n      case SuspenseComponent:\n        {\n          var suspenseState = returnFiber.memoizedState;\n          var _parentInstance = suspenseState.dehydrated;\n          if (_parentInstance !== null) switch (fiber.tag) {\n            case HostComponent:\n              var _type2 = fiber.type;\n              var _props2 = fiber.pendingProps;\n              didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance, _type2);\n              break;\n\n            case HostText:\n              var _text2 = fiber.pendingProps;\n              didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance, _text2);\n              break;\n          }\n          break;\n        }\n\n      default:\n        return;\n    }\n  }\n}\n\nfunction insertNonHydratedInstance(returnFiber, fiber) {\n  fiber.flags = fiber.flags & ~Hydrating | Placement;\n  warnNonhydratedInstance(returnFiber, fiber);\n}\n\nfunction tryHydrate(fiber, nextInstance) {\n  switch (fiber.tag) {\n    case HostComponent:\n      {\n        var type = fiber.type;\n        var props = fiber.pendingProps;\n        var instance = canHydrateInstance(nextInstance, type);\n\n        if (instance !== null) {\n          fiber.stateNode = instance;\n          hydrationParentFiber = fiber;\n          nextHydratableInstance = getFirstHydratableChild(instance);\n          return true;\n        }\n\n        return false;\n      }\n\n    case HostText:\n      {\n        var text = fiber.pendingProps;\n        var textInstance = canHydrateTextInstance(nextInstance, text);\n\n        if (textInstance !== null) {\n          fiber.stateNode = textInstance;\n          hydrationParentFiber = fiber; // Text Instances don't have children so there's nothing to hydrate.\n\n          nextHydratableInstance = null;\n          return true;\n        }\n\n        return false;\n      }\n\n    case SuspenseComponent:\n      {\n        var suspenseInstance = canHydrateSuspenseInstance(nextInstance);\n\n        if (suspenseInstance !== null) {\n          var suspenseState = {\n            dehydrated: suspenseInstance,\n            treeContext: getSuspendedTreeContext(),\n            retryLane: OffscreenLane\n          };\n          fiber.memoizedState = suspenseState; // Store the dehydrated fragment as a child fiber.\n          // This simplifies the code for getHostSibling and deleting nodes,\n          // since it doesn't have to consider all Suspense boundaries and\n          // check if they're dehydrated ones or not.\n\n          var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);\n          dehydratedFragment.return = fiber;\n          fiber.child = dehydratedFragment;\n          hydrationParentFiber = fiber; // While a Suspense Instance does have children, we won't step into\n          // it during the first pass. Instead, we'll reenter it later.\n\n          nextHydratableInstance = null;\n          return true;\n        }\n\n        return false;\n      }\n\n    default:\n      return false;\n  }\n}\n\nfunction shouldClientRenderOnMismatch(fiber) {\n  return (fiber.mode & ConcurrentMode) !== NoMode && (fiber.flags & DidCapture) === NoFlags;\n}\n\nfunction throwOnHydrationMismatch(fiber) {\n  throw new Error('Hydration failed because the initial UI does not match what was ' + 'rendered on the server.');\n}\n\nfunction tryToClaimNextHydratableInstance(fiber) {\n  if (!isHydrating) {\n    return;\n  }\n\n  var nextInstance = nextHydratableInstance;\n\n  if (!nextInstance) {\n    if (shouldClientRenderOnMismatch(fiber)) {\n      warnNonhydratedInstance(hydrationParentFiber, fiber);\n      throwOnHydrationMismatch();\n    } // Nothing to hydrate. Make it an insertion.\n\n\n    insertNonHydratedInstance(hydrationParentFiber, fiber);\n    isHydrating = false;\n    hydrationParentFiber = fiber;\n    return;\n  }\n\n  var firstAttemptedInstance = nextInstance;\n\n  if (!tryHydrate(fiber, nextInstance)) {\n    if (shouldClientRenderOnMismatch(fiber)) {\n      warnNonhydratedInstance(hydrationParentFiber, fiber);\n      throwOnHydrationMismatch();\n    } // If we can't hydrate this instance let's try the next one.\n    // We use this as a heuristic. It's based on intuition and not data so it\n    // might be flawed or unnecessary.\n\n\n    nextInstance = getNextHydratableSibling(firstAttemptedInstance);\n    var prevHydrationParentFiber = hydrationParentFiber;\n\n    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {\n      // Nothing to hydrate. Make it an insertion.\n      insertNonHydratedInstance(hydrationParentFiber, fiber);\n      isHydrating = false;\n      hydrationParentFiber = fiber;\n      return;\n    } // We matched the next one, we'll now assume that the first one was\n    // superfluous and we'll delete it. Since we can't eagerly delete it\n    // we'll have to schedule a deletion. To do that, this node needs a dummy\n    // fiber associated with it.\n\n\n    deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);\n  }\n}\n\nfunction prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {\n\n  var instance = fiber.stateNode;\n  var shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;\n  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber, shouldWarnIfMismatchDev); // TODO: Type this specific to this type of component.\n\n  fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there\n  // is a new ref we mark this as an update.\n\n  if (updatePayload !== null) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction prepareToHydrateHostTextInstance(fiber) {\n\n  var textInstance = fiber.stateNode;\n  var textContent = fiber.memoizedProps;\n  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);\n\n  if (shouldUpdate) {\n    // We assume that prepareToHydrateHostTextInstance is called in a context where the\n    // hydration parent is the parent host component of this host text.\n    var returnFiber = hydrationParentFiber;\n\n    if (returnFiber !== null) {\n      switch (returnFiber.tag) {\n        case HostRoot:\n          {\n            var parentContainer = returnFiber.stateNode.containerInfo;\n            var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;\n            didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent, // TODO: Delete this argument when we remove the legacy root API.\n            isConcurrentMode);\n            break;\n          }\n\n        case HostComponent:\n          {\n            var parentType = returnFiber.type;\n            var parentProps = returnFiber.memoizedProps;\n            var parentInstance = returnFiber.stateNode;\n\n            var _isConcurrentMode2 = (returnFiber.mode & ConcurrentMode) !== NoMode;\n\n            didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent, // TODO: Delete this argument when we remove the legacy root API.\n            _isConcurrentMode2);\n            break;\n          }\n      }\n    }\n  }\n\n  return shouldUpdate;\n}\n\nfunction prepareToHydrateHostSuspenseInstance(fiber) {\n\n  var suspenseState = fiber.memoizedState;\n  var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;\n\n  if (!suspenseInstance) {\n    throw new Error('Expected to have a hydrated suspense instance. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n  }\n\n  hydrateSuspenseInstance(suspenseInstance, fiber);\n}\n\nfunction skipPastDehydratedSuspenseInstance(fiber) {\n\n  var suspenseState = fiber.memoizedState;\n  var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;\n\n  if (!suspenseInstance) {\n    throw new Error('Expected to have a hydrated suspense instance. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n  }\n\n  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);\n}\n\nfunction popToNextHostParent(fiber) {\n  var parent = fiber.return;\n\n  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {\n    parent = parent.return;\n  }\n\n  hydrationParentFiber = parent;\n}\n\nfunction popHydrationState(fiber) {\n\n  if (fiber !== hydrationParentFiber) {\n    // We're deeper than the current hydration context, inside an inserted\n    // tree.\n    return false;\n  }\n\n  if (!isHydrating) {\n    // If we're not currently hydrating but we're in a hydration context, then\n    // we were an insertion and now need to pop up reenter hydration of our\n    // siblings.\n    popToNextHostParent(fiber);\n    isHydrating = true;\n    return false;\n  } // If we have any remaining hydratable nodes, we need to delete them now.\n  // We only do this deeper than head and body since they tend to have random\n  // other nodes in them. We also ignore components with pure text content in\n  // side of them. We also don't delete anything inside the root container.\n\n\n  if (fiber.tag !== HostRoot && (fiber.tag !== HostComponent || shouldDeleteUnhydratedTailInstances(fiber.type) && !shouldSetTextContent(fiber.type, fiber.memoizedProps))) {\n    var nextInstance = nextHydratableInstance;\n\n    if (nextInstance) {\n      if (shouldClientRenderOnMismatch(fiber)) {\n        warnIfUnhydratedTailNodes(fiber);\n        throwOnHydrationMismatch();\n      } else {\n        while (nextInstance) {\n          deleteHydratableInstance(fiber, nextInstance);\n          nextInstance = getNextHydratableSibling(nextInstance);\n        }\n      }\n    }\n  }\n\n  popToNextHostParent(fiber);\n\n  if (fiber.tag === SuspenseComponent) {\n    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);\n  } else {\n    nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;\n  }\n\n  return true;\n}\n\nfunction hasUnhydratedTailNodes() {\n  return isHydrating && nextHydratableInstance !== null;\n}\n\nfunction warnIfUnhydratedTailNodes(fiber) {\n  var nextInstance = nextHydratableInstance;\n\n  while (nextInstance) {\n    warnUnhydratedInstance(fiber, nextInstance);\n    nextInstance = getNextHydratableSibling(nextInstance);\n  }\n}\n\nfunction resetHydrationState() {\n\n  hydrationParentFiber = null;\n  nextHydratableInstance = null;\n  isHydrating = false;\n  didSuspendOrErrorDEV = false;\n}\n\nfunction upgradeHydrationErrorsToRecoverable() {\n  if (hydrationErrors !== null) {\n    // Successfully completed a forced client render. The errors that occurred\n    // during the hydration attempt are now recovered. We will log them in\n    // commit phase, once the entire tree has finished.\n    queueRecoverableErrors(hydrationErrors);\n    hydrationErrors = null;\n  }\n}\n\nfunction getIsHydrating() {\n  return isHydrating;\n}\n\nfunction queueHydrationError(error) {\n  if (hydrationErrors === null) {\n    hydrationErrors = [error];\n  } else {\n    hydrationErrors.push(error);\n  }\n}\n\nvar ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;\nvar NoTransition = null;\nfunction requestCurrentTransition() {\n  return ReactCurrentBatchConfig$1.transition;\n}\n\nvar ReactStrictModeWarnings = {\n  recordUnsafeLifecycleWarnings: function (fiber, instance) {},\n  flushPendingUnsafeLifecycleWarnings: function () {},\n  recordLegacyContextWarning: function (fiber, instance) {},\n  flushLegacyContextWarning: function () {},\n  discardPendingWarnings: function () {}\n};\n\n{\n  var findStrictRoot = function (fiber) {\n    var maybeStrictRoot = null;\n    var node = fiber;\n\n    while (node !== null) {\n      if (node.mode & StrictLegacyMode) {\n        maybeStrictRoot = node;\n      }\n\n      node = node.return;\n    }\n\n    return maybeStrictRoot;\n  };\n\n  var setToSortedString = function (set) {\n    var array = [];\n    set.forEach(function (value) {\n      array.push(value);\n    });\n    return array.sort().join(', ');\n  };\n\n  var pendingComponentWillMountWarnings = [];\n  var pendingUNSAFE_ComponentWillMountWarnings = [];\n  var pendingComponentWillReceivePropsWarnings = [];\n  var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n  var pendingComponentWillUpdateWarnings = [];\n  var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.\n\n  var didWarnAboutUnsafeLifecycles = new Set();\n\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {\n    // Dedupe strategy: Warn once per component.\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    if (typeof instance.componentWillMount === 'function' && // Don't warn about react-lifecycles-compat polyfilled components.\n    instance.componentWillMount.__suppressDeprecationWarning !== true) {\n      pendingComponentWillMountWarnings.push(fiber);\n    }\n\n    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === 'function') {\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n    }\n\n    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n      pendingComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n      pendingComponentWillUpdateWarnings.push(fiber);\n    }\n\n    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === 'function') {\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {\n    // We do an initial pass to gather component names\n    var componentWillMountUniqueNames = new Set();\n\n    if (pendingComponentWillMountWarnings.length > 0) {\n      pendingComponentWillMountWarnings.forEach(function (fiber) {\n        componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillMountWarnings = [];\n    }\n\n    var UNSAFE_componentWillMountUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {\n        UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillMountWarnings = [];\n    }\n\n    var componentWillReceivePropsUniqueNames = new Set();\n\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\n      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {\n        componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillReceivePropsWarnings = [];\n    }\n\n    var UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {\n        UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    }\n\n    var componentWillUpdateUniqueNames = new Set();\n\n    if (pendingComponentWillUpdateWarnings.length > 0) {\n      pendingComponentWillUpdateWarnings.forEach(function (fiber) {\n        componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillUpdateWarnings = [];\n    }\n\n    var UNSAFE_componentWillUpdateUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {\n        UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    } // Finally, we flush all the warnings\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\n\n\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n      var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);\n\n      error('Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' + '\\nPlease update the following components: %s', sortedNames);\n    }\n\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n      var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);\n\n      error('Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + \"* If you're updating state whenever props change, \" + 'refactor your code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' + '\\nPlease update the following components: %s', _sortedNames);\n    }\n\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n      var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);\n\n      error('Using UNSAFE_componentWillUpdate in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + '\\nPlease update the following components: %s', _sortedNames2);\n    }\n\n    if (componentWillMountUniqueNames.size > 0) {\n      var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);\n\n      warn('componentWillMount has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' + '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' + '\\nPlease update the following components: %s', _sortedNames3);\n    }\n\n    if (componentWillReceivePropsUniqueNames.size > 0) {\n      var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);\n\n      warn('componentWillReceiveProps has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + \"* If you're updating state whenever props change, refactor your \" + 'code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' + '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' + '\\nPlease update the following components: %s', _sortedNames4);\n    }\n\n    if (componentWillUpdateUniqueNames.size > 0) {\n      var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);\n\n      warn('componentWillUpdate has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' + '\\nPlease update the following components: %s', _sortedNames5);\n    }\n  };\n\n  var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.\n\n  var didWarnAboutLegacyContext = new Set();\n\n  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {\n    var strictRoot = findStrictRoot(fiber);\n\n    if (strictRoot === null) {\n      error('Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n\n      return;\n    } // Dedup strategy: Warn once per component.\n\n\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\n      return;\n    }\n\n    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {\n      if (warningsForRoot === undefined) {\n        warningsForRoot = [];\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n      }\n\n      warningsForRoot.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushLegacyContextWarning = function () {\n    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {\n      if (fiberArray.length === 0) {\n        return;\n      }\n\n      var firstFiber = fiberArray[0];\n      var uniqueNames = new Set();\n      fiberArray.forEach(function (fiber) {\n        uniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutLegacyContext.add(fiber.type);\n      });\n      var sortedNames = setToSortedString(uniqueNames);\n\n      try {\n        setCurrentFiber(firstFiber);\n\n        error('Legacy context API has been detected within a strict-mode tree.' + '\\n\\nThe old API will be supported in all 16.x releases, but applications ' + 'using it should migrate to the new version.' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context', sortedNames);\n      } finally {\n        resetCurrentFiber();\n      }\n    });\n  };\n\n  ReactStrictModeWarnings.discardPendingWarnings = function () {\n    pendingComponentWillMountWarnings = [];\n    pendingUNSAFE_ComponentWillMountWarnings = [];\n    pendingComponentWillReceivePropsWarnings = [];\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    pendingComponentWillUpdateWarnings = [];\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    pendingLegacyContextWarning = new Map();\n  };\n}\n\nfunction resolveDefaultProps(Component, baseProps) {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    var props = assign({}, baseProps);\n    var defaultProps = Component.defaultProps;\n\n    for (var propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n\n    return props;\n  }\n\n  return baseProps;\n}\n\nvar valueCursor = createCursor(null);\nvar rendererSigil;\n\n{\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\nvar currentlyRenderingFiber = null;\nvar lastContextDependency = null;\nvar lastFullyObservedContext = null;\nvar isDisallowedContextReadInDEV = false;\nfunction resetContextDependencies() {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n\n  {\n    isDisallowedContextReadInDEV = false;\n  }\n}\nfunction enterDisallowedContextReadInDEV() {\n  {\n    isDisallowedContextReadInDEV = true;\n  }\n}\nfunction exitDisallowedContextReadInDEV() {\n  {\n    isDisallowedContextReadInDEV = false;\n  }\n}\nfunction pushProvider(providerFiber, context, nextValue) {\n  {\n    push(valueCursor, context._currentValue, providerFiber);\n    context._currentValue = nextValue;\n\n    {\n      if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {\n        error('Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.');\n      }\n\n      context._currentRenderer = rendererSigil;\n    }\n  }\n}\nfunction popProvider(context, providerFiber) {\n  var currentValue = valueCursor.current;\n  pop(valueCursor, providerFiber);\n\n  {\n    {\n      context._currentValue = currentValue;\n    }\n  }\n}\nfunction scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n  // Update the child lanes of all the ancestors, including the alternates.\n  var node = parent;\n\n  while (node !== null) {\n    var alternate = node.alternate;\n\n    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n      node.childLanes = mergeLanes(node.childLanes, renderLanes);\n\n      if (alternate !== null) {\n        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n      }\n    } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n    }\n\n    if (node === propagationRoot) {\n      break;\n    }\n\n    node = node.return;\n  }\n\n  {\n    if (node !== propagationRoot) {\n      error('Expected to find the propagation root when scheduling context work. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n  }\n}\nfunction propagateContextChange(workInProgress, context, renderLanes) {\n  {\n    propagateContextChange_eager(workInProgress, context, renderLanes);\n  }\n}\n\nfunction propagateContextChange_eager(workInProgress, context, renderLanes) {\n\n  var fiber = workInProgress.child;\n\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n\n  while (fiber !== null) {\n    var nextFiber = void 0; // Visit this fiber.\n\n    var list = fiber.dependencies;\n\n    if (list !== null) {\n      nextFiber = fiber.child;\n      var dependency = list.firstContext;\n\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (dependency.context === context) {\n          // Match! Schedule an update on this fiber.\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            var lane = pickArbitraryLane(renderLanes);\n            var update = createUpdate(NoTimestamp, lane);\n            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n            // Inlined `enqueueUpdate` to remove interleaved update check\n\n            var updateQueue = fiber.updateQueue;\n\n            if (updateQueue === null) ; else {\n              var sharedQueue = updateQueue.shared;\n              var pending = sharedQueue.pending;\n\n              if (pending === null) {\n                // This is the first update. Create a circular list.\n                update.next = update;\n              } else {\n                update.next = pending.next;\n                pending.next = update;\n              }\n\n              sharedQueue.pending = update;\n            }\n          }\n\n          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n          var alternate = fiber.alternate;\n\n          if (alternate !== null) {\n            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n          }\n\n          scheduleContextWorkOnParentPath(fiber.return, renderLanes, workInProgress); // Mark the updated lanes on the list, too.\n\n          list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the\n          // dependency list.\n\n          break;\n        }\n\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else if (fiber.tag === DehydratedFragment) {\n      // If a dehydrated suspense boundary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      var parentSuspense = fiber.return;\n\n      if (parentSuspense === null) {\n        throw new Error('We just came from a parent so we must have had a parent. This is a bug in React.');\n      }\n\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n      var _alternate = parentSuspense.alternate;\n\n      if (_alternate !== null) {\n        _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);\n      } // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childLanes on\n      // this fiber to indicate that a context has changed.\n\n\n      scheduleContextWorkOnParentPath(parentSuspense, renderLanes, workInProgress);\n      nextFiber = fiber.sibling;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n\n        var sibling = nextFiber.sibling;\n\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        } // No more siblings. Traverse up.\n\n\n        nextFiber = nextFiber.return;\n      }\n    }\n\n    fiber = nextFiber;\n  }\n}\nfunction prepareToReadContext(workInProgress, renderLanes) {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n  var dependencies = workInProgress.dependencies;\n\n  if (dependencies !== null) {\n    {\n      var firstContext = dependencies.firstContext;\n\n      if (firstContext !== null) {\n        if (includesSomeLane(dependencies.lanes, renderLanes)) {\n          // Context list has a pending update. Mark that this fiber performed work.\n          markWorkInProgressReceivedUpdate();\n        } // Reset the work-in-progress list\n\n\n        dependencies.firstContext = null;\n      }\n    }\n  }\n}\nfunction readContext(context) {\n  {\n    // This warning would fire if you read context inside a Hook like useMemo.\n    // Unlike the class check below, it's not enforced in production for perf.\n    if (isDisallowedContextReadInDEV) {\n      error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');\n    }\n  }\n\n  var value =  context._currentValue ;\n\n  if (lastFullyObservedContext === context) ; else {\n    var contextItem = {\n      context: context,\n      memoizedValue: value,\n      next: null\n    };\n\n    if (lastContextDependency === null) {\n      if (currentlyRenderingFiber === null) {\n        throw new Error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');\n      } // This is the first dependency for this component. Create a new list.\n\n\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.dependencies = {\n        lanes: NoLanes,\n        firstContext: contextItem\n      };\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n\n  return value;\n}\n\n// render. When this render exits, either because it finishes or because it is\n// interrupted, the interleaved updates will be transferred onto the main part\n// of the queue.\n\nvar concurrentQueues = null;\nfunction pushConcurrentUpdateQueue(queue) {\n  if (concurrentQueues === null) {\n    concurrentQueues = [queue];\n  } else {\n    concurrentQueues.push(queue);\n  }\n}\nfunction finishQueueingConcurrentUpdates() {\n  // Transfer the interleaved updates onto the main queue. Each queue has a\n  // `pending` field and an `interleaved` field. When they are not null, they\n  // point to the last node in a circular linked list. We need to append the\n  // interleaved list to the end of the pending list by joining them into a\n  // single, circular list.\n  if (concurrentQueues !== null) {\n    for (var i = 0; i < concurrentQueues.length; i++) {\n      var queue = concurrentQueues[i];\n      var lastInterleavedUpdate = queue.interleaved;\n\n      if (lastInterleavedUpdate !== null) {\n        queue.interleaved = null;\n        var firstInterleavedUpdate = lastInterleavedUpdate.next;\n        var lastPendingUpdate = queue.pending;\n\n        if (lastPendingUpdate !== null) {\n          var firstPendingUpdate = lastPendingUpdate.next;\n          lastPendingUpdate.next = firstInterleavedUpdate;\n          lastInterleavedUpdate.next = firstPendingUpdate;\n        }\n\n        queue.pending = lastInterleavedUpdate;\n      }\n    }\n\n    concurrentQueues = null;\n  }\n}\nfunction enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\n  var interleaved = queue.interleaved;\n\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n\n  queue.interleaved = update;\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n}\nfunction enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {\n  var interleaved = queue.interleaved;\n\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n\n  queue.interleaved = update;\n}\nfunction enqueueConcurrentClassUpdate(fiber, queue, update, lane) {\n  var interleaved = queue.interleaved;\n\n  if (interleaved === null) {\n    // This is the first update. Create a circular list.\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\n    // be transferred to the pending queue.\n\n    pushConcurrentUpdateQueue(queue);\n  } else {\n    update.next = interleaved.next;\n    interleaved.next = update;\n  }\n\n  queue.interleaved = update;\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n}\nfunction enqueueConcurrentRenderForLane(fiber, lane) {\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\n} // Calling this function outside this module should only be done for backwards\n// compatibility and should always be accompanied by a warning.\n\nvar unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;\n\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, lane) {\n  // Update the source fiber's lanes\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n  var alternate = sourceFiber.alternate;\n\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\n  }\n\n  {\n    if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {\n      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n    }\n  } // Walk the parent path to the root and update the child lanes.\n\n\n  var node = sourceFiber;\n  var parent = sourceFiber.return;\n\n  while (parent !== null) {\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\n    alternate = parent.alternate;\n\n    if (alternate !== null) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n    } else {\n      {\n        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n    }\n\n    node = parent;\n    parent = parent.return;\n  }\n\n  if (node.tag === HostRoot) {\n    var root = node.stateNode;\n    return root;\n  } else {\n    return null;\n  }\n}\n\nvar UpdateState = 0;\nvar ReplaceState = 1;\nvar ForceUpdate = 2;\nvar CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\n\nvar hasForceUpdate = false;\nvar didWarnUpdateInsideUpdate;\nvar currentlyProcessingQueue;\n\n{\n  didWarnUpdateInsideUpdate = false;\n  currentlyProcessingQueue = null;\n}\n\nfunction initializeUpdateQueue(fiber) {\n  var queue = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      pending: null,\n      interleaved: null,\n      lanes: NoLanes\n    },\n    effects: null\n  };\n  fiber.updateQueue = queue;\n}\nfunction cloneUpdateQueue(current, workInProgress) {\n  // Clone the update queue from current. Unless it's already a clone.\n  var queue = workInProgress.updateQueue;\n  var currentQueue = current.updateQueue;\n\n  if (queue === currentQueue) {\n    var clone = {\n      baseState: currentQueue.baseState,\n      firstBaseUpdate: currentQueue.firstBaseUpdate,\n      lastBaseUpdate: currentQueue.lastBaseUpdate,\n      shared: currentQueue.shared,\n      effects: currentQueue.effects\n    };\n    workInProgress.updateQueue = clone;\n  }\n}\nfunction createUpdate(eventTime, lane) {\n  var update = {\n    eventTime: eventTime,\n    lane: lane,\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n    next: null\n  };\n  return update;\n}\nfunction enqueueUpdate(fiber, update, lane) {\n  var updateQueue = fiber.updateQueue;\n\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return null;\n  }\n\n  var sharedQueue = updateQueue.shared;\n\n  {\n    if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {\n      error('An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');\n\n      didWarnUpdateInsideUpdate = true;\n    }\n  }\n\n  if (isUnsafeClassRenderPhaseUpdate()) {\n    // This is an unsafe render phase update. Add directly to the update\n    // queue so we can process it immediately during the current render.\n    var pending = sharedQueue.pending;\n\n    if (pending === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n    } else {\n      update.next = pending.next;\n      pending.next = update;\n    }\n\n    sharedQueue.pending = update; // Update the childLanes even though we're most likely already rendering\n    // this fiber. This is for backwards compatibility in the case where you\n    // update a different component during render phase than the one that is\n    // currently renderings (a pattern that is accompanied by a warning).\n\n    return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);\n  } else {\n    return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);\n  }\n}\nfunction entangleTransitions(root, fiber, lane) {\n  var updateQueue = fiber.updateQueue;\n\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  var sharedQueue = updateQueue.shared;\n\n  if (isTransitionLane(lane)) {\n    var queueLanes = sharedQueue.lanes; // If any entangled lanes are no longer pending on the root, then they must\n    // have finished. We can remove them from the shared queue, which represents\n    // a superset of the actually pending lanes. In some cases we may entangle\n    // more than we need to, but that's OK. In fact it's worse if we *don't*\n    // entangle when we should.\n\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.\n\n    var newQueueLanes = mergeLanes(queueLanes, lane);\n    sharedQueue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n\n    markRootEntangled(root, newQueueLanes);\n  }\n}\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n  // Captured updates are updates that are thrown by a child during the render\n  // phase. They should be discarded if the render is aborted. Therefore,\n  // we should only put them on the work-in-progress queue, not the current one.\n  var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.\n\n  var current = workInProgress.alternate;\n\n  if (current !== null) {\n    var currentQueue = current.updateQueue;\n\n    if (queue === currentQueue) {\n      // The work-in-progress queue is the same as current. This happens when\n      // we bail out on a parent fiber that then captures an error thrown by\n      // a child. Since we want to append the update only to the work-in\n      // -progress queue, we need to clone the updates. We usually clone during\n      // processUpdateQueue, but that didn't happen in this case because we\n      // skipped over the parent when we bailed out.\n      var newFirst = null;\n      var newLast = null;\n      var firstBaseUpdate = queue.firstBaseUpdate;\n\n      if (firstBaseUpdate !== null) {\n        // Loop through the updates and clone them.\n        var update = firstBaseUpdate;\n\n        do {\n          var clone = {\n            eventTime: update.eventTime,\n            lane: update.lane,\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n            next: null\n          };\n\n          if (newLast === null) {\n            newFirst = newLast = clone;\n          } else {\n            newLast.next = clone;\n            newLast = clone;\n          }\n\n          update = update.next;\n        } while (update !== null); // Append the captured update the end of the cloned list.\n\n\n        if (newLast === null) {\n          newFirst = newLast = capturedUpdate;\n        } else {\n          newLast.next = capturedUpdate;\n          newLast = capturedUpdate;\n        }\n      } else {\n        // There are no base updates.\n        newFirst = newLast = capturedUpdate;\n      }\n\n      queue = {\n        baseState: currentQueue.baseState,\n        firstBaseUpdate: newFirst,\n        lastBaseUpdate: newLast,\n        shared: currentQueue.shared,\n        effects: currentQueue.effects\n      };\n      workInProgress.updateQueue = queue;\n      return;\n    }\n  } // Append the update to the end of the list.\n\n\n  var lastBaseUpdate = queue.lastBaseUpdate;\n\n  if (lastBaseUpdate === null) {\n    queue.firstBaseUpdate = capturedUpdate;\n  } else {\n    lastBaseUpdate.next = capturedUpdate;\n  }\n\n  queue.lastBaseUpdate = capturedUpdate;\n}\n\nfunction getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {\n  switch (update.tag) {\n    case ReplaceState:\n      {\n        var payload = update.payload;\n\n        if (typeof payload === 'function') {\n          // Updater function\n          {\n            enterDisallowedContextReadInDEV();\n          }\n\n          var nextState = payload.call(instance, prevState, nextProps);\n\n          {\n            if ( workInProgress.mode & StrictLegacyMode) {\n              setIsStrictModeForDevtools(true);\n\n              try {\n                payload.call(instance, prevState, nextProps);\n              } finally {\n                setIsStrictModeForDevtools(false);\n              }\n            }\n\n            exitDisallowedContextReadInDEV();\n          }\n\n          return nextState;\n        } // State object\n\n\n        return payload;\n      }\n\n    case CaptureUpdate:\n      {\n        workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;\n      }\n    // Intentional fallthrough\n\n    case UpdateState:\n      {\n        var _payload = update.payload;\n        var partialState;\n\n        if (typeof _payload === 'function') {\n          // Updater function\n          {\n            enterDisallowedContextReadInDEV();\n          }\n\n          partialState = _payload.call(instance, prevState, nextProps);\n\n          {\n            if ( workInProgress.mode & StrictLegacyMode) {\n              setIsStrictModeForDevtools(true);\n\n              try {\n                _payload.call(instance, prevState, nextProps);\n              } finally {\n                setIsStrictModeForDevtools(false);\n              }\n            }\n\n            exitDisallowedContextReadInDEV();\n          }\n        } else {\n          // Partial state object\n          partialState = _payload;\n        }\n\n        if (partialState === null || partialState === undefined) {\n          // Null and undefined are treated as no-ops.\n          return prevState;\n        } // Merge the partial state and the previous state.\n\n\n        return assign({}, prevState, partialState);\n      }\n\n    case ForceUpdate:\n      {\n        hasForceUpdate = true;\n        return prevState;\n      }\n  }\n\n  return prevState;\n}\n\nfunction processUpdateQueue(workInProgress, props, instance, renderLanes) {\n  // This is always non-null on a ClassComponent or HostRoot\n  var queue = workInProgress.updateQueue;\n  hasForceUpdate = false;\n\n  {\n    currentlyProcessingQueue = queue.shared;\n  }\n\n  var firstBaseUpdate = queue.firstBaseUpdate;\n  var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.\n\n  var pendingQueue = queue.shared.pending;\n\n  if (pendingQueue !== null) {\n    queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first\n    // and last so that it's non-circular.\n\n    var lastPendingUpdate = pendingQueue;\n    var firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null; // Append pending updates to base queue\n\n    if (lastBaseUpdate === null) {\n      firstBaseUpdate = firstPendingUpdate;\n    } else {\n      lastBaseUpdate.next = firstPendingUpdate;\n    }\n\n    lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then\n    // we need to transfer the updates to that queue, too. Because the base\n    // queue is a singly-linked list with no cycles, we can append to both\n    // lists and take advantage of structural sharing.\n    // TODO: Pass `current` as argument\n\n    var current = workInProgress.alternate;\n\n    if (current !== null) {\n      // This is always non-null on a ClassComponent or HostRoot\n      var currentQueue = current.updateQueue;\n      var currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\n        if (currentLastBaseUpdate === null) {\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\n        } else {\n          currentLastBaseUpdate.next = firstPendingUpdate;\n        }\n\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\n      }\n    }\n  } // These values may change as we process the queue.\n\n\n  if (firstBaseUpdate !== null) {\n    // Iterate through the list of updates to compute the result.\n    var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes\n    // from the original lanes.\n\n    var newLanes = NoLanes;\n    var newBaseState = null;\n    var newFirstBaseUpdate = null;\n    var newLastBaseUpdate = null;\n    var update = firstBaseUpdate;\n\n    do {\n      var updateLane = update.lane;\n      var updateEventTime = update.eventTime;\n\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        var clone = {\n          eventTime: updateEventTime,\n          lane: updateLane,\n          tag: update.tag,\n          payload: update.payload,\n          callback: update.callback,\n          next: null\n        };\n\n        if (newLastBaseUpdate === null) {\n          newFirstBaseUpdate = newLastBaseUpdate = clone;\n          newBaseState = newState;\n        } else {\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        } // Update the remaining priority in the queue.\n\n\n        newLanes = mergeLanes(newLanes, updateLane);\n      } else {\n        // This update does have sufficient priority.\n        if (newLastBaseUpdate !== null) {\n          var _clone = {\n            eventTime: updateEventTime,\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n            next: null\n          };\n          newLastBaseUpdate = newLastBaseUpdate.next = _clone;\n        } // Process this update.\n\n\n        newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);\n        var callback = update.callback;\n\n        if (callback !== null && // If the update was already committed, we should not queue its\n        // callback again.\n        update.lane !== NoLane) {\n          workInProgress.flags |= Callback;\n          var effects = queue.effects;\n\n          if (effects === null) {\n            queue.effects = [update];\n          } else {\n            effects.push(update);\n          }\n        }\n      }\n\n      update = update.next;\n\n      if (update === null) {\n        pendingQueue = queue.shared.pending;\n\n        if (pendingQueue === null) {\n          break;\n        } else {\n          // An update was scheduled from inside a reducer. Add the new\n          // pending updates to the end of the list and keep processing.\n          var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we\n          // unravel them when transferring them to the base queue.\n\n          var _firstPendingUpdate = _lastPendingUpdate.next;\n          _lastPendingUpdate.next = null;\n          update = _firstPendingUpdate;\n          queue.lastBaseUpdate = _lastPendingUpdate;\n          queue.shared.pending = null;\n        }\n      }\n    } while (true);\n\n    if (newLastBaseUpdate === null) {\n      newBaseState = newState;\n    }\n\n    queue.baseState = newBaseState;\n    queue.firstBaseUpdate = newFirstBaseUpdate;\n    queue.lastBaseUpdate = newLastBaseUpdate; // Interleaved updates are stored on a separate queue. We aren't going to\n    // process them during this render, but we do need to track which lanes\n    // are remaining.\n\n    var lastInterleaved = queue.shared.interleaved;\n\n    if (lastInterleaved !== null) {\n      var interleaved = lastInterleaved;\n\n      do {\n        newLanes = mergeLanes(newLanes, interleaved.lane);\n        interleaved = interleaved.next;\n      } while (interleaved !== lastInterleaved);\n    } else if (firstBaseUpdate === null) {\n      // `queue.lanes` is used for entangling transitions. We can set it back to\n      // zero once the queue is empty.\n      queue.shared.lanes = NoLanes;\n    } // Set the remaining expiration time to be whatever is remaining in the queue.\n    // This should be fine because the only two other things that contribute to\n    // expiration time are props and context. We're already in the middle of the\n    // begin phase by the time we start processing the queue, so we've already\n    // dealt with the props. Context in components that specify\n    // shouldComponentUpdate is tricky; but we'll have to account for\n    // that regardless.\n\n\n    markSkippedUpdateLanes(newLanes);\n    workInProgress.lanes = newLanes;\n    workInProgress.memoizedState = newState;\n  }\n\n  {\n    currentlyProcessingQueue = null;\n  }\n}\n\nfunction callCallback(callback, context) {\n  if (typeof callback !== 'function') {\n    throw new Error('Invalid argument passed as callback. Expected a function. Instead ' + (\"received: \" + callback));\n  }\n\n  callback.call(context);\n}\n\nfunction resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\nfunction checkHasForceUpdateAfterProcessing() {\n  return hasForceUpdate;\n}\nfunction commitUpdateQueue(finishedWork, finishedQueue, instance) {\n  // Commit the effects\n  var effects = finishedQueue.effects;\n  finishedQueue.effects = null;\n\n  if (effects !== null) {\n    for (var i = 0; i < effects.length; i++) {\n      var effect = effects[i];\n      var callback = effect.callback;\n\n      if (callback !== null) {\n        effect.callback = null;\n        callCallback(callback, instance);\n      }\n    }\n  }\n}\n\nvar fakeInternalInstance = {}; // React.Component uses a shared frozen object by default.\n// We'll use it to determine whether we need to initialize legacy refs.\n\nvar emptyRefsObject = new React.Component().refs;\nvar didWarnAboutStateAssignmentForComponent;\nvar didWarnAboutUninitializedState;\nvar didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nvar didWarnAboutLegacyLifecyclesAndDerivedState;\nvar didWarnAboutUndefinedDerivedState;\nvar warnOnUndefinedDerivedState;\nvar warnOnInvalidCallback;\nvar didWarnAboutDirectlyAssigningPropsToState;\nvar didWarnAboutContextTypeAndContextTypes;\nvar didWarnAboutInvalidateContextType;\n\n{\n  didWarnAboutStateAssignmentForComponent = new Set();\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n  var didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function (callback, callerName) {\n    if (callback === null || typeof callback === 'function') {\n      return;\n    }\n\n    var key = callerName + '_' + callback;\n\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n\n      error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);\n    }\n  };\n\n  warnOnUndefinedDerivedState = function (type, partialState) {\n    if (partialState === undefined) {\n      var componentName = getComponentNameFromType(type) || 'Component';\n\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n\n        error('%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);\n      }\n    }\n  }; // This is so gross but it's at least non-critical and can be removed if\n  // it causes problems. This is meant to give a nicer error message for\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\n  // exception.\n\n\n  Object.defineProperty(fakeInternalInstance, '_processChildContext', {\n    enumerable: false,\n    value: function () {\n      throw new Error('_processChildContext is not available in React 16+. This likely ' + 'means you have multiple copies of React and are attempting to nest ' + 'a React 15 tree inside a React 16 tree using ' + \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" + 'to make sure you have only one copy of React (and ideally, switch ' + 'to ReactDOM.createPortal).');\n    }\n  });\n  Object.freeze(fakeInternalInstance);\n}\n\nfunction applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {\n  var prevState = workInProgress.memoizedState;\n  var partialState = getDerivedStateFromProps(nextProps, prevState);\n\n  {\n    if ( workInProgress.mode & StrictLegacyMode) {\n      setIsStrictModeForDevtools(true);\n\n      try {\n        // Invoke the function an extra time to help detect side-effects.\n        partialState = getDerivedStateFromProps(nextProps, prevState);\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n\n    warnOnUndefinedDerivedState(ctor, partialState);\n  } // Merge the partial state and the previous state.\n\n\n  var memoizedState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the\n  // base state.\n\n  if (workInProgress.lanes === NoLanes) {\n    // Queue is always non-null for classes\n    var updateQueue = workInProgress.updateQueue;\n    updateQueue.baseState = memoizedState;\n  }\n}\n\nvar classComponentUpdater = {\n  isMounted: isMounted,\n  enqueueSetState: function (inst, payload, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, 'setState');\n      }\n\n      update.callback = callback;\n    }\n\n    var root = enqueueUpdate(fiber, update, lane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n\n    {\n      markStateUpdateScheduled(fiber, lane);\n    }\n  },\n  enqueueReplaceState: function (inst, payload, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, 'replaceState');\n      }\n\n      update.callback = callback;\n    }\n\n    var root = enqueueUpdate(fiber, update, lane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n\n    {\n      markStateUpdateScheduled(fiber, lane);\n    }\n  },\n  enqueueForceUpdate: function (inst, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, 'forceUpdate');\n      }\n\n      update.callback = callback;\n    }\n\n    var root = enqueueUpdate(fiber, update, lane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitions(root, fiber, lane);\n    }\n\n    {\n      markForceUpdateScheduled(fiber, lane);\n    }\n  }\n};\n\nfunction checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {\n  var instance = workInProgress.stateNode;\n\n  if (typeof instance.shouldComponentUpdate === 'function') {\n    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);\n\n    {\n      if ( workInProgress.mode & StrictLegacyMode) {\n        setIsStrictModeForDevtools(true);\n\n        try {\n          // Invoke the function an extra time to help detect side-effects.\n          shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);\n        } finally {\n          setIsStrictModeForDevtools(false);\n        }\n      }\n\n      if (shouldUpdate === undefined) {\n        error('%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentNameFromType(ctor) || 'Component');\n      }\n    }\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);\n  }\n\n  return true;\n}\n\nfunction checkClassInstance(workInProgress, ctor, newProps) {\n  var instance = workInProgress.stateNode;\n\n  {\n    var name = getComponentNameFromType(ctor) || 'Component';\n    var renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n        error('%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);\n      } else {\n        error('%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);\n      }\n    }\n\n    if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {\n      error('getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name);\n    }\n\n    if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name);\n    }\n\n    if (instance.propTypes) {\n      error('propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name);\n    }\n\n    if (instance.contextType) {\n      error('contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name);\n    }\n\n    {\n      if (instance.contextTypes) {\n        error('contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name);\n      }\n\n      if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n\n        error('%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === 'function') {\n      error('%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name);\n    }\n\n    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {\n      error('%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentNameFromType(ctor) || 'A pure component');\n    }\n\n    if (typeof instance.componentDidUnmount === 'function') {\n      error('%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name);\n    }\n\n    if (typeof instance.componentDidReceiveProps === 'function') {\n      error('%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name);\n    }\n\n    if (typeof instance.componentWillRecieveProps === 'function') {\n      error('%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name);\n    }\n\n    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {\n      error('%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name);\n    }\n\n    var hasMutatedProps = instance.props !== newProps;\n\n    if (instance.props !== undefined && hasMutatedProps) {\n      error('%s(...): When calling super() in `%s`, make sure to pass ' + \"up the same props that your component's constructor was passed.\", name, name);\n    }\n\n    if (instance.defaultProps) {\n      error('Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name);\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n\n      error('%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentNameFromType(ctor));\n    }\n\n    if (typeof instance.getDerivedStateFromProps === 'function') {\n      error('%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);\n    }\n\n    if (typeof instance.getDerivedStateFromError === 'function') {\n      error('%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);\n    }\n\n    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {\n      error('%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name);\n    }\n\n    var _state = instance.state;\n\n    if (_state && (typeof _state !== 'object' || isArray(_state))) {\n      error('%s.state: must be set to an object or null', name);\n    }\n\n    if (typeof instance.getChildContext === 'function' && typeof ctor.childContextTypes !== 'object') {\n      error('%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name);\n    }\n  }\n}\n\nfunction adoptClassInstance(workInProgress, instance) {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates\n\n  set(instance, workInProgress);\n\n  {\n    instance._reactInternalInstance = fakeInternalInstance;\n  }\n}\n\nfunction constructClassInstance(workInProgress, ctor, props) {\n  var isLegacyContextConsumer = false;\n  var unmaskedContext = emptyContextObject;\n  var context = emptyContextObject;\n  var contextType = ctor.contextType;\n\n  {\n    if ('contextType' in ctor) {\n      var isValid = // Allow null for conditional declaration\n      contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n        var addendum = '';\n\n        if (contextType === undefined) {\n          addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';\n        } else if (typeof contextType !== 'object') {\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\n        } else {\n          addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';\n        }\n\n        error('%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentNameFromType(ctor) || 'Component', addendum);\n      }\n    }\n  }\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext(contextType);\n  } else {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    var contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;\n  }\n\n  var instance = new ctor(props, context); // Instantiate twice to help detect side-effects.\n\n  {\n    if ( workInProgress.mode & StrictLegacyMode) {\n      setIsStrictModeForDevtools(true);\n\n      try {\n        instance = new ctor(props, context); // eslint-disable-line no-new\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n  }\n\n  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;\n  adoptClassInstance(workInProgress, instance);\n\n  {\n    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {\n      var componentName = getComponentNameFromType(ctor) || 'Component';\n\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n\n        error('`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);\n      }\n    } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n\n\n    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {\n      var foundWillMountName = null;\n      var foundWillReceivePropsName = null;\n      var foundWillUpdateName = null;\n\n      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n        foundWillMountName = 'componentWillMount';\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        foundWillMountName = 'UNSAFE_componentWillMount';\n      }\n\n      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n        foundWillReceivePropsName = 'componentWillReceiveProps';\n      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n      }\n\n      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n        foundWillUpdateName = 'componentWillUpdate';\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n      }\n\n      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n        var _componentName = getComponentNameFromType(ctor) || 'Component';\n\n        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\n\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\n\n          error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' + 'The above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://reactjs.org/link/unsafe-component-lifecycles', _componentName, newApiName, foundWillMountName !== null ? \"\\n  \" + foundWillMountName : '', foundWillReceivePropsName !== null ? \"\\n  \" + foundWillReceivePropsName : '', foundWillUpdateName !== null ? \"\\n  \" + foundWillUpdateName : '');\n        }\n      }\n    }\n  } // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n\n\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  var oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    instance.componentWillMount();\n  }\n\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n    {\n      error('%s.componentWillMount(): Assigning directly to this.state is ' + \"deprecated (except inside a component's \" + 'constructor). Use setState instead.', getComponentNameFromFiber(workInProgress) || 'Component');\n    }\n\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {\n  var oldState = instance.state;\n\n  if (typeof instance.componentWillReceiveProps === 'function') {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (instance.state !== oldState) {\n    {\n      var componentName = getComponentNameFromFiber(workInProgress) || 'Component';\n\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n        didWarnAboutStateAssignmentForComponent.add(componentName);\n\n        error('%s.componentWillReceiveProps(): Assigning directly to ' + \"this.state is deprecated (except inside a component's \" + 'constructor). Use setState instead.', componentName);\n      }\n    }\n\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n} // Invokes the mount life-cycles on a previously never rendered instance.\n\n\nfunction mountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n  {\n    checkClassInstance(workInProgress, ctor, newProps);\n  }\n\n  var instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = emptyRefsObject;\n  initializeUpdateQueue(workInProgress);\n  var contextType = ctor.contextType;\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else {\n    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  {\n    if (instance.state === newProps) {\n      var componentName = getComponentNameFromType(ctor) || 'Component';\n\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n\n        error('%s: It is not recommended to assign props directly to state ' + \"because updates to props won't be reflected in state. \" + 'In most cases, it is better to use props directly.', componentName);\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);\n    }\n\n    {\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);\n    }\n  }\n\n  instance.state = workInProgress.memoizedState;\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n    instance.state = workInProgress.memoizedState;\n  } // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n\n  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\n    callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's\n    // process them now.\n\n    processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n    instance.state = workInProgress.memoizedState;\n  }\n\n  if (typeof instance.componentDidMount === 'function') {\n    var fiberFlags = Update;\n\n    {\n      fiberFlags |= LayoutStatic;\n    }\n\n    if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {\n      fiberFlags |= MountLayoutDev;\n    }\n\n    workInProgress.flags |= fiberFlags;\n  }\n}\n\nfunction resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n  var instance = workInProgress.stateNode;\n  var oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n  var oldContext = instance.context;\n  var contextType = ctor.contextType;\n  var nextContext = emptyContextObject;\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n  var oldState = workInProgress.memoizedState;\n  var newState = instance.state = oldState;\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      var fiberFlags = Update;\n\n      {\n        fiberFlags |= LayoutStatic;\n      }\n\n      if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {\n        fiberFlags |= MountLayoutDev;\n      }\n\n      workInProgress.flags |= fiberFlags;\n    }\n\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n    newState = workInProgress.memoizedState;\n  }\n\n  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\n      if (typeof instance.componentWillMount === 'function') {\n        instance.componentWillMount();\n      }\n\n      if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        instance.UNSAFE_componentWillMount();\n      }\n    }\n\n    if (typeof instance.componentDidMount === 'function') {\n      var _fiberFlags = Update;\n\n      {\n        _fiberFlags |= LayoutStatic;\n      }\n\n      if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {\n        _fiberFlags |= MountLayoutDev;\n      }\n\n      workInProgress.flags |= _fiberFlags;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      var _fiberFlags2 = Update;\n\n      {\n        _fiberFlags2 |= LayoutStatic;\n      }\n\n      if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {\n        _fiberFlags2 |= MountLayoutDev;\n      }\n\n      workInProgress.flags |= _fiberFlags2;\n    } // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n\n\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  } // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n\n\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n  return shouldUpdate;\n} // Invokes the update life-cycles and returns false if it shouldn't rerender.\n\n\nfunction updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {\n  var instance = workInProgress.stateNode;\n  cloneUpdateQueue(current, workInProgress);\n  var unresolvedOldProps = workInProgress.memoizedProps;\n  var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n  instance.props = oldProps;\n  var unresolvedNewProps = workInProgress.pendingProps;\n  var oldContext = instance.context;\n  var contextType = ctor.contextType;\n  var nextContext = emptyContextObject;\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {\n    if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n  var oldState = workInProgress.memoizedState;\n  var newState = instance.state = oldState;\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !(enableLazyContextPropagation   )) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.flags |= Update;\n      }\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n    newState = workInProgress.memoizedState;\n  }\n\n  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) || // TODO: In some cases, we'll end up checking if context has changed twice,\n  // both before and after `shouldComponentUpdate` has been called. Not ideal,\n  // but I'm loath to refactor this function. This only happens for memoized\n  // components so it's not that common.\n  enableLazyContextPropagation   ;\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {\n      if (typeof instance.componentWillUpdate === 'function') {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n\n      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n    }\n\n    if (typeof instance.componentDidUpdate === 'function') {\n      workInProgress.flags |= Update;\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      workInProgress.flags |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.flags |= Update;\n      }\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.flags |= Snapshot;\n      }\n    } // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n\n\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  } // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n\n\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n  return shouldUpdate;\n}\n\nvar didWarnAboutMaps;\nvar didWarnAboutGenerators;\nvar didWarnAboutStringRefs;\nvar ownerHasKeyUseWarning;\nvar ownerHasFunctionTypeWarning;\n\nvar warnForMissingKey = function (child, returnFiber) {};\n\n{\n  didWarnAboutMaps = false;\n  didWarnAboutGenerators = false;\n  didWarnAboutStringRefs = {};\n  /**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */\n\n  ownerHasKeyUseWarning = {};\n  ownerHasFunctionTypeWarning = {};\n\n  warnForMissingKey = function (child, returnFiber) {\n    if (child === null || typeof child !== 'object') {\n      return;\n    }\n\n    if (!child._store || child._store.validated || child.key != null) {\n      return;\n    }\n\n    if (typeof child._store !== 'object') {\n      throw new Error('React Component in warnForMissingKey should have a _store. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n\n    child._store.validated = true;\n    var componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n    if (ownerHasKeyUseWarning[componentName]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[componentName] = true;\n\n    error('Each child in a list should have a unique ' + '\"key\" prop. See https://reactjs.org/link/warning-keys for ' + 'more information.');\n  };\n}\n\nfunction coerceRef(returnFiber, current, element) {\n  var mixedRef = element.ref;\n\n  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {\n    {\n      // TODO: Clean this up once we turn on the string ref warning for\n      // everyone, because the strict mode case will no longer be relevant\n      if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs\n      // because these cannot be automatically converted to an arrow function\n      // using a codemod. Therefore, we don't have to warn about string refs again.\n      !(element._owner && element._self && element._owner.stateNode !== element._self)) {\n        var componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n        if (!didWarnAboutStringRefs[componentName]) {\n          {\n            error('A string ref, \"%s\", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', mixedRef);\n          }\n\n          didWarnAboutStringRefs[componentName] = true;\n        }\n      }\n    }\n\n    if (element._owner) {\n      var owner = element._owner;\n      var inst;\n\n      if (owner) {\n        var ownerFiber = owner;\n\n        if (ownerFiber.tag !== ClassComponent) {\n          throw new Error('Function components cannot have string refs. ' + 'We recommend using useRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref');\n        }\n\n        inst = ownerFiber.stateNode;\n      }\n\n      if (!inst) {\n        throw new Error(\"Missing owner for string ref \" + mixedRef + \". This error is likely caused by a \" + 'bug in React. Please file an issue.');\n      } // Assigning this to a const so Flow knows it won't change in the closure\n\n\n      var resolvedInst = inst;\n\n      {\n        checkPropStringCoercion(mixedRef, 'ref');\n      }\n\n      var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref\n\n      if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) {\n        return current.ref;\n      }\n\n      var ref = function (value) {\n        var refs = resolvedInst.refs;\n\n        if (refs === emptyRefsObject) {\n          // This is a lazy pooled frozen object, so we need to initialize.\n          refs = resolvedInst.refs = {};\n        }\n\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      if (typeof mixedRef !== 'string') {\n        throw new Error('Expected ref to be a function, a string, an object returned by React.createRef(), or null.');\n      }\n\n      if (!element._owner) {\n        throw new Error(\"Element ref was specified as a string (\" + mixedRef + \") but no owner was set. This could happen for one of\" + ' the following reasons:\\n' + '1. You may be adding a ref to a function component\\n' + \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" + '3. You have multiple copies of React loaded\\n' + 'See https://reactjs.org/link/refs-must-have-owner for more information.');\n      }\n    }\n  }\n\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\n  var childString = Object.prototype.toString.call(newChild);\n  throw new Error(\"Objects are not valid as a React child (found: \" + (childString === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : childString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n}\n\nfunction warnOnFunctionType(returnFiber) {\n  {\n    var componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n    if (ownerHasFunctionTypeWarning[componentName]) {\n      return;\n    }\n\n    ownerHasFunctionTypeWarning[componentName] = true;\n\n    error('Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');\n  }\n}\n\nfunction resolveLazy(lazyType) {\n  var payload = lazyType._payload;\n  var init = lazyType._init;\n  return init(payload);\n} // This wrapper function exists because I expect to clone the code in each path\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\n\n\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber, childToDelete) {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    }\n\n    var deletions = returnFiber.deletions;\n\n    if (deletions === null) {\n      returnFiber.deletions = [childToDelete];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(childToDelete);\n    }\n  }\n\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    } // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n\n\n    var childToDelete = currentFirstChild;\n\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n\n    return null;\n  }\n\n  function mapRemainingChildren(returnFiber, currentFirstChild) {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    // instead.\n    var existingChildren = new Map();\n    var existingChild = currentFirstChild;\n\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n\n      existingChild = existingChild.sibling;\n    }\n\n    return existingChildren;\n  }\n\n  function useFiber(fiber, pendingProps) {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    var clone = createWorkInProgress(fiber, pendingProps);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\n    newFiber.index = newIndex;\n\n    if (!shouldTrackSideEffects) {\n      // During hydration, the useId algorithm needs to know which fibers are\n      // part of a list of children (arrays, iterators).\n      newFiber.flags |= Forked;\n      return lastPlacedIndex;\n    }\n\n    var current = newFiber.alternate;\n\n    if (current !== null) {\n      var oldIndex = current.index;\n\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.flags |= Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.flags |= Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber) {\n    // This is simpler for the single child case. We only need to do a\n    // placement for inserting new children.\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      newFiber.flags |= Placement;\n    }\n\n    return newFiber;\n  }\n\n  function updateTextNode(returnFiber, current, textContent, lanes) {\n    if (current === null || current.tag !== HostText) {\n      // Insert\n      var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(returnFiber, current, element, lanes) {\n    var elementType = element.type;\n\n    if (elementType === REACT_FRAGMENT_TYPE) {\n      return updateFragment(returnFiber, current, element.props.children, lanes, element.key);\n    }\n\n    if (current !== null) {\n      if (current.elementType === elementType || ( // Keep this check inline so it only runs on the false path:\n       isCompatibleFamilyForHotReloading(current, element) ) || // Lazy types should reconcile their resolved type.\n      // We need to do this after the Hot Reloading check above,\n      // because hot reloading has different semantics than prod because\n      // it doesn't resuspend. So we can't let the call below suspend.\n      typeof elementType === 'object' && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type) {\n        // Move based on index\n        var existing = useFiber(current, element.props);\n        existing.ref = coerceRef(returnFiber, current, element);\n        existing.return = returnFiber;\n\n        {\n          existing._debugSource = element._source;\n          existing._debugOwner = element._owner;\n        }\n\n        return existing;\n      }\n    } // Insert\n\n\n    var created = createFiberFromElement(element, returnFiber.mode, lanes);\n    created.ref = coerceRef(returnFiber, current, element);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function updatePortal(returnFiber, current, portal, lanes) {\n    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {\n      // Insert\n      var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, portal.children || []);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\n    if (current === null || current.tag !== Fragment) {\n      // Insert\n      var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, fragment);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(returnFiber, newChild, lanes) {\n    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      var created = createFiberFromText('' + newChild, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          {\n            var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);\n\n            _created.ref = coerceRef(returnFiber, null, newChild);\n            _created.return = returnFiber;\n            return _created;\n          }\n\n        case REACT_PORTAL_TYPE:\n          {\n            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);\n\n            _created2.return = returnFiber;\n            return _created2;\n          }\n\n        case REACT_LAZY_TYPE:\n          {\n            var payload = newChild._payload;\n            var init = newChild._init;\n            return createChild(returnFiber, init(payload), lanes);\n          }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);\n\n        _created3.return = returnFiber;\n        return _created3;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n    // Update the fiber if the keys match, otherwise return null.\n    var key = oldFiber !== null ? oldFiber.key : null;\n\n    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n\n      return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          {\n            if (newChild.key === key) {\n              return updateElement(returnFiber, oldFiber, newChild, lanes);\n            } else {\n              return null;\n            }\n          }\n\n        case REACT_PORTAL_TYPE:\n          {\n            if (newChild.key === key) {\n              return updatePortal(returnFiber, oldFiber, newChild, lanes);\n            } else {\n              return null;\n            }\n          }\n\n        case REACT_LAZY_TYPE:\n          {\n            var payload = newChild._payload;\n            var init = newChild._init;\n            return updateSlot(returnFiber, oldFiber, init(payload), lanes);\n          }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {\n    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      var matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          {\n            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n\n            return updateElement(returnFiber, _matchedFiber, newChild, lanes);\n          }\n\n        case REACT_PORTAL_TYPE:\n          {\n            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n\n            return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);\n          }\n\n        case REACT_LAZY_TYPE:\n          var payload = newChild._payload;\n          var init = newChild._init;\n          return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        var _matchedFiber3 = existingChildren.get(newIdx) || null;\n\n        return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Warns if there is a duplicate or missing key\n   */\n\n\n  function warnOnInvalidKey(child, knownKeys, returnFiber) {\n    {\n      if (typeof child !== 'object' || child === null) {\n        return knownKeys;\n      }\n\n      switch (child.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n        case REACT_PORTAL_TYPE:\n          warnForMissingKey(child, returnFiber);\n          var key = child.key;\n\n          if (typeof key !== 'string') {\n            break;\n          }\n\n          if (knownKeys === null) {\n            knownKeys = new Set();\n            knownKeys.add(key);\n            break;\n          }\n\n          if (!knownKeys.has(key)) {\n            knownKeys.add(key);\n            break;\n          }\n\n          error('Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);\n\n          break;\n\n        case REACT_LAZY_TYPE:\n          var payload = child._payload;\n          var init = child._init;\n          warnOnInvalidKey(init(payload), knownKeys, returnFiber);\n          break;\n      }\n    }\n\n    return knownKeys;\n  }\n\n  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {\n    // This algorithm can't optimize by searching from both ends since we\n    // don't have backpointers on fibers. I'm trying to see how far we can get\n    // with that model. If it ends up not being worth the tradeoffs, we can\n    // add it later.\n    // Even with a two ended optimization, we'd want to optimize for the case\n    // where there are few changes and brute force the comparison instead of\n    // going for the Map. It'd like to explore hitting that path first in\n    // forward-only mode and only go for the Map once we notice that we need\n    // lots of look ahead. This doesn't handle reversal as well as two ended\n    // search but that's unusual. Besides, for the two ended optimization to\n    // work on Iterables, we'd need to copy the whole set.\n    // In this first iteration, we'll just live with hitting the bad case\n    // (adding everything to a Map) in for every insert/move.\n    // If you change this code, also update reconcileChildrenIterator() which\n    // uses the same algorithm.\n    {\n      // First, validate keys.\n      var knownKeys = null;\n\n      for (var i = 0; i < newChildren.length; i++) {\n        var child = newChildren[i];\n        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n      }\n    }\n\n    var resultingFirstChild = null;\n    var previousNewFiber = null;\n    var oldFiber = currentFirstChild;\n    var lastPlacedIndex = 0;\n    var newIdx = 0;\n    var nextOldFiber = null;\n\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n\n      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);\n\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n\n        break;\n      }\n\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n\n      if (getIsHydrating()) {\n        var numberOfForks = newIdx;\n        pushTreeFork(returnFiber, numberOfForks);\n      }\n\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; newIdx < newChildren.length; newIdx++) {\n        var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n\n        if (_newFiber === null) {\n          continue;\n        }\n\n        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = _newFiber;\n        } else {\n          previousNewFiber.sibling = _newFiber;\n        }\n\n        previousNewFiber = _newFiber;\n      }\n\n      if (getIsHydrating()) {\n        var _numberOfForks = newIdx;\n        pushTreeFork(returnFiber, _numberOfForks);\n      }\n\n      return resultingFirstChild;\n    } // Add all children to a key map for quick lookups.\n\n\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\n\n    for (; newIdx < newChildren.length; newIdx++) {\n      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);\n\n      if (_newFiber2 !== null) {\n        if (shouldTrackSideEffects) {\n          if (_newFiber2.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);\n          }\n        }\n\n        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          resultingFirstChild = _newFiber2;\n        } else {\n          previousNewFiber.sibling = _newFiber2;\n        }\n\n        previousNewFiber = _newFiber2;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    }\n\n    if (getIsHydrating()) {\n      var _numberOfForks2 = newIdx;\n      pushTreeFork(returnFiber, _numberOfForks2);\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n    var iteratorFn = getIteratorFn(newChildrenIterable);\n\n    if (typeof iteratorFn !== 'function') {\n      throw new Error('An object is not an iterable. This error is likely caused by a bug in ' + 'React. Please file an issue.');\n    }\n\n    {\n      // We don't support rendering Generators because it's a mutation.\n      // See https://github.com/facebook/react/issues/12995\n      if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag\n      newChildrenIterable[Symbol.toStringTag] === 'Generator') {\n        if (!didWarnAboutGenerators) {\n          error('Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.');\n        }\n\n        didWarnAboutGenerators = true;\n      } // Warn about using Maps as children\n\n\n      if (newChildrenIterable.entries === iteratorFn) {\n        if (!didWarnAboutMaps) {\n          error('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n        }\n\n        didWarnAboutMaps = true;\n      } // First, validate keys.\n      // We'll get a different iterator later for the main pass.\n\n\n      var _newChildren = iteratorFn.call(newChildrenIterable);\n\n      if (_newChildren) {\n        var knownKeys = null;\n\n        var _step = _newChildren.next();\n\n        for (; !_step.done; _step = _newChildren.next()) {\n          var child = _step.value;\n          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n        }\n      }\n    }\n\n    var newChildren = iteratorFn.call(newChildrenIterable);\n\n    if (newChildren == null) {\n      throw new Error('An iterable object provided no iterator.');\n    }\n\n    var resultingFirstChild = null;\n    var previousNewFiber = null;\n    var oldFiber = currentFirstChild;\n    var lastPlacedIndex = 0;\n    var newIdx = 0;\n    var nextOldFiber = null;\n    var step = newChildren.next();\n\n    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n\n        break;\n      }\n\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n\n      if (getIsHydrating()) {\n        var numberOfForks = newIdx;\n        pushTreeFork(returnFiber, numberOfForks);\n      }\n\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        var _newFiber3 = createChild(returnFiber, step.value, lanes);\n\n        if (_newFiber3 === null) {\n          continue;\n        }\n\n        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = _newFiber3;\n        } else {\n          previousNewFiber.sibling = _newFiber3;\n        }\n\n        previousNewFiber = _newFiber3;\n      }\n\n      if (getIsHydrating()) {\n        var _numberOfForks3 = newIdx;\n        pushTreeFork(returnFiber, _numberOfForks3);\n      }\n\n      return resultingFirstChild;\n    } // Add all children to a key map for quick lookups.\n\n\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\n\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);\n\n      if (_newFiber4 !== null) {\n        if (shouldTrackSideEffects) {\n          if (_newFiber4.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);\n          }\n        }\n\n        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          resultingFirstChild = _newFiber4;\n        } else {\n          previousNewFiber.sibling = _newFiber4;\n        }\n\n        previousNewFiber = _newFiber4;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    }\n\n    if (getIsHydrating()) {\n      var _numberOfForks4 = newIdx;\n      pushTreeFork(returnFiber, _numberOfForks4);\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {\n    // There's no need to check for keys on text nodes since we don't have a\n    // way to define them.\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      var existing = useFiber(currentFirstChild, textContent);\n      existing.return = returnFiber;\n      return existing;\n    } // The existing first child is not a text node so we need to create one\n    // and delete the existing ones.\n\n\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {\n    var key = element.key;\n    var child = currentFirstChild;\n\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        var elementType = element.type;\n\n        if (elementType === REACT_FRAGMENT_TYPE) {\n          if (child.tag === Fragment) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n            var existing = useFiber(child, element.props.children);\n            existing.return = returnFiber;\n\n            {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n\n            return existing;\n          }\n        } else {\n          if (child.elementType === elementType || ( // Keep this check inline so it only runs on the false path:\n           isCompatibleFamilyForHotReloading(child, element) ) || // Lazy types should reconcile their resolved type.\n          // We need to do this after the Hot Reloading check above,\n          // because hot reloading has different semantics than prod because\n          // it doesn't resuspend. So we can't let the call below suspend.\n          typeof elementType === 'object' && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n\n            var _existing = useFiber(child, element.props);\n\n            _existing.ref = coerceRef(returnFiber, child, element);\n            _existing.return = returnFiber;\n\n            {\n              _existing._debugSource = element._source;\n              _existing._debugOwner = element._owner;\n            }\n\n            return _existing;\n          }\n        } // Didn't match.\n\n\n        deleteRemainingChildren(returnFiber, child);\n        break;\n      } else {\n        deleteChild(returnFiber, child);\n      }\n\n      child = child.sibling;\n    }\n\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);\n      created.return = returnFiber;\n      return created;\n    } else {\n      var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);\n\n      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);\n      _created4.return = returnFiber;\n      return _created4;\n    }\n  }\n\n  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {\n    var key = portal.key;\n    var child = currentFirstChild;\n\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          var existing = useFiber(child, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n\n      child = child.sibling;\n    }\n\n    var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  } // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n\n\n  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n    // Handle top level unkeyed fragments as if they were arrays.\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n    // We treat the ambiguous cases above the same.\n    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;\n\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    } // Handle object types\n\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));\n\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));\n\n        case REACT_LAZY_TYPE:\n          var payload = newChild._payload;\n          var init = newChild._init; // TODO: This function is supposed to be non-recursive.\n\n          return reconcileChildFibers(returnFiber, currentFirstChild, init(payload), lanes);\n      }\n\n      if (isArray(newChild)) {\n        return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);\n      }\n\n      if (getIteratorFn(newChild)) {\n        return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\n      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, lanes));\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    } // Remaining cases are all treated as empty.\n\n\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\nvar reconcileChildFibers = ChildReconciler(true);\nvar mountChildFibers = ChildReconciler(false);\nfunction cloneChildFibers(current, workInProgress) {\n  if (current !== null && workInProgress.child !== current.child) {\n    throw new Error('Resuming work not yet implemented.');\n  }\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  var currentChild = workInProgress.child;\n  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n  workInProgress.child = newChild;\n  newChild.return = workInProgress;\n\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);\n    newChild.return = workInProgress;\n  }\n\n  newChild.sibling = null;\n} // Reset a workInProgress child set to prepare it for a second pass.\n\nfunction resetChildFibers(workInProgress, lanes) {\n  var child = workInProgress.child;\n\n  while (child !== null) {\n    resetWorkInProgress(child, lanes);\n    child = child.sibling;\n  }\n}\n\nvar NO_CONTEXT = {};\nvar contextStackCursor$1 = createCursor(NO_CONTEXT);\nvar contextFiberStackCursor = createCursor(NO_CONTEXT);\nvar rootInstanceStackCursor = createCursor(NO_CONTEXT);\n\nfunction requiredContext(c) {\n  if (c === NO_CONTEXT) {\n    throw new Error('Expected host context to exist. This error is likely caused by a bug ' + 'in React. Please file an issue.');\n  }\n\n  return c;\n}\n\nfunction getRootHostContainer() {\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber, nextRootInstance) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n\n  push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n\n  push(contextStackCursor$1, NO_CONTEXT, fiber);\n  var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.\n\n  pop(contextStackCursor$1, fiber);\n  push(contextStackCursor$1, nextRootContext, fiber);\n}\n\nfunction popHostContainer(fiber) {\n  pop(contextStackCursor$1, fiber);\n  pop(contextFiberStackCursor, fiber);\n  pop(rootInstanceStackCursor, fiber);\n}\n\nfunction getHostContext() {\n  var context = requiredContext(contextStackCursor$1.current);\n  return context;\n}\n\nfunction pushHostContext(fiber) {\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\n  var context = requiredContext(contextStackCursor$1.current);\n  var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.\n\n  if (context === nextContext) {\n    return;\n  } // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n\n\n  push(contextFiberStackCursor, fiber, fiber);\n  push(contextStackCursor$1, nextContext, fiber);\n}\n\nfunction popHostContext(fiber) {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor$1, fiber);\n  pop(contextFiberStackCursor, fiber);\n}\n\nvar DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is\n// inherited deeply down the subtree. The upper bits only affect\n// this immediate suspense boundary and gets reset each new\n// boundary or suspense list.\n\nvar SubtreeSuspenseContextMask = 1; // Subtree Flags:\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\n// boundaries is not currently showing visible main content.\n// Either because it is already showing a fallback or is not mounted at all.\n// We can use this to determine if it is desirable to trigger a fallback at\n// the parent. If not, then we might need to trigger undesirable boundaries\n// and/or suspend the commit to avoid hiding the parent content.\n\nvar InvisibleParentSuspenseContext = 1; // Shallow Flags:\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\n// items into their fallback state during one of the render passes.\n\nvar ForceSuspenseFallback = 2;\nvar suspenseStackCursor = createCursor(DefaultSuspenseContext);\nfunction hasSuspenseContext(parentContext, flag) {\n  return (parentContext & flag) !== 0;\n}\nfunction setDefaultShallowSuspenseContext(parentContext) {\n  return parentContext & SubtreeSuspenseContextMask;\n}\nfunction setShallowSuspenseContext(parentContext, shallowContext) {\n  return parentContext & SubtreeSuspenseContextMask | shallowContext;\n}\nfunction addSubtreeSuspenseContext(parentContext, subtreeContext) {\n  return parentContext | subtreeContext;\n}\nfunction pushSuspenseContext(fiber, newContext) {\n  push(suspenseStackCursor, newContext, fiber);\n}\nfunction popSuspenseContext(fiber) {\n  pop(suspenseStackCursor, fiber);\n}\n\nfunction shouldCaptureSuspense(workInProgress, hasInvisibleParent) {\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  var nextState = workInProgress.memoizedState;\n\n  if (nextState !== null) {\n    if (nextState.dehydrated !== null) {\n      // A dehydrated boundary always captures.\n      return true;\n    }\n\n    return false;\n  }\n\n  var props = workInProgress.memoizedProps; // Regular boundaries always capture.\n\n  {\n    return true;\n  } // If it's a boundary we should avoid, then we prefer to bubble up to the\n}\nfunction findFirstSuspended(row) {\n  var node = row;\n\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      var state = node.memoizedState;\n\n      if (state !== null) {\n        var dehydrated = state.dehydrated;\n\n        if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {\n          return node;\n        }\n      }\n    } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't\n    // keep track of whether it suspended or not.\n    node.memoizedProps.revealOrder !== undefined) {\n      var didSuspend = (node.flags & DidCapture) !== NoFlags;\n\n      if (didSuspend) {\n        return node;\n      }\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === row) {\n      return null;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === row) {\n        return null;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n\n  return null;\n}\n\nvar NoFlags$1 =\n/*   */\n0; // Represents whether effect should fire.\n\nvar HasEffect =\n/* */\n1; // Represents the phase in which the effect (not the clean-up) fires.\n\nvar Insertion =\n/*  */\n2;\nvar Layout =\n/*    */\n4;\nvar Passive$1 =\n/*   */\n8;\n\n// and should be reset before starting a new render.\n// This tracks which mutable sources need to be reset after a render.\n\nvar workInProgressSources = [];\nfunction resetWorkInProgressVersions() {\n  for (var i = 0; i < workInProgressSources.length; i++) {\n    var mutableSource = workInProgressSources[i];\n\n    {\n      mutableSource._workInProgressVersionPrimary = null;\n    }\n  }\n\n  workInProgressSources.length = 0;\n}\n// This ensures that the version used for server rendering matches the one\n// that is eventually read during hydration.\n// If they don't match there's a potential tear and a full deopt render is required.\n\nfunction registerMutableSourceForHydration(root, mutableSource) {\n  var getVersion = mutableSource._getVersion;\n  var version = getVersion(mutableSource._source); // TODO Clear this data once all pending hydration work is finished.\n  // Retaining it forever may interfere with GC.\n\n  if (root.mutableSourceEagerHydrationData == null) {\n    root.mutableSourceEagerHydrationData = [mutableSource, version];\n  } else {\n    root.mutableSourceEagerHydrationData.push(mutableSource, version);\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,\n    ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig;\nvar didWarnAboutMismatchedHooksForComponent;\nvar didWarnUncachedGetSnapshot;\n\n{\n  didWarnAboutMismatchedHooksForComponent = new Set();\n}\n\n// These are set right before calling the component.\nvar renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\n\nvar currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\n\nvar currentHook = null;\nvar workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This\n// does not get reset if we do another render pass; only when we're completely\n// finished evaluating this component. This is an optimization so we know\n// whether we need to clear render phase updates after a throw.\n\nvar didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This\n// gets reset after each attempt.\n// TODO: Maybe there's some way to consolidate this with\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\n\nvar didScheduleRenderPhaseUpdateDuringThisPass = false; // Counts the number of useId hooks in this component.\n\nvar localIdCounter = 0; // Used for ids that are generated completely client-side (i.e. not during\n// hydration). This counter is global, so client ids are not stable across\n// render attempts.\n\nvar globalClientIdCounter = 0;\nvar RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook\n\nvar currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\n\nvar hookTypesDev = null;\nvar hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\n\nvar ignorePreviousDependencies = false;\n\nfunction mountHookTypesDev() {\n  {\n    var hookName = currentHookNameInDev;\n\n    if (hookTypesDev === null) {\n      hookTypesDev = [hookName];\n    } else {\n      hookTypesDev.push(hookName);\n    }\n  }\n}\n\nfunction updateHookTypesDev() {\n  {\n    var hookName = currentHookNameInDev;\n\n    if (hookTypesDev !== null) {\n      hookTypesUpdateIndexDev++;\n\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n        warnOnHookMismatchInDev(hookName);\n      }\n    }\n  }\n}\n\nfunction checkDepsAreArrayDev(deps) {\n  {\n    if (deps !== undefined && deps !== null && !isArray(deps)) {\n      // Verify deps, but only on mount to avoid extra checks.\n      // It's unlikely their type would change as usually you define them inline.\n      error('%s received a final argument that is not an array (instead, received `%s`). When ' + 'specified, the final argument must be an array.', currentHookNameInDev, typeof deps);\n    }\n  }\n}\n\nfunction warnOnHookMismatchInDev(currentHookName) {\n  {\n    var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);\n\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n      if (hookTypesDev !== null) {\n        var table = '';\n        var secondColumnStart = 30;\n\n        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {\n          var oldHookName = hookTypesDev[i];\n          var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;\n          var row = i + 1 + \". \" + oldHookName; // Extra space so second column lines up\n          // lol @ IE not supporting String#repeat\n\n          while (row.length < secondColumnStart) {\n            row += ' ';\n          }\n\n          row += newHookName + '\\n';\n          table += row;\n        }\n\n        error('React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n' + '   Previous render            Next render\\n' + '   ------------------------------------------------------\\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n', componentName, table);\n      }\n    }\n  }\n}\n\nfunction throwInvalidHookError() {\n  throw new Error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n}\n\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  {\n    if (ignorePreviousDependencies) {\n      // Only true when this component is being hot reloaded.\n      return false;\n    }\n  }\n\n  if (prevDeps === null) {\n    {\n      error('%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);\n    }\n\n    return false;\n  }\n\n  {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      error('The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\\n\\n' + 'Previous: %s\\n' + 'Incoming: %s', currentHookNameInDev, \"[\" + prevDeps.join(', ') + \"]\", \"[\" + nextDeps.join(', ') + \"]\");\n    }\n  }\n\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (objectIs(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber$1 = workInProgress;\n\n  {\n    hookTypesDev = current !== null ? current._debugHookTypes : null;\n    hookTypesUpdateIndexDev = -1; // Used for hot reloading:\n\n    ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;\n  }\n\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = NoLanes; // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n  // didScheduleRenderPhaseUpdate = false;\n  // localIdCounter = 0;\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because memoizedState === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so memoizedState would be null during updates and mounts.\n\n  {\n    if (current !== null && current.memoizedState !== null) {\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;\n    } else if (hookTypesDev !== null) {\n      // This dispatcher handles an edge case where a component is updating,\n      // but no stateful hooks have been used.\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\n      // This dispatcher does that.\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;\n    } else {\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;\n    }\n  }\n\n  var children = Component(props, secondArg); // Check if there was a render phase update\n\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\n    // Keep rendering in a loop for as long as render phase updates continue to\n    // be scheduled. Use a counter to prevent infinite loops.\n    var numberOfReRenders = 0;\n\n    do {\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n      localIdCounter = 0;\n\n      if (numberOfReRenders >= RE_RENDER_LIMIT) {\n        throw new Error('Too many re-renders. React limits the number of renders to prevent ' + 'an infinite loop.');\n      }\n\n      numberOfReRenders += 1;\n\n      {\n        // Even when hot reloading, allow dependencies to stabilize\n        // after first render to prevent infinite render phase updates.\n        ignorePreviousDependencies = false;\n      } // Start over from the beginning of the list\n\n\n      currentHook = null;\n      workInProgressHook = null;\n      workInProgress.updateQueue = null;\n\n      {\n        // Also validate hook order for cascading updates.\n        hookTypesUpdateIndexDev = -1;\n      }\n\n      ReactCurrentDispatcher$1.current =  HooksDispatcherOnRerenderInDEV ;\n      children = Component(props, secondArg);\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  } // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n\n\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n\n  {\n    workInProgress._debugHookTypes = hookTypesDev;\n  } // This check uses currentHook so that it works the same in DEV and prod bundles.\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n\n\n  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;\n  renderLanes = NoLanes;\n  currentlyRenderingFiber$1 = null;\n  currentHook = null;\n  workInProgressHook = null;\n\n  {\n    currentHookNameInDev = null;\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1; // Confirm that a static flag was not added or removed since the last\n    // render. If this fires, it suggests that we incorrectly reset the static\n    // flags in some other part of the codebase. This has happened before, for\n    // example, in the SuspenseList implementation.\n\n    if (current !== null && (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird\n    // and creates false positives. To make this work in legacy mode, we'd\n    // need to mark fibers that commit in an incomplete state, somehow. For\n    // now I'll disable the warning that most of the bugs that would trigger\n    // it are either exclusive to concurrent mode or exist in both.\n    (current.mode & ConcurrentMode) !== NoMode) {\n      error('Internal React error: Expected static flag was missing. Please ' + 'notify the React team.');\n    }\n  }\n\n  didScheduleRenderPhaseUpdate = false; // This is reset by checkDidRenderIdHook\n  // localIdCounter = 0;\n\n  if (didRenderTooFewHooks) {\n    throw new Error('Rendered fewer hooks than expected. This may be caused by an accidental ' + 'early return statement.');\n  }\n\n  return children;\n}\nfunction checkDidRenderIdHook() {\n  // This should be called immediately after every renderWithHooks call.\n  // Conceptually, it's part of the return value of renderWithHooks; it's only a\n  // separate function to avoid using an array tuple.\n  var didRenderIdHook = localIdCounter !== 0;\n  localIdCounter = 0;\n  return didRenderIdHook;\n}\nfunction bailoutHooks(current, workInProgress, lanes) {\n  workInProgress.updateQueue = current.updateQueue; // TODO: Don't need to reset the flags here, because they're reset in the\n  // complete phase (bubbleProperties).\n\n  if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {\n    workInProgress.flags &= ~(MountPassiveDev | MountLayoutDev | Passive | Update);\n  } else {\n    workInProgress.flags &= ~(Passive | Update);\n  }\n\n  current.lanes = removeLanes(current.lanes, lanes);\n}\nfunction resetHooksAfterThrow() {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n\n  if (didScheduleRenderPhaseUpdate) {\n    // There were render phase updates. These are only valid for this render\n    // phase, which we are now aborting. Remove the updates from the queues so\n    // they do not persist to the next render. Do not remove updates from hooks\n    // that weren't processed.\n    //\n    // Only reset the updates from the queue if it has a clone. If it does\n    // not have a clone, that means it wasn't processed, and the updates were\n    // scheduled before we entered the render phase.\n    var hook = currentlyRenderingFiber$1.memoizedState;\n\n    while (hook !== null) {\n      var queue = hook.queue;\n\n      if (queue !== null) {\n        queue.pending = null;\n      }\n\n      hook = hook.next;\n    }\n\n    didScheduleRenderPhaseUpdate = false;\n  }\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber$1 = null;\n  currentHook = null;\n  workInProgressHook = null;\n\n  {\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n    currentHookNameInDev = null;\n    isUpdatingOpaqueValueInRenderPhase = false;\n  }\n\n  didScheduleRenderPhaseUpdateDuringThisPass = false;\n  localIdCounter = 0;\n}\n\nfunction mountWorkInProgressHook() {\n  var hook = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook() {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  var nextCurrentHook;\n\n  if (currentHook === null) {\n    var current = currentlyRenderingFiber$1.alternate;\n\n    if (current !== null) {\n      nextCurrentHook = current.memoizedState;\n    } else {\n      nextCurrentHook = null;\n    }\n  } else {\n    nextCurrentHook = currentHook.next;\n  }\n\n  var nextWorkInProgressHook;\n\n  if (workInProgressHook === null) {\n    nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;\n  } else {\n    nextWorkInProgressHook = workInProgressHook.next;\n  }\n\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n    currentHook = nextCurrentHook;\n  } else {\n    // Clone from the current hook.\n    if (nextCurrentHook === null) {\n      throw new Error('Rendered more hooks than during the previous render.');\n    }\n\n    currentHook = nextCurrentHook;\n    var newHook = {\n      memoizedState: currentHook.memoizedState,\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n      next: null\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n  }\n\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue() {\n  return {\n    lastEffect: null,\n    stores: null\n  };\n}\n\nfunction basicStateReducer(state, action) {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === 'function' ? action(state) : action;\n}\n\nfunction mountReducer(reducer, initialArg, init) {\n  var hook = mountWorkInProgressHook();\n  var initialState;\n\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = initialArg;\n  }\n\n  hook.memoizedState = hook.baseState = initialState;\n  var queue = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: initialState\n  };\n  hook.queue = queue;\n  var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer(reducer, initialArg, init) {\n  var hook = updateWorkInProgressHook();\n  var queue = hook.queue;\n\n  if (queue === null) {\n    throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');\n  }\n\n  queue.lastRenderedReducer = reducer;\n  var current = currentHook; // The last rebase update that is NOT part of the base state.\n\n  var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.\n\n  var pendingQueue = queue.pending;\n\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      var baseFirst = baseQueue.next;\n      var pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n\n    {\n      if (current.baseQueue !== baseQueue) {\n        // Internal invariant that should never happen, but feasibly could in\n        // the future if we implement resuming, or some form of that.\n        error('Internal error: Expected work-in-progress queue to be a clone. ' + 'This is a bug in React.');\n      }\n    }\n\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    var first = baseQueue.next;\n    var newState = current.baseState;\n    var newBaseState = null;\n    var newBaseQueueFirst = null;\n    var newBaseQueueLast = null;\n    var update = first;\n\n    do {\n      var updateLane = update.lane;\n\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        var clone = {\n          lane: updateLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: null\n        };\n\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        } // Update the remaining priority in the queue.\n        // TODO: Don't need to accumulate this. Instead, we can remove\n        // renderLanes from the original lanes.\n\n\n        currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);\n        markSkippedUpdateLanes(updateLane);\n      } else {\n        // This update does have sufficient priority.\n        if (newBaseQueueLast !== null) {\n          var _clone = {\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: null\n          };\n          newBaseQueueLast = newBaseQueueLast.next = _clone;\n        } // Process this update.\n\n\n        if (update.hasEagerState) {\n          // If this update is a state update (not a reducer) and was processed eagerly,\n          // we can use the eagerly computed state\n          newState = update.eagerState;\n        } else {\n          var action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = newBaseQueueFirst;\n    } // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n\n\n    if (!objectIs(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n    queue.lastRenderedState = newState;\n  } // Interleaved updates are stored on a separate queue. We aren't going to\n  // process them during this render, but we do need to track which lanes\n  // are remaining.\n\n\n  var lastInterleaved = queue.interleaved;\n\n  if (lastInterleaved !== null) {\n    var interleaved = lastInterleaved;\n\n    do {\n      var interleavedLane = interleaved.lane;\n      currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);\n      markSkippedUpdateLanes(interleavedLane);\n      interleaved = interleaved.next;\n    } while (interleaved !== lastInterleaved);\n  } else if (baseQueue === null) {\n    // `queue.lanes` is used for entangling transitions. We can set it back to\n    // zero once the queue is empty.\n    queue.lanes = NoLanes;\n  }\n\n  var dispatch = queue.dispatch;\n  return [hook.memoizedState, dispatch];\n}\n\nfunction rerenderReducer(reducer, initialArg, init) {\n  var hook = updateWorkInProgressHook();\n  var queue = hook.queue;\n\n  if (queue === null) {\n    throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');\n  }\n\n  queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous\n  // work-in-progress hook.\n\n  var dispatch = queue.dispatch;\n  var lastRenderPhaseUpdate = queue.pending;\n  var newState = hook.memoizedState;\n\n  if (lastRenderPhaseUpdate !== null) {\n    // The queue doesn't persist past this render pass.\n    queue.pending = null;\n    var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n    var update = firstRenderPhaseUpdate;\n\n    do {\n      // Process this render phase update. We don't have to check the\n      // priority because it will always be the same as the current\n      // render's.\n      var action = update.action;\n      newState = reducer(newState, action);\n      update = update.next;\n    } while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n\n\n    if (!objectIs(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to\n    // the base state unless the queue is empty.\n    // TODO: Not sure if this is the desired semantics, but it's what we\n    // do for gDSFP. I can't remember why.\n\n    if (hook.baseQueue === null) {\n      hook.baseState = newState;\n    }\n\n    queue.lastRenderedState = newState;\n  }\n\n  return [newState, dispatch];\n}\n\nfunction mountMutableSource(source, getSnapshot, subscribe) {\n  {\n    return undefined;\n  }\n}\n\nfunction updateMutableSource(source, getSnapshot, subscribe) {\n  {\n    return undefined;\n  }\n}\n\nfunction mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber$1;\n  var hook = mountWorkInProgressHook();\n  var nextSnapshot;\n  var isHydrating = getIsHydrating();\n\n  if (isHydrating) {\n    if (getServerSnapshot === undefined) {\n      throw new Error('Missing getServerSnapshot, which is required for ' + 'server-rendered content. Will revert to client rendering.');\n    }\n\n    nextSnapshot = getServerSnapshot();\n\n    {\n      if (!didWarnUncachedGetSnapshot) {\n        if (nextSnapshot !== getServerSnapshot()) {\n          error('The result of getServerSnapshot should be cached to avoid an infinite loop');\n\n          didWarnUncachedGetSnapshot = true;\n        }\n      }\n    }\n  } else {\n    nextSnapshot = getSnapshot();\n\n    {\n      if (!didWarnUncachedGetSnapshot) {\n        var cachedSnapshot = getSnapshot();\n\n        if (!objectIs(nextSnapshot, cachedSnapshot)) {\n          error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n          didWarnUncachedGetSnapshot = true;\n        }\n      }\n    } // Unless we're rendering a blocking lane, schedule a consistency check.\n    // Right before committing, we will walk the tree and check if any of the\n    // stores were mutated.\n    //\n    // We won't do this if we're hydrating server-rendered content, because if\n    // the content is stale, it's already visible anyway. Instead we'll patch\n    // it up in a passive effect.\n\n\n    var root = getWorkInProgressRoot();\n\n    if (root === null) {\n      throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');\n    }\n\n    if (!includesBlockingLane(root, renderLanes)) {\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n    }\n  } // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n\n\n  hook.memoizedState = nextSnapshot;\n  var inst = {\n    value: nextSnapshot,\n    getSnapshot: getSnapshot\n  };\n  hook.queue = inst; // Schedule an effect to subscribe to the store.\n\n  mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]); // Schedule an effect to update the mutable instance fields. We will update\n  // this whenever subscribe, getSnapshot, or value changes. Because there's no\n  // clean-up function, and we track the deps correctly, we can call pushEffect\n  // directly, without storing any additional state. For the same reason, we\n  // don't need to set a static flag, either.\n  // TODO: We can move this to the passive phase once we add a pre-commit\n  // consistency check. See the next comment.\n\n  fiber.flags |= Passive;\n  pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);\n  return nextSnapshot;\n}\n\nfunction updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber$1;\n  var hook = updateWorkInProgressHook(); // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n\n  var nextSnapshot = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedSnapshot = getSnapshot();\n\n      if (!objectIs(nextSnapshot, cachedSnapshot)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  var prevSnapshot = hook.memoizedState;\n  var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);\n\n  if (snapshotChanged) {\n    hook.memoizedState = nextSnapshot;\n    markWorkInProgressReceivedUpdate();\n  }\n\n  var inst = hook.queue;\n  updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]); // Whenever getSnapshot or subscribe changes, we need to check in the\n  // commit phase if there was an interleaved mutation. In concurrent mode\n  // this can happen all the time, but even in synchronous mode, an earlier\n  // effect may have mutated the store.\n\n  if (inst.getSnapshot !== getSnapshot || snapshotChanged || // Check if the susbcribe function changed. We can save some memory by\n  // checking whether we scheduled a subscription effect above.\n  workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {\n    fiber.flags |= Passive;\n    pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null); // Unless we're rendering a blocking lane, schedule a consistency check.\n    // Right before committing, we will walk the tree and check if any of the\n    // stores were mutated.\n\n    var root = getWorkInProgressRoot();\n\n    if (root === null) {\n      throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');\n    }\n\n    if (!includesBlockingLane(root, renderLanes)) {\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n    }\n  }\n\n  return nextSnapshot;\n}\n\nfunction pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n  fiber.flags |= StoreConsistency;\n  var check = {\n    getSnapshot: getSnapshot,\n    value: renderedSnapshot\n  };\n  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n    componentUpdateQueue.stores = [check];\n  } else {\n    var stores = componentUpdateQueue.stores;\n\n    if (stores === null) {\n      componentUpdateQueue.stores = [check];\n    } else {\n      stores.push(check);\n    }\n  }\n}\n\nfunction updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n  // These are updated in the passive phase\n  inst.value = nextSnapshot;\n  inst.getSnapshot = getSnapshot; // Something may have been mutated in between render and commit. This could\n  // have been in an event that fired before the passive effects, or it could\n  // have been in a layout effect. In that case, we would have used the old\n  // snapsho and getSnapshot values to bail out. We need to check one more time.\n\n  if (checkIfSnapshotChanged(inst)) {\n    // Force a re-render.\n    forceStoreRerender(fiber);\n  }\n}\n\nfunction subscribeToStore(fiber, inst, subscribe) {\n  var handleStoreChange = function () {\n    // The store changed. Check if the snapshot changed since the last time we\n    // read from the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceStoreRerender(fiber);\n    }\n  }; // Subscribe to the store and return a clean-up function.\n\n\n  return subscribe(handleStoreChange);\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction forceStoreRerender(fiber) {\n  var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n  if (root !== null) {\n    scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n  }\n}\n\nfunction mountState(initialState) {\n  var hook = mountWorkInProgressHook();\n\n  if (typeof initialState === 'function') {\n    // $FlowFixMe: Flow doesn't like mixed types\n    initialState = initialState();\n  }\n\n  hook.memoizedState = hook.baseState = initialState;\n  var queue = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState\n  };\n  hook.queue = queue;\n  var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState(initialState) {\n  return updateReducer(basicStateReducer);\n}\n\nfunction rerenderState(initialState) {\n  return rerenderReducer(basicStateReducer);\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  var effect = {\n    tag: tag,\n    create: create,\n    destroy: destroy,\n    deps: deps,\n    // Circular\n    next: null\n  };\n  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    var lastEffect = componentUpdateQueue.lastEffect;\n\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      var firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n\n  return effect;\n}\n\nfunction mountRef(initialValue) {\n  var hook = mountWorkInProgressHook();\n\n  {\n    var _ref2 = {\n      current: initialValue\n    };\n    hook.memoizedState = _ref2;\n    return _ref2;\n  }\n}\n\nfunction updateRef(initialValue) {\n  var hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);\n}\n\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var destroy = undefined;\n\n  if (currentHook !== null) {\n    var prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n\n    if (nextDeps !== null) {\n      var prevDeps = prevEffect.deps;\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);\n}\n\nfunction mountEffect(create, deps) {\n  if ( (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {\n    return mountEffectImpl(MountPassiveDev | Passive | PassiveStatic, Passive$1, create, deps);\n  } else {\n    return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);\n  }\n}\n\nfunction updateEffect(create, deps) {\n  return updateEffectImpl(Passive, Passive$1, create, deps);\n}\n\nfunction mountInsertionEffect(create, deps) {\n  return mountEffectImpl(Update, Insertion, create, deps);\n}\n\nfunction updateInsertionEffect(create, deps) {\n  return updateEffectImpl(Update, Insertion, create, deps);\n}\n\nfunction mountLayoutEffect(create, deps) {\n  var fiberFlags = Update;\n\n  {\n    fiberFlags |= LayoutStatic;\n  }\n\n  if ( (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {\n    fiberFlags |= MountLayoutDev;\n  }\n\n  return mountEffectImpl(fiberFlags, Layout, create, deps);\n}\n\nfunction updateLayoutEffect(create, deps) {\n  return updateEffectImpl(Update, Layout, create, deps);\n}\n\nfunction imperativeHandleEffect(create, ref) {\n  if (typeof ref === 'function') {\n    var refCallback = ref;\n\n    var _inst = create();\n\n    refCallback(_inst);\n    return function () {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    var refObject = ref;\n\n    {\n      if (!refObject.hasOwnProperty('current')) {\n        error('Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}');\n      }\n    }\n\n    var _inst2 = create();\n\n    refObject.current = _inst2;\n    return function () {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle(ref, create, deps) {\n  {\n    if (typeof create !== 'function') {\n      error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');\n    }\n  } // TODO: If deps are provided, should we skip comparing the ref itself?\n\n\n  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n  var fiberFlags = Update;\n\n  {\n    fiberFlags |= LayoutStatic;\n  }\n\n  if ( (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {\n    fiberFlags |= MountLayoutDev;\n  }\n\n  return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n}\n\nfunction updateImperativeHandle(ref, create, deps) {\n  {\n    if (typeof create !== 'function') {\n      error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');\n    }\n  } // TODO: If deps are provided, should we skip comparing the ref itself?\n\n\n  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n  return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n}\n\nfunction mountDebugValue(value, formatterFn) {// This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nvar updateDebugValue = mountDebugValue;\n\nfunction mountCallback(callback, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback(callback, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var prevState = hook.memoizedState;\n\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      var prevDeps = prevState[1];\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo(nextCreate, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo(nextCreate, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var prevState = hook.memoizedState;\n\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      var prevDeps = prevState[1];\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n\n  var nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction mountDeferredValue(value) {\n  var hook = mountWorkInProgressHook();\n  hook.memoizedState = value;\n  return value;\n}\n\nfunction updateDeferredValue(value) {\n  var hook = updateWorkInProgressHook();\n  var resolvedCurrentHook = currentHook;\n  var prevValue = resolvedCurrentHook.memoizedState;\n  return updateDeferredValueImpl(hook, prevValue, value);\n}\n\nfunction rerenderDeferredValue(value) {\n  var hook = updateWorkInProgressHook();\n\n  if (currentHook === null) {\n    // This is a rerender during a mount.\n    hook.memoizedState = value;\n    return value;\n  } else {\n    // This is a rerender during an update.\n    var prevValue = currentHook.memoizedState;\n    return updateDeferredValueImpl(hook, prevValue, value);\n  }\n}\n\nfunction updateDeferredValueImpl(hook, prevValue, value) {\n  var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);\n\n  if (shouldDeferValue) {\n    // This is an urgent update. If the value has changed, keep using the\n    // previous value and spawn a deferred render to update it later.\n    if (!objectIs(value, prevValue)) {\n      // Schedule a deferred render\n      var deferredLane = claimNextTransitionLane();\n      currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);\n      markSkippedUpdateLanes(deferredLane); // Set this to true to indicate that the rendered value is inconsistent\n      // from the latest value. The name \"baseState\" doesn't really match how we\n      // use it because we're reusing a state hook field instead of creating a\n      // new one.\n\n      hook.baseState = true;\n    } // Reuse the previous value\n\n\n    return prevValue;\n  } else {\n    // This is not an urgent update, so we can use the latest value regardless\n    // of what it is. No need to defer it.\n    // However, if we're currently inside a spawned render, then we need to mark\n    // this as an update to prevent the fiber from bailing out.\n    //\n    // `baseState` is true when the current value is different from the rendered\n    // value. The name doesn't really match how we use it because we're reusing\n    // a state hook field instead of creating a new one.\n    if (hook.baseState) {\n      // Flip this back to false.\n      hook.baseState = false;\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = value;\n    return value;\n  }\n}\n\nfunction startTransition(setPending, callback, options) {\n  var previousPriority = getCurrentUpdatePriority();\n  setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));\n  setPending(true);\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\n  ReactCurrentBatchConfig$2.transition = {};\n  var currentTransition = ReactCurrentBatchConfig$2.transition;\n\n  {\n    ReactCurrentBatchConfig$2.transition._updatedFibers = new Set();\n  }\n\n  try {\n    setPending(false);\n    callback();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$2.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nfunction mountTransition() {\n  var _mountState = mountState(false),\n      isPending = _mountState[0],\n      setPending = _mountState[1]; // The `start` method never changes.\n\n\n  var start = startTransition.bind(null, setPending);\n  var hook = mountWorkInProgressHook();\n  hook.memoizedState = start;\n  return [isPending, start];\n}\n\nfunction updateTransition() {\n  var _updateState = updateState(),\n      isPending = _updateState[0];\n\n  var hook = updateWorkInProgressHook();\n  var start = hook.memoizedState;\n  return [isPending, start];\n}\n\nfunction rerenderTransition() {\n  var _rerenderState = rerenderState(),\n      isPending = _rerenderState[0];\n\n  var hook = updateWorkInProgressHook();\n  var start = hook.memoizedState;\n  return [isPending, start];\n}\n\nvar isUpdatingOpaqueValueInRenderPhase = false;\nfunction getIsUpdatingOpaqueValueInRenderPhaseInDEV() {\n  {\n    return isUpdatingOpaqueValueInRenderPhase;\n  }\n}\n\nfunction mountId() {\n  var hook = mountWorkInProgressHook();\n  var root = getWorkInProgressRoot(); // TODO: In Fizz, id generation is specific to each server config. Maybe we\n  // should do this in Fiber, too? Deferring this decision for now because\n  // there's no other place to store the prefix except for an internal field on\n  // the public createRoot object, which the fiber tree does not currently have\n  // a reference to.\n\n  var identifierPrefix = root.identifierPrefix;\n  var id;\n\n  if (getIsHydrating()) {\n    var treeId = getTreeId(); // Use a captial R prefix for server-generated ids.\n\n    id = ':' + identifierPrefix + 'R' + treeId; // Unless this is the first id at this level, append a number at the end\n    // that represents the position of this useId hook among all the useId\n    // hooks for this fiber.\n\n    var localId = localIdCounter++;\n\n    if (localId > 0) {\n      id += 'H' + localId.toString(32);\n    }\n\n    id += ':';\n  } else {\n    // Use a lowercase r prefix for client-generated ids.\n    var globalClientId = globalClientIdCounter++;\n    id = ':' + identifierPrefix + 'r' + globalClientId.toString(32) + ':';\n  }\n\n  hook.memoizedState = id;\n  return id;\n}\n\nfunction updateId() {\n  var hook = updateWorkInProgressHook();\n  var id = hook.memoizedState;\n  return id;\n}\n\nfunction dispatchReducerAction(fiber, queue, action) {\n  {\n    if (typeof arguments[3] === 'function') {\n      error(\"State updates from the useState() and useReducer() Hooks don't support the \" + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().');\n    }\n  }\n\n  var lane = requestUpdateLane(fiber);\n  var update = {\n    lane: lane,\n    action: action,\n    hasEagerState: false,\n    eagerState: null,\n    next: null\n  };\n\n  if (isRenderPhaseUpdate(fiber)) {\n    enqueueRenderPhaseUpdate(queue, update);\n  } else {\n    var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n\n    if (root !== null) {\n      var eventTime = requestEventTime();\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitionUpdate(root, queue, lane);\n    }\n  }\n\n  markUpdateInDevTools(fiber, lane);\n}\n\nfunction dispatchSetState(fiber, queue, action) {\n  {\n    if (typeof arguments[3] === 'function') {\n      error(\"State updates from the useState() and useReducer() Hooks don't support the \" + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().');\n    }\n  }\n\n  var lane = requestUpdateLane(fiber);\n  var update = {\n    lane: lane,\n    action: action,\n    hasEagerState: false,\n    eagerState: null,\n    next: null\n  };\n\n  if (isRenderPhaseUpdate(fiber)) {\n    enqueueRenderPhaseUpdate(queue, update);\n  } else {\n    var alternate = fiber.alternate;\n\n    if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      var lastRenderedReducer = queue.lastRenderedReducer;\n\n      if (lastRenderedReducer !== null) {\n        var prevDispatcher;\n\n        {\n          prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        }\n\n        try {\n          var currentState = queue.lastRenderedState;\n          var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n\n          update.hasEagerState = true;\n          update.eagerState = eagerState;\n\n          if (objectIs(eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            // TODO: Do we still need to entangle transitions in this case?\n            enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);\n            return;\n          }\n        } catch (error) {// Suppress the error. It will throw again in the render phase.\n        } finally {\n          {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        }\n      }\n    }\n\n    var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n\n    if (root !== null) {\n      var eventTime = requestEventTime();\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n      entangleTransitionUpdate(root, queue, lane);\n    }\n  }\n\n  markUpdateInDevTools(fiber, lane);\n}\n\nfunction isRenderPhaseUpdate(fiber) {\n  var alternate = fiber.alternate;\n  return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;\n}\n\nfunction enqueueRenderPhaseUpdate(queue, update) {\n  // This is a render phase update. Stash it in a lazily-created map of\n  // queue -> linked list of updates. After this render pass, we'll restart\n  // and apply the stashed updates on top of the work-in-progress hook.\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n  var pending = queue.pending;\n\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n\n  queue.pending = update;\n} // TODO: Move to ReactFiberConcurrentUpdates?\n\n\nfunction entangleTransitionUpdate(root, queue, lane) {\n  if (isTransitionLane(lane)) {\n    var queueLanes = queue.lanes; // If any entangled lanes are no longer pending on the root, then they\n    // must have finished. We can remove them from the shared queue, which\n    // represents a superset of the actually pending lanes. In some cases we\n    // may entangle more than we need to, but that's OK. In fact it's worse if\n    // we *don't* entangle when we should.\n\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.\n\n    var newQueueLanes = mergeLanes(queueLanes, lane);\n    queue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n\n    markRootEntangled(root, newQueueLanes);\n  }\n}\n\nfunction markUpdateInDevTools(fiber, lane, action) {\n\n  {\n    markStateUpdateScheduled(fiber, lane);\n  }\n}\n\nvar ContextOnlyDispatcher = {\n  readContext: readContext,\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useInsertionEffect: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useMutableSource: throwInvalidHookError,\n  useSyncExternalStore: throwInvalidHookError,\n  useId: throwInvalidHookError,\n  unstable_isNewReconciler: enableNewReconciler\n};\n\nvar HooksDispatcherOnMountInDEV = null;\nvar HooksDispatcherOnMountWithHookTypesInDEV = null;\nvar HooksDispatcherOnUpdateInDEV = null;\nvar HooksDispatcherOnRerenderInDEV = null;\nvar InvalidNestedHooksDispatcherOnMountInDEV = null;\nvar InvalidNestedHooksDispatcherOnUpdateInDEV = null;\nvar InvalidNestedHooksDispatcherOnRerenderInDEV = null;\n\n{\n  var warnInvalidContextAccess = function () {\n    error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');\n  };\n\n  var warnInvalidHookAccess = function () {\n    error('Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://reactjs.org/link/rules-of-hooks');\n  };\n\n  HooksDispatcherOnMountInDEV = {\n    readContext: function (context) {\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      mountHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      mountHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      mountHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnMountWithHookTypesInDEV = {\n    readContext: function (context) {\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      updateHookTypesDev();\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      updateHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnUpdateInDEV = {\n    readContext: function (context) {\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnRerenderInDEV = {\n    readContext: function (context) {\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnMountInDEV = {\n    readContext: function (context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\n    readContext: function (context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnRerenderInDEV = {\n    readContext: function (context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n}\n\nvar now$1 = Scheduler.unstable_now;\nvar commitTime = 0;\nvar layoutEffectStartTime = -1;\nvar profilerStartTime = -1;\nvar passiveEffectStartTime = -1;\n/**\n * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).\n *\n * The overall sequence is:\n *   1. render\n *   2. commit (and call `onRender`, `onCommit`)\n *   3. check for nested updates\n *   4. flush passive effects (and call `onPostCommit`)\n *\n * Nested updates are identified in step 3 above,\n * but step 4 still applies to the work that was just committed.\n * We use two flags to track nested updates then:\n * one tracks whether the upcoming update is a nested update,\n * and the other tracks whether the current update was a nested update.\n * The first value gets synced to the second at the start of the render phase.\n */\n\nvar currentUpdateIsNested = false;\nvar nestedUpdateScheduled = false;\n\nfunction isCurrentUpdateNested() {\n  return currentUpdateIsNested;\n}\n\nfunction markNestedUpdateScheduled() {\n  {\n    nestedUpdateScheduled = true;\n  }\n}\n\nfunction resetNestedUpdateFlag() {\n  {\n    currentUpdateIsNested = false;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction syncNestedUpdateFlag() {\n  {\n    currentUpdateIsNested = nestedUpdateScheduled;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction getCommitTime() {\n  return commitTime;\n}\n\nfunction recordCommitTime() {\n\n  commitTime = now$1();\n}\n\nfunction startProfilerTimer(fiber) {\n\n  profilerStartTime = now$1();\n\n  if (fiber.actualStartTime < 0) {\n    fiber.actualStartTime = now$1();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber) {\n\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {\n\n  if (profilerStartTime >= 0) {\n    var elapsedTime = now$1() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n\n    profilerStartTime = -1;\n  }\n}\n\nfunction recordLayoutEffectDuration(fiber) {\n\n  if (layoutEffectStartTime >= 0) {\n    var elapsedTime = now$1() - layoutEffectStartTime;\n    layoutEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n\n    var parentFiber = fiber.return;\n\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          var root = parentFiber.stateNode;\n          root.effectDuration += elapsedTime;\n          return;\n\n        case Profiler:\n          var parentStateNode = parentFiber.stateNode;\n          parentStateNode.effectDuration += elapsedTime;\n          return;\n      }\n\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction recordPassiveEffectDuration(fiber) {\n\n  if (passiveEffectStartTime >= 0) {\n    var elapsedTime = now$1() - passiveEffectStartTime;\n    passiveEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n\n    var parentFiber = fiber.return;\n\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          var root = parentFiber.stateNode;\n\n          if (root !== null) {\n            root.passiveEffectDuration += elapsedTime;\n          }\n\n          return;\n\n        case Profiler:\n          var parentStateNode = parentFiber.stateNode;\n\n          if (parentStateNode !== null) {\n            // Detached fibers have their state node cleared out.\n            // In this case, the return pointer is also cleared out,\n            // so we won't be able to report the time spent in this Profiler's subtree.\n            parentStateNode.passiveEffectDuration += elapsedTime;\n          }\n\n          return;\n      }\n\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction startLayoutEffectTimer() {\n\n  layoutEffectStartTime = now$1();\n}\n\nfunction startPassiveEffectTimer() {\n\n  passiveEffectStartTime = now$1();\n}\n\nfunction transferActualDuration(fiber) {\n  // Transfer time spent rendering these children so we don't lose it\n  // after we rerender. This is used as a helper in special cases\n  // where we should count the work of multiple passes.\n  var child = fiber.child;\n\n  while (child) {\n    fiber.actualDuration += child.actualDuration;\n    child = child.sibling;\n  }\n}\n\nfunction createCapturedValueAtFiber(value, source) {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value: value,\n    source: source,\n    stack: getStackByFiberInDevAndProd(source),\n    digest: null\n  };\n}\nfunction createCapturedValue(value, digest, stack) {\n  return {\n    value: value,\n    source: null,\n    stack: stack != null ? stack : null,\n    digest: digest != null ? digest : null\n  };\n}\n\n// This module is forked in different environments.\n// By default, return `true` to log errors to the console.\n// Forks can return `false` if this isn't desirable.\nfunction showErrorDialog(boundary, errorInfo) {\n  return true;\n}\n\nfunction logCapturedError(boundary, errorInfo) {\n  try {\n    var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.\n    // This enables renderers like ReactNative to better manage redbox behavior.\n\n    if (logError === false) {\n      return;\n    }\n\n    var error = errorInfo.value;\n\n    if (true) {\n      var source = errorInfo.source;\n      var stack = errorInfo.stack;\n      var componentStack = stack !== null ? stack : ''; // Browsers support silencing uncaught errors by calling\n      // `preventDefault()` in window `error` handler.\n      // We record this information as an expando on the error.\n\n      if (error != null && error._suppressLogging) {\n        if (boundary.tag === ClassComponent) {\n          // The error is recoverable and was silenced.\n          // Ignore it and don't print the stack addendum.\n          // This is handy for testing error boundaries without noise.\n          return;\n        } // The error is fatal. Since the silencing might have\n        // been accidental, we'll surface it anyway.\n        // However, the browser would have silenced the original error\n        // so we'll print it first, and then print the stack addendum.\n\n\n        console['error'](error); // Don't transform to our wrapper\n        // For a more detailed description of this block, see:\n        // https://github.com/facebook/react/pull/13384\n      }\n\n      var componentName = source ? getComponentNameFromFiber(source) : null;\n      var componentNameMessage = componentName ? \"The above error occurred in the <\" + componentName + \"> component:\" : 'The above error occurred in one of your React components:';\n      var errorBoundaryMessage;\n\n      if (boundary.tag === HostRoot) {\n        errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\\n' + 'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';\n      } else {\n        var errorBoundaryName = getComponentNameFromFiber(boundary) || 'Anonymous';\n        errorBoundaryMessage = \"React will try to recreate this component tree from scratch \" + (\"using the error boundary you provided, \" + errorBoundaryName + \".\");\n      }\n\n      var combinedMessage = componentNameMessage + \"\\n\" + componentStack + \"\\n\\n\" + (\"\" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.\n      // We don't include the original error message and JS stack because the browser\n      // has already printed it. Even if the application swallows the error, it is still\n      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n\n      console['error'](combinedMessage); // Don't transform to our wrapper\n    } else {\n      // In production, we print the error directly.\n      // This will include the message, the JS stack, and anything the browser wants to show.\n      // We pass the error object instead of custom message so that the browser displays the error natively.\n      console['error'](error); // Don't transform to our wrapper\n    }\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nvar PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;\n\nfunction createRootErrorUpdate(fiber, errorInfo, lane) {\n  var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.\n\n  update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n\n  update.payload = {\n    element: null\n  };\n  var error = errorInfo.value;\n\n  update.callback = function () {\n    onUncaughtError(error);\n    logCapturedError(fiber, errorInfo);\n  };\n\n  return update;\n}\n\nfunction createClassErrorUpdate(fiber, errorInfo, lane) {\n  var update = createUpdate(NoTimestamp, lane);\n  update.tag = CaptureUpdate;\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n\n  if (typeof getDerivedStateFromError === 'function') {\n    var error$1 = errorInfo.value;\n\n    update.payload = function () {\n      return getDerivedStateFromError(error$1);\n    };\n\n    update.callback = function () {\n      {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n\n      logCapturedError(fiber, errorInfo);\n    };\n  }\n\n  var inst = fiber.stateNode;\n\n  if (inst !== null && typeof inst.componentDidCatch === 'function') {\n    update.callback = function callback() {\n      {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n\n      logCapturedError(fiber, errorInfo);\n\n      if (typeof getDerivedStateFromError !== 'function') {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this);\n      }\n\n      var error$1 = errorInfo.value;\n      var stack = errorInfo.stack;\n      this.componentDidCatch(error$1, {\n        componentStack: stack !== null ? stack : ''\n      });\n\n      {\n        if (typeof getDerivedStateFromError !== 'function') {\n          // If componentDidCatch is the only error boundary method defined,\n          // then it needs to call setState to recover from errors.\n          // If no state update is scheduled then the boundary will swallow the error.\n          if (!includesSomeLane(fiber.lanes, SyncLane)) {\n            error('%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentNameFromFiber(fiber) || 'Unknown');\n          }\n        }\n      }\n    };\n  }\n\n  return update;\n}\n\nfunction attachPingListener(root, wakeable, lanes) {\n  // Attach a ping listener\n  //\n  // The data might resolve before we have a chance to commit the fallback. Or,\n  // in the case of a refresh, we'll never commit a fallback. So we need to\n  // attach a listener now. When it resolves (\"pings\"), we can decide whether to\n  // try rendering the tree again.\n  //\n  // Only attach a listener if one does not already exist for the lanes\n  // we're currently rendering (which acts like a \"thread ID\" here).\n  //\n  // We only need to do this in concurrent mode. Legacy Suspense always\n  // commits fallbacks synchronously, so there are no pings.\n  var pingCache = root.pingCache;\n  var threadIDs;\n\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap$1();\n    threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(wakeable);\n\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(wakeable, threadIDs);\n    }\n  }\n\n  if (!threadIDs.has(lanes)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(lanes);\n    var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n\n    {\n      if (isDevToolsPresent) {\n        // If we have pending work still, restore the original updaters\n        restorePendingUpdaters(root, lanes);\n      }\n    }\n\n    wakeable.then(ping, ping);\n  }\n}\n\nfunction attachRetryListener(suspenseBoundary, root, wakeable, lanes) {\n  // Retry listener\n  //\n  // If the fallback does commit, we need to attach a different type of\n  // listener. This one schedules an update on the Suspense boundary to turn\n  // the fallback state off.\n  //\n  // Stash the wakeable on the boundary fiber so we can access it in the\n  // commit phase.\n  //\n  // When the wakeable resolves, we'll attempt to render the boundary\n  // again (\"retry\").\n  var wakeables = suspenseBoundary.updateQueue;\n\n  if (wakeables === null) {\n    var updateQueue = new Set();\n    updateQueue.add(wakeable);\n    suspenseBoundary.updateQueue = updateQueue;\n  } else {\n    wakeables.add(wakeable);\n  }\n}\n\nfunction resetSuspendedComponent(sourceFiber, rootRenderLanes) {\n  // A legacy mode Suspense quirk, only relevant to hook components.\n\n\n  var tag = sourceFiber.tag;\n\n  if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {\n    var currentSource = sourceFiber.alternate;\n\n    if (currentSource) {\n      sourceFiber.updateQueue = currentSource.updateQueue;\n      sourceFiber.memoizedState = currentSource.memoizedState;\n      sourceFiber.lanes = currentSource.lanes;\n    } else {\n      sourceFiber.updateQueue = null;\n      sourceFiber.memoizedState = null;\n    }\n  }\n}\n\nfunction getNearestSuspenseBoundaryToCapture(returnFiber) {\n  var node = returnFiber;\n\n  do {\n    if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {\n      return node;\n    } // This boundary already captured during this render. Continue to the next\n    // boundary.\n\n\n    node = node.return;\n  } while (node !== null);\n\n  return null;\n}\n\nfunction markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes) {\n  // This marks a Suspense boundary so that when we're unwinding the stack,\n  // it captures the suspended \"exception\" and does a second (fallback) pass.\n  if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {\n    // Legacy Mode Suspense\n    //\n    // If the boundary is in legacy mode, we should *not*\n    // suspend the commit. Pretend as if the suspended component rendered\n    // null and keep rendering. When the Suspense boundary completes,\n    // we'll do a second pass to render the fallback.\n    if (suspenseBoundary === returnFiber) {\n      // Special case where we suspended while reconciling the children of\n      // a Suspense boundary's inner Offscreen wrapper fiber. This happens\n      // when a React.lazy component is a direct child of a\n      // Suspense boundary.\n      //\n      // Suspense boundaries are implemented as multiple fibers, but they\n      // are a single conceptual unit. The legacy mode behavior where we\n      // pretend the suspended fiber committed as `null` won't work,\n      // because in this case the \"suspended\" fiber is the inner\n      // Offscreen wrapper.\n      //\n      // Because the contents of the boundary haven't started rendering\n      // yet (i.e. nothing in the tree has partially rendered) we can\n      // switch to the regular, concurrent mode behavior: mark the\n      // boundary with ShouldCapture and enter the unwind phase.\n      suspenseBoundary.flags |= ShouldCapture;\n    } else {\n      suspenseBoundary.flags |= DidCapture;\n      sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.\n      // But we shouldn't call any lifecycle methods or callbacks. Remove\n      // all lifecycle effect tags.\n\n      sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n\n      if (sourceFiber.tag === ClassComponent) {\n        var currentSourceFiber = sourceFiber.alternate;\n\n        if (currentSourceFiber === null) {\n          // This is a new mount. Change the tag so it's not mistaken for a\n          // completed class component. For example, we should not call\n          // componentWillUnmount if it is deleted.\n          sourceFiber.tag = IncompleteClassComponent;\n        } else {\n          // When we try rendering again, we should not reuse the current fiber,\n          // since it's known to be in an inconsistent state. Use a force update to\n          // prevent a bail out.\n          var update = createUpdate(NoTimestamp, SyncLane);\n          update.tag = ForceUpdate;\n          enqueueUpdate(sourceFiber, update, SyncLane);\n        }\n      } // The source fiber did not complete. Mark it with Sync priority to\n      // indicate that it still has pending work.\n\n\n      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n    }\n\n    return suspenseBoundary;\n  } // Confirmed that the boundary is in a concurrent mode tree. Continue\n  // with the normal suspend path.\n  //\n  // After this we'll use a set of heuristics to determine whether this\n  // render pass will run to completion or restart or \"suspend\" the commit.\n  // The actual logic for this is spread out in different places.\n  //\n  // This first principle is that if we're going to suspend when we complete\n  // a root, then we should also restart if we get an update or ping that\n  // might unsuspend it, and vice versa. The only reason to suspend is\n  // because you think you might want to restart before committing. However,\n  // it doesn't make sense to restart only while in the period we're suspended.\n  //\n  // Restarting too aggressively is also not good because it starves out any\n  // intermediate loading state. So we use heuristics to determine when.\n  // Suspense Heuristics\n  //\n  // If nothing threw a Promise or all the same fallbacks are already showing,\n  // then don't suspend/restart.\n  //\n  // If this is an initial render of a new tree of Suspense boundaries and\n  // those trigger a fallback, then don't suspend/restart. We want to ensure\n  // that we can show the initial loading state as quickly as possible.\n  //\n  // If we hit a \"Delayed\" case, such as when we'd switch from content back into\n  // a fallback, then we should always suspend/restart. Transitions apply\n  // to this case. If none is defined, JND is used instead.\n  //\n  // If we're already showing a fallback and it gets \"retried\", allowing us to show\n  // another level, but there's still an inner boundary that would show a fallback,\n  // then we suspend/restart for 500ms since the last time we showed a fallback\n  // anywhere in the tree. This effectively throttles progressive loading into a\n  // consistent train of commits. This also gives us an opportunity to restart to\n  // get to the completed state slightly earlier.\n  //\n  // If there's ambiguity due to batching it's resolved in preference of:\n  // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\n  //\n  // We want to ensure that a \"busy\" state doesn't get force committed. We want to\n  // ensure that new initial loading states can commit as soon as possible.\n\n\n  suspenseBoundary.flags |= ShouldCapture; // TODO: I think we can remove this, since we now use `DidCapture` in\n  // the begin phase to prevent an early bailout.\n\n  suspenseBoundary.lanes = rootRenderLanes;\n  return suspenseBoundary;\n}\n\nfunction throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {\n  // The source fiber did not complete.\n  sourceFiber.flags |= Incomplete;\n\n  {\n    if (isDevToolsPresent) {\n      // If we have pending work still, restore the original updaters\n      restorePendingUpdaters(root, rootRenderLanes);\n    }\n  }\n\n  if (value !== null && typeof value === 'object' && typeof value.then === 'function') {\n    // This is a wakeable. The component suspended.\n    var wakeable = value;\n    resetSuspendedComponent(sourceFiber);\n\n    {\n      if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {\n        markDidThrowWhileHydratingDEV();\n      }\n    }\n\n\n    var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);\n\n    if (suspenseBoundary !== null) {\n      suspenseBoundary.flags &= ~ForceClientRender;\n      markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // We only attach ping listeners in concurrent mode. Legacy Suspense always\n      // commits fallbacks synchronously, so there are no pings.\n\n      if (suspenseBoundary.mode & ConcurrentMode) {\n        attachPingListener(root, wakeable, rootRenderLanes);\n      }\n\n      attachRetryListener(suspenseBoundary, root, wakeable);\n      return;\n    } else {\n      // No boundary was found. Unless this is a sync update, this is OK.\n      // We can suspend and wait for more data to arrive.\n      if (!includesSyncLane(rootRenderLanes)) {\n        // This is not a sync update. Suspend. Since we're not activating a\n        // Suspense boundary, this will unwind all the way to the root without\n        // performing a second pass to render a fallback. (This is arguably how\n        // refresh transitions should work, too, since we're not going to commit\n        // the fallbacks anyway.)\n        //\n        // This case also applies to initial hydration.\n        attachPingListener(root, wakeable, rootRenderLanes);\n        renderDidSuspendDelayIfPossible();\n        return;\n      } // This is a sync/discrete update. We treat this case like an error\n      // because discrete renders are expected to produce a complete tree\n      // synchronously to maintain consistency with external state.\n\n\n      var uncaughtSuspenseError = new Error('A component suspended while responding to synchronous input. This ' + 'will cause the UI to be replaced with a loading indicator. To ' + 'fix, updates that suspend should be wrapped ' + 'with startTransition.'); // If we're outside a transition, fall through to the regular error path.\n      // The error will be caught by the nearest suspense boundary.\n\n      value = uncaughtSuspenseError;\n    }\n  } else {\n    // This is a regular error, not a Suspense wakeable.\n    if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {\n      markDidThrowWhileHydratingDEV();\n\n      var _suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber); // If the error was thrown during hydration, we may be able to recover by\n      // discarding the dehydrated content and switching to a client render.\n      // Instead of surfacing the error, find the nearest Suspense boundary\n      // and render it again without hydration.\n\n\n      if (_suspenseBoundary !== null) {\n        if ((_suspenseBoundary.flags & ShouldCapture) === NoFlags) {\n          // Set a flag to indicate that we should try rendering the normal\n          // children again, not the fallback.\n          _suspenseBoundary.flags |= ForceClientRender;\n        }\n\n        markSuspenseBoundaryShouldCapture(_suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // Even though the user may not be affected by this error, we should\n        // still log it so it can be fixed.\n\n        queueHydrationError(createCapturedValueAtFiber(value, sourceFiber));\n        return;\n      }\n    }\n  }\n\n  value = createCapturedValueAtFiber(value, sourceFiber);\n  renderDidError(value); // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n\n  var workInProgress = returnFiber;\n\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot:\n        {\n          var _errorInfo = value;\n          workInProgress.flags |= ShouldCapture;\n          var lane = pickArbitraryLane(rootRenderLanes);\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n          var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);\n          enqueueCapturedUpdate(workInProgress, update);\n          return;\n        }\n\n      case ClassComponent:\n        // Capture and retry\n        var errorInfo = value;\n        var ctor = workInProgress.type;\n        var instance = workInProgress.stateNode;\n\n        if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {\n          workInProgress.flags |= ShouldCapture;\n\n          var _lane = pickArbitraryLane(rootRenderLanes);\n\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state\n\n          var _update = createClassErrorUpdate(workInProgress, errorInfo, _lane);\n\n          enqueueCapturedUpdate(workInProgress, _update);\n          return;\n        }\n\n        break;\n    }\n\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nfunction getSuspendedCache() {\n  {\n    return null;\n  } // This function is called when a Suspense boundary suspends. It returns the\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar didReceiveUpdate = false;\nvar didWarnAboutBadClass;\nvar didWarnAboutModulePatternComponent;\nvar didWarnAboutContextTypeOnFunctionComponent;\nvar didWarnAboutGetDerivedStateOnFunctionComponent;\nvar didWarnAboutFunctionRefs;\nvar didWarnAboutReassigningProps;\nvar didWarnAboutRevealOrder;\nvar didWarnAboutTailOptions;\n\n{\n  didWarnAboutBadClass = {};\n  didWarnAboutModulePatternComponent = {};\n  didWarnAboutContextTypeOnFunctionComponent = {};\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\n  didWarnAboutFunctionRefs = {};\n  didWarnAboutReassigningProps = false;\n  didWarnAboutRevealOrder = {};\n  didWarnAboutTailOptions = {};\n}\n\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their\n  // identities match.\n\n  workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\n}\n\nfunction updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\n        'prop', getComponentNameFromType(Component));\n      }\n    }\n  }\n\n  var render = Component.render;\n  var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent\n\n  var nextChildren;\n  var hasId;\n  prepareToReadContext(workInProgress, renderLanes);\n\n  {\n    markComponentRenderStarted(workInProgress);\n  }\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);\n    hasId = checkDidRenderIdHook();\n\n    if ( workInProgress.mode & StrictLegacyMode) {\n      setIsStrictModeForDevtools(true);\n\n      try {\n        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);\n        hasId = checkDidRenderIdHook();\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n\n    setIsRendering(false);\n  }\n\n  {\n    markComponentRenderStopped();\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  if (getIsHydrating() && hasId) {\n    pushMaterializedTreeId(workInProgress);\n  } // React DevTools reads this flag.\n\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {\n  if (current === null) {\n    var type = Component.type;\n\n    if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.\n    Component.defaultProps === undefined) {\n      var resolvedType = type;\n\n      {\n        resolvedType = resolveFunctionForHotReloading(type);\n      } // If this is a plain function component without default props,\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n\n\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = resolvedType;\n\n      {\n        validateFunctionComponentInDev(workInProgress, type);\n      }\n\n      return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, renderLanes);\n    }\n\n    {\n      var innerPropTypes = type.propTypes;\n\n      if (innerPropTypes) {\n        // Inner memo component props aren't currently validated in createElement.\n        // We could move it there, but we'd still need this for lazy code path.\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\n        'prop', getComponentNameFromType(type));\n      }\n    }\n\n    var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n\n  {\n    var _type = Component.type;\n    var _innerPropTypes = _type.propTypes;\n\n    if (_innerPropTypes) {\n      // Inner memo component props aren't currently validated in createElement.\n      // We could move it there, but we'd still need this for lazy code path.\n      checkPropTypes(_innerPropTypes, nextProps, // Resolved props\n      'prop', getComponentNameFromType(_type));\n    }\n  }\n\n  var currentChild = current.child; // This is always exactly one child\n\n  var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);\n\n  if (!hasScheduledUpdateOrContext) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    var prevProps = currentChild.memoizedProps; // Default to shallow comparison\n\n    var compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n  } // React DevTools reads this flag.\n\n\n  workInProgress.flags |= PerformedWork;\n  var newChild = createWorkInProgress(currentChild, nextProps);\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens when the inner render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var outerMemoType = workInProgress.elementType;\n\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n        // We warn when you define propTypes on lazy()\n        // so let's just skip over it to find memo() outer wrapper.\n        // Inner props for memo are validated later.\n        var lazyComponent = outerMemoType;\n        var payload = lazyComponent._payload;\n        var init = lazyComponent._init;\n\n        try {\n          outerMemoType = init(payload);\n        } catch (x) {\n          outerMemoType = null;\n        } // Inner propTypes will be validated in the function component path.\n\n\n        var outerPropTypes = outerMemoType && outerMemoType.propTypes;\n\n        if (outerPropTypes) {\n          checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n          'prop', getComponentNameFromType(outerMemoType));\n        }\n      }\n    }\n  }\n\n  if (current !== null) {\n    var prevProps = current.memoizedProps;\n\n    if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && ( // Prevent bailout if the implementation changed due to hot reload.\n     workInProgress.type === current.type )) {\n      didReceiveUpdate = false; // The props are shallowly equal. Reuse the previous props object, like we\n      // would during a normal fiber bailout.\n      //\n      // We don't have strong guarantees that the props object is referentially\n      // equal during updates where we can't bail out anyway — like if the props\n      // are shallowly equal, but there's a local state or context update in the\n      // same batch.\n      //\n      // However, as a principle, we should aim to make the behavior consistent\n      // across different ways of memoizing a component. For example, React.memo\n      // has a different internal Fiber layout if you pass a normal function\n      // component (SimpleMemoComponent) versus if you pass a different type\n      // like forwardRef (MemoComponent). But this is an implementation detail.\n      // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't\n      // affect whether the props object is reused during a bailout.\n\n      workInProgress.pendingProps = nextProps = prevProps;\n\n      if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n        // The pending lanes were cleared at the beginning of beginWork. We're\n        // about to bail out, but there might be other lanes that weren't\n        // included in the current render. Usually, the priority level of the\n        // remaining updates is accumulated during the evaluation of the\n        // component (i.e. when processing the update queue). But since since\n        // we're bailing out early *without* evaluating the component, we need\n        // to account for it here, too. Reset to the value of the current fiber.\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\n        // because a MemoComponent fiber does not have hooks or an update queue;\n        // rather, it wraps around an inner component, which may or may not\n        // contains hooks.\n        // TODO: Move the reset at in beginWork out of the common path so that\n        // this is no longer necessary.\n        workInProgress.lanes = current.lanes;\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      }\n    }\n  }\n\n  return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);\n}\n\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps;\n  var nextChildren = nextProps.children;\n  var prevState = current !== null ? current.memoizedState : null;\n\n  if (nextProps.mode === 'hidden' || enableLegacyHidden ) {\n    // Rendering a hidden tree.\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      // In legacy sync mode, don't defer the subtree. Render it now.\n      // TODO: Consider how Offscreen should work with transitions in the future\n      var nextState = {\n        baseLanes: NoLanes,\n        cachePool: null,\n        transitions: null\n      };\n      workInProgress.memoizedState = nextState;\n\n      pushRenderLanes(workInProgress, renderLanes);\n    } else if (!includesSomeLane(renderLanes, OffscreenLane)) {\n      var spawnedCachePool = null; // We're hidden, and we're not rendering at Offscreen. We will bail out\n      // and resume this tree later.\n\n      var nextBaseLanes;\n\n      if (prevState !== null) {\n        var prevBaseLanes = prevState.baseLanes;\n        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n      } else {\n        nextBaseLanes = renderLanes;\n      } // Schedule this fiber to re-render at offscreen priority. Then bailout.\n\n\n      workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);\n      var _nextState = {\n        baseLanes: nextBaseLanes,\n        cachePool: spawnedCachePool,\n        transitions: null\n      };\n      workInProgress.memoizedState = _nextState;\n      workInProgress.updateQueue = null;\n      // to avoid a push/pop misalignment.\n\n\n      pushRenderLanes(workInProgress, nextBaseLanes);\n\n      return null;\n    } else {\n      // This is the second render. The surrounding visible content has already\n      // committed. Now we resume rendering the hidden tree.\n      // Rendering at offscreen, so we can clear the base lanes.\n      var _nextState2 = {\n        baseLanes: NoLanes,\n        cachePool: null,\n        transitions: null\n      };\n      workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.\n\n      var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;\n\n      pushRenderLanes(workInProgress, subtreeRenderLanes);\n    }\n  } else {\n    // Rendering a visible tree.\n    var _subtreeRenderLanes;\n\n    if (prevState !== null) {\n      // We're going from hidden -> visible.\n      _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n\n      workInProgress.memoizedState = null;\n    } else {\n      // We weren't previously hidden, and we still aren't, so there's nothing\n      // special to do. Need to push to the stack regardless, though, to avoid\n      // a push/pop misalignment.\n      _subtreeRenderLanes = renderLanes;\n    }\n\n    pushRenderLanes(workInProgress, _subtreeRenderLanes);\n  }\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n} // Note: These happen to have identical begin phases, for now. We shouldn't hold\n\nfunction updateFragment(current, workInProgress, renderLanes) {\n  var nextChildren = workInProgress.pendingProps;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMode(current, workInProgress, renderLanes) {\n  var nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateProfiler(current, workInProgress, renderLanes) {\n  {\n    workInProgress.flags |= Update;\n\n    {\n      // Reset effect durations for the next eventual effect phase.\n      // These are reset during render to allow the DevTools commit hook a chance to read them,\n      var stateNode = workInProgress.stateNode;\n      stateNode.effectDuration = 0;\n      stateNode.passiveEffectDuration = 0;\n    }\n  }\n\n  var nextProps = workInProgress.pendingProps;\n  var nextChildren = nextProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markRef(current, workInProgress) {\n  var ref = workInProgress.ref;\n\n  if (current === null && ref !== null || current !== null && current.ref !== ref) {\n    // Schedule a Ref effect\n    workInProgress.flags |= Ref;\n\n    {\n      workInProgress.flags |= RefStatic;\n    }\n  }\n}\n\nfunction updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\n        'prop', getComponentNameFromType(Component));\n      }\n    }\n  }\n\n  var context;\n\n  {\n    var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  var nextChildren;\n  var hasId;\n  prepareToReadContext(workInProgress, renderLanes);\n\n  {\n    markComponentRenderStarted(workInProgress);\n  }\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);\n    hasId = checkDidRenderIdHook();\n\n    if ( workInProgress.mode & StrictLegacyMode) {\n      setIsStrictModeForDevtools(true);\n\n      try {\n        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);\n        hasId = checkDidRenderIdHook();\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n\n    setIsRendering(false);\n  }\n\n  {\n    markComponentRenderStopped();\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  if (getIsHydrating() && hasId) {\n    pushMaterializedTreeId(workInProgress);\n  } // React DevTools reads this flag.\n\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {\n  {\n    // This is used by DevTools to force a boundary to error.\n    switch (shouldError(workInProgress)) {\n      case false:\n        {\n          var _instance = workInProgress.stateNode;\n          var ctor = workInProgress.type; // TODO This way of resetting the error boundary state is a hack.\n          // Is there a better way to do this?\n\n          var tempInstance = new ctor(workInProgress.memoizedProps, _instance.context);\n          var state = tempInstance.state;\n\n          _instance.updater.enqueueSetState(_instance, state, null);\n\n          break;\n        }\n\n      case true:\n        {\n          workInProgress.flags |= DidCapture;\n          workInProgress.flags |= ShouldCapture; // eslint-disable-next-line react-internal/prod-error-codes\n\n          var error$1 = new Error('Simulated error coming from DevTools');\n          var lane = pickArbitraryLane(renderLanes);\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state\n\n          var update = createClassErrorUpdate(workInProgress, createCapturedValueAtFiber(error$1, workInProgress), lane);\n          enqueueCapturedUpdate(workInProgress, update);\n          break;\n        }\n    }\n\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\n        'prop', getComponentNameFromType(Component));\n      }\n    }\n  } // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n\n\n  var hasContext;\n\n  if (isContextProvider(Component)) {\n    hasContext = true;\n    pushContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var instance = workInProgress.stateNode;\n  var shouldUpdate;\n\n  if (instance === null) {\n    resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress); // In the initial pass we might need to construct the instance.\n\n    constructClassInstance(workInProgress, Component, nextProps);\n    mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n    shouldUpdate = true;\n  } else if (current === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);\n  } else {\n    shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);\n  }\n\n  var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);\n\n  {\n    var inst = workInProgress.stateNode;\n\n    if (shouldUpdate && inst.props !== nextProps) {\n      if (!didWarnAboutReassigningProps) {\n        error('It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentNameFromFiber(workInProgress) || 'a component');\n      }\n\n      didWarnAboutReassigningProps = true;\n    }\n  }\n\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef(current, workInProgress);\n  var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  var instance = workInProgress.stateNode; // Rerender\n\n  ReactCurrentOwner$1.current = workInProgress;\n  var nextChildren;\n\n  if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {\n    // If we captured an error, but getDerivedStateFromError is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    {\n      stopProfilerTimerIfRunning();\n    }\n  } else {\n    {\n      markComponentRenderStarted(workInProgress);\n    }\n\n    {\n      setIsRendering(true);\n      nextChildren = instance.render();\n\n      if ( workInProgress.mode & StrictLegacyMode) {\n        setIsStrictModeForDevtools(true);\n\n        try {\n          instance.render();\n        } finally {\n          setIsStrictModeForDevtools(false);\n        }\n      }\n\n      setIsRendering(false);\n    }\n\n    {\n      markComponentRenderStopped();\n    }\n  } // React DevTools reads this flag.\n\n\n  workInProgress.flags |= PerformedWork;\n\n  if (current !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  } // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n\n\n  workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.\n\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  var root = workInProgress.stateNode;\n\n  if (root.pendingContext) {\n    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\nfunction updateHostRoot(current, workInProgress, renderLanes) {\n  pushHostRootContext(workInProgress);\n\n  if (current === null) {\n    throw new Error('Should have a current fiber. This is a bug in React.');\n  }\n\n  var nextProps = workInProgress.pendingProps;\n  var prevState = workInProgress.memoizedState;\n  var prevChildren = prevState.element;\n  cloneUpdateQueue(current, workInProgress);\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n  var nextState = workInProgress.memoizedState;\n  var root = workInProgress.stateNode;\n  // being called \"element\".\n\n\n  var nextChildren = nextState.element;\n\n  if ( prevState.isDehydrated) {\n    // This is a hydration root whose shell has not yet hydrated. We should\n    // attempt to hydrate.\n    // Flip isDehydrated to false to indicate that when this render\n    // finishes, the root will no longer be dehydrated.\n    var overrideState = {\n      element: nextChildren,\n      isDehydrated: false,\n      cache: nextState.cache,\n      pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,\n      transitions: nextState.transitions\n    };\n    var updateQueue = workInProgress.updateQueue; // `baseState` can always be the last state because the root doesn't\n    // have reducer functions so it doesn't need rebasing.\n\n    updateQueue.baseState = overrideState;\n    workInProgress.memoizedState = overrideState;\n\n    if (workInProgress.flags & ForceClientRender) {\n      // Something errored during a previous attempt to hydrate the shell, so we\n      // forced a client render.\n      var recoverableError = createCapturedValueAtFiber(new Error('There was an error while hydrating. Because the error happened outside ' + 'of a Suspense boundary, the entire root will switch to ' + 'client rendering.'), workInProgress);\n      return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError);\n    } else if (nextChildren !== prevChildren) {\n      var _recoverableError = createCapturedValueAtFiber(new Error('This root received an early update, before anything was able ' + 'hydrate. Switched the entire root to client rendering.'), workInProgress);\n\n      return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, _recoverableError);\n    } else {\n      // The outermost shell has not hydrated yet. Start hydrating.\n      enterHydrationState(workInProgress);\n\n      var child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);\n      workInProgress.child = child;\n      var node = child;\n\n      while (node) {\n        // Mark each child as hydrating. This is a fast path to know whether this\n        // tree is part of a hydrating tree. This is used to determine if a child\n        // node has fully mounted yet, and for scheduling event replaying.\n        // Conceptually this is similar to Placement in that a new subtree is\n        // inserted into the React tree here. It just happens to not need DOM\n        // mutations because it already exists.\n        node.flags = node.flags & ~Placement | Hydrating;\n        node = node.sibling;\n      }\n    }\n  } else {\n    // Root is not dehydrated. Either this is a client-only root, or it\n    // already hydrated.\n    resetHydrationState();\n\n    if (nextChildren === prevChildren) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  return workInProgress.child;\n}\n\nfunction mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError) {\n  // Revert to client rendering.\n  resetHydrationState();\n  queueHydrationError(recoverableError);\n  workInProgress.flags |= ForceClientRender;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostComponent(current, workInProgress, renderLanes) {\n  pushHostContext(workInProgress);\n\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n\n  var type = workInProgress.type;\n  var nextProps = workInProgress.pendingProps;\n  var prevProps = current !== null ? current.memoizedProps : null;\n  var nextChildren = nextProps.children;\n  var isDirectTextChild = shouldSetTextContent(type, nextProps);\n\n  if (isDirectTextChild) {\n    // We special case a direct text child of a host node. This is a common\n    // case. We won't handle it as a reified child. We will instead handle\n    // this in the host environment that also has access to this prop. That\n    // avoids allocating another HostText fiber and traversing it.\n    nextChildren = null;\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.flags |= ContentReset;\n  }\n\n  markRef(current, workInProgress);\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostText(current, workInProgress) {\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  } // Nothing to do here. This is terminal. We'll do the completion step\n  // immediately after.\n\n\n  return null;\n}\n\nfunction mountLazyComponent(_current, workInProgress, elementType, renderLanes) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n  var props = workInProgress.pendingProps;\n  var lazyComponent = elementType;\n  var payload = lazyComponent._payload;\n  var init = lazyComponent._init;\n  var Component = init(payload); // Store the unwrapped component in the type.\n\n  workInProgress.type = Component;\n  var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);\n  var resolvedProps = resolveDefaultProps(Component, props);\n  var child;\n\n  switch (resolvedTag) {\n    case FunctionComponent:\n      {\n        {\n          validateFunctionComponentInDev(workInProgress, Component);\n          workInProgress.type = Component = resolveFunctionForHotReloading(Component);\n        }\n\n        child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);\n        return child;\n      }\n\n    case ClassComponent:\n      {\n        {\n          workInProgress.type = Component = resolveClassForHotReloading(Component);\n        }\n\n        child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);\n        return child;\n      }\n\n    case ForwardRef:\n      {\n        {\n          workInProgress.type = Component = resolveForwardRefForHotReloading(Component);\n        }\n\n        child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);\n        return child;\n      }\n\n    case MemoComponent:\n      {\n        {\n          if (workInProgress.type !== workInProgress.elementType) {\n            var outerPropTypes = Component.propTypes;\n\n            if (outerPropTypes) {\n              checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only\n              'prop', getComponentNameFromType(Component));\n            }\n          }\n        }\n\n        child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        renderLanes);\n        return child;\n      }\n  }\n\n  var hint = '';\n\n  {\n    if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {\n      hint = ' Did you wrap a component in React.lazy() more than once?';\n    }\n  } // This message intentionally doesn't mention ForwardRef or MemoComponent\n  // because the fact that it's a separate type of work is an\n  // implementation detail.\n\n\n  throw new Error(\"Element type is invalid. Received a promise that resolves to: \" + Component + \". \" + (\"Lazy element type must resolve to a class or function.\" + hint));\n}\n\nfunction mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress); // Promote the fiber to a class and try rendering again.\n\n  workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n\n  var hasContext;\n\n  if (isContextProvider(Component)) {\n    hasContext = true;\n    pushContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  constructClassInstance(workInProgress, Component, nextProps);\n  mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n  return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\n}\n\nfunction mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n  var props = workInProgress.pendingProps;\n  var context;\n\n  {\n    var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var value;\n  var hasId;\n\n  {\n    markComponentRenderStarted(workInProgress);\n  }\n\n  {\n    if (Component.prototype && typeof Component.prototype.render === 'function') {\n      var componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutBadClass[componentName]) {\n        error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);\n\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n    }\n\n    setIsRendering(true);\n    ReactCurrentOwner$1.current = workInProgress;\n    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);\n    hasId = checkDidRenderIdHook();\n    setIsRendering(false);\n  }\n\n  {\n    markComponentRenderStopped();\n  } // React DevTools reads this flag.\n\n\n  workInProgress.flags |= PerformedWork;\n\n  {\n    // Support for module components is deprecated and is removed behind a flag.\n    // Whether or not it would crash later, we want to show a good message in DEV first.\n    if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {\n      var _componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutModulePatternComponent[_componentName]) {\n        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + 'cannot be called with `new` by React.', _componentName, _componentName, _componentName);\n\n        didWarnAboutModulePatternComponent[_componentName] = true;\n      }\n    }\n  }\n\n  if ( // Run these checks in production only if the flag is off.\n  // Eventually we'll delete this branch altogether.\n   typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {\n    {\n      var _componentName2 = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutModulePatternComponent[_componentName2]) {\n        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + 'cannot be called with `new` by React.', _componentName2, _componentName2, _componentName2);\n\n        didWarnAboutModulePatternComponent[_componentName2] = true;\n      }\n    } // Proceed under the assumption that this is a class instance\n\n\n    workInProgress.tag = ClassComponent; // Throw out any hooks that were used.\n\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n\n    var hasContext = false;\n\n    if (isContextProvider(Component)) {\n      hasContext = true;\n      pushContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;\n    initializeUpdateQueue(workInProgress);\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderLanes);\n    return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\n  } else {\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n\n    {\n\n      if ( workInProgress.mode & StrictLegacyMode) {\n        setIsStrictModeForDevtools(true);\n\n        try {\n          value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);\n          hasId = checkDidRenderIdHook();\n        } finally {\n          setIsStrictModeForDevtools(false);\n        }\n      }\n    }\n\n    if (getIsHydrating() && hasId) {\n      pushMaterializedTreeId(workInProgress);\n    }\n\n    reconcileChildren(null, workInProgress, value, renderLanes);\n\n    {\n      validateFunctionComponentInDev(workInProgress, Component);\n    }\n\n    return workInProgress.child;\n  }\n}\n\nfunction validateFunctionComponentInDev(workInProgress, Component) {\n  {\n    if (Component) {\n      if (Component.childContextTypes) {\n        error('%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component');\n      }\n    }\n\n    if (workInProgress.ref !== null) {\n      var info = '';\n      var ownerName = getCurrentFiberOwnerNameInDevOrNull();\n\n      if (ownerName) {\n        info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n      }\n\n      var warningKey = ownerName || '';\n      var debugSource = workInProgress._debugSource;\n\n      if (debugSource) {\n        warningKey = debugSource.fileName + ':' + debugSource.lineNumber;\n      }\n\n      if (!didWarnAboutFunctionRefs[warningKey]) {\n        didWarnAboutFunctionRefs[warningKey] = true;\n\n        error('Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === 'function') {\n      var _componentName3 = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {\n        error('%s: Function components do not support getDerivedStateFromProps.', _componentName3);\n\n        didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;\n      }\n    }\n\n    if (typeof Component.contextType === 'object' && Component.contextType !== null) {\n      var _componentName4 = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {\n        error('%s: Function components do not support contextType.', _componentName4);\n\n        didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;\n      }\n    }\n  }\n}\n\nvar SUSPENDED_MARKER = {\n  dehydrated: null,\n  treeContext: null,\n  retryLane: NoLane\n};\n\nfunction mountSuspenseOffscreenState(renderLanes) {\n  return {\n    baseLanes: renderLanes,\n    cachePool: getSuspendedCache(),\n    transitions: null\n  };\n}\n\nfunction updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {\n  var cachePool = null;\n\n  return {\n    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n    cachePool: cachePool,\n    transitions: prevOffscreenState.transitions\n  };\n} // TODO: Probably should inline this back\n\n\nfunction shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {\n  // If we're already showing a fallback, there are cases where we need to\n  // remain on that fallback regardless of whether the content has resolved.\n  // For example, SuspenseList coordinates when nested content appears.\n  if (current !== null) {\n    var suspenseState = current.memoizedState;\n\n    if (suspenseState === null) {\n      // Currently showing content. Don't hide it, even if ForceSuspenseFallback\n      // is true. More precise name might be \"ForceRemainSuspenseFallback\".\n      // Note: This is a factoring smell. Can't remain on a fallback if there's\n      // no fallback to remain on.\n      return false;\n    }\n  } // Not currently showing content. Consult the Suspense context.\n\n\n  return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n}\n\nfunction getRemainingWorkInPrimaryTree(current, renderLanes) {\n  // TODO: Should not remove render lanes that were pinged during this render\n  return removeLanes(current.childLanes, renderLanes);\n}\n\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.\n\n  {\n    if (shouldSuspend(workInProgress)) {\n      workInProgress.flags |= DidCapture;\n    }\n  }\n\n  var suspenseContext = suspenseStackCursor.current;\n  var showFallback = false;\n  var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    showFallback = true;\n    workInProgress.flags &= ~DidCapture;\n  } else {\n    // Attempting the main content\n    if (current === null || current.memoizedState !== null) {\n      // This is a new mount or this boundary is already showing a fallback state.\n      // Mark this subtree context as having at least one invisible parent that could\n      // handle the fallback state.\n      // Avoided boundaries are not considered since they cannot handle preferred fallback states.\n      {\n        suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);\n      }\n    }\n  }\n\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense\n  // boundary's children. This involves some custom reconciliation logic. Two\n  // main reasons this is so complicated.\n  //\n  // First, Legacy Mode has different semantics for backwards compatibility. The\n  // primary tree will commit in an inconsistent state, so when we do the\n  // second pass to render the fallback, we do some exceedingly, uh, clever\n  // hacks to make that not totally break. Like transferring effects and\n  // deletions from hidden tree. In Concurrent Mode, it's much simpler,\n  // because we bailout on the primary tree completely and leave it in its old\n  // state, no effects. Same as what we do for Offscreen (except that\n  // Offscreen doesn't have the first render pass).\n  //\n  // Second is hydration. During hydration, the Suspense fiber has a slightly\n  // different layout, where the child points to a dehydrated fragment, which\n  // contains the DOM rendered by the server.\n  //\n  // Third, even if you set all that aside, Suspense is like error boundaries in\n  // that we first we try to render one tree, and if that fails, we render again\n  // and switch to a different tree. Like a try/catch block. So we have to track\n  // which branch we're currently rendering. Ideally we would model this using\n  // a stack.\n\n  if (current === null) {\n    // Initial mount\n    // Special path for hydration\n    // If we're currently hydrating, try to hydrate this boundary.\n    tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.\n\n    var suspenseState = workInProgress.memoizedState;\n\n    if (suspenseState !== null) {\n      var dehydrated = suspenseState.dehydrated;\n\n      if (dehydrated !== null) {\n        return mountDehydratedSuspenseComponent(workInProgress, dehydrated);\n      }\n    }\n\n    var nextPrimaryChildren = nextProps.children;\n    var nextFallbackChildren = nextProps.fallback;\n\n    if (showFallback) {\n      var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n      var primaryChildFragment = workInProgress.child;\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n\n      return fallbackFragment;\n    } else {\n      return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);\n    }\n  } else {\n    // This is an update.\n    // Special path for hydration\n    var prevState = current.memoizedState;\n\n    if (prevState !== null) {\n      var _dehydrated = prevState.dehydrated;\n\n      if (_dehydrated !== null) {\n        return updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, _dehydrated, prevState, renderLanes);\n      }\n    }\n\n    if (showFallback) {\n      var _nextFallbackChildren = nextProps.fallback;\n      var _nextPrimaryChildren = nextProps.children;\n      var fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren, _nextFallbackChildren, renderLanes);\n      var _primaryChildFragment2 = workInProgress.child;\n      var prevOffscreenState = current.child.memoizedState;\n      _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n\n      _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackChildFragment;\n    } else {\n      var _nextPrimaryChildren2 = nextProps.children;\n\n      var _primaryChildFragment3 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren2, renderLanes);\n\n      workInProgress.memoizedState = null;\n      return _primaryChildFragment3;\n    }\n  }\n}\n\nfunction mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {\n  var mode = workInProgress.mode;\n  var primaryChildProps = {\n    mode: 'visible',\n    children: primaryChildren\n  };\n  var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);\n  primaryChildFragment.return = workInProgress;\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n  var mode = workInProgress.mode;\n  var progressedPrimaryFragment = workInProgress.child;\n  var primaryChildProps = {\n    mode: 'hidden',\n    children: primaryChildren\n  };\n  var primaryChildFragment;\n  var fallbackChildFragment;\n\n  if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if ( workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = 0;\n      primaryChildFragment.treeBaseDuration = 0;\n    }\n\n    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n  } else {\n    primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);\n    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n  }\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {\n  // The props argument to `createFiberFromOffscreen` is `any` typed, so we use\n  // this wrapper function to constrain it.\n  return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);\n}\n\nfunction updateWorkInProgressOffscreenFiber(current, offscreenProps) {\n  // The props argument to `createWorkInProgress` is `any` typed, so we use this\n  // wrapper function to constrain it.\n  return createWorkInProgress(current, offscreenProps);\n}\n\nfunction updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {\n  var currentPrimaryChildFragment = current.child;\n  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n  var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {\n    mode: 'visible',\n    children: primaryChildren\n  });\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    primaryChildFragment.lanes = renderLanes;\n  }\n\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = null;\n\n  if (currentFallbackChildFragment !== null) {\n    // Delete the fallback child fragment\n    var deletions = workInProgress.deletions;\n\n    if (deletions === null) {\n      workInProgress.deletions = [currentFallbackChildFragment];\n      workInProgress.flags |= ChildDeletion;\n    } else {\n      deletions.push(currentFallbackChildFragment);\n    }\n  }\n\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n  var mode = workInProgress.mode;\n  var currentPrimaryChildFragment = current.child;\n  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n  var primaryChildProps = {\n    mode: 'hidden',\n    children: primaryChildren\n  };\n  var primaryChildFragment;\n\n  if ( // In legacy mode, we commit the primary tree as if it successfully\n  // completed, even though it's in an inconsistent state.\n  (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was\n  // already cloned. In legacy mode, the only case where this isn't true is\n  // when DevTools forces us to display a fallback; we skip the first render\n  // pass entirely and go straight to rendering the fallback. (In Concurrent\n  // Mode, SuspenseList can also trigger this scenario, but this is a legacy-\n  // only codepath.)\n  workInProgress.child !== currentPrimaryChildFragment) {\n    var progressedPrimaryFragment = workInProgress.child;\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if ( workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;\n      primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;\n    } // The fallback fiber was added as a deletion during the first pass.\n    // However, since we're going to remain on the fallback, we no longer want\n    // to delete it.\n\n\n    workInProgress.deletions = null;\n  } else {\n    primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps); // Since we're reusing a current tree, we need to reuse the flags, too.\n    // (We don't do this in legacy mode, because in legacy mode we don't re-use\n    // the current tree; see previous branch.)\n\n    primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;\n  }\n\n  var fallbackChildFragment;\n\n  if (currentFallbackChildFragment !== null) {\n    fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);\n  } else {\n    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already\n    // mounted but this is a new fiber.\n\n    fallbackChildFragment.flags |= Placement;\n  }\n\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, recoverableError) {\n  // Falling back to client rendering. Because this has performance\n  // implications, it's considered a recoverable error, even though the user\n  // likely won't observe anything wrong with the UI.\n  //\n  // The error is passed in as an argument to enforce that every caller provide\n  // a custom message, or explicitly opt out (currently the only path that opts\n  // out is legacy mode; every concurrent path provides an error).\n  if (recoverableError !== null) {\n    queueHydrationError(recoverableError);\n  } // This will add the old fiber to the deletion list\n\n\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes); // We're now not suspended nor dehydrated.\n\n  var nextProps = workInProgress.pendingProps;\n  var primaryChildren = nextProps.children;\n  var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Needs a placement effect because the parent (the Suspense boundary) already\n  // mounted but this is a new fiber.\n\n  primaryChildFragment.flags |= Placement;\n  workInProgress.memoizedState = null;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n  var fiberMode = workInProgress.mode;\n  var primaryChildProps = {\n    mode: 'visible',\n    children: primaryChildren\n  };\n  var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);\n  var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes, null); // Needs a placement effect because the parent (the Suspense\n  // boundary) already mounted but this is a new fiber.\n\n  fallbackChildFragment.flags |= Placement;\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n    // We will have dropped the effect list which contains the\n    // deletion. We need to reconcile to delete the current child.\n    reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  }\n\n  return fallbackChildFragment;\n}\n\nfunction mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderLanes) {\n  // During the first pass, we'll bail out and not drill into the children.\n  // Instead, we'll leave the content in place and try to hydrate it later.\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    {\n      error('Cannot hydrate Suspense in legacy mode. Switch from ' + 'ReactDOM.hydrate(element, container) to ' + 'ReactDOMClient.hydrateRoot(container, <App />)' + '.render(element) or remove the Suspense components from ' + 'the server rendered components.');\n    }\n\n    workInProgress.lanes = laneToLanes(SyncLane);\n  } else if (isSuspenseInstanceFallback(suspenseInstance)) {\n    // This is a client-only boundary. Since we won't get any content from the server\n    // for this, we need to schedule that at a higher priority based on when it would\n    // have timed out. In theory we could render it in this pass but it would have the\n    // wrong priority associated with it and will prevent hydration of parent path.\n    // Instead, we'll leave work left on it to render it in a separate commit.\n    // TODO This time should be the time at which the server rendered response that is\n    // a parent to this boundary was displayed. However, since we currently don't have\n    // a protocol to transfer that time, we'll just estimate it by using the current\n    // time. This will mean that Suspense timeouts are slightly shifted to later than\n    // they should be.\n    // Schedule a normal pri update to render this content.\n    workInProgress.lanes = laneToLanes(DefaultHydrationLane);\n  } else {\n    // We'll continue hydrating the rest at offscreen priority since we'll already\n    // be showing the right content coming from the server, it is no rush.\n    workInProgress.lanes = laneToLanes(OffscreenLane);\n  }\n\n  return null;\n}\n\nfunction updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes) {\n  if (!didSuspend) {\n    // This is the first render pass. Attempt to hydrate.\n    // We should never be hydrating at this point because it is the first pass,\n    // but after we've already committed once.\n    warnIfHydrating();\n\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, // TODO: When we delete legacy mode, we should make this error argument\n      // required — every concurrent mode path that causes hydration to\n      // de-opt to client rendering should have an error message.\n      null);\n    }\n\n    if (isSuspenseInstanceFallback(suspenseInstance)) {\n      // This boundary is in a permanent fallback state. In this case, we'll never\n      // get an update and we'll never be able to hydrate the final content. Let's just try the\n      // client side render instead.\n      var digest, message, stack;\n\n      {\n        var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(suspenseInstance);\n\n        digest = _getSuspenseInstanceF.digest;\n        message = _getSuspenseInstanceF.message;\n        stack = _getSuspenseInstanceF.stack;\n      }\n\n      var error;\n\n      if (message) {\n        // eslint-disable-next-line react-internal/prod-error-codes\n        error = new Error(message);\n      } else {\n        error = new Error('The server could not finish this Suspense boundary, likely ' + 'due to an error during server rendering. Switched to ' + 'client rendering.');\n      }\n\n      var capturedValue = createCapturedValue(error, digest, stack);\n      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, capturedValue);\n    }\n    // any context has changed, we need to treat is as if the input might have changed.\n\n\n    var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\n\n    if (didReceiveUpdate || hasContextChanged) {\n      // This boundary has changed since the first render. This means that we are now unable to\n      // hydrate it. We might still be able to hydrate it using a higher priority lane.\n      var root = getWorkInProgressRoot();\n\n      if (root !== null) {\n        var attemptHydrationAtLane = getBumpedLaneForHydration(root, renderLanes);\n\n        if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {\n          // Intentionally mutating since this render will get interrupted. This\n          // is one of the very rare times where we mutate the current tree\n          // during the render phase.\n          suspenseState.retryLane = attemptHydrationAtLane; // TODO: Ideally this would inherit the event time of the current render\n\n          var eventTime = NoTimestamp;\n          enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);\n          scheduleUpdateOnFiber(root, current, attemptHydrationAtLane, eventTime);\n        }\n      } // If we have scheduled higher pri work above, this will probably just abort the render\n      // since we now have higher priority work, but in case it doesn't, we need to prepare to\n      // render something, if we time out. Even if that requires us to delete everything and\n      // skip hydration.\n      // Delay having to do this as long as the suspense timeout allows us.\n\n\n      renderDidSuspendDelayIfPossible();\n\n      var _capturedValue = createCapturedValue(new Error('This Suspense boundary received an update before it finished ' + 'hydrating. This caused the boundary to switch to client rendering. ' + 'The usual way to fix this is to wrap the original update ' + 'in startTransition.'));\n\n      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue);\n    } else if (isSuspenseInstancePending(suspenseInstance)) {\n      // This component is still pending more data from the server, so we can't hydrate its\n      // content. We treat it as if this component suspended itself. It might seem as if\n      // we could just try to render it client-side instead. However, this will perform a\n      // lot of unnecessary work and is unlikely to complete since it often will suspend\n      // on missing data anyway. Additionally, the server might be able to render more\n      // than we can on the client yet. In that case we'd end up with more fallback states\n      // on the client than if we just leave it alone. If the server times out or errors\n      // these should update this boundary to the permanent Fallback state instead.\n      // Mark it as having captured (i.e. suspended).\n      workInProgress.flags |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.\n\n      workInProgress.child = current.child; // Register a callback to retry this boundary once the server has sent the result.\n\n      var retry = retryDehydratedSuspenseBoundary.bind(null, current);\n      registerSuspenseInstanceRetry(suspenseInstance, retry);\n      return null;\n    } else {\n      // This is the first attempt.\n      reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance, suspenseState.treeContext);\n      var primaryChildren = nextProps.children;\n      var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Mark the children as hydrating. This is a fast path to know whether this\n      // tree is part of a hydrating tree. This is used to determine if a child\n      // node has fully mounted yet, and for scheduling event replaying.\n      // Conceptually this is similar to Placement in that a new subtree is\n      // inserted into the React tree here. It just happens to not need DOM\n      // mutations because it already exists.\n\n      primaryChildFragment.flags |= Hydrating;\n      return primaryChildFragment;\n    }\n  } else {\n    // This is the second render pass. We already attempted to hydrated, but\n    // something either suspended or errored.\n    if (workInProgress.flags & ForceClientRender) {\n      // Something errored during hydration. Try again without hydrating.\n      workInProgress.flags &= ~ForceClientRender;\n\n      var _capturedValue2 = createCapturedValue(new Error('There was an error while hydrating this Suspense boundary. ' + 'Switched to client rendering.'));\n\n      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue2);\n    } else if (workInProgress.memoizedState !== null) {\n      // Something suspended and we should still be in dehydrated mode.\n      // Leave the existing child in place.\n      workInProgress.child = current.child; // The dehydrated completion pass expects this flag to be there\n      // but the normal suspense pass doesn't.\n\n      workInProgress.flags |= DidCapture;\n      return null;\n    } else {\n      // Suspended but we should no longer be in dehydrated mode.\n      // Therefore we now have to render the fallback.\n      var nextPrimaryChildren = nextProps.children;\n      var nextFallbackChildren = nextProps.fallback;\n      var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n      var _primaryChildFragment4 = workInProgress.child;\n      _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes);\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackChildFragment;\n    }\n  }\n}\n\nfunction scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n  }\n\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n}\n\nfunction propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {\n  // Mark any Suspense boundaries with fallbacks as having work to do.\n  // If they were previously forced into fallbacks, they may now be able\n  // to unblock.\n  var node = firstChild;\n\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      var state = node.memoizedState;\n\n      if (state !== null) {\n        scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n      }\n    } else if (node.tag === SuspenseListComponent) {\n      // If the tail is hidden there might not be an Suspense boundaries\n      // to schedule work on. In this case we have to schedule it on the\n      // list itself.\n      // We don't have to traverse to the children of the list since\n      // the list will propagate the change when it rerenders.\n      scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === workInProgress) {\n      return;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === workInProgress) {\n        return;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction findLastContentRow(firstChild) {\n  // This is going to find the last row among these children that is already\n  // showing content on the screen, as opposed to being in fallback state or\n  // new. If a row has multiple Suspense boundaries, any of them being in the\n  // fallback state, counts as the whole row being in a fallback state.\n  // Note that the \"rows\" will be workInProgress, but any nested children\n  // will still be current since we haven't rendered them yet. The mounted\n  // order may not be the same as the new order. We use the new order.\n  var row = firstChild;\n  var lastContentRow = null;\n\n  while (row !== null) {\n    var currentRow = row.alternate; // New rows can't be content rows.\n\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n      lastContentRow = row;\n    }\n\n    row = row.sibling;\n  }\n\n  return lastContentRow;\n}\n\nfunction validateRevealOrder(revealOrder) {\n  {\n    if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {\n      didWarnAboutRevealOrder[revealOrder] = true;\n\n      if (typeof revealOrder === 'string') {\n        switch (revealOrder.toLowerCase()) {\n          case 'together':\n          case 'forwards':\n          case 'backwards':\n            {\n              error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase \"%s\" instead.', revealOrder, revealOrder.toLowerCase());\n\n              break;\n            }\n\n          case 'forward':\n          case 'backward':\n            {\n              error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use \"%ss\" instead.', revealOrder, revealOrder.toLowerCase());\n\n              break;\n            }\n\n          default:\n            error('\"%s\" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder);\n\n            break;\n        }\n      } else {\n        error('%s is not a supported value for revealOrder on <SuspenseList />. ' + 'Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder);\n      }\n    }\n  }\n}\n\nfunction validateTailOptions(tailMode, revealOrder) {\n  {\n    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {\n        didWarnAboutTailOptions[tailMode] = true;\n\n        error('\"%s\" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean \"collapsed\" or \"hidden\"?', tailMode);\n      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {\n        didWarnAboutTailOptions[tailMode] = true;\n\n        error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' + '\"forwards\" or \"backwards\". ' + 'Did you mean to specify revealOrder=\"forwards\"?', tailMode);\n      }\n    }\n  }\n}\n\nfunction validateSuspenseListNestedChild(childSlot, index) {\n  {\n    var isAnArray = isArray(childSlot);\n    var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === 'function';\n\n    if (isAnArray || isIterable) {\n      var type = isAnArray ? 'array' : 'iterable';\n\n      error('A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' + 'an additional SuspenseList to configure its revealOrder: ' + '<SuspenseList revealOrder=...> ... ' + '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' + '</SuspenseList>', type, index, type);\n\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction validateSuspenseListChildren(children, revealOrder) {\n  {\n    if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {\n      if (isArray(children)) {\n        for (var i = 0; i < children.length; i++) {\n          if (!validateSuspenseListNestedChild(children[i], i)) {\n            return;\n          }\n        }\n      } else {\n        var iteratorFn = getIteratorFn(children);\n\n        if (typeof iteratorFn === 'function') {\n          var childrenIterator = iteratorFn.call(children);\n\n          if (childrenIterator) {\n            var step = childrenIterator.next();\n            var _i = 0;\n\n            for (; !step.done; step = childrenIterator.next()) {\n              if (!validateSuspenseListNestedChild(step.value, _i)) {\n                return;\n              }\n\n              _i++;\n            }\n          }\n        } else {\n          error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' + 'This is not useful since it needs multiple rows. ' + 'Did you mean to pass multiple children or an array?', revealOrder);\n        }\n      }\n    }\n  }\n}\n\nfunction initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {\n  var renderState = workInProgress.memoizedState;\n\n  if (renderState === null) {\n    workInProgress.memoizedState = {\n      isBackwards: isBackwards,\n      rendering: null,\n      renderingStartTime: 0,\n      last: lastContentRow,\n      tail: tail,\n      tailMode: tailMode\n    };\n  } else {\n    // We can reuse the existing object from previous renders.\n    renderState.isBackwards = isBackwards;\n    renderState.rendering = null;\n    renderState.renderingStartTime = 0;\n    renderState.last = lastContentRow;\n    renderState.tail = tail;\n    renderState.tailMode = tailMode;\n  }\n} // This can end up rendering this component multiple passes.\n// The first pass splits the children fibers into two sets. A head and tail.\n// We first render the head. If anything is in fallback state, we do another\n// pass through beginWork to rerender all children (including the tail) with\n// the force suspend context. If the first render didn't have anything in\n// in fallback state. Then we render each row in the tail one-by-one.\n// That happens in the completeWork phase without going back to beginWork.\n\n\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps;\n  var revealOrder = nextProps.revealOrder;\n  var tailMode = nextProps.tail;\n  var newChildren = nextProps.children;\n  validateRevealOrder(revealOrder);\n  validateTailOptions(tailMode, revealOrder);\n  validateSuspenseListChildren(newChildren, revealOrder);\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  var suspenseContext = suspenseStackCursor.current;\n  var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n\n  if (shouldForceFallback) {\n    suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\n    workInProgress.flags |= DidCapture;\n  } else {\n    var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;\n\n    if (didSuspendBefore) {\n      // If we previously forced a fallback, we need to schedule work\n      // on any nested boundaries to let them know to try to render\n      // again. This is the same as context updating.\n      propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);\n    }\n\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  }\n\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    // In legacy mode, SuspenseList doesn't work so we just\n    // use make it a noop by treating it as the default revealOrder.\n    workInProgress.memoizedState = null;\n  } else {\n    switch (revealOrder) {\n      case 'forwards':\n        {\n          var lastContentRow = findLastContentRow(workInProgress.child);\n          var tail;\n\n          if (lastContentRow === null) {\n            // The whole list is part of the tail.\n            // TODO: We could fast path by just rendering the tail now.\n            tail = workInProgress.child;\n            workInProgress.child = null;\n          } else {\n            // Disconnect the tail rows after the content row.\n            // We're going to render them separately later.\n            tail = lastContentRow.sibling;\n            lastContentRow.sibling = null;\n          }\n\n          initSuspenseListRenderState(workInProgress, false, // isBackwards\n          tail, lastContentRow, tailMode);\n          break;\n        }\n\n      case 'backwards':\n        {\n          // We're going to find the first row that has existing content.\n          // At the same time we're going to reverse the list of everything\n          // we pass in the meantime. That's going to be our tail in reverse\n          // order.\n          var _tail = null;\n          var row = workInProgress.child;\n          workInProgress.child = null;\n\n          while (row !== null) {\n            var currentRow = row.alternate; // New rows can't be content rows.\n\n            if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n              // This is the beginning of the main content.\n              workInProgress.child = row;\n              break;\n            }\n\n            var nextRow = row.sibling;\n            row.sibling = _tail;\n            _tail = row;\n            row = nextRow;\n          } // TODO: If workInProgress.child is null, we can continue on the tail immediately.\n\n\n          initSuspenseListRenderState(workInProgress, true, // isBackwards\n          _tail, null, // last\n          tailMode);\n          break;\n        }\n\n      case 'together':\n        {\n          initSuspenseListRenderState(workInProgress, false, // isBackwards\n          null, // tail\n          null, // last\n          undefined);\n          break;\n        }\n\n      default:\n        {\n          // The default reveal order is the same as not having\n          // a boundary.\n          workInProgress.memoizedState = null;\n        }\n    }\n  }\n\n  return workInProgress.child;\n}\n\nfunction updatePortalComponent(current, workInProgress, renderLanes) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  var nextChildren = workInProgress.pendingProps;\n\n  if (current === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  return workInProgress.child;\n}\n\nvar hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n\nfunction updateContextProvider(current, workInProgress, renderLanes) {\n  var providerType = workInProgress.type;\n  var context = providerType._context;\n  var newProps = workInProgress.pendingProps;\n  var oldProps = workInProgress.memoizedProps;\n  var newValue = newProps.value;\n\n  {\n    if (!('value' in newProps)) {\n      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n        hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n\n        error('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');\n      }\n    }\n\n    var providerPropTypes = workInProgress.type.propTypes;\n\n    if (providerPropTypes) {\n      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');\n    }\n  }\n\n  pushProvider(workInProgress, context, newValue);\n\n  {\n    if (oldProps !== null) {\n      var oldValue = oldProps.value;\n\n      if (objectIs(oldValue, newValue)) {\n        // No change. Bailout early if children are the same.\n        if (oldProps.children === newProps.children && !hasContextChanged()) {\n          return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n        }\n      } else {\n        // The context value changed. Search for matching consumers and schedule\n        // them to update.\n        propagateContextChange(workInProgress, context, renderLanes);\n      }\n    }\n  }\n\n  var newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nvar hasWarnedAboutUsingContextAsConsumer = false;\n\nfunction updateContextConsumer(current, workInProgress, renderLanes) {\n  var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n\n  {\n    if (context._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n\n          error('Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n        }\n      }\n    } else {\n      context = context._context;\n    }\n  }\n\n  var newProps = workInProgress.pendingProps;\n  var render = newProps.children;\n\n  {\n    if (typeof render !== 'function') {\n      error('A context consumer was rendered with multiple children, or a child ' + \"that isn't a function. A context consumer expects a single child \" + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.');\n    }\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var newValue = readContext(context);\n\n  {\n    markComponentRenderStarted(workInProgress);\n  }\n\n  var newChildren;\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    newChildren = render(newValue);\n    setIsRendering(false);\n  }\n\n  {\n    markComponentRenderStopped();\n  } // React DevTools reads this flag.\n\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nfunction resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    if (current !== null) {\n      // A lazy component only mounts if it suspended inside a non-\n      // concurrent tree, in an inconsistent state. We want to treat it like\n      // a new mount, even though an empty version of it already committed.\n      // Disconnect the alternate pointers.\n      current.alternate = null;\n      workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n      workInProgress.flags |= Placement;\n    }\n  }\n}\n\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n  if (current !== null) {\n    // Reuse previous dependencies\n    workInProgress.dependencies = current.dependencies;\n  }\n\n  {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning();\n  }\n\n  markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.\n\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n    {\n      return null;\n    }\n  } // This fiber doesn't have work, but its subtree does. Clone the child\n  // fibers and continue.\n\n\n  cloneChildFibers(current, workInProgress);\n  return workInProgress.child;\n}\n\nfunction remountFiber(current, oldWorkInProgress, newWorkInProgress) {\n  {\n    var returnFiber = oldWorkInProgress.return;\n\n    if (returnFiber === null) {\n      // eslint-disable-next-line react-internal/prod-error-codes\n      throw new Error('Cannot swap the root fiber.');\n    } // Disconnect from the old current.\n    // It will get deleted.\n\n\n    current.alternate = null;\n    oldWorkInProgress.alternate = null; // Connect to the new tree.\n\n    newWorkInProgress.index = oldWorkInProgress.index;\n    newWorkInProgress.sibling = oldWorkInProgress.sibling;\n    newWorkInProgress.return = oldWorkInProgress.return;\n    newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.\n\n    if (oldWorkInProgress === returnFiber.child) {\n      returnFiber.child = newWorkInProgress;\n    } else {\n      var prevSibling = returnFiber.child;\n\n      if (prevSibling === null) {\n        // eslint-disable-next-line react-internal/prod-error-codes\n        throw new Error('Expected parent to have a child.');\n      }\n\n      while (prevSibling.sibling !== oldWorkInProgress) {\n        prevSibling = prevSibling.sibling;\n\n        if (prevSibling === null) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          throw new Error('Expected to find the previous sibling.');\n        }\n      }\n\n      prevSibling.sibling = newWorkInProgress;\n    } // Delete the old fiber and place the new one.\n    // Since the old fiber is disconnected, we have to schedule it manually.\n\n\n    var deletions = returnFiber.deletions;\n\n    if (deletions === null) {\n      returnFiber.deletions = [current];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(current);\n    }\n\n    newWorkInProgress.flags |= Placement; // Restart work from the new fiber.\n\n    return newWorkInProgress;\n  }\n}\n\nfunction checkScheduledUpdateOrContext(current, renderLanes) {\n  // Before performing an early bailout, we must check if there are pending\n  // updates or context.\n  var updateLanes = current.lanes;\n\n  if (includesSomeLane(updateLanes, renderLanes)) {\n    return true;\n  } // No pending update, but because context is propagated lazily, we need\n\n  return false;\n}\n\nfunction attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {\n  // This fiber does not have any pending work. Bailout without entering\n  // the begin phase. There's still some bookkeeping we that needs to be done\n  // in this optimized path, mostly pushing stuff onto the stack.\n  switch (workInProgress.tag) {\n    case HostRoot:\n      pushHostRootContext(workInProgress);\n      var root = workInProgress.stateNode;\n\n      resetHydrationState();\n      break;\n\n    case HostComponent:\n      pushHostContext(workInProgress);\n      break;\n\n    case ClassComponent:\n      {\n        var Component = workInProgress.type;\n\n        if (isContextProvider(Component)) {\n          pushContextProvider(workInProgress);\n        }\n\n        break;\n      }\n\n    case HostPortal:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n\n    case ContextProvider:\n      {\n        var newValue = workInProgress.memoizedProps.value;\n        var context = workInProgress.type._context;\n        pushProvider(workInProgress, context, newValue);\n        break;\n      }\n\n    case Profiler:\n      {\n        // Profiler should only call onRender when one of its descendants actually rendered.\n        var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n\n        if (hasChildWork) {\n          workInProgress.flags |= Update;\n        }\n\n        {\n          // Reset effect durations for the next eventual effect phase.\n          // These are reset during render to allow the DevTools commit hook a chance to read them,\n          var stateNode = workInProgress.stateNode;\n          stateNode.effectDuration = 0;\n          stateNode.passiveEffectDuration = 0;\n        }\n      }\n\n      break;\n\n    case SuspenseComponent:\n      {\n        var state = workInProgress.memoizedState;\n\n        if (state !== null) {\n          if (state.dehydrated !== null) {\n            pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // We know that this component will suspend again because if it has\n            // been unsuspended it has committed as a resolved Suspense component.\n            // If it needs to be retried, it should have work scheduled on it.\n\n            workInProgress.flags |= DidCapture; // We should never render the children of a dehydrated boundary until we\n            // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.\n\n            return null;\n          } // If this boundary is currently timed out, we need to decide\n          // whether to retry the primary children, or to skip over it and\n          // go straight to the fallback. Check the priority of the primary\n          // child fragment.\n\n\n          var primaryChildFragment = workInProgress.child;\n          var primaryChildLanes = primaryChildFragment.childLanes;\n\n          if (includesSomeLane(renderLanes, primaryChildLanes)) {\n            // The primary children have pending work. Use the normal path\n            // to attempt to render the primary children again.\n            return updateSuspenseComponent(current, workInProgress, renderLanes);\n          } else {\n            // The primary child fragment does not have pending work marked\n            // on it\n            pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient\n            // priority. Bailout.\n\n            var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n\n            if (child !== null) {\n              // The fallback children have pending work. Skip over the\n              // primary children and work on the fallback.\n              return child.sibling;\n            } else {\n              // Note: We can return `null` here because we already checked\n              // whether there were nested context consumers, via the call to\n              // `bailoutOnAlreadyFinishedWork` above.\n              return null;\n            }\n          }\n        } else {\n          pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\n        }\n\n        break;\n      }\n\n    case SuspenseListComponent:\n      {\n        var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n\n        var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n\n        if (didSuspendBefore) {\n          if (_hasChildWork) {\n            // If something was in fallback state last time, and we have all the\n            // same children then we're still in progressive loading state.\n            // Something might get unblocked by state updates or retries in the\n            // tree which will affect the tail. So we need to use the normal\n            // path to compute the correct tail.\n            return updateSuspenseListComponent(current, workInProgress, renderLanes);\n          } // If none of the children had any work, that means that none of\n          // them got retried so they'll still be blocked in the same way\n          // as before. We can fast bail out.\n\n\n          workInProgress.flags |= DidCapture;\n        } // If nothing suspended before and we're rendering the same children,\n        // then the tail doesn't matter. Anything new that suspends will work\n        // in the \"together\" mode, so we can continue from the state we had.\n\n\n        var renderState = workInProgress.memoizedState;\n\n        if (renderState !== null) {\n          // Reset to the \"together\" mode in case we've started a different\n          // update in the past but didn't complete it.\n          renderState.rendering = null;\n          renderState.tail = null;\n          renderState.lastEffect = null;\n        }\n\n        pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n\n        if (_hasChildWork) {\n          break;\n        } else {\n          // If none of the children had any work, that means that none of\n          // them got retried so they'll still be blocked in the same way\n          // as before. We can fast bail out.\n          return null;\n        }\n      }\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      {\n        // Need to check if the tree still needs to be deferred. This is\n        // almost identical to the logic used in the normal update path,\n        // so we'll just enter that. The only difference is we'll bail out\n        // at the next level instead of this one, because the child props\n        // have not changed. Which is fine.\n        // TODO: Probably should refactor `beginWork` to split the bailout\n        // path from the normal path. I'm tempted to do a labeled break here\n        // but I won't :)\n        workInProgress.lanes = NoLanes;\n        return updateOffscreenComponent(current, workInProgress, renderLanes);\n      }\n  }\n\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\n\nfunction beginWork(current, workInProgress, renderLanes) {\n  {\n    if (workInProgress._debugNeedsRemount && current !== null) {\n      // This will restart the begin phase with a new fiber.\n      return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));\n    }\n  }\n\n  if (current !== null) {\n    var oldProps = current.memoizedProps;\n    var newProps = workInProgress.pendingProps;\n\n    if (oldProps !== newProps || hasContextChanged() || ( // Force a re-render if the implementation changed due to hot reload:\n     workInProgress.type !== current.type )) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else {\n      // Neither props nor legacy context changes. Check if there's a pending\n      // update or context change.\n      var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);\n\n      if (!hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there\n      // may not be work scheduled on `current`, so we check for this flag.\n      (workInProgress.flags & DidCapture) === NoFlags) {\n        // No pending updates or context. Bail out now.\n        didReceiveUpdate = false;\n        return attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);\n      }\n\n      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      } else {\n        // An update was scheduled on this fiber, but there are no new props\n        // nor legacy context. Set this to false. If an update queue or context\n        // consumer produces a changed value, it will set this to true. Otherwise,\n        // the component will assume the children have not changed and bail out.\n        didReceiveUpdate = false;\n      }\n    }\n  } else {\n    didReceiveUpdate = false;\n\n    if (getIsHydrating() && isForkedChild(workInProgress)) {\n      // Check if this child belongs to a list of muliple children in\n      // its parent.\n      //\n      // In a true multi-threaded implementation, we would render children on\n      // parallel threads. This would represent the beginning of a new render\n      // thread for this subtree.\n      //\n      // We only use this for id generation during hydration, which is why the\n      // logic is located in this special branch.\n      var slotIndex = workInProgress.index;\n      var numberOfForks = getForksAtLevel();\n      pushTreeId(workInProgress, numberOfForks, slotIndex);\n    }\n  } // Before entering the begin phase, clear pending update priority.\n  // TODO: This assumes that we're about to evaluate the component and process\n  // the update queue. However, there's an exception: SimpleMemoComponent\n  // sometimes bails out later in the begin phase. This indicates that we should\n  // move this assignment out of the common path and into each branch.\n\n\n  workInProgress.lanes = NoLanes;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n      {\n        return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);\n      }\n\n    case LazyComponent:\n      {\n        var elementType = workInProgress.elementType;\n        return mountLazyComponent(current, workInProgress, elementType, renderLanes);\n      }\n\n    case FunctionComponent:\n      {\n        var Component = workInProgress.type;\n        var unresolvedProps = workInProgress.pendingProps;\n        var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);\n        return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);\n      }\n\n    case ClassComponent:\n      {\n        var _Component = workInProgress.type;\n        var _unresolvedProps = workInProgress.pendingProps;\n\n        var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);\n\n        return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);\n      }\n\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes);\n\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes);\n\n    case HostText:\n      return updateHostText(current, workInProgress);\n\n    case SuspenseComponent:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n\n    case HostPortal:\n      return updatePortalComponent(current, workInProgress, renderLanes);\n\n    case ForwardRef:\n      {\n        var type = workInProgress.type;\n        var _unresolvedProps2 = workInProgress.pendingProps;\n\n        var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);\n\n        return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);\n      }\n\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes);\n\n    case Mode:\n      return updateMode(current, workInProgress, renderLanes);\n\n    case Profiler:\n      return updateProfiler(current, workInProgress, renderLanes);\n\n    case ContextProvider:\n      return updateContextProvider(current, workInProgress, renderLanes);\n\n    case ContextConsumer:\n      return updateContextConsumer(current, workInProgress, renderLanes);\n\n    case MemoComponent:\n      {\n        var _type2 = workInProgress.type;\n        var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.\n\n        var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);\n\n        {\n          if (workInProgress.type !== workInProgress.elementType) {\n            var outerPropTypes = _type2.propTypes;\n\n            if (outerPropTypes) {\n              checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only\n              'prop', getComponentNameFromType(_type2));\n            }\n          }\n        }\n\n        _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);\n        return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);\n      }\n\n    case SimpleMemoComponent:\n      {\n        return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);\n      }\n\n    case IncompleteClassComponent:\n      {\n        var _Component2 = workInProgress.type;\n        var _unresolvedProps4 = workInProgress.pendingProps;\n\n        var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);\n\n        return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);\n      }\n\n    case SuspenseListComponent:\n      {\n        return updateSuspenseListComponent(current, workInProgress, renderLanes);\n      }\n\n    case ScopeComponent:\n      {\n\n        break;\n      }\n\n    case OffscreenComponent:\n      {\n        return updateOffscreenComponent(current, workInProgress, renderLanes);\n      }\n  }\n\n  throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + 'React. Please file an issue.');\n}\n\nfunction markUpdate(workInProgress) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.flags |= Update;\n}\n\nfunction markRef$1(workInProgress) {\n  workInProgress.flags |= Ref;\n\n  {\n    workInProgress.flags |= RefStatic;\n  }\n}\n\nvar appendAllChildren;\nvar updateHostContainer;\nvar updateHostComponent$1;\nvar updateHostText$1;\n\n{\n  // Mutation mode\n  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    var node = workInProgress.child;\n\n    while (node !== null) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        appendInitialChild(parent, node.stateNode);\n      } else if (node.tag === HostPortal) ; else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === workInProgress) {\n        return;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n\n        node = node.return;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function (current, workInProgress) {// Noop\n  };\n\n  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {\n    // If we have an alternate, that means this is an update and we need to\n    // schedule a side-effect to do the updates.\n    var oldProps = current.memoizedProps;\n\n    if (oldProps === newProps) {\n      // In mutation mode, this is sufficient for a bailout because\n      // we won't touch this node even if children changed.\n      return;\n    } // If we get updated because one of our children updated, we don't\n    // have newProps so we'll have to reuse them.\n    // TODO: Split the update API as separate for the props vs. children.\n    // Even better would be if children weren't special cased at all tho.\n\n\n    var instance = workInProgress.stateNode;\n    var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host\n    // component is hitting the resume path. Figure out why. Possibly\n    // related to `hidden`.\n\n    var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.\n\n    workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there\n    // is a new ref we mark this as an update. All the work is done in commitWork.\n\n    if (updatePayload) {\n      markUpdate(workInProgress);\n    }\n  };\n\n  updateHostText$1 = function (current, workInProgress, oldText, newText) {\n    // If the text differs, mark it as an update. All the work in done in commitWork.\n    if (oldText !== newText) {\n      markUpdate(workInProgress);\n    }\n  };\n}\n\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n  if (getIsHydrating()) {\n    // If we're hydrating, we should consume as many items as we can\n    // so we don't leave any behind.\n    return;\n  }\n\n  switch (renderState.tailMode) {\n    case 'hidden':\n      {\n        // Any insertions at the end of the tail list after this point\n        // should be invisible. If there are already mounted boundaries\n        // anything before them are not considered for collapsing.\n        // Therefore we need to go through the whole tail to find if\n        // there are any.\n        var tailNode = renderState.tail;\n        var lastTailNode = null;\n\n        while (tailNode !== null) {\n          if (tailNode.alternate !== null) {\n            lastTailNode = tailNode;\n          }\n\n          tailNode = tailNode.sibling;\n        } // Next we're simply going to delete all insertions after the\n        // last rendered item.\n\n\n        if (lastTailNode === null) {\n          // All remaining items in the tail are insertions.\n          renderState.tail = null;\n        } else {\n          // Detach the insertion after the last node that was already\n          // inserted.\n          lastTailNode.sibling = null;\n        }\n\n        break;\n      }\n\n    case 'collapsed':\n      {\n        // Any insertions at the end of the tail list after this point\n        // should be invisible. If there are already mounted boundaries\n        // anything before them are not considered for collapsing.\n        // Therefore we need to go through the whole tail to find if\n        // there are any.\n        var _tailNode = renderState.tail;\n        var _lastTailNode = null;\n\n        while (_tailNode !== null) {\n          if (_tailNode.alternate !== null) {\n            _lastTailNode = _tailNode;\n          }\n\n          _tailNode = _tailNode.sibling;\n        } // Next we're simply going to delete all insertions after the\n        // last rendered item.\n\n\n        if (_lastTailNode === null) {\n          // All remaining items in the tail are insertions.\n          if (!hasRenderedATailFallback && renderState.tail !== null) {\n            // We suspended during the head. We want to show at least one\n            // row at the tail. So we'll keep on and cut off the rest.\n            renderState.tail.sibling = null;\n          } else {\n            renderState.tail = null;\n          }\n        } else {\n          // Detach the insertion after the last node that was already\n          // inserted.\n          _lastTailNode.sibling = null;\n        }\n\n        break;\n      }\n  }\n}\n\nfunction bubbleProperties(completedWork) {\n  var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;\n  var newChildLanes = NoLanes;\n  var subtreeFlags = NoFlags;\n\n  if (!didBailout) {\n    // Bubble up the earliest expiration time.\n    if ( (completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      var actualDuration = completedWork.actualDuration;\n      var treeBaseDuration = completedWork.selfBaseDuration;\n      var child = completedWork.child;\n\n      while (child !== null) {\n        newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));\n        subtreeFlags |= child.subtreeFlags;\n        subtreeFlags |= child.flags; // When a fiber is cloned, its actualDuration is reset to 0. This value will\n        // only be updated if work is done on the fiber (i.e. it doesn't bailout).\n        // When work is done, it should bubble to the parent's actualDuration. If\n        // the fiber has not been cloned though, (meaning no work was done), then\n        // this value will reflect the amount of time spent working on a previous\n        // render. In that case it should not bubble. We determine whether it was\n        // cloned by comparing the child pointer.\n\n        actualDuration += child.actualDuration;\n        treeBaseDuration += child.treeBaseDuration;\n        child = child.sibling;\n      }\n\n      completedWork.actualDuration = actualDuration;\n      completedWork.treeBaseDuration = treeBaseDuration;\n    } else {\n      var _child = completedWork.child;\n\n      while (_child !== null) {\n        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));\n        subtreeFlags |= _child.subtreeFlags;\n        subtreeFlags |= _child.flags; // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n\n        _child.return = completedWork;\n        _child = _child.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  } else {\n    // Bubble up the earliest expiration time.\n    if ( (completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      var _treeBaseDuration = completedWork.selfBaseDuration;\n      var _child2 = completedWork.child;\n\n      while (_child2 !== null) {\n        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes)); // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n\n        subtreeFlags |= _child2.subtreeFlags & StaticMask;\n        subtreeFlags |= _child2.flags & StaticMask;\n        _treeBaseDuration += _child2.treeBaseDuration;\n        _child2 = _child2.sibling;\n      }\n\n      completedWork.treeBaseDuration = _treeBaseDuration;\n    } else {\n      var _child3 = completedWork.child;\n\n      while (_child3 !== null) {\n        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes)); // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n\n        subtreeFlags |= _child3.subtreeFlags & StaticMask;\n        subtreeFlags |= _child3.flags & StaticMask; // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n\n        _child3.return = completedWork;\n        _child3 = _child3.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  }\n\n  completedWork.childLanes = newChildLanes;\n  return didBailout;\n}\n\nfunction completeDehydratedSuspenseBoundary(current, workInProgress, nextState) {\n  if (hasUnhydratedTailNodes() && (workInProgress.mode & ConcurrentMode) !== NoMode && (workInProgress.flags & DidCapture) === NoFlags) {\n    warnIfUnhydratedTailNodes(workInProgress);\n    resetHydrationState();\n    workInProgress.flags |= ForceClientRender | Incomplete | ShouldCapture;\n    return false;\n  }\n\n  var wasHydrated = popHydrationState(workInProgress);\n\n  if (nextState !== null && nextState.dehydrated !== null) {\n    // We might be inside a hydration state the first time we're picking up this\n    // Suspense boundary, and also after we've reentered it for further hydration.\n    if (current === null) {\n      if (!wasHydrated) {\n        throw new Error('A dehydrated suspense component was completed without a hydrated node. ' + 'This is probably a bug in React.');\n      }\n\n      prepareToHydrateHostSuspenseInstance(workInProgress);\n      bubbleProperties(workInProgress);\n\n      {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          var isTimedOutSuspense = nextState !== null;\n\n          if (isTimedOutSuspense) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            var primaryChildFragment = workInProgress.child;\n\n            if (primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;\n            }\n          }\n        }\n      }\n\n      return false;\n    } else {\n      // We might have reentered this boundary to hydrate it. If so, we need to reset the hydration\n      // state since we're now exiting out of it. popHydrationState doesn't do that for us.\n      resetHydrationState();\n\n      if ((workInProgress.flags & DidCapture) === NoFlags) {\n        // This boundary did not suspend so it's now hydrated and unsuspended.\n        workInProgress.memoizedState = null;\n      } // If nothing suspended, we need to schedule an effect to mark this boundary\n      // as having hydrated so events know that they're free to be invoked.\n      // It's also a signal to replay events and the suspense callback.\n      // If something suspended, schedule an effect to attach retry listeners.\n      // So we might as well always mark this.\n\n\n      workInProgress.flags |= Update;\n      bubbleProperties(workInProgress);\n\n      {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          var _isTimedOutSuspense = nextState !== null;\n\n          if (_isTimedOutSuspense) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            var _primaryChildFragment = workInProgress.child;\n\n            if (_primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;\n            }\n          }\n        }\n      }\n\n      return false;\n    }\n  } else {\n    // Successfully completed this tree. If this was a forced client render,\n    // there may have been recoverable errors during first hydration\n    // attempt. If so, add them to a queue so we can log them in the\n    // commit phase.\n    upgradeHydrationErrorsToRecoverable(); // Fall through to normal Suspense path\n\n    return true;\n  }\n}\n\nfunction completeWork(current, workInProgress, renderLanes) {\n  var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n\n  popTreeContext(workInProgress);\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case SimpleMemoComponent:\n    case FunctionComponent:\n    case ForwardRef:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case ContextConsumer:\n    case MemoComponent:\n      bubbleProperties(workInProgress);\n      return null;\n\n    case ClassComponent:\n      {\n        var Component = workInProgress.type;\n\n        if (isContextProvider(Component)) {\n          popContext(workInProgress);\n        }\n\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n    case HostRoot:\n      {\n        var fiberRoot = workInProgress.stateNode;\n        popHostContainer(workInProgress);\n        popTopLevelContextObject(workInProgress);\n        resetWorkInProgressVersions();\n\n        if (fiberRoot.pendingContext) {\n          fiberRoot.context = fiberRoot.pendingContext;\n          fiberRoot.pendingContext = null;\n        }\n\n        if (current === null || current.child === null) {\n          // If we hydrated, pop so that we can delete any remaining children\n          // that weren't hydrated.\n          var wasHydrated = popHydrationState(workInProgress);\n\n          if (wasHydrated) {\n            // If we hydrated, then we'll need to schedule an update for\n            // the commit side-effects on the root.\n            markUpdate(workInProgress);\n          } else {\n            if (current !== null) {\n              var prevState = current.memoizedState;\n\n              if ( // Check if this is a client root\n              !prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)\n              (workInProgress.flags & ForceClientRender) !== NoFlags) {\n                // Schedule an effect to clear this container at the start of the\n                // next commit. This handles the case of React rendering into a\n                // container with previous children. It's also safe to do for\n                // updates too, because current.child would only be null if the\n                // previous render was null (so the container would already\n                // be empty).\n                workInProgress.flags |= Snapshot; // If this was a forced client render, there may have been\n                // recoverable errors during first hydration attempt. If so, add\n                // them to a queue so we can log them in the commit phase.\n\n                upgradeHydrationErrorsToRecoverable();\n              }\n            }\n          }\n        }\n\n        updateHostContainer(current, workInProgress);\n        bubbleProperties(workInProgress);\n\n        return null;\n      }\n\n    case HostComponent:\n      {\n        popHostContext(workInProgress);\n        var rootContainerInstance = getRootHostContainer();\n        var type = workInProgress.type;\n\n        if (current !== null && workInProgress.stateNode != null) {\n          updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);\n\n          if (current.ref !== workInProgress.ref) {\n            markRef$1(workInProgress);\n          }\n        } else {\n          if (!newProps) {\n            if (workInProgress.stateNode === null) {\n              throw new Error('We must have new props for new mounts. This error is likely ' + 'caused by a bug in React. Please file an issue.');\n            } // This can happen when we abort work.\n\n\n            bubbleProperties(workInProgress);\n            return null;\n          }\n\n          var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context\n          // \"stack\" as the parent. Then append children as we go in beginWork\n          // or completeWork depending on whether we want to add them top->down or\n          // bottom->up. Top->down is faster in IE11.\n\n          var _wasHydrated = popHydrationState(workInProgress);\n\n          if (_wasHydrated) {\n            // TODO: Move this and createInstance step into the beginPhase\n            // to consolidate.\n            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {\n              // If changes to the hydrated node need to be applied at the\n              // commit-phase we mark this as such.\n              markUpdate(workInProgress);\n            }\n          } else {\n            var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);\n            appendAllChildren(instance, workInProgress, false, false);\n            workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.\n            // (eg DOM renderer supports auto-focus for certain elements).\n            // Make sure such renderers get scheduled for later work.\n\n            if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) {\n              markUpdate(workInProgress);\n            }\n          }\n\n          if (workInProgress.ref !== null) {\n            // If there is a ref on a host node we need to schedule a callback\n            markRef$1(workInProgress);\n          }\n        }\n\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n    case HostText:\n      {\n        var newText = newProps;\n\n        if (current && workInProgress.stateNode != null) {\n          var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need\n          // to schedule a side-effect to do the updates.\n\n          updateHostText$1(current, workInProgress, oldText, newText);\n        } else {\n          if (typeof newText !== 'string') {\n            if (workInProgress.stateNode === null) {\n              throw new Error('We must have new props for new mounts. This error is likely ' + 'caused by a bug in React. Please file an issue.');\n            } // This can happen when we abort work.\n\n          }\n\n          var _rootContainerInstance = getRootHostContainer();\n\n          var _currentHostContext = getHostContext();\n\n          var _wasHydrated2 = popHydrationState(workInProgress);\n\n          if (_wasHydrated2) {\n            if (prepareToHydrateHostTextInstance(workInProgress)) {\n              markUpdate(workInProgress);\n            }\n          } else {\n            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);\n          }\n        }\n\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n    case SuspenseComponent:\n      {\n        popSuspenseContext(workInProgress);\n        var nextState = workInProgress.memoizedState; // Special path for dehydrated boundaries. We may eventually move this\n        // to its own fiber type so that we can add other kinds of hydration\n        // boundaries that aren't associated with a Suspense tree. In anticipation\n        // of such a refactor, all the hydration logic is contained in\n        // this branch.\n\n        if (current === null || current.memoizedState !== null && current.memoizedState.dehydrated !== null) {\n          var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current, workInProgress, nextState);\n\n          if (!fallthroughToNormalSuspensePath) {\n            if (workInProgress.flags & ShouldCapture) {\n              // Special case. There were remaining unhydrated nodes. We treat\n              // this as a mismatch. Revert to client rendering.\n              return workInProgress;\n            } else {\n              // Did not finish hydrating, either because this is the initial\n              // render or because something suspended.\n              return null;\n            }\n          } // Continue with the normal Suspense path.\n\n        }\n\n        if ((workInProgress.flags & DidCapture) !== NoFlags) {\n          // Something suspended. Re-render with the fallback children.\n          workInProgress.lanes = renderLanes; // Do not reset the effect list.\n\n          if ( (workInProgress.mode & ProfileMode) !== NoMode) {\n            transferActualDuration(workInProgress);\n          } // Don't bubble properties in this case.\n\n\n          return workInProgress;\n        }\n\n        var nextDidTimeout = nextState !== null;\n        var prevDidTimeout = current !== null && current.memoizedState !== null;\n        // a passive effect, which is when we process the transitions\n\n\n        if (nextDidTimeout !== prevDidTimeout) {\n          // an effect to toggle the subtree's visibility. When we switch from\n          // fallback -> primary, the inner Offscreen fiber schedules this effect\n          // as part of its normal complete phase. But when we switch from\n          // primary -> fallback, the inner Offscreen fiber does not have a complete\n          // phase. So we need to schedule its effect here.\n          //\n          // We also use this flag to connect/disconnect the effects, but the same\n          // logic applies: when re-connecting, the Offscreen fiber's complete\n          // phase will handle scheduling the effect. It's only when the fallback\n          // is active that we have to do anything special.\n\n\n          if (nextDidTimeout) {\n            var _offscreenFiber2 = workInProgress.child;\n            _offscreenFiber2.flags |= Visibility; // TODO: This will still suspend a synchronous tree if anything\n            // in the concurrent tree already suspended during this render.\n            // This is a known bug.\n\n            if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n              // TODO: Move this back to throwException because this is too late\n              // if this is a large tree which is common for initial loads. We\n              // don't know if we should restart a render or not until we get\n              // this marker, and this is too late.\n              // If this render already had a ping or lower pri updates,\n              // and this is the first time we know we're going to suspend we\n              // should be able to immediately restart from within throwException.\n              var hasInvisibleChildContext = current === null && (workInProgress.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);\n\n              if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {\n                // If this was in an invisible tree or a new render, then showing\n                // this boundary is ok.\n                renderDidSuspend();\n              } else {\n                // Otherwise, we're going to have to hide content so we should\n                // suspend for longer if possible.\n                renderDidSuspendDelayIfPossible();\n              }\n            }\n          }\n        }\n\n        var wakeables = workInProgress.updateQueue;\n\n        if (wakeables !== null) {\n          // Schedule an effect to attach a retry listener to the promise.\n          // TODO: Move to passive phase\n          workInProgress.flags |= Update;\n        }\n\n        bubbleProperties(workInProgress);\n\n        {\n          if ((workInProgress.mode & ProfileMode) !== NoMode) {\n            if (nextDidTimeout) {\n              // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n              var primaryChildFragment = workInProgress.child;\n\n              if (primaryChildFragment !== null) {\n                // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n                workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;\n              }\n            }\n          }\n        }\n\n        return null;\n      }\n\n    case HostPortal:\n      popHostContainer(workInProgress);\n      updateHostContainer(current, workInProgress);\n\n      if (current === null) {\n        preparePortalMount(workInProgress.stateNode.containerInfo);\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n\n    case ContextProvider:\n      // Pop provider fiber\n      var context = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      bubbleProperties(workInProgress);\n      return null;\n\n    case IncompleteClassComponent:\n      {\n        // Same as class component case. I put it down here so that the tags are\n        // sequential to ensure this switch is compiled to a jump table.\n        var _Component = workInProgress.type;\n\n        if (isContextProvider(_Component)) {\n          popContext(workInProgress);\n        }\n\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n    case SuspenseListComponent:\n      {\n        popSuspenseContext(workInProgress);\n        var renderState = workInProgress.memoizedState;\n\n        if (renderState === null) {\n          // We're running in the default, \"independent\" mode.\n          // We don't do anything in this mode.\n          bubbleProperties(workInProgress);\n          return null;\n        }\n\n        var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n        var renderedTail = renderState.rendering;\n\n        if (renderedTail === null) {\n          // We just rendered the head.\n          if (!didSuspendAlready) {\n            // This is the first pass. We need to figure out if anything is still\n            // suspended in the rendered set.\n            // If new content unsuspended, but there's still some content that\n            // didn't. Then we need to do a second pass that forces everything\n            // to keep showing their fallbacks.\n            // We might be suspended if something in this render pass suspended, or\n            // something in the previous committed pass suspended. Otherwise,\n            // there's no chance so we can skip the expensive call to\n            // findFirstSuspended.\n            var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);\n\n            if (!cannotBeSuspended) {\n              var row = workInProgress.child;\n\n              while (row !== null) {\n                var suspended = findFirstSuspended(row);\n\n                if (suspended !== null) {\n                  didSuspendAlready = true;\n                  workInProgress.flags |= DidCapture;\n                  cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as\n                  // part of the second pass. In that case nothing will subscribe to\n                  // its thenables. Instead, we'll transfer its thenables to the\n                  // SuspenseList so that it can retry if they resolve.\n                  // There might be multiple of these in the list but since we're\n                  // going to wait for all of them anyway, it doesn't really matter\n                  // which ones gets to ping. In theory we could get clever and keep\n                  // track of how many dependencies remain but it gets tricky because\n                  // in the meantime, we can add/remove/change items and dependencies.\n                  // We might bail out of the loop before finding any but that\n                  // doesn't matter since that means that the other boundaries that\n                  // we did find already has their listeners attached.\n\n                  var newThenables = suspended.updateQueue;\n\n                  if (newThenables !== null) {\n                    workInProgress.updateQueue = newThenables;\n                    workInProgress.flags |= Update;\n                  } // Rerender the whole list, but this time, we'll force fallbacks\n                  // to stay in place.\n                  // Reset the effect flags before doing the second pass since that's now invalid.\n                  // Reset the child fibers to their original state.\n\n\n                  workInProgress.subtreeFlags = NoFlags;\n                  resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately\n                  // rerender the children.\n\n                  pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback)); // Don't bubble properties in this case.\n\n                  return workInProgress.child;\n                }\n\n                row = row.sibling;\n              }\n            }\n\n            if (renderState.tail !== null && now() > getRenderTargetTime()) {\n              // We have already passed our CPU deadline but we still have rows\n              // left in the tail. We'll just give up further attempts to render\n              // the main content and only render fallbacks.\n              workInProgress.flags |= DidCapture;\n              didSuspendAlready = true;\n              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\n              // to get it started back up to attempt the next item. While in terms\n              // of priority this work has the same priority as this current render,\n              // it's not part of the same transition once the transition has\n              // committed. If it's sync, we still want to yield so that it can be\n              // painted. Conceptually, this is really the same as pinging.\n              // We can use any RetryLane even if it's the one currently rendering\n              // since we're leaving it behind on this node.\n\n              workInProgress.lanes = SomeRetryLane;\n            }\n          } else {\n            cutOffTailIfNeeded(renderState, false);\n          } // Next we're going to render the tail.\n\n        } else {\n          // Append the rendered row to the child list.\n          if (!didSuspendAlready) {\n            var _suspended = findFirstSuspended(renderedTail);\n\n            if (_suspended !== null) {\n              workInProgress.flags |= DidCapture;\n              didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't\n              // get lost if this row ends up dropped during a second pass.\n\n              var _newThenables = _suspended.updateQueue;\n\n              if (_newThenables !== null) {\n                workInProgress.updateQueue = _newThenables;\n                workInProgress.flags |= Update;\n              }\n\n              cutOffTailIfNeeded(renderState, true); // This might have been modified.\n\n              if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.\n              ) {\n                  // We're done.\n                  bubbleProperties(workInProgress);\n                  return null;\n                }\n            } else if ( // The time it took to render last row is greater than the remaining\n            // time we have to render. So rendering one more row would likely\n            // exceed it.\n            now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {\n              // We have now passed our CPU deadline and we'll just give up further\n              // attempts to render the main content and only render fallbacks.\n              // The assumption is that this is usually faster.\n              workInProgress.flags |= DidCapture;\n              didSuspendAlready = true;\n              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\n              // to get it started back up to attempt the next item. While in terms\n              // of priority this work has the same priority as this current render,\n              // it's not part of the same transition once the transition has\n              // committed. If it's sync, we still want to yield so that it can be\n              // painted. Conceptually, this is really the same as pinging.\n              // We can use any RetryLane even if it's the one currently rendering\n              // since we're leaving it behind on this node.\n\n              workInProgress.lanes = SomeRetryLane;\n            }\n          }\n\n          if (renderState.isBackwards) {\n            // The effect list of the backwards tail will have been added\n            // to the end. This breaks the guarantee that life-cycles fire in\n            // sibling order but that isn't a strong guarantee promised by React.\n            // Especially since these might also just pop in during future commits.\n            // Append to the beginning of the list.\n            renderedTail.sibling = workInProgress.child;\n            workInProgress.child = renderedTail;\n          } else {\n            var previousSibling = renderState.last;\n\n            if (previousSibling !== null) {\n              previousSibling.sibling = renderedTail;\n            } else {\n              workInProgress.child = renderedTail;\n            }\n\n            renderState.last = renderedTail;\n          }\n        }\n\n        if (renderState.tail !== null) {\n          // We still have tail rows to render.\n          // Pop a row.\n          var next = renderState.tail;\n          renderState.rendering = next;\n          renderState.tail = next.sibling;\n          renderState.renderingStartTime = now();\n          next.sibling = null; // Restore the context.\n          // TODO: We can probably just avoid popping it instead and only\n          // setting it the first time we go from not suspended to suspended.\n\n          var suspenseContext = suspenseStackCursor.current;\n\n          if (didSuspendAlready) {\n            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\n          } else {\n            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n          }\n\n          pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.\n          // Don't bubble properties in this case.\n\n          return next;\n        }\n\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n    case ScopeComponent:\n      {\n\n        break;\n      }\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      {\n        popRenderLanes(workInProgress);\n        var _nextState = workInProgress.memoizedState;\n        var nextIsHidden = _nextState !== null;\n\n        if (current !== null) {\n          var _prevState = current.memoizedState;\n          var prevIsHidden = _prevState !== null;\n\n          if (prevIsHidden !== nextIsHidden && ( // LegacyHidden doesn't do any hiding — it only pre-renders.\n          !enableLegacyHidden )) {\n            workInProgress.flags |= Visibility;\n          }\n        }\n\n        if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {\n          bubbleProperties(workInProgress);\n        } else {\n          // Don't bubble properties for hidden children unless we're rendering\n          // at offscreen priority.\n          if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {\n            bubbleProperties(workInProgress);\n\n            {\n              // Check if there was an insertion or update in the hidden subtree.\n              // If so, we need to hide those nodes in the commit phase, so\n              // schedule a visibility effect.\n              if ( workInProgress.subtreeFlags & (Placement | Update)) {\n                workInProgress.flags |= Visibility;\n              }\n            }\n          }\n        }\n        return null;\n      }\n\n    case CacheComponent:\n      {\n\n        return null;\n      }\n\n    case TracingMarkerComponent:\n      {\n\n        return null;\n      }\n  }\n\n  throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + 'React. Please file an issue.');\n}\n\nfunction unwindWork(current, workInProgress, renderLanes) {\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(workInProgress);\n\n  switch (workInProgress.tag) {\n    case ClassComponent:\n      {\n        var Component = workInProgress.type;\n\n        if (isContextProvider(Component)) {\n          popContext(workInProgress);\n        }\n\n        var flags = workInProgress.flags;\n\n        if (flags & ShouldCapture) {\n          workInProgress.flags = flags & ~ShouldCapture | DidCapture;\n\n          if ( (workInProgress.mode & ProfileMode) !== NoMode) {\n            transferActualDuration(workInProgress);\n          }\n\n          return workInProgress;\n        }\n\n        return null;\n      }\n\n    case HostRoot:\n      {\n        var root = workInProgress.stateNode;\n        popHostContainer(workInProgress);\n        popTopLevelContextObject(workInProgress);\n        resetWorkInProgressVersions();\n        var _flags = workInProgress.flags;\n\n        if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {\n          // There was an error during render that wasn't captured by a suspense\n          // boundary. Do a second pass on the root to unmount the children.\n          workInProgress.flags = _flags & ~ShouldCapture | DidCapture;\n          return workInProgress;\n        } // We unwound to the root without completing it. Exit.\n\n\n        return null;\n      }\n\n    case HostComponent:\n      {\n        // TODO: popHydrationState\n        popHostContext(workInProgress);\n        return null;\n      }\n\n    case SuspenseComponent:\n      {\n        popSuspenseContext(workInProgress);\n        var suspenseState = workInProgress.memoizedState;\n\n        if (suspenseState !== null && suspenseState.dehydrated !== null) {\n          if (workInProgress.alternate === null) {\n            throw new Error('Threw in newly mounted dehydrated component. This is likely a bug in ' + 'React. Please file an issue.');\n          }\n\n          resetHydrationState();\n        }\n\n        var _flags2 = workInProgress.flags;\n\n        if (_flags2 & ShouldCapture) {\n          workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.\n\n          if ( (workInProgress.mode & ProfileMode) !== NoMode) {\n            transferActualDuration(workInProgress);\n          }\n\n          return workInProgress;\n        }\n\n        return null;\n      }\n\n    case SuspenseListComponent:\n      {\n        popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been\n        // caught by a nested boundary. If not, it should bubble through.\n\n        return null;\n      }\n\n    case HostPortal:\n      popHostContainer(workInProgress);\n      return null;\n\n    case ContextProvider:\n      var context = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      return null;\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(workInProgress);\n      return null;\n\n    case CacheComponent:\n\n      return null;\n\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(current, interruptedWork, renderLanes) {\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(interruptedWork);\n\n  switch (interruptedWork.tag) {\n    case ClassComponent:\n      {\n        var childContextTypes = interruptedWork.type.childContextTypes;\n\n        if (childContextTypes !== null && childContextTypes !== undefined) {\n          popContext(interruptedWork);\n        }\n\n        break;\n      }\n\n    case HostRoot:\n      {\n        var root = interruptedWork.stateNode;\n        popHostContainer(interruptedWork);\n        popTopLevelContextObject(interruptedWork);\n        resetWorkInProgressVersions();\n        break;\n      }\n\n    case HostComponent:\n      {\n        popHostContext(interruptedWork);\n        break;\n      }\n\n    case HostPortal:\n      popHostContainer(interruptedWork);\n      break;\n\n    case SuspenseComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n\n    case SuspenseListComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n\n    case ContextProvider:\n      var context = interruptedWork.type._context;\n      popProvider(context, interruptedWork);\n      break;\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(interruptedWork);\n      break;\n  }\n}\n\nvar didWarnAboutUndefinedSnapshotBeforeUpdate = null;\n\n{\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n} // Used during the commit phase to track the state of the Offscreen component stack.\n// Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.\n// Only used when enableSuspenseLayoutEffectSemantics is enabled.\n\n\nvar offscreenSubtreeIsHidden = false;\nvar offscreenSubtreeWasHidden = false;\nvar PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\nvar nextEffect = null; // Used for Profiling builds to track updaters.\n\nvar inProgressLanes = null;\nvar inProgressRoot = null;\nfunction reportUncaughtErrorInDEV(error) {\n  // Wrapping each small part of the commit phase into a guarded\n  // callback is a bit too slow (https://github.com/facebook/react/pull/21666).\n  // But we rely on it to surface errors to DEV tools like overlays\n  // (https://github.com/facebook/react/issues/21712).\n  // As a compromise, rethrow only caught errors in a guard.\n  {\n    invokeGuardedCallback(null, function () {\n      throw error;\n    });\n    clearCaughtError();\n  }\n}\n\nvar callComponentWillUnmountWithTimer = function (current, instance) {\n  instance.props = current.memoizedProps;\n  instance.state = current.memoizedState;\n\n  if ( current.mode & ProfileMode) {\n    try {\n      startLayoutEffectTimer();\n      instance.componentWillUnmount();\n    } finally {\n      recordLayoutEffectDuration(current);\n    }\n  } else {\n    instance.componentWillUnmount();\n  }\n}; // Capture errors so they don't interrupt mounting.\n\n\nfunction safelyCallCommitHookLayoutEffectListMount(current, nearestMountedAncestor) {\n  try {\n    commitHookEffectListMount(Layout, current);\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n} // Capture errors so they don't interrupt unmounting.\n\n\nfunction safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {\n  try {\n    callComponentWillUnmountWithTimer(current, instance);\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n} // Capture errors so they don't interrupt mounting.\n\n\nfunction safelyCallComponentDidMount(current, nearestMountedAncestor, instance) {\n  try {\n    instance.componentDidMount();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n} // Capture errors so they don't interrupt mounting.\n\n\nfunction safelyAttachRef(current, nearestMountedAncestor) {\n  try {\n    commitAttachRef(current);\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\nfunction safelyDetachRef(current, nearestMountedAncestor) {\n  var ref = current.ref;\n\n  if (ref !== null) {\n    if (typeof ref === 'function') {\n      var retVal;\n\n      try {\n        if (enableProfilerTimer && enableProfilerCommitHooks && current.mode & ProfileMode) {\n          try {\n            startLayoutEffectTimer();\n            retVal = ref(null);\n          } finally {\n            recordLayoutEffectDuration(current);\n          }\n        } else {\n          retVal = ref(null);\n        }\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n\n      {\n        if (typeof retVal === 'function') {\n          error('Unexpected return value from a callback ref in %s. ' + 'A callback ref should not return a function.', getComponentNameFromFiber(current));\n        }\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(current, nearestMountedAncestor, destroy) {\n  try {\n    destroy();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\nvar focusedInstanceHandle = null;\nvar shouldFireAfterActiveInstanceBlur = false;\nfunction commitBeforeMutationEffects(root, firstChild) {\n  focusedInstanceHandle = prepareForCommit(root.containerInfo);\n  nextEffect = firstChild;\n  commitBeforeMutationEffects_begin(); // We no longer need to track the active instance fiber\n\n  var shouldFire = shouldFireAfterActiveInstanceBlur;\n  shouldFireAfterActiveInstanceBlur = false;\n  focusedInstanceHandle = null;\n  return shouldFire;\n}\n\nfunction commitBeforeMutationEffects_begin() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect; // This phase is only used for beforeActiveInstanceBlur.\n\n    var child = fiber.child;\n\n    if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitBeforeMutationEffects_complete();\n    }\n  }\n}\n\nfunction commitBeforeMutationEffects_complete() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    setCurrentFiber(fiber);\n\n    try {\n      commitBeforeMutationEffectsOnFiber(fiber);\n    } catch (error) {\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n\n    resetCurrentFiber();\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitBeforeMutationEffectsOnFiber(finishedWork) {\n  var current = finishedWork.alternate;\n  var flags = finishedWork.flags;\n\n  if ((flags & Snapshot) !== NoFlags) {\n    setCurrentFiber(finishedWork);\n\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent:\n        {\n          break;\n        }\n\n      case ClassComponent:\n        {\n          if (current !== null) {\n            var prevProps = current.memoizedProps;\n            var prevState = current.memoizedState;\n            var instance = finishedWork.stateNode; // We could update instance props and state here,\n            // but instead we rely on them being set during last render.\n            // TODO: revisit this when we implement resuming.\n\n            {\n              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                if (instance.props !== finishedWork.memoizedProps) {\n                  error('Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                }\n\n                if (instance.state !== finishedWork.memoizedState) {\n                  error('Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                }\n              }\n            }\n\n            var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);\n\n            {\n              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;\n\n              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n                didWarnSet.add(finishedWork.type);\n\n                error('%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentNameFromFiber(finishedWork));\n              }\n            }\n\n            instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n          }\n\n          break;\n        }\n\n      case HostRoot:\n        {\n          {\n            var root = finishedWork.stateNode;\n            clearContainer(root.containerInfo);\n          }\n\n          break;\n        }\n\n      case HostComponent:\n      case HostText:\n      case HostPortal:\n      case IncompleteClassComponent:\n        // Nothing to do for these component types\n        break;\n\n      default:\n        {\n          throw new Error('This unit of work tag should not have side-effects. This error is ' + 'likely caused by a bug in React. Please file an issue.');\n        }\n    }\n\n    resetCurrentFiber();\n  }\n}\n\nfunction commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {\n  var updateQueue = finishedWork.updateQueue;\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    var firstEffect = lastEffect.next;\n    var effect = firstEffect;\n\n    do {\n      if ((effect.tag & flags) === flags) {\n        // Unmount\n        var destroy = effect.destroy;\n        effect.destroy = undefined;\n\n        if (destroy !== undefined) {\n          {\n            if ((flags & Passive$1) !== NoFlags$1) {\n              markComponentPassiveEffectUnmountStarted(finishedWork);\n            } else if ((flags & Layout) !== NoFlags$1) {\n              markComponentLayoutEffectUnmountStarted(finishedWork);\n            }\n          }\n\n          {\n            if ((flags & Insertion) !== NoFlags$1) {\n              setIsRunningInsertionEffect(true);\n            }\n          }\n\n          safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);\n\n          {\n            if ((flags & Insertion) !== NoFlags$1) {\n              setIsRunningInsertionEffect(false);\n            }\n          }\n\n          {\n            if ((flags & Passive$1) !== NoFlags$1) {\n              markComponentPassiveEffectUnmountStopped();\n            } else if ((flags & Layout) !== NoFlags$1) {\n              markComponentLayoutEffectUnmountStopped();\n            }\n          }\n        }\n      }\n\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitHookEffectListMount(flags, finishedWork) {\n  var updateQueue = finishedWork.updateQueue;\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    var firstEffect = lastEffect.next;\n    var effect = firstEffect;\n\n    do {\n      if ((effect.tag & flags) === flags) {\n        {\n          if ((flags & Passive$1) !== NoFlags$1) {\n            markComponentPassiveEffectMountStarted(finishedWork);\n          } else if ((flags & Layout) !== NoFlags$1) {\n            markComponentLayoutEffectMountStarted(finishedWork);\n          }\n        } // Mount\n\n\n        var create = effect.create;\n\n        {\n          if ((flags & Insertion) !== NoFlags$1) {\n            setIsRunningInsertionEffect(true);\n          }\n        }\n\n        effect.destroy = create();\n\n        {\n          if ((flags & Insertion) !== NoFlags$1) {\n            setIsRunningInsertionEffect(false);\n          }\n        }\n\n        {\n          if ((flags & Passive$1) !== NoFlags$1) {\n            markComponentPassiveEffectMountStopped();\n          } else if ((flags & Layout) !== NoFlags$1) {\n            markComponentLayoutEffectMountStopped();\n          }\n        }\n\n        {\n          var destroy = effect.destroy;\n\n          if (destroy !== undefined && typeof destroy !== 'function') {\n            var hookName = void 0;\n\n            if ((effect.tag & Layout) !== NoFlags) {\n              hookName = 'useLayoutEffect';\n            } else if ((effect.tag & Insertion) !== NoFlags) {\n              hookName = 'useInsertionEffect';\n            } else {\n              hookName = 'useEffect';\n            }\n\n            var addendum = void 0;\n\n            if (destroy === null) {\n              addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';\n            } else if (typeof destroy.then === 'function') {\n              addendum = '\\n\\nIt looks like you wrote ' + hookName + '(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\\n\\n' + hookName + '(() => {\\n' + '  async function fetchData() {\\n' + '    // You can await here\\n' + '    const response = await MyAPI.getData(someId);\\n' + '    // ...\\n' + '  }\\n' + '  fetchData();\\n' + \"}, [someId]); // Or [] if effect doesn't need props or state\\n\\n\" + 'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';\n            } else {\n              addendum = ' You returned: ' + destroy;\n            }\n\n            error('%s must not return anything besides a function, ' + 'which is used for clean-up.%s', hookName, addendum);\n          }\n        }\n      }\n\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitPassiveEffectDurations(finishedRoot, finishedWork) {\n  {\n    // Only Profilers with work in their subtree will have an Update effect scheduled.\n    if ((finishedWork.flags & Update) !== NoFlags) {\n      switch (finishedWork.tag) {\n        case Profiler:\n          {\n            var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;\n            var _finishedWork$memoize = finishedWork.memoizedProps,\n                id = _finishedWork$memoize.id,\n                onPostCommit = _finishedWork$memoize.onPostCommit; // This value will still reflect the previous commit phase.\n            // It does not get reset until the start of the next commit phase.\n\n            var commitTime = getCommitTime();\n            var phase = finishedWork.alternate === null ? 'mount' : 'update';\n\n            {\n              if (isCurrentUpdateNested()) {\n                phase = 'nested-update';\n              }\n            }\n\n            if (typeof onPostCommit === 'function') {\n              onPostCommit(id, phase, passiveEffectDuration, commitTime);\n            } // Bubble times to the next nearest ancestor Profiler.\n            // After we process that Profiler, we'll bubble further up.\n\n\n            var parentFiber = finishedWork.return;\n\n            outer: while (parentFiber !== null) {\n              switch (parentFiber.tag) {\n                case HostRoot:\n                  var root = parentFiber.stateNode;\n                  root.passiveEffectDuration += passiveEffectDuration;\n                  break outer;\n\n                case Profiler:\n                  var parentStateNode = parentFiber.stateNode;\n                  parentStateNode.passiveEffectDuration += passiveEffectDuration;\n                  break outer;\n              }\n\n              parentFiber = parentFiber.return;\n            }\n\n            break;\n          }\n      }\n    }\n  }\n}\n\nfunction commitLayoutEffectOnFiber(finishedRoot, current, finishedWork, committedLanes) {\n  if ((finishedWork.flags & LayoutMask) !== NoFlags) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent:\n        {\n          if ( !offscreenSubtreeWasHidden) {\n            // At this point layout effects have already been destroyed (during mutation phase).\n            // This is done to prevent sibling component effects from interfering with each other,\n            // e.g. a destroy function in one component should never override a ref set\n            // by a create function in another component during the same commit.\n            if ( finishedWork.mode & ProfileMode) {\n              try {\n                startLayoutEffectTimer();\n                commitHookEffectListMount(Layout | HasEffect, finishedWork);\n              } finally {\n                recordLayoutEffectDuration(finishedWork);\n              }\n            } else {\n              commitHookEffectListMount(Layout | HasEffect, finishedWork);\n            }\n          }\n\n          break;\n        }\n\n      case ClassComponent:\n        {\n          var instance = finishedWork.stateNode;\n\n          if (finishedWork.flags & Update) {\n            if (!offscreenSubtreeWasHidden) {\n              if (current === null) {\n                // We could update instance props and state here,\n                // but instead we rely on them being set during last render.\n                // TODO: revisit this when we implement resuming.\n                {\n                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                    if (instance.props !== finishedWork.memoizedProps) {\n                      error('Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                    }\n\n                    if (instance.state !== finishedWork.memoizedState) {\n                      error('Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                    }\n                  }\n                }\n\n                if ( finishedWork.mode & ProfileMode) {\n                  try {\n                    startLayoutEffectTimer();\n                    instance.componentDidMount();\n                  } finally {\n                    recordLayoutEffectDuration(finishedWork);\n                  }\n                } else {\n                  instance.componentDidMount();\n                }\n              } else {\n                var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);\n                var prevState = current.memoizedState; // We could update instance props and state here,\n                // but instead we rely on them being set during last render.\n                // TODO: revisit this when we implement resuming.\n\n                {\n                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                    if (instance.props !== finishedWork.memoizedProps) {\n                      error('Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                    }\n\n                    if (instance.state !== finishedWork.memoizedState) {\n                      error('Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                    }\n                  }\n                }\n\n                if ( finishedWork.mode & ProfileMode) {\n                  try {\n                    startLayoutEffectTimer();\n                    instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n                  } finally {\n                    recordLayoutEffectDuration(finishedWork);\n                  }\n                } else {\n                  instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n                }\n              }\n            }\n          } // TODO: I think this is now always non-null by the time it reaches the\n          // commit phase. Consider removing the type check.\n\n\n          var updateQueue = finishedWork.updateQueue;\n\n          if (updateQueue !== null) {\n            {\n              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                if (instance.props !== finishedWork.memoizedProps) {\n                  error('Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                }\n\n                if (instance.state !== finishedWork.memoizedState) {\n                  error('Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                }\n              }\n            } // We could update instance props and state here,\n            // but instead we rely on them being set during last render.\n            // TODO: revisit this when we implement resuming.\n\n\n            commitUpdateQueue(finishedWork, updateQueue, instance);\n          }\n\n          break;\n        }\n\n      case HostRoot:\n        {\n          // TODO: I think this is now always non-null by the time it reaches the\n          // commit phase. Consider removing the type check.\n          var _updateQueue = finishedWork.updateQueue;\n\n          if (_updateQueue !== null) {\n            var _instance = null;\n\n            if (finishedWork.child !== null) {\n              switch (finishedWork.child.tag) {\n                case HostComponent:\n                  _instance = getPublicInstance(finishedWork.child.stateNode);\n                  break;\n\n                case ClassComponent:\n                  _instance = finishedWork.child.stateNode;\n                  break;\n              }\n            }\n\n            commitUpdateQueue(finishedWork, _updateQueue, _instance);\n          }\n\n          break;\n        }\n\n      case HostComponent:\n        {\n          var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted\n          // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n          // These effects should only be committed when components are first mounted,\n          // aka when there is no current/alternate.\n\n          if (current === null && finishedWork.flags & Update) {\n            var type = finishedWork.type;\n            var props = finishedWork.memoizedProps;\n            commitMount(_instance2, type, props);\n          }\n\n          break;\n        }\n\n      case HostText:\n        {\n          // We have no life-cycles associated with text.\n          break;\n        }\n\n      case HostPortal:\n        {\n          // We have no life-cycles associated with portals.\n          break;\n        }\n\n      case Profiler:\n        {\n          {\n            var _finishedWork$memoize2 = finishedWork.memoizedProps,\n                onCommit = _finishedWork$memoize2.onCommit,\n                onRender = _finishedWork$memoize2.onRender;\n            var effectDuration = finishedWork.stateNode.effectDuration;\n            var commitTime = getCommitTime();\n            var phase = current === null ? 'mount' : 'update';\n\n            {\n              if (isCurrentUpdateNested()) {\n                phase = 'nested-update';\n              }\n            }\n\n            if (typeof onRender === 'function') {\n              onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime);\n            }\n\n            {\n              if (typeof onCommit === 'function') {\n                onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime);\n              } // Schedule a passive effect for this Profiler to call onPostCommit hooks.\n              // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,\n              // because the effect is also where times bubble to parent Profilers.\n\n\n              enqueuePendingPassiveProfilerEffect(finishedWork); // Propagate layout effect durations to the next nearest Profiler ancestor.\n              // Do not reset these values until the next render so DevTools has a chance to read them first.\n\n              var parentFiber = finishedWork.return;\n\n              outer: while (parentFiber !== null) {\n                switch (parentFiber.tag) {\n                  case HostRoot:\n                    var root = parentFiber.stateNode;\n                    root.effectDuration += effectDuration;\n                    break outer;\n\n                  case Profiler:\n                    var parentStateNode = parentFiber.stateNode;\n                    parentStateNode.effectDuration += effectDuration;\n                    break outer;\n                }\n\n                parentFiber = parentFiber.return;\n              }\n            }\n          }\n\n          break;\n        }\n\n      case SuspenseComponent:\n        {\n          commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n          break;\n        }\n\n      case SuspenseListComponent:\n      case IncompleteClassComponent:\n      case ScopeComponent:\n      case OffscreenComponent:\n      case LegacyHiddenComponent:\n      case TracingMarkerComponent:\n        {\n          break;\n        }\n\n      default:\n        throw new Error('This unit of work tag should not have side-effects. This error is ' + 'likely caused by a bug in React. Please file an issue.');\n    }\n  }\n\n  if ( !offscreenSubtreeWasHidden) {\n    {\n      if (finishedWork.flags & Ref) {\n        commitAttachRef(finishedWork);\n      }\n    }\n  }\n}\n\nfunction reappearLayoutEffectsOnFiber(node) {\n  // Turn on layout effects in a tree that previously disappeared.\n  // TODO (Offscreen) Check: flags & LayoutStatic\n  switch (node.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n      {\n        if ( node.mode & ProfileMode) {\n          try {\n            startLayoutEffectTimer();\n            safelyCallCommitHookLayoutEffectListMount(node, node.return);\n          } finally {\n            recordLayoutEffectDuration(node);\n          }\n        } else {\n          safelyCallCommitHookLayoutEffectListMount(node, node.return);\n        }\n\n        break;\n      }\n\n    case ClassComponent:\n      {\n        var instance = node.stateNode;\n\n        if (typeof instance.componentDidMount === 'function') {\n          safelyCallComponentDidMount(node, node.return, instance);\n        }\n\n        safelyAttachRef(node, node.return);\n        break;\n      }\n\n    case HostComponent:\n      {\n        safelyAttachRef(node, node.return);\n        break;\n      }\n  }\n}\n\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\n  // Only hide or unhide the top-most host nodes.\n  var hostSubtreeRoot = null;\n\n  {\n    // We only have the top Fiber that was inserted but we need to recurse down its\n    // children to find all the terminal nodes.\n    var node = finishedWork;\n\n    while (true) {\n      if (node.tag === HostComponent) {\n        if (hostSubtreeRoot === null) {\n          hostSubtreeRoot = node;\n\n          try {\n            var instance = node.stateNode;\n\n            if (isHidden) {\n              hideInstance(instance);\n            } else {\n              unhideInstance(node.stateNode, node.memoizedProps);\n            }\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      } else if (node.tag === HostText) {\n        if (hostSubtreeRoot === null) {\n          try {\n            var _instance3 = node.stateNode;\n\n            if (isHidden) {\n              hideTextInstance(_instance3);\n            } else {\n              unhideTextInstance(_instance3, node.memoizedProps);\n            }\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ; else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === finishedWork) {\n        return;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === finishedWork) {\n          return;\n        }\n\n        if (hostSubtreeRoot === node) {\n          hostSubtreeRoot = null;\n        }\n\n        node = node.return;\n      }\n\n      if (hostSubtreeRoot === node) {\n        hostSubtreeRoot = null;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork) {\n  var ref = finishedWork.ref;\n\n  if (ref !== null) {\n    var instance = finishedWork.stateNode;\n    var instanceToUse;\n\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n\n      default:\n        instanceToUse = instance;\n    } // Moved outside to ensure DCE works with this flag\n\n    if (typeof ref === 'function') {\n      var retVal;\n\n      if ( finishedWork.mode & ProfileMode) {\n        try {\n          startLayoutEffectTimer();\n          retVal = ref(instanceToUse);\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        retVal = ref(instanceToUse);\n      }\n\n      {\n        if (typeof retVal === 'function') {\n          error('Unexpected return value from a callback ref in %s. ' + 'A callback ref should not return a function.', getComponentNameFromFiber(finishedWork));\n        }\n      }\n    } else {\n      {\n        if (!ref.hasOwnProperty('current')) {\n          error('Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().', getComponentNameFromFiber(finishedWork));\n        }\n      }\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction detachFiberMutation(fiber) {\n  // Cut off the return pointer to disconnect it from the tree.\n  // This enables us to detect and warn against state updates on an unmounted component.\n  // It also prevents events from bubbling from within disconnected components.\n  //\n  // Ideally, we should also clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child.\n  // This child itself will be GC:ed when the parent updates the next time.\n  //\n  // Note that we can't clear child or sibling pointers yet.\n  // They're needed for passive effects and for findDOMNode.\n  // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).\n  //\n  // Don't reset the alternate yet, either. We need that so we can detach the\n  // alternate's fields in the passive phase. Clearing the return pointer is\n  // sufficient for findDOMNode semantics.\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    alternate.return = null;\n  }\n\n  fiber.return = null;\n}\n\nfunction detachFiberAfterEffects(fiber) {\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    fiber.alternate = null;\n    detachFiberAfterEffects(alternate);\n  } // Note: Defensively using negation instead of < in case\n  // `deletedTreeCleanUpLevel` is undefined.\n\n\n  {\n    // Clear cyclical Fiber fields. This level alone is designed to roughly\n    // approximate the planned Fiber refactor. In that world, `setState` will be\n    // bound to a special \"instance\" object instead of a Fiber. The Instance\n    // object will not have any of these fields. It will only be connected to\n    // the fiber tree via a single link at the root. So if this level alone is\n    // sufficient to fix memory issues, that bodes well for our plans.\n    fiber.child = null;\n    fiber.deletions = null;\n    fiber.sibling = null; // The `stateNode` is cyclical because on host nodes it points to the host\n    // tree, which has its own pointers to children, parents, and siblings.\n    // The other host nodes also point back to fibers, so we should detach that\n    // one, too.\n\n    if (fiber.tag === HostComponent) {\n      var hostInstance = fiber.stateNode;\n\n      if (hostInstance !== null) {\n        detachDeletedInstance(hostInstance);\n      }\n    }\n\n    fiber.stateNode = null; // I'm intentionally not clearing the `return` field in this level. We\n    // already disconnect the `return` pointer at the root of the deleted\n    // subtree (in `detachFiberMutation`). Besides, `return` by itself is not\n    // cyclical — it's only cyclical when combined with `child`, `sibling`, and\n    // `alternate`. But we'll clear it in the next level anyway, just in case.\n\n    {\n      fiber._debugOwner = null;\n    }\n\n    {\n      // Theoretically, nothing in here should be necessary, because we already\n      // disconnected the fiber from the tree. So even if something leaks this\n      // particular fiber, it won't leak anything else\n      //\n      // The purpose of this branch is to be super aggressive so we can measure\n      // if there's any difference in memory impact. If there is, that could\n      // indicate a React leak we don't know about.\n      fiber.return = null;\n      fiber.dependencies = null;\n      fiber.memoizedProps = null;\n      fiber.memoizedState = null;\n      fiber.pendingProps = null;\n      fiber.stateNode = null; // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.\n\n      fiber.updateQueue = null;\n    }\n  }\n}\n\nfunction getHostParentFiber(fiber) {\n  var parent = fiber.return;\n\n  while (parent !== null) {\n    if (isHostParent(parent)) {\n      return parent;\n    }\n\n    parent = parent.return;\n  }\n\n  throw new Error('Expected to find a host parent. This error is likely caused by a bug ' + 'in React. Please file an issue.');\n}\n\nfunction isHostParent(fiber) {\n  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;\n}\n\nfunction getHostSibling(fiber) {\n  // We're going to search forward into the tree until we find a sibling host\n  // node. Unfortunately, if multiple insertions are done in a row we have to\n  // search past them. This leads to exponential search for the next sibling.\n  // TODO: Find a more efficient way to do this.\n  var node = fiber;\n\n  siblings: while (true) {\n    // If we didn't find anything, let's try the next sibling.\n    while (node.sibling === null) {\n      if (node.return === null || isHostParent(node.return)) {\n        // If we pop out of the root or hit the parent the fiber we are the\n        // last sibling.\n        return null;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n\n    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {\n      // If it is not host node and, we might have a host node inside it.\n      // Try to search down until we find one.\n      if (node.flags & Placement) {\n        // If we don't have a child, try the siblings instead.\n        continue siblings;\n      } // If we don't have a child, try the siblings instead.\n      // We also skip portals because they are not part of this host tree.\n\n\n      if (node.child === null || node.tag === HostPortal) {\n        continue siblings;\n      } else {\n        node.child.return = node;\n        node = node.child;\n      }\n    } // Check if this host node is stable or about to be placed.\n\n\n    if (!(node.flags & Placement)) {\n      // Found it!\n      return node.stateNode;\n    }\n  }\n}\n\nfunction commitPlacement(finishedWork) {\n\n\n  var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.\n\n  switch (parentFiber.tag) {\n    case HostComponent:\n      {\n        var parent = parentFiber.stateNode;\n\n        if (parentFiber.flags & ContentReset) {\n          // Reset the text content of the parent before doing any insertions\n          resetTextContent(parent); // Clear ContentReset from the effect tag\n\n          parentFiber.flags &= ~ContentReset;\n        }\n\n        var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its\n        // children to find all the terminal nodes.\n\n        insertOrAppendPlacementNode(finishedWork, before, parent);\n        break;\n      }\n\n    case HostRoot:\n    case HostPortal:\n      {\n        var _parent = parentFiber.stateNode.containerInfo;\n\n        var _before = getHostSibling(finishedWork);\n\n        insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);\n        break;\n      }\n    // eslint-disable-next-line-no-fallthrough\n\n    default:\n      throw new Error('Invalid host parent fiber. This error is likely caused by a bug ' + 'in React. Please file an issue.');\n  }\n}\n\nfunction insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n  var tag = node.tag;\n  var isHost = tag === HostComponent || tag === HostText;\n\n  if (isHost) {\n    var stateNode = node.stateNode;\n\n    if (before) {\n      insertInContainerBefore(parent, stateNode, before);\n    } else {\n      appendChildToContainer(parent, stateNode);\n    }\n  } else if (tag === HostPortal) ; else {\n    var child = node.child;\n\n    if (child !== null) {\n      insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n      var sibling = child.sibling;\n\n      while (sibling !== null) {\n        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction insertOrAppendPlacementNode(node, before, parent) {\n  var tag = node.tag;\n  var isHost = tag === HostComponent || tag === HostText;\n\n  if (isHost) {\n    var stateNode = node.stateNode;\n\n    if (before) {\n      insertBefore(parent, stateNode, before);\n    } else {\n      appendChild(parent, stateNode);\n    }\n  } else if (tag === HostPortal) ; else {\n    var child = node.child;\n\n    if (child !== null) {\n      insertOrAppendPlacementNode(child, before, parent);\n      var sibling = child.sibling;\n\n      while (sibling !== null) {\n        insertOrAppendPlacementNode(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n} // These are tracked on the stack as we recursively traverse a\n// deleted subtree.\n// TODO: Update these during the whole mutation phase, not just during\n// a deletion.\n\n\nvar hostParent = null;\nvar hostParentIsContainer = false;\n\nfunction commitDeletionEffects(root, returnFiber, deletedFiber) {\n  {\n    // We only have the top Fiber that was deleted but we need to recurse down its\n    // children to find all the terminal nodes.\n    // Recursively delete all host nodes from the parent, detach refs, clean\n    // up mounted layout effects, and call componentWillUnmount.\n    // We only need to remove the topmost host child in each branch. But then we\n    // still need to keep traversing to unmount effects, refs, and cWU. TODO: We\n    // could split this into two separate traversals functions, where the second\n    // one doesn't include any removeChild logic. This is maybe the same\n    // function as \"disappearLayoutEffects\" (or whatever that turns into after\n    // the layout phase is refactored to use recursion).\n    // Before starting, find the nearest host parent on the stack so we know\n    // which instance/container to remove the children from.\n    // TODO: Instead of searching up the fiber return path on every deletion, we\n    // can track the nearest host component on the JS stack as we traverse the\n    // tree during the commit phase. This would make insertions faster, too.\n    var parent = returnFiber;\n\n    findParent: while (parent !== null) {\n      switch (parent.tag) {\n        case HostComponent:\n          {\n            hostParent = parent.stateNode;\n            hostParentIsContainer = false;\n            break findParent;\n          }\n\n        case HostRoot:\n          {\n            hostParent = parent.stateNode.containerInfo;\n            hostParentIsContainer = true;\n            break findParent;\n          }\n\n        case HostPortal:\n          {\n            hostParent = parent.stateNode.containerInfo;\n            hostParentIsContainer = true;\n            break findParent;\n          }\n      }\n\n      parent = parent.return;\n    }\n\n    if (hostParent === null) {\n      throw new Error('Expected to find a host parent. This error is likely caused by ' + 'a bug in React. Please file an issue.');\n    }\n\n    commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\n    hostParent = null;\n    hostParentIsContainer = false;\n  }\n\n  detachFiberMutation(deletedFiber);\n}\n\nfunction recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {\n  // TODO: Use a static flag to skip trees that don't have unmount effects\n  var child = parent.child;\n\n  while (child !== null) {\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);\n    child = child.sibling;\n  }\n}\n\nfunction commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {\n  onCommitUnmount(deletedFiber); // The cases in this outer switch modify the stack before they traverse\n  // into their subtree. There are simpler cases in the inner switch\n  // that don't modify the stack.\n\n  switch (deletedFiber.tag) {\n    case HostComponent:\n      {\n        if (!offscreenSubtreeWasHidden) {\n          safelyDetachRef(deletedFiber, nearestMountedAncestor);\n        } // Intentional fallthrough to next branch\n\n      }\n    // eslint-disable-next-line-no-fallthrough\n\n    case HostText:\n      {\n        // We only need to remove the nearest host child. Set the host parent\n        // to `null` on the stack to indicate that nested children don't\n        // need to be removed.\n        {\n          var prevHostParent = hostParent;\n          var prevHostParentIsContainer = hostParentIsContainer;\n          hostParent = null;\n          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n          hostParent = prevHostParent;\n          hostParentIsContainer = prevHostParentIsContainer;\n\n          if (hostParent !== null) {\n            // Now that all the child effects have unmounted, we can remove the\n            // node from the tree.\n            if (hostParentIsContainer) {\n              removeChildFromContainer(hostParent, deletedFiber.stateNode);\n            } else {\n              removeChild(hostParent, deletedFiber.stateNode);\n            }\n          }\n        }\n\n        return;\n      }\n\n    case DehydratedFragment:\n      {\n        // Delete the dehydrated suspense boundary and all of its content.\n\n\n        {\n          if (hostParent !== null) {\n            if (hostParentIsContainer) {\n              clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);\n            } else {\n              clearSuspenseBoundary(hostParent, deletedFiber.stateNode);\n            }\n          }\n        }\n\n        return;\n      }\n\n    case HostPortal:\n      {\n        {\n          // When we go into a portal, it becomes the parent to remove from.\n          var _prevHostParent = hostParent;\n          var _prevHostParentIsContainer = hostParentIsContainer;\n          hostParent = deletedFiber.stateNode.containerInfo;\n          hostParentIsContainer = true;\n          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n          hostParent = _prevHostParent;\n          hostParentIsContainer = _prevHostParentIsContainer;\n        }\n\n        return;\n      }\n\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      {\n        if (!offscreenSubtreeWasHidden) {\n          var updateQueue = deletedFiber.updateQueue;\n\n          if (updateQueue !== null) {\n            var lastEffect = updateQueue.lastEffect;\n\n            if (lastEffect !== null) {\n              var firstEffect = lastEffect.next;\n              var effect = firstEffect;\n\n              do {\n                var _effect = effect,\n                    destroy = _effect.destroy,\n                    tag = _effect.tag;\n\n                if (destroy !== undefined) {\n                  if ((tag & Insertion) !== NoFlags$1) {\n                    safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                  } else if ((tag & Layout) !== NoFlags$1) {\n                    {\n                      markComponentLayoutEffectUnmountStarted(deletedFiber);\n                    }\n\n                    if ( deletedFiber.mode & ProfileMode) {\n                      startLayoutEffectTimer();\n                      safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                      recordLayoutEffectDuration(deletedFiber);\n                    } else {\n                      safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                    }\n\n                    {\n                      markComponentLayoutEffectUnmountStopped();\n                    }\n                  }\n                }\n\n                effect = effect.next;\n              } while (effect !== firstEffect);\n            }\n          }\n        }\n\n        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n        return;\n      }\n\n    case ClassComponent:\n      {\n        if (!offscreenSubtreeWasHidden) {\n          safelyDetachRef(deletedFiber, nearestMountedAncestor);\n          var instance = deletedFiber.stateNode;\n\n          if (typeof instance.componentWillUnmount === 'function') {\n            safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);\n          }\n        }\n\n        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n        return;\n      }\n\n    case ScopeComponent:\n      {\n\n        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n        return;\n      }\n\n    case OffscreenComponent:\n      {\n        if ( // TODO: Remove this dead flag\n         deletedFiber.mode & ConcurrentMode) {\n          // If this offscreen component is hidden, we already unmounted it. Before\n          // deleting the children, track that it's already unmounted so that we\n          // don't attempt to unmount the effects again.\n          // TODO: If the tree is hidden, in most cases we should be able to skip\n          // over the nested children entirely. An exception is we haven't yet found\n          // the topmost host node to delete, which we already track on the stack.\n          // But the other case is portals, which need to be detached no matter how\n          // deeply they are nested. We should use a subtree flag to track whether a\n          // subtree includes a nested portal.\n          var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;\n          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n        } else {\n          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n        }\n\n        break;\n      }\n\n    default:\n      {\n        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n        return;\n      }\n  }\n}\n\nfunction commitSuspenseCallback(finishedWork) {\n  // TODO: Move this to passive phase\n  var newState = finishedWork.memoizedState;\n}\n\nfunction commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {\n\n  var newState = finishedWork.memoizedState;\n\n  if (newState === null) {\n    var current = finishedWork.alternate;\n\n    if (current !== null) {\n      var prevState = current.memoizedState;\n\n      if (prevState !== null) {\n        var suspenseInstance = prevState.dehydrated;\n\n        if (suspenseInstance !== null) {\n          commitHydratedSuspenseInstance(suspenseInstance);\n        }\n      }\n    }\n  }\n}\n\nfunction attachSuspenseRetryListeners(finishedWork) {\n  // If this boundary just timed out, then it will have a set of wakeables.\n  // For each wakeable, attach a listener so that when it resolves, React\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\n  var wakeables = finishedWork.updateQueue;\n\n  if (wakeables !== null) {\n    finishedWork.updateQueue = null;\n    var retryCache = finishedWork.stateNode;\n\n    if (retryCache === null) {\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n    }\n\n    wakeables.forEach(function (wakeable) {\n      // Memoize using the boundary fiber to prevent redundant listeners.\n      var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n\n      if (!retryCache.has(wakeable)) {\n        retryCache.add(wakeable);\n\n        {\n          if (isDevToolsPresent) {\n            if (inProgressLanes !== null && inProgressRoot !== null) {\n              // If we have pending work still, associate the original updaters with it.\n              restorePendingUpdaters(inProgressRoot, inProgressLanes);\n            } else {\n              throw Error('Expected finished root and lanes to be set. This is a bug in React.');\n            }\n          }\n        }\n\n        wakeable.then(retry, retry);\n      }\n    });\n  }\n} // This function detects when a Suspense boundary goes from visible to hidden.\nfunction commitMutationEffects(root, finishedWork, committedLanes) {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n  setCurrentFiber(finishedWork);\n  commitMutationEffectsOnFiber(finishedWork, root);\n  setCurrentFiber(finishedWork);\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction recursivelyTraverseMutationEffects(root, parentFiber, lanes) {\n  // Deletions effects can be scheduled on any fiber type. They need to happen\n  // before the children effects hae fired.\n  var deletions = parentFiber.deletions;\n\n  if (deletions !== null) {\n    for (var i = 0; i < deletions.length; i++) {\n      var childToDelete = deletions[i];\n\n      try {\n        commitDeletionEffects(root, parentFiber, childToDelete);\n      } catch (error) {\n        captureCommitPhaseError(childToDelete, parentFiber, error);\n      }\n    }\n  }\n\n  var prevDebugFiber = getCurrentFiber();\n\n  if (parentFiber.subtreeFlags & MutationMask) {\n    var child = parentFiber.child;\n\n    while (child !== null) {\n      setCurrentFiber(child);\n      commitMutationEffectsOnFiber(child, root);\n      child = child.sibling;\n    }\n  }\n\n  setCurrentFiber(prevDebugFiber);\n}\n\nfunction commitMutationEffectsOnFiber(finishedWork, root, lanes) {\n  var current = finishedWork.alternate;\n  var flags = finishedWork.flags; // The effect flag should be checked *after* we refine the type of fiber,\n  // because the fiber tag is more specific. An exception is any flag related\n  // to reconcilation, because those can be set on all fiber types.\n\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n\n        if (flags & Update) {\n          try {\n            commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);\n            commitHookEffectListMount(Insertion | HasEffect, finishedWork);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          } // Layout effects are destroyed during the mutation phase so that all\n          // destroy functions for all fibers are called before any create functions.\n          // This prevents sibling component effects from interfering with each other,\n          // e.g. a destroy function in one component should never override a ref set\n          // by a create function in another component during the same commit.\n\n\n          if ( finishedWork.mode & ProfileMode) {\n            try {\n              startLayoutEffectTimer();\n              commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);\n            } catch (error) {\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\n            }\n\n            recordLayoutEffectDuration(finishedWork);\n          } else {\n            try {\n              commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);\n            } catch (error) {\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\n            }\n          }\n        }\n\n        return;\n      }\n\n    case ClassComponent:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n\n        if (flags & Ref) {\n          if (current !== null) {\n            safelyDetachRef(current, current.return);\n          }\n        }\n\n        return;\n      }\n\n    case HostComponent:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n\n        if (flags & Ref) {\n          if (current !== null) {\n            safelyDetachRef(current, current.return);\n          }\n        }\n\n        {\n          // TODO: ContentReset gets cleared by the children during the commit\n          // phase. This is a refactor hazard because it means we must read\n          // flags the flags after `commitReconciliationEffects` has already run;\n          // the order matters. We should refactor so that ContentReset does not\n          // rely on mutating the flag during commit. Like by setting a flag\n          // during the render phase instead.\n          if (finishedWork.flags & ContentReset) {\n            var instance = finishedWork.stateNode;\n\n            try {\n              resetTextContent(instance);\n            } catch (error) {\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\n            }\n          }\n\n          if (flags & Update) {\n            var _instance4 = finishedWork.stateNode;\n\n            if (_instance4 != null) {\n              // Commit the work prepared earlier.\n              var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\n              // as the newProps. The updatePayload will contain the real change in\n              // this case.\n\n              var oldProps = current !== null ? current.memoizedProps : newProps;\n              var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.\n\n              var updatePayload = finishedWork.updateQueue;\n              finishedWork.updateQueue = null;\n\n              if (updatePayload !== null) {\n                try {\n                  commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n              }\n            }\n          }\n        }\n\n        return;\n      }\n\n    case HostText:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n\n        if (flags & Update) {\n          {\n            if (finishedWork.stateNode === null) {\n              throw new Error('This should have a text node initialized. This error is likely ' + 'caused by a bug in React. Please file an issue.');\n            }\n\n            var textInstance = finishedWork.stateNode;\n            var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\n            // as the newProps. The updatePayload will contain the real change in\n            // this case.\n\n            var oldText = current !== null ? current.memoizedProps : newText;\n\n            try {\n              commitTextUpdate(textInstance, oldText, newText);\n            } catch (error) {\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\n            }\n          }\n        }\n\n        return;\n      }\n\n    case HostRoot:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n\n        if (flags & Update) {\n          {\n            if (current !== null) {\n              var prevRootState = current.memoizedState;\n\n              if (prevRootState.isDehydrated) {\n                try {\n                  commitHydratedContainer(root.containerInfo);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n              }\n            }\n          }\n        }\n\n        return;\n      }\n\n    case HostPortal:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n\n        return;\n      }\n\n    case SuspenseComponent:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n        var offscreenFiber = finishedWork.child;\n\n        if (offscreenFiber.flags & Visibility) {\n          var offscreenInstance = offscreenFiber.stateNode;\n          var newState = offscreenFiber.memoizedState;\n          var isHidden = newState !== null; // Track the current state on the Offscreen instance so we can\n          // read it during an event\n\n          offscreenInstance.isHidden = isHidden;\n\n          if (isHidden) {\n            var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;\n\n            if (!wasHidden) {\n              // TODO: Move to passive phase\n              markCommitTimeOfFallback();\n            }\n          }\n        }\n\n        if (flags & Update) {\n          try {\n            commitSuspenseCallback(finishedWork);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n\n          attachSuspenseRetryListeners(finishedWork);\n        }\n\n        return;\n      }\n\n    case OffscreenComponent:\n      {\n        var _wasHidden = current !== null && current.memoizedState !== null;\n\n        if ( // TODO: Remove this dead flag\n         finishedWork.mode & ConcurrentMode) {\n          // Before committing the children, track on the stack whether this\n          // offscreen subtree was already hidden, so that we don't unmount the\n          // effects again.\n          var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || _wasHidden;\n          recursivelyTraverseMutationEffects(root, finishedWork);\n          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n        } else {\n          recursivelyTraverseMutationEffects(root, finishedWork);\n        }\n\n        commitReconciliationEffects(finishedWork);\n\n        if (flags & Visibility) {\n          var _offscreenInstance = finishedWork.stateNode;\n          var _newState = finishedWork.memoizedState;\n\n          var _isHidden = _newState !== null;\n\n          var offscreenBoundary = finishedWork; // Track the current state on the Offscreen instance so we can\n          // read it during an event\n\n          _offscreenInstance.isHidden = _isHidden;\n\n          {\n            if (_isHidden) {\n              if (!_wasHidden) {\n                if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {\n                  nextEffect = offscreenBoundary;\n                  var offscreenChild = offscreenBoundary.child;\n\n                  while (offscreenChild !== null) {\n                    nextEffect = offscreenChild;\n                    disappearLayoutEffects_begin(offscreenChild);\n                    offscreenChild = offscreenChild.sibling;\n                  }\n                }\n              }\n            }\n          }\n\n          {\n            // TODO: This needs to run whenever there's an insertion or update\n            // inside a hidden Offscreen tree.\n            hideOrUnhideAllChildren(offscreenBoundary, _isHidden);\n          }\n        }\n\n        return;\n      }\n\n    case SuspenseListComponent:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n\n        if (flags & Update) {\n          attachSuspenseRetryListeners(finishedWork);\n        }\n\n        return;\n      }\n\n    case ScopeComponent:\n      {\n\n        return;\n      }\n\n    default:\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n        commitReconciliationEffects(finishedWork);\n        return;\n      }\n  }\n}\n\nfunction commitReconciliationEffects(finishedWork) {\n  // Placement effects (insertions, reorders) can be scheduled on any fiber\n  // type. They needs to happen after the children effects have fired, but\n  // before the effects on this fiber have fired.\n  var flags = finishedWork.flags;\n\n  if (flags & Placement) {\n    try {\n      commitPlacement(finishedWork);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    } // Clear the \"placement\" from effect tag so that we know that this is\n    // inserted, before any life-cycles like componentDidMount gets called.\n    // TODO: findDOMNode doesn't rely on this any more but isMounted does\n    // and isMounted is deprecated anyway so we should be able to kill this.\n\n\n    finishedWork.flags &= ~Placement;\n  }\n\n  if (flags & Hydrating) {\n    finishedWork.flags &= ~Hydrating;\n  }\n}\n\nfunction commitLayoutEffects(finishedWork, root, committedLanes) {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n  nextEffect = finishedWork;\n  commitLayoutEffects_begin(finishedWork, root, committedLanes);\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {\n  // Suspense layout effects semantics don't change for legacy roots.\n  var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;\n\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var firstChild = fiber.child;\n\n    if ( fiber.tag === OffscreenComponent && isModernRoot) {\n      // Keep track of the current Offscreen stack's state.\n      var isHidden = fiber.memoizedState !== null;\n      var newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;\n\n      if (newOffscreenSubtreeIsHidden) {\n        // The Offscreen tree is hidden. Skip over its layout effects.\n        commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n        continue;\n      } else {\n        // TODO (Offscreen) Also check: subtreeFlags & LayoutMask\n        var current = fiber.alternate;\n        var wasHidden = current !== null && current.memoizedState !== null;\n        var newOffscreenSubtreeWasHidden = wasHidden || offscreenSubtreeWasHidden;\n        var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;\n        var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden; // Traverse the Offscreen subtree with the current Offscreen as the root.\n\n        offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;\n        offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;\n\n        if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {\n          // This is the root of a reappearing boundary. Turn its layout effects\n          // back on.\n          nextEffect = fiber;\n          reappearLayoutEffects_begin(fiber);\n        }\n\n        var child = firstChild;\n\n        while (child !== null) {\n          nextEffect = child;\n          commitLayoutEffects_begin(child, // New root; bubble back up to here and stop.\n          root, committedLanes);\n          child = child.sibling;\n        } // Restore Offscreen state and resume in our-progress traversal.\n\n\n        nextEffect = fiber;\n        offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n        commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n        continue;\n      }\n    }\n\n    if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n    }\n  }\n}\n\nfunction commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & LayoutMask) !== NoFlags) {\n      var current = fiber.alternate;\n      setCurrentFiber(fiber);\n\n      try {\n        commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\n      } catch (error) {\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n\n      resetCurrentFiber();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction disappearLayoutEffects_begin(subtreeRoot) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var firstChild = fiber.child; // TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)\n\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case MemoComponent:\n      case SimpleMemoComponent:\n        {\n          if ( fiber.mode & ProfileMode) {\n            try {\n              startLayoutEffectTimer();\n              commitHookEffectListUnmount(Layout, fiber, fiber.return);\n            } finally {\n              recordLayoutEffectDuration(fiber);\n            }\n          } else {\n            commitHookEffectListUnmount(Layout, fiber, fiber.return);\n          }\n\n          break;\n        }\n\n      case ClassComponent:\n        {\n          // TODO (Offscreen) Check: flags & RefStatic\n          safelyDetachRef(fiber, fiber.return);\n          var instance = fiber.stateNode;\n\n          if (typeof instance.componentWillUnmount === 'function') {\n            safelyCallComponentWillUnmount(fiber, fiber.return, instance);\n          }\n\n          break;\n        }\n\n      case HostComponent:\n        {\n          safelyDetachRef(fiber, fiber.return);\n          break;\n        }\n\n      case OffscreenComponent:\n        {\n          // Check if this is a\n          var isHidden = fiber.memoizedState !== null;\n\n          if (isHidden) {\n            // Nested Offscreen tree is already hidden. Don't disappear\n            // its effects.\n            disappearLayoutEffects_complete(subtreeRoot);\n            continue;\n          }\n\n          break;\n        }\n    } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic\n\n\n    if (firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      disappearLayoutEffects_complete(subtreeRoot);\n    }\n  }\n}\n\nfunction disappearLayoutEffects_complete(subtreeRoot) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction reappearLayoutEffects_begin(subtreeRoot) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var firstChild = fiber.child;\n\n    if (fiber.tag === OffscreenComponent) {\n      var isHidden = fiber.memoizedState !== null;\n\n      if (isHidden) {\n        // Nested Offscreen tree is still hidden. Don't re-appear its effects.\n        reappearLayoutEffects_complete(subtreeRoot);\n        continue;\n      }\n    } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic\n\n\n    if (firstChild !== null) {\n      // This node may have been reused from a previous render, so we can't\n      // assume its return pointer is correct.\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      reappearLayoutEffects_complete(subtreeRoot);\n    }\n  }\n}\n\nfunction reappearLayoutEffects_complete(subtreeRoot) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect; // TODO (Offscreen) Check: flags & LayoutStatic\n\n    setCurrentFiber(fiber);\n\n    try {\n      reappearLayoutEffectsOnFiber(fiber);\n    } catch (error) {\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n\n    resetCurrentFiber();\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      // This node may have been reused from a previous render, so we can't\n      // assume its return pointer is correct.\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveMountEffects(root, finishedWork, committedLanes, committedTransitions) {\n  nextEffect = finishedWork;\n  commitPassiveMountEffects_begin(finishedWork, root, committedLanes, committedTransitions);\n}\n\nfunction commitPassiveMountEffects_begin(subtreeRoot, root, committedLanes, committedTransitions) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var firstChild = fiber.child;\n\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions);\n    }\n  }\n}\n\nfunction commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentFiber(fiber);\n\n      try {\n        commitPassiveMountOnFiber(root, fiber, committedLanes, committedTransitions);\n      } catch (error) {\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n\n      resetCurrentFiber();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n      {\n        if ( finishedWork.mode & ProfileMode) {\n          startPassiveEffectTimer();\n\n          try {\n            commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n          } finally {\n            recordPassiveEffectDuration(finishedWork);\n          }\n        } else {\n          commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n        }\n\n        break;\n      }\n  }\n}\n\nfunction commitPassiveUnmountEffects(firstChild) {\n  nextEffect = firstChild;\n  commitPassiveUnmountEffects_begin();\n}\n\nfunction commitPassiveUnmountEffects_begin() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var child = fiber.child;\n\n    if ((nextEffect.flags & ChildDeletion) !== NoFlags) {\n      var deletions = fiber.deletions;\n\n      if (deletions !== null) {\n        for (var i = 0; i < deletions.length; i++) {\n          var fiberToDelete = deletions[i];\n          nextEffect = fiberToDelete;\n          commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);\n        }\n\n        {\n          // A fiber was deleted from this parent fiber, but it's still part of\n          // the previous (alternate) parent fiber's list of children. Because\n          // children are a linked list, an earlier sibling that's still alive\n          // will be connected to the deleted fiber via its `alternate`:\n          //\n          //   live fiber\n          //   --alternate--> previous live fiber\n          //   --sibling--> deleted fiber\n          //\n          // We can't disconnect `alternate` on nodes that haven't been deleted\n          // yet, but we can disconnect the `sibling` and `child` pointers.\n          var previousFiber = fiber.alternate;\n\n          if (previousFiber !== null) {\n            var detachedChild = previousFiber.child;\n\n            if (detachedChild !== null) {\n              previousFiber.child = null;\n\n              do {\n                var detachedSibling = detachedChild.sibling;\n                detachedChild.sibling = null;\n                detachedChild = detachedSibling;\n              } while (detachedChild !== null);\n            }\n          }\n        }\n\n        nextEffect = fiber;\n      }\n    }\n\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffects_complete();\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffects_complete() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentFiber(fiber);\n      commitPassiveUnmountOnFiber(fiber);\n      resetCurrentFiber();\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveUnmountOnFiber(finishedWork) {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n      {\n        if ( finishedWork.mode & ProfileMode) {\n          startPassiveEffectTimer();\n          commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);\n          recordPassiveEffectDuration(finishedWork);\n        } else {\n          commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);\n        }\n\n        break;\n      }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect; // Deletion effects fire in parent -> child order\n    // TODO: Check if fiber has a PassiveStatic flag\n\n    setCurrentFiber(fiber);\n    commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);\n    resetCurrentFiber();\n    var child = fiber.child; // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we\n    // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)\n\n    if (child !== null) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var sibling = fiber.sibling;\n    var returnFiber = fiber.return;\n\n    {\n      // Recursively traverse the entire deleted tree and clean up fiber fields.\n      // This is more aggressive than ideal, and the long term goal is to only\n      // have to detach the deleted tree at the root.\n      detachFiberAfterEffects(fiber);\n\n      if (fiber === deletedSubtreeRoot) {\n        nextEffect = null;\n        return;\n      }\n    }\n\n    if (sibling !== null) {\n      sibling.return = returnFiber;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = returnFiber;\n  }\n}\n\nfunction commitPassiveUnmountInsideDeletedTreeOnFiber(current, nearestMountedAncestor) {\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n      {\n        if ( current.mode & ProfileMode) {\n          startPassiveEffectTimer();\n          commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n          recordPassiveEffectDuration(current);\n        } else {\n          commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n        }\n\n        break;\n      }\n  }\n} // TODO: Reuse reappearLayoutEffects traversal here?\n\n\nfunction invokeLayoutEffectMountInDEV(fiber) {\n  {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent:\n        {\n          try {\n            commitHookEffectListMount(Layout | HasEffect, fiber);\n          } catch (error) {\n            captureCommitPhaseError(fiber, fiber.return, error);\n          }\n\n          break;\n        }\n\n      case ClassComponent:\n        {\n          var instance = fiber.stateNode;\n\n          try {\n            instance.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(fiber, fiber.return, error);\n          }\n\n          break;\n        }\n    }\n  }\n}\n\nfunction invokePassiveEffectMountInDEV(fiber) {\n  {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent:\n        {\n          try {\n            commitHookEffectListMount(Passive$1 | HasEffect, fiber);\n          } catch (error) {\n            captureCommitPhaseError(fiber, fiber.return, error);\n          }\n\n          break;\n        }\n    }\n  }\n}\n\nfunction invokeLayoutEffectUnmountInDEV(fiber) {\n  {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent:\n        {\n          try {\n            commitHookEffectListUnmount(Layout | HasEffect, fiber, fiber.return);\n          } catch (error) {\n            captureCommitPhaseError(fiber, fiber.return, error);\n          }\n\n          break;\n        }\n\n      case ClassComponent:\n        {\n          var instance = fiber.stateNode;\n\n          if (typeof instance.componentWillUnmount === 'function') {\n            safelyCallComponentWillUnmount(fiber, fiber.return, instance);\n          }\n\n          break;\n        }\n    }\n  }\n}\n\nfunction invokePassiveEffectUnmountInDEV(fiber) {\n  {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent:\n        {\n          try {\n            commitHookEffectListUnmount(Passive$1 | HasEffect, fiber, fiber.return);\n          } catch (error) {\n            captureCommitPhaseError(fiber, fiber.return, error);\n          }\n        }\n    }\n  }\n}\n\nvar COMPONENT_TYPE = 0;\nvar HAS_PSEUDO_CLASS_TYPE = 1;\nvar ROLE_TYPE = 2;\nvar TEST_NAME_TYPE = 3;\nvar TEXT_TYPE = 4;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  COMPONENT_TYPE = symbolFor('selector.component');\n  HAS_PSEUDO_CLASS_TYPE = symbolFor('selector.has_pseudo_class');\n  ROLE_TYPE = symbolFor('selector.role');\n  TEST_NAME_TYPE = symbolFor('selector.test_id');\n  TEXT_TYPE = symbolFor('selector.text');\n}\nvar commitHooks = [];\nfunction onCommitRoot$1() {\n  {\n    commitHooks.forEach(function (commitHook) {\n      return commitHook();\n    });\n  }\n}\n\nvar ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;\nfunction isLegacyActEnvironment(fiber) {\n  {\n    // Legacy mode. We preserve the behavior of React 17's act. It assumes an\n    // act environment whenever `jest` is defined, but you can still turn off\n    // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly\n    // to false.\n    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\n    typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined; // $FlowExpectedError - Flow doesn't know about jest\n\n    var jestIsDefined = typeof jest !== 'undefined';\n    return  jestIsDefined && isReactActEnvironmentGlobal !== false;\n  }\n}\nfunction isConcurrentActEnvironment() {\n  {\n    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\n    typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined;\n\n    if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {\n      // TODO: Include link to relevant documentation page.\n      error('The current testing environment is not configured to support ' + 'act(...)');\n    }\n\n    return isReactActEnvironmentGlobal;\n  }\n}\n\nvar ceil = Math.ceil;\nvar ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,\n    ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,\n    ReactCurrentBatchConfig$3 = ReactSharedInternals.ReactCurrentBatchConfig,\n    ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;\nvar NoContext =\n/*             */\n0;\nvar BatchedContext =\n/*               */\n1;\nvar RenderContext =\n/*                */\n2;\nvar CommitContext =\n/*                */\n4;\nvar RootInProgress = 0;\nvar RootFatalErrored = 1;\nvar RootErrored = 2;\nvar RootSuspended = 3;\nvar RootSuspendedWithDelay = 4;\nvar RootCompleted = 5;\nvar RootDidNotComplete = 6; // Describes where we are in the React execution stack\n\nvar executionContext = NoContext; // The root we're working on\n\nvar workInProgressRoot = null; // The fiber we're working on\n\nvar workInProgress = null; // The lanes we're rendering\n\nvar workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree\n// This is a superset of the lanes we started working on at the root. The only\n// case where it's different from `workInProgressRootRenderLanes` is when we\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\n// Offscreen component.\n//\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\n\nvar subtreeRenderLanes = NoLanes;\nvar subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.\n\nvar workInProgressRootExitStatus = RootInProgress; // A fatal error, if one is thrown\n\nvar workInProgressRootFatalError = null; // \"Included\" lanes refer to lanes that were worked on during this render. It's\n// slightly different than `renderLanes` because `renderLanes` can change as you\n// enter and exit an Offscreen tree. This value is the combination of all render\n// lanes for the entire render phase.\n\nvar workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only\n// includes unprocessed updates, not work in bailed out children.\n\nvar workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.\n\nvar workInProgressRootInterleavedUpdatedLanes = NoLanes; // Lanes that were updated during the render phase (*not* an interleaved event).\n\nvar workInProgressRootPingedLanes = NoLanes; // Errors that are thrown during the render phase.\n\nvar workInProgressRootConcurrentErrors = null; // These are errors that we recovered from without surfacing them to the UI.\n// We will log them once the tree commits.\n\nvar workInProgressRootRecoverableErrors = null; // The most recent time we committed a fallback. This lets us ensure a train\n// model where we don't commit new loading states in too quick succession.\n\nvar globalMostRecentFallbackTime = 0;\nvar FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering\n// more and prefer CPU suspense heuristics instead.\n\nvar workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU\n// suspense heuristics and opt out of rendering more content.\n\nvar RENDER_TIMEOUT_MS = 500;\nvar workInProgressTransitions = null;\n\nfunction resetRenderTimer() {\n  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n}\n\nfunction getRenderTargetTime() {\n  return workInProgressRootRenderTargetTime;\n}\nvar hasUncaughtError = false;\nvar firstUncaughtError = null;\nvar legacyErrorBoundariesThatAlreadyFailed = null; // Only used when enableProfilerNestedUpdateScheduledHook is true;\nvar rootDoesHavePassiveEffects = false;\nvar rootWithPendingPassiveEffects = null;\nvar pendingPassiveEffectsLanes = NoLanes;\nvar pendingPassiveProfilerEffects = [];\nvar pendingPassiveTransitions = null; // Use these to prevent an infinite loop of nested updates\n\nvar NESTED_UPDATE_LIMIT = 50;\nvar nestedUpdateCount = 0;\nvar rootWithNestedUpdates = null;\nvar isFlushingPassiveEffects = false;\nvar didScheduleUpdateDuringPassiveEffects = false;\nvar NESTED_PASSIVE_UPDATE_LIMIT = 50;\nvar nestedPassiveUpdateCount = 0;\nvar rootWithPassiveNestedUpdates = null; // If two updates are scheduled within the same event, we should treat their\n// event times as simultaneous, even if the actual clock time has advanced\n// between the first and second call.\n\nvar currentEventTime = NoTimestamp;\nvar currentEventTransitionLane = NoLanes;\nvar isRunningInsertionEffect = false;\nfunction getWorkInProgressRoot() {\n  return workInProgressRoot;\n}\nfunction requestEventTime() {\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    // We're inside React, so it's fine to read the actual time.\n    return now();\n  } // We're not inside React, so we may be in the middle of a browser event.\n\n\n  if (currentEventTime !== NoTimestamp) {\n    // Use the same start time for all updates until we enter React again.\n    return currentEventTime;\n  } // This is the first update since React yielded. Compute a new start time.\n\n\n  currentEventTime = now();\n  return currentEventTime;\n}\nfunction requestUpdateLane(fiber) {\n  // Special cases\n  var mode = fiber.mode;\n\n  if ((mode & ConcurrentMode) === NoMode) {\n    return SyncLane;\n  } else if ( (executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) {\n    // This is a render phase update. These are not officially supported. The\n    // old behavior is to give this the same \"thread\" (lanes) as\n    // whatever is currently rendering. So if you call `setState` on a component\n    // that happens later in the same render, it will flush. Ideally, we want to\n    // remove the special case and treat them as if they came from an\n    // interleaved event. Regardless, this pattern is not officially supported.\n    // This behavior is only a fallback. The flag only exists until we can roll\n    // out the setState warning, since existing code might accidentally rely on\n    // the current behavior.\n    return pickArbitraryLane(workInProgressRootRenderLanes);\n  }\n\n  var isTransition = requestCurrentTransition() !== NoTransition;\n\n  if (isTransition) {\n    if ( ReactCurrentBatchConfig$3.transition !== null) {\n      var transition = ReactCurrentBatchConfig$3.transition;\n\n      if (!transition._updatedFibers) {\n        transition._updatedFibers = new Set();\n      }\n\n      transition._updatedFibers.add(fiber);\n    } // The algorithm for assigning an update to a lane should be stable for all\n    // updates at the same priority within the same event. To do this, the\n    // inputs to the algorithm must be the same.\n    //\n    // The trick we use is to cache the first of each of these inputs within an\n    // event. Then reset the cached values once we can be sure the event is\n    // over. Our heuristic for that is whenever we enter a concurrent work loop.\n\n\n    if (currentEventTransitionLane === NoLane) {\n      // All transitions within the same event are assigned the same lane.\n      currentEventTransitionLane = claimNextTransitionLane();\n    }\n\n    return currentEventTransitionLane;\n  } // Updates originating inside certain React methods, like flushSync, have\n  // their priority set by tracking it with a context variable.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n\n\n  var updateLane = getCurrentUpdatePriority();\n\n  if (updateLane !== NoLane) {\n    return updateLane;\n  } // This update originated outside React. Ask the host environment for an\n  // appropriate priority, based on the type of event.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n\n\n  var eventLane = getCurrentEventPriority();\n  return eventLane;\n}\n\nfunction requestRetryLane(fiber) {\n  // This is a fork of `requestUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n  // Special cases\n  var mode = fiber.mode;\n\n  if ((mode & ConcurrentMode) === NoMode) {\n    return SyncLane;\n  }\n\n  return claimNextRetryLane();\n}\n\nfunction scheduleUpdateOnFiber(root, fiber, lane, eventTime) {\n  checkForNestedUpdates();\n\n  {\n    if (isRunningInsertionEffect) {\n      error('useInsertionEffect must not schedule updates.');\n    }\n  }\n\n  {\n    if (isFlushingPassiveEffects) {\n      didScheduleUpdateDuringPassiveEffects = true;\n    }\n  } // Mark that the root has a pending update.\n\n\n  markRootUpdated(root, lane, eventTime);\n\n  if ((executionContext & RenderContext) !== NoLanes && root === workInProgressRoot) {\n    // This update was dispatched during the render phase. This is a mistake\n    // if the update originates from user space (with the exception of local\n    // hook updates, which are handled differently and don't reach this\n    // function), but there are some internal React features that use this as\n    // an implementation detail, like selective hydration.\n    warnAboutRenderPhaseUpdatesInDEV(fiber); // Track lanes that were updated during the render phase\n  } else {\n    // This is a normal update, scheduled from outside the render phase. For\n    // example, during an input event.\n    {\n      if (isDevToolsPresent) {\n        addFiberToLanesMap(root, fiber, lane);\n      }\n    }\n\n    warnIfUpdatesNotWrappedWithActDEV(fiber);\n\n    if (root === workInProgressRoot) {\n      // Received an update to a tree that's in the middle of rendering. Mark\n      // that there was an interleaved update work on this root. Unless the\n      // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\n      // phase update. In that case, we don't treat render phase updates as if\n      // they were interleaved, for backwards compat reasons.\n      if ( (executionContext & RenderContext) === NoContext) {\n        workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);\n      }\n\n      if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n        // The root already suspended with a delay, which means this render\n        // definitely won't finish. Since we have a new update, let's mark it as\n        // suspended now, right before marking the incoming update. This has the\n        // effect of interrupting the current render and switching to the update.\n        // TODO: Make sure this doesn't override pings that happen while we've\n        // already started rendering.\n        markRootSuspended$1(root, workInProgressRootRenderLanes);\n      }\n    }\n\n    ensureRootIsScheduled(root, eventTime);\n\n    if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n    !( ReactCurrentActQueue$1.isBatchingLegacy)) {\n      // Flush the synchronous work now, unless we're already working or inside\n      // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\n      // scheduleCallbackForFiber to preserve the ability to schedule a callback\n      // without immediately flushing it. We only do this for user-initiated\n      // updates, to preserve historical behavior of legacy mode.\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n}\nfunction scheduleInitialHydrationOnRoot(root, lane, eventTime) {\n  // This is a special fork of scheduleUpdateOnFiber that is only used to\n  // schedule the initial hydration of a root that has just been created. Most\n  // of the stuff in scheduleUpdateOnFiber can be skipped.\n  //\n  // The main reason for this separate path, though, is to distinguish the\n  // initial children from subsequent updates. In fully client-rendered roots\n  // (createRoot instead of hydrateRoot), all top-level renders are modeled as\n  // updates, but hydration roots are special because the initial render must\n  // match what was rendered on the server.\n  var current = root.current;\n  current.lanes = lane;\n  markRootUpdated(root, lane, eventTime);\n  ensureRootIsScheduled(root, eventTime);\n}\nfunction isUnsafeClassRenderPhaseUpdate(fiber) {\n  // Check if this is a render phase update. Only called by class components,\n  // which special (deprecated) behavior for UNSAFE_componentWillReceive props.\n  return (// TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We\n    // decided not to enable it.\n     (executionContext & RenderContext) !== NoContext\n  );\n} // Use this function to schedule a task for a root. There's only one task per\n// root; if a task was already scheduled, we'll check to make sure the priority\n// of the existing task is the same as the priority of the next level that the\n// root has work on. This function is called on every update, and right before\n// exiting a task.\n\nfunction ensureRootIsScheduled(root, currentTime) {\n  var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as\n  // expired so we know to work on those next.\n\n  markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.\n\n  var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\n\n  if (nextLanes === NoLanes) {\n    // Special case: There's nothing to work on.\n    if (existingCallbackNode !== null) {\n      cancelCallback$1(existingCallbackNode);\n    }\n\n    root.callbackNode = null;\n    root.callbackPriority = NoLane;\n    return;\n  } // We use the highest priority lane to represent the priority of the callback.\n\n\n  var newCallbackPriority = getHighestPriorityLane(nextLanes); // Check if there's an existing task. We may be able to reuse it.\n\n  var existingCallbackPriority = root.callbackPriority;\n\n  if (existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a\n  // Scheduler task, rather than an `act` task, cancel it and re-scheduled\n  // on the `act` queue.\n  !( ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {\n    {\n      // If we're going to re-use an existing task, it needs to exist.\n      // Assume that discrete update microtasks are non-cancellable and null.\n      // TODO: Temporary until we confirm this warning is not fired.\n      if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) {\n        error('Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.');\n      }\n    } // The priority hasn't changed. We can reuse the existing task. Exit.\n\n\n    return;\n  }\n\n  if (existingCallbackNode != null) {\n    // Cancel the existing callback. We'll schedule a new one below.\n    cancelCallback$1(existingCallbackNode);\n  } // Schedule a new callback.\n\n\n  var newCallbackNode;\n\n  if (newCallbackPriority === SyncLane) {\n    // Special case: Sync React callbacks are scheduled on a special\n    // internal queue\n    if (root.tag === LegacyRoot) {\n      if ( ReactCurrentActQueue$1.isBatchingLegacy !== null) {\n        ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;\n      }\n\n      scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\n    } else {\n      scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n    }\n\n    {\n      // Flush the queue in a microtask.\n      if ( ReactCurrentActQueue$1.current !== null) {\n        // Inside `act`, use our internal `act` queue so that these get flushed\n        // at the end of the current scope even when using the sync version\n        // of `act`.\n        ReactCurrentActQueue$1.current.push(flushSyncCallbacks);\n      } else {\n        scheduleMicrotask(function () {\n          // In Safari, appending an iframe forces microtasks to run.\n          // https://github.com/facebook/react/issues/22459\n          // We don't support running callbacks in the middle of render\n          // or commit so we need to check against that.\n          if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n            // Note that this would still prematurely flush the callbacks\n            // if this happens outside render or commit phase (e.g. in an event).\n            flushSyncCallbacks();\n          }\n        });\n      }\n    }\n\n    newCallbackNode = null;\n  } else {\n    var schedulerPriorityLevel;\n\n    switch (lanesToEventPriority(nextLanes)) {\n      case DiscreteEventPriority:\n        schedulerPriorityLevel = ImmediatePriority;\n        break;\n\n      case ContinuousEventPriority:\n        schedulerPriorityLevel = UserBlockingPriority;\n        break;\n\n      case DefaultEventPriority:\n        schedulerPriorityLevel = NormalPriority;\n        break;\n\n      case IdleEventPriority:\n        schedulerPriorityLevel = IdlePriority;\n        break;\n\n      default:\n        schedulerPriorityLevel = NormalPriority;\n        break;\n    }\n\n    newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));\n  }\n\n  root.callbackPriority = newCallbackPriority;\n  root.callbackNode = newCallbackNode;\n} // This is the entry point for every concurrent task, i.e. anything that\n// goes through Scheduler.\n\n\nfunction performConcurrentWorkOnRoot(root, didTimeout) {\n  {\n    resetNestedUpdateFlag();\n  } // Since we know we're in a React event, we can clear the current\n  // event time. The next update will compute a new event time.\n\n\n  currentEventTime = NoTimestamp;\n  currentEventTransitionLane = NoLanes;\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Should not already be working.');\n  } // Flush any pending passive effects before deciding which lanes to work on,\n  // in case they schedule additional work.\n\n\n  var originalCallbackNode = root.callbackNode;\n  var didFlushPassiveEffects = flushPassiveEffects();\n\n  if (didFlushPassiveEffects) {\n    // Something in the passive effect phase may have canceled the current task.\n    // Check if the task node for this root was changed.\n    if (root.callbackNode !== originalCallbackNode) {\n      // The current task was canceled. Exit. We don't need to call\n      // `ensureRootIsScheduled` because the check above implies either that\n      // there's a new task, or that there's no remaining work on this root.\n      return null;\n    }\n  } // Determine the next lanes to work on, using the fields stored\n  // on the root.\n\n\n  var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\n\n  if (lanes === NoLanes) {\n    // Defensive coding. This is never expected to happen.\n    return null;\n  } // We disable time-slicing in some cases: if the work has been CPU-bound\n  // for too long (\"expired\" work, to prevent starvation), or we're in\n  // sync-updates-by-default mode.\n  // TODO: We only check `didTimeout` defensively, to account for a Scheduler\n  // bug we're still investigating. Once the bug in Scheduler is fixed,\n  // we can remove this, since we track expiration ourselves.\n\n\n  var shouldTimeSlice = !includesBlockingLane(root, lanes) && !includesExpiredLane(root, lanes) && ( !didTimeout);\n  var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);\n\n  if (exitStatus !== RootInProgress) {\n    if (exitStatus === RootErrored) {\n      // If something threw an error, try rendering one more time. We'll\n      // render synchronously to block concurrent data mutations, and we'll\n      // includes all pending updates are included. If it still fails after\n      // the second attempt, we'll give up and commit the resulting tree.\n      var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n      if (errorRetryLanes !== NoLanes) {\n        lanes = errorRetryLanes;\n        exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n      }\n    }\n\n    if (exitStatus === RootFatalErrored) {\n      var fatalError = workInProgressRootFatalError;\n      prepareFreshStack(root, NoLanes);\n      markRootSuspended$1(root, lanes);\n      ensureRootIsScheduled(root, now());\n      throw fatalError;\n    }\n\n    if (exitStatus === RootDidNotComplete) {\n      // The render unwound without completing the tree. This happens in special\n      // cases where need to exit the current render without producing a\n      // consistent tree or committing.\n      //\n      // This should only happen during a concurrent render, not a discrete or\n      // synchronous update. We should have already checked for this when we\n      // unwound the stack.\n      markRootSuspended$1(root, lanes);\n    } else {\n      // The render completed.\n      // Check if this render may have yielded to a concurrent event, and if so,\n      // confirm that any newly rendered stores are consistent.\n      // TODO: It's possible that even a concurrent render may never have yielded\n      // to the main thread, if it was fast enough, or if it expired. We could\n      // skip the consistency check in that case, too.\n      var renderWasConcurrent = !includesBlockingLane(root, lanes);\n      var finishedWork = root.current.alternate;\n\n      if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {\n        // A store was mutated in an interleaved event. Render again,\n        // synchronously, to block further mutations.\n        exitStatus = renderRootSync(root, lanes); // We need to check again if something threw\n\n        if (exitStatus === RootErrored) {\n          var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n          if (_errorRetryLanes !== NoLanes) {\n            lanes = _errorRetryLanes;\n            exitStatus = recoverFromConcurrentError(root, _errorRetryLanes); // We assume the tree is now consistent because we didn't yield to any\n            // concurrent events.\n          }\n        }\n\n        if (exitStatus === RootFatalErrored) {\n          var _fatalError = workInProgressRootFatalError;\n          prepareFreshStack(root, NoLanes);\n          markRootSuspended$1(root, lanes);\n          ensureRootIsScheduled(root, now());\n          throw _fatalError;\n        }\n      } // We now have a consistent tree. The next step is either to commit it,\n      // or, if something suspended, wait to commit it after a timeout.\n\n\n      root.finishedWork = finishedWork;\n      root.finishedLanes = lanes;\n      finishConcurrentRender(root, exitStatus, lanes);\n    }\n  }\n\n  ensureRootIsScheduled(root, now());\n\n  if (root.callbackNode === originalCallbackNode) {\n    // The task node scheduled for this root is the same one that's\n    // currently executed. Need to return a continuation.\n    return performConcurrentWorkOnRoot.bind(null, root);\n  }\n\n  return null;\n}\n\nfunction recoverFromConcurrentError(root, errorRetryLanes) {\n  // If an error occurred during hydration, discard server response and fall\n  // back to client side render.\n  // Before rendering again, save the errors from the previous attempt.\n  var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;\n\n  if (isRootDehydrated(root)) {\n    // The shell failed to hydrate. Set a flag to force a client rendering\n    // during the next attempt. To do this, we call prepareFreshStack now\n    // to create the root work-in-progress fiber. This is a bit weird in terms\n    // of factoring, because it relies on renderRootSync not calling\n    // prepareFreshStack again in the call below, which happens because the\n    // root and lanes haven't changed.\n    //\n    // TODO: I think what we should do is set ForceClientRender inside\n    // throwException, like we do for nested Suspense boundaries. The reason\n    // it's here instead is so we can switch to the synchronous work loop, too.\n    // Something to consider for a future refactor.\n    var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);\n    rootWorkInProgress.flags |= ForceClientRender;\n\n    {\n      errorHydratingContainer(root.containerInfo);\n    }\n  }\n\n  var exitStatus = renderRootSync(root, errorRetryLanes);\n\n  if (exitStatus !== RootErrored) {\n    // Successfully finished rendering on retry\n    // The errors from the failed first attempt have been recovered. Add\n    // them to the collection of recoverable errors. We'll log them in the\n    // commit phase.\n    var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;\n    workInProgressRootRecoverableErrors = errorsFromFirstAttempt; // The errors from the second attempt should be queued after the errors\n    // from the first attempt, to preserve the causal sequence.\n\n    if (errorsFromSecondAttempt !== null) {\n      queueRecoverableErrors(errorsFromSecondAttempt);\n    }\n  }\n\n  return exitStatus;\n}\n\nfunction queueRecoverableErrors(errors) {\n  if (workInProgressRootRecoverableErrors === null) {\n    workInProgressRootRecoverableErrors = errors;\n  } else {\n    workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);\n  }\n}\n\nfunction finishConcurrentRender(root, exitStatus, lanes) {\n  switch (exitStatus) {\n    case RootInProgress:\n    case RootFatalErrored:\n      {\n        throw new Error('Root did not complete. This is a bug in React.');\n      }\n    // Flow knows about invariant, so it complains if I add a break\n    // statement, but eslint doesn't know about invariant, so it complains\n    // if I do. eslint-disable-next-line no-fallthrough\n\n    case RootErrored:\n      {\n        // We should have already attempted to retry this tree. If we reached\n        // this point, it errored again. Commit it.\n        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n        break;\n      }\n\n    case RootSuspended:\n      {\n        markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we\n        // should immediately commit it or wait a bit.\n\n        if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope\n        !shouldForceFlushFallbacksInDEV()) {\n          // This render only included retries, no updates. Throttle committing\n          // retries so that we don't show too many loading states too quickly.\n          var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.\n\n          if (msUntilTimeout > 10) {\n            var nextLanes = getNextLanes(root, NoLanes);\n\n            if (nextLanes !== NoLanes) {\n              // There's additional work on this root.\n              break;\n            }\n\n            var suspendedLanes = root.suspendedLanes;\n\n            if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n              // We should prefer to render the fallback of at the last\n              // suspended level. Ping the last suspended level to try\n              // rendering it again.\n              // FIXME: What if the suspended lanes are Idle? Should not restart.\n              var eventTime = requestEventTime();\n              markRootPinged(root, suspendedLanes);\n              break;\n            } // The render is suspended, it hasn't timed out, and there's no\n            // lower priority work to do. Instead of committing the fallback\n            // immediately, wait for more data to arrive.\n\n\n            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);\n            break;\n          }\n        } // The work expired. Commit immediately.\n\n\n        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n        break;\n      }\n\n    case RootSuspendedWithDelay:\n      {\n        markRootSuspended$1(root, lanes);\n\n        if (includesOnlyTransitions(lanes)) {\n          // This is a transition, so we should exit without committing a\n          // placeholder and without scheduling a timeout. Delay indefinitely\n          // until we receive more data.\n          break;\n        }\n\n        if (!shouldForceFlushFallbacksInDEV()) {\n          // This is not a transition, but we did trigger an avoided state.\n          // Schedule a placeholder to display after a short delay, using the Just\n          // Noticeable Difference.\n          // TODO: Is the JND optimization worth the added complexity? If this is\n          // the only reason we track the event time, then probably not.\n          // Consider removing.\n          var mostRecentEventTime = getMostRecentEventTime(root, lanes);\n          var eventTimeMs = mostRecentEventTime;\n          var timeElapsedMs = now() - eventTimeMs;\n\n          var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.\n\n\n          if (_msUntilTimeout > 10) {\n            // Instead of committing the fallback immediately, wait for more data\n            // to arrive.\n            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);\n            break;\n          }\n        } // Commit the placeholder.\n\n\n        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n        break;\n      }\n\n    case RootCompleted:\n      {\n        // The work completed. Ready to commit.\n        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n        break;\n      }\n\n    default:\n      {\n        throw new Error('Unknown root exit status.');\n      }\n  }\n}\n\nfunction isRenderConsistentWithExternalStores(finishedWork) {\n  // Search the rendered tree for external store reads, and check whether the\n  // stores were mutated in a concurrent event. Intentionally using an iterative\n  // loop instead of recursion so we can exit early.\n  var node = finishedWork;\n\n  while (true) {\n    if (node.flags & StoreConsistency) {\n      var updateQueue = node.updateQueue;\n\n      if (updateQueue !== null) {\n        var checks = updateQueue.stores;\n\n        if (checks !== null) {\n          for (var i = 0; i < checks.length; i++) {\n            var check = checks[i];\n            var getSnapshot = check.getSnapshot;\n            var renderedValue = check.value;\n\n            try {\n              if (!objectIs(getSnapshot(), renderedValue)) {\n                // Found an inconsistent store.\n                return false;\n              }\n            } catch (error) {\n              // If `getSnapshot` throws, return `false`. This will schedule\n              // a re-render, and the error will be rethrown during render.\n              return false;\n            }\n          }\n        }\n      }\n    }\n\n    var child = node.child;\n\n    if (node.subtreeFlags & StoreConsistency && child !== null) {\n      child.return = node;\n      node = child;\n      continue;\n    }\n\n    if (node === finishedWork) {\n      return true;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === finishedWork) {\n        return true;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  } // Flow doesn't know this is unreachable, but eslint does\n  // eslint-disable-next-line no-unreachable\n\n\n  return true;\n}\n\nfunction markRootSuspended$1(root, suspendedLanes) {\n  // When suspending, we should always exclude lanes that were pinged or (more\n  // rarely, since we try to avoid it) updated during the render phase.\n  // TODO: Lol maybe there's a better way to factor this besides this\n  // obnoxiously named function :)\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);\n  markRootSuspended(root, suspendedLanes);\n} // This is the entry point for synchronous tasks that don't go\n// through Scheduler\n\n\nfunction performSyncWorkOnRoot(root) {\n  {\n    syncNestedUpdateFlag();\n  }\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Should not already be working.');\n  }\n\n  flushPassiveEffects();\n  var lanes = getNextLanes(root, NoLanes);\n\n  if (!includesSomeLane(lanes, SyncLane)) {\n    // There's no remaining sync work left.\n    ensureRootIsScheduled(root, now());\n    return null;\n  }\n\n  var exitStatus = renderRootSync(root, lanes);\n\n  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n    // If something threw an error, try rendering one more time. We'll render\n    // synchronously to block concurrent data mutations, and we'll includes\n    // all pending updates are included. If it still fails after the second\n    // attempt, we'll give up and commit the resulting tree.\n    var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n    if (errorRetryLanes !== NoLanes) {\n      lanes = errorRetryLanes;\n      exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n    }\n  }\n\n  if (exitStatus === RootFatalErrored) {\n    var fatalError = workInProgressRootFatalError;\n    prepareFreshStack(root, NoLanes);\n    markRootSuspended$1(root, lanes);\n    ensureRootIsScheduled(root, now());\n    throw fatalError;\n  }\n\n  if (exitStatus === RootDidNotComplete) {\n    throw new Error('Root did not complete. This is a bug in React.');\n  } // We now have a consistent tree. Because this is a sync render, we\n  // will commit it even if something suspended.\n\n\n  var finishedWork = root.current.alternate;\n  root.finishedWork = finishedWork;\n  root.finishedLanes = lanes;\n  commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions); // Before exiting, make sure there's a callback scheduled for the next\n  // pending level.\n\n  ensureRootIsScheduled(root, now());\n  return null;\n}\n\nfunction flushRoot(root, lanes) {\n  if (lanes !== NoLanes) {\n    markRootEntangled(root, mergeLanes(lanes, SyncLane));\n    ensureRootIsScheduled(root, now());\n\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n      resetRenderTimer();\n      flushSyncCallbacks();\n    }\n  }\n}\nfunction batchedUpdates$1(fn, a) {\n  var prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext; // If there were legacy sync updates, flush them at the end of the outer\n    // most batchedUpdates-like method.\n\n    if (executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n    !( ReactCurrentActQueue$1.isBatchingLegacy)) {\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n}\nfunction discreteUpdates(fn, a, b, c, d) {\n  var previousPriority = getCurrentUpdatePriority();\n  var prevTransition = ReactCurrentBatchConfig$3.transition;\n\n  try {\n    ReactCurrentBatchConfig$3.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    return fn(a, b, c, d);\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$3.transition = prevTransition;\n\n    if (executionContext === NoContext) {\n      resetRenderTimer();\n    }\n  }\n} // Overload the definition to the two valid signatures.\n// Warning, this opts-out of checking the function body.\n\n// eslint-disable-next-line no-redeclare\nfunction flushSync(fn) {\n  // In legacy mode, we flush pending passive effects at the beginning of the\n  // next event, not at the end of the previous one.\n  if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) {\n    flushPassiveEffects();\n  }\n\n  var prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  var prevTransition = ReactCurrentBatchConfig$3.transition;\n  var previousPriority = getCurrentUpdatePriority();\n\n  try {\n    ReactCurrentBatchConfig$3.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n\n    if (fn) {\n      return fn();\n    } else {\n      return undefined;\n    }\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$3.transition = prevTransition;\n    executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.\n    // Note that this will happen even if batchedUpdates is higher up\n    // the stack.\n\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n      flushSyncCallbacks();\n    }\n  }\n}\nfunction isAlreadyRendering() {\n  // Used by the renderer to print a warning if certain APIs are called from\n  // the wrong context.\n  return  (executionContext & (RenderContext | CommitContext)) !== NoContext;\n}\nfunction pushRenderLanes(fiber, lanes) {\n  push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n  workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);\n}\nfunction popRenderLanes(fiber) {\n  subtreeRenderLanes = subtreeRenderLanesCursor.current;\n  pop(subtreeRenderLanesCursor, fiber);\n}\n\nfunction prepareFreshStack(root, lanes) {\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n  var timeoutHandle = root.timeoutHandle;\n\n  if (timeoutHandle !== noTimeout) {\n    // The root previous suspended and scheduled a timeout to commit a fallback\n    // state. Now that we have additional work, cancel the timeout.\n    root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n\n    cancelTimeout(timeoutHandle);\n  }\n\n  if (workInProgress !== null) {\n    var interruptedWork = workInProgress.return;\n\n    while (interruptedWork !== null) {\n      var current = interruptedWork.alternate;\n      unwindInterruptedWork(current, interruptedWork);\n      interruptedWork = interruptedWork.return;\n    }\n  }\n\n  workInProgressRoot = root;\n  var rootWorkInProgress = createWorkInProgress(root.current, null);\n  workInProgress = rootWorkInProgress;\n  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n  workInProgressRootExitStatus = RootInProgress;\n  workInProgressRootFatalError = null;\n  workInProgressRootSkippedLanes = NoLanes;\n  workInProgressRootInterleavedUpdatedLanes = NoLanes;\n  workInProgressRootPingedLanes = NoLanes;\n  workInProgressRootConcurrentErrors = null;\n  workInProgressRootRecoverableErrors = null;\n  finishQueueingConcurrentUpdates();\n\n  {\n    ReactStrictModeWarnings.discardPendingWarnings();\n  }\n\n  return rootWorkInProgress;\n}\n\nfunction handleError(root, thrownValue) {\n  do {\n    var erroredWork = workInProgress;\n\n    try {\n      // Reset module-level state that was set during the render phase.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      resetCurrentFiber(); // TODO: I found and added this missing line while investigating a\n      // separate issue. Write a regression test using string refs.\n\n      ReactCurrentOwner$2.current = null;\n\n      if (erroredWork === null || erroredWork.return === null) {\n        // Expected to be working on a non-root fiber. This is a fatal error\n        // because there's no ancestor that can handle it; the root is\n        // supposed to capture all errors that weren't caught by an error\n        // boundary.\n        workInProgressRootExitStatus = RootFatalErrored;\n        workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next\n        // sibling, or the parent if there are no siblings. But since the root\n        // has no siblings nor a parent, we set it to null. Usually this is\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\n        // intentionally not calling those, we need set it here.\n        // TODO: Consider calling `unwindWork` to pop the contexts.\n\n        workInProgress = null;\n        return;\n      }\n\n      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n        // Record the time spent rendering before an error was thrown. This\n        // avoids inaccurate Profiler durations in the case of a\n        // suspended render.\n        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n      }\n\n      if (enableSchedulingProfiler) {\n        markComponentRenderStopped();\n\n        if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {\n          var wakeable = thrownValue;\n          markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);\n        } else {\n          markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);\n        }\n      }\n\n      throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);\n      completeUnitOfWork(erroredWork);\n    } catch (yetAnotherThrownValue) {\n      // Something in the return path also threw.\n      thrownValue = yetAnotherThrownValue;\n\n      if (workInProgress === erroredWork && erroredWork !== null) {\n        // If this boundary has already errored, then we had trouble processing\n        // the error. Bubble it to the next boundary.\n        erroredWork = erroredWork.return;\n        workInProgress = erroredWork;\n      } else {\n        erroredWork = workInProgress;\n      }\n\n      continue;\n    } // Return to the normal work loop.\n\n\n    return;\n  } while (true);\n}\n\nfunction pushDispatcher() {\n  var prevDispatcher = ReactCurrentDispatcher$2.current;\n  ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;\n\n  if (prevDispatcher === null) {\n    // The React isomorphic package does not include a default dispatcher.\n    // Instead the first renderer will lazily attach one, in order to give\n    // nicer error messages.\n    return ContextOnlyDispatcher;\n  } else {\n    return prevDispatcher;\n  }\n}\n\nfunction popDispatcher(prevDispatcher) {\n  ReactCurrentDispatcher$2.current = prevDispatcher;\n}\n\nfunction markCommitTimeOfFallback() {\n  globalMostRecentFallbackTime = now();\n}\nfunction markSkippedUpdateLanes(lane) {\n  workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);\n}\nfunction renderDidSuspend() {\n  if (workInProgressRootExitStatus === RootInProgress) {\n    workInProgressRootExitStatus = RootSuspended;\n  }\n}\nfunction renderDidSuspendDelayIfPossible() {\n  if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) {\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\n  } // Check if there are updates that we skipped tree that might have unblocked\n  // this render.\n\n\n  if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) {\n    // Mark the current render as suspended so that we switch to working on\n    // the updates that were skipped. Usually we only suspend at the end of\n    // the render phase.\n    // TODO: We should probably always mark the root as suspended immediately\n    // (inside this function), since by suspending at the end of the render\n    // phase introduces a potential mistake where we suspend lanes that were\n    // pinged or updated while we were rendering.\n    markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);\n  }\n}\nfunction renderDidError(error) {\n  if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {\n    workInProgressRootExitStatus = RootErrored;\n  }\n\n  if (workInProgressRootConcurrentErrors === null) {\n    workInProgressRootConcurrentErrors = [error];\n  } else {\n    workInProgressRootConcurrentErrors.push(error);\n  }\n} // Called during render to determine if anything has suspended.\n// Returns false if we're not sure.\n\nfunction renderHasNotSuspendedYet() {\n  // If something errored or completed, we can't really be sure,\n  // so those are false.\n  return workInProgressRootExitStatus === RootInProgress;\n}\n\nfunction renderRootSync(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    {\n      if (isDevToolsPresent) {\n        var memoizedUpdaters = root.memoizedUpdaters;\n\n        if (memoizedUpdaters.size > 0) {\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\n          memoizedUpdaters.clear();\n        } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n        // If we bailout on this work, we'll move them back (like above).\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n        // That way we can keep the current update and future updates separate.\n\n\n        movePendingFibersToMemoized(root, lanes);\n      }\n    }\n\n    workInProgressTransitions = getTransitionsForLanes();\n    prepareFreshStack(root, lanes);\n  }\n\n  {\n    markRenderStarted(lanes);\n  }\n\n  do {\n    try {\n      workLoopSync();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n\n  resetContextDependencies();\n  executionContext = prevExecutionContext;\n  popDispatcher(prevDispatcher);\n\n  if (workInProgress !== null) {\n    // This is a sync render, so we should have finished the whole tree.\n    throw new Error('Cannot commit an incomplete root. This error is likely caused by a ' + 'bug in React. Please file an issue.');\n  }\n\n  {\n    markRenderStopped();\n  } // Set this to null to indicate there's no in-progress render.\n\n\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = NoLanes;\n  return workInProgressRootExitStatus;\n} // The work loop is an extremely hot path. Tell Closure not to inline it.\n\n/** @noinline */\n\n\nfunction workLoopSync() {\n  // Already timed out, so perform work without checking if we need to yield.\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction renderRootConcurrent(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    {\n      if (isDevToolsPresent) {\n        var memoizedUpdaters = root.memoizedUpdaters;\n\n        if (memoizedUpdaters.size > 0) {\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\n          memoizedUpdaters.clear();\n        } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n        // If we bailout on this work, we'll move them back (like above).\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n        // That way we can keep the current update and future updates separate.\n\n\n        movePendingFibersToMemoized(root, lanes);\n      }\n    }\n\n    workInProgressTransitions = getTransitionsForLanes();\n    resetRenderTimer();\n    prepareFreshStack(root, lanes);\n  }\n\n  {\n    markRenderStarted(lanes);\n  }\n\n  do {\n    try {\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n\n  resetContextDependencies();\n  popDispatcher(prevDispatcher);\n  executionContext = prevExecutionContext;\n\n\n  if (workInProgress !== null) {\n    // Still work remaining.\n    {\n      markRenderYielded();\n    }\n\n    return RootInProgress;\n  } else {\n    // Completed the tree.\n    {\n      markRenderStopped();\n    } // Set this to null to indicate there's no in-progress render.\n\n\n    workInProgressRoot = null;\n    workInProgressRootRenderLanes = NoLanes; // Return the final exit status.\n\n    return workInProgressRootExitStatus;\n  }\n}\n/** @noinline */\n\n\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield\n  while (workInProgress !== null && !shouldYield()) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction performUnitOfWork(unitOfWork) {\n  // The current, flushed, state of this fiber is the alternate. Ideally\n  // nothing should rely on this, but relying on it here means that we don't\n  // need an additional field on the work in progress.\n  var current = unitOfWork.alternate;\n  setCurrentFiber(unitOfWork);\n  var next;\n\n  if ( (unitOfWork.mode & ProfileMode) !== NoMode) {\n    startProfilerTimer(unitOfWork);\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n  } else {\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n  }\n\n  resetCurrentFiber();\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n\n  if (next === null) {\n    // If this doesn't spawn new work, complete the current work.\n    completeUnitOfWork(unitOfWork);\n  } else {\n    workInProgress = next;\n  }\n\n  ReactCurrentOwner$2.current = null;\n}\n\nfunction completeUnitOfWork(unitOfWork) {\n  // Attempt to complete the current unit of work, then move to the next\n  // sibling. If there are no more siblings, return to the parent fiber.\n  var completedWork = unitOfWork;\n\n  do {\n    // The current, flushed, state of this fiber is the alternate. Ideally\n    // nothing should rely on this, but relying on it here means that we don't\n    // need an additional field on the work in progress.\n    var current = completedWork.alternate;\n    var returnFiber = completedWork.return; // Check if the work completed or if something threw.\n\n    if ((completedWork.flags & Incomplete) === NoFlags) {\n      setCurrentFiber(completedWork);\n      var next = void 0;\n\n      if ( (completedWork.mode & ProfileMode) === NoMode) {\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n      } else {\n        startProfilerTimer(completedWork);\n        next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.\n\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n      }\n\n      resetCurrentFiber();\n\n      if (next !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        workInProgress = next;\n        return;\n      }\n    } else {\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      var _next = unwindWork(current, completedWork); // Because this fiber did not complete, don't reset its lanes.\n\n\n      if (_next !== null) {\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        _next.flags &= HostEffectMask;\n        workInProgress = _next;\n        return;\n      }\n\n      if ( (completedWork.mode & ProfileMode) !== NoMode) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.\n\n        var actualDuration = completedWork.actualDuration;\n        var child = completedWork.child;\n\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n\n        completedWork.actualDuration = actualDuration;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its subtree flags.\n        returnFiber.flags |= Incomplete;\n        returnFiber.subtreeFlags = NoFlags;\n        returnFiber.deletions = null;\n      } else {\n        // We've unwound all the way to the root.\n        workInProgressRootExitStatus = RootDidNotComplete;\n        workInProgress = null;\n        return;\n      }\n    }\n\n    var siblingFiber = completedWork.sibling;\n\n    if (siblingFiber !== null) {\n      // If there is more work to do in this returnFiber, do that next.\n      workInProgress = siblingFiber;\n      return;\n    } // Otherwise, return to the parent\n\n\n    completedWork = returnFiber; // Update the next thing we're working on in case something throws.\n\n    workInProgress = completedWork;\n  } while (completedWork !== null); // We've reached the root.\n\n\n  if (workInProgressRootExitStatus === RootInProgress) {\n    workInProgressRootExitStatus = RootCompleted;\n  }\n}\n\nfunction commitRoot(root, recoverableErrors, transitions) {\n  // TODO: This no longer makes any sense. We already wrap the mutation and\n  // layout phases. Should be able to remove.\n  var previousUpdateLanePriority = getCurrentUpdatePriority();\n  var prevTransition = ReactCurrentBatchConfig$3.transition;\n\n  try {\n    ReactCurrentBatchConfig$3.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    commitRootImpl(root, recoverableErrors, transitions, previousUpdateLanePriority);\n  } finally {\n    ReactCurrentBatchConfig$3.transition = prevTransition;\n    setCurrentUpdatePriority(previousUpdateLanePriority);\n  }\n\n  return null;\n}\n\nfunction commitRootImpl(root, recoverableErrors, transitions, renderPriorityLevel) {\n  do {\n    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\n    // means `flushPassiveEffects` will sometimes result in additional\n    // passive effects. So we need to keep flushing in a loop until there are\n    // no more pending effects.\n    // TODO: Might be better if `flushPassiveEffects` did not automatically\n    // flush synchronous work at the end, to avoid factoring hazards like this.\n    flushPassiveEffects();\n  } while (rootWithPendingPassiveEffects !== null);\n\n  flushRenderPhaseStrictModeWarningsInDEV();\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Should not already be working.');\n  }\n\n  var finishedWork = root.finishedWork;\n  var lanes = root.finishedLanes;\n\n  {\n    markCommitStarted(lanes);\n  }\n\n  if (finishedWork === null) {\n\n    {\n      markCommitStopped();\n    }\n\n    return null;\n  } else {\n    {\n      if (lanes === NoLanes) {\n        error('root.finishedLanes should not be empty during a commit. This is a ' + 'bug in React.');\n      }\n    }\n  }\n\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  if (finishedWork === root.current) {\n    throw new Error('Cannot commit the same tree as before. This error is likely caused by ' + 'a bug in React. Please file an issue.');\n  } // commitRoot never returns a continuation; it always finishes synchronously.\n  // So we can clear these now to allow a new callback to be scheduled.\n\n\n  root.callbackNode = null;\n  root.callbackPriority = NoLane; // Update the first and last pending times on this root. The new first\n  // pending time is whatever is left on the root fiber.\n\n  var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n  markRootFinished(root, remainingLanes);\n\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null;\n    workInProgress = null;\n    workInProgressRootRenderLanes = NoLanes;\n  } // If there are pending passive effects, schedule a callback to process them.\n  // Do this as early as possible, so it is queued before anything else that\n  // might get scheduled in the commit phase. (See #16714.)\n  // TODO: Delete all other places that schedule the passive effect callback\n  // They're redundant.\n\n\n  if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      // to store it in pendingPassiveTransitions until they get processed\n      // We need to pass this through as an argument to commitRoot\n      // because workInProgressTransitions might have changed between\n      // the previous render and commit if we throttle the commit\n      // with setTimeout\n\n      pendingPassiveTransitions = transitions;\n      scheduleCallback$1(NormalPriority, function () {\n        flushPassiveEffects(); // This render triggered passive effects: release the root cache pool\n        // *after* passive effects fire to avoid freeing a cache pool that may\n        // be referenced by a node in the tree (HostRoot, Cache boundary etc)\n\n        return null;\n      });\n    }\n  } // Check if there are any effects in the whole tree.\n  // TODO: This is left over from the effect list implementation, where we had\n  // to check for the existence of `firstEffect` to satisfy Flow. I think the\n  // only other reason this optimization exists is because it affects profiling.\n  // Reconsider whether this is necessary.\n\n\n  var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;\n  var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;\n\n  if (subtreeHasEffects || rootHasEffect) {\n    var prevTransition = ReactCurrentBatchConfig$3.transition;\n    ReactCurrentBatchConfig$3.transition = null;\n    var previousPriority = getCurrentUpdatePriority();\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    var prevExecutionContext = executionContext;\n    executionContext |= CommitContext; // Reset this to null before calling lifecycles\n\n    ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass\n    // of the effect list for each phase: all mutation effects come before all\n    // layout effects, and so on.\n    // The first phase a \"before mutation\" phase. We use this phase to read the\n    // state of the host tree right before we mutate it. This is where\n    // getSnapshotBeforeUpdate is called.\n\n    var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(root, finishedWork);\n\n    {\n      // Mark the current commit time to be shared by all Profilers in this\n      // batch. This enables them to be grouped later.\n      recordCommitTime();\n    }\n\n\n    commitMutationEffects(root, finishedWork, lanes);\n\n    resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after\n    // the mutation phase, so that the previous tree is still current during\n    // componentWillUnmount, but before the layout phase, so that the finished\n    // work is current during componentDidMount/Update.\n\n    root.current = finishedWork; // The next phase is the layout phase, where we call effects that read\n\n    {\n      markLayoutEffectsStarted(lanes);\n    }\n\n    commitLayoutEffects(finishedWork, root, lanes);\n\n    {\n      markLayoutEffectsStopped();\n    }\n    // opportunity to paint.\n\n\n    requestPaint();\n    executionContext = prevExecutionContext; // Reset the priority to the previous non-sync value.\n\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$3.transition = prevTransition;\n  } else {\n    // No effects.\n    root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were\n    // no effects.\n    // TODO: Maybe there's a better way to report this.\n\n    {\n      recordCommitTime();\n    }\n  }\n\n  var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects. Stash a reference to them. But don't\n    // schedule a callback until after flushing layout work.\n    rootDoesHavePassiveEffects = false;\n    rootWithPendingPassiveEffects = root;\n    pendingPassiveEffectsLanes = lanes;\n  } else {\n\n    {\n      nestedPassiveUpdateCount = 0;\n      rootWithPassiveNestedUpdates = null;\n    }\n  } // Read this again, since an effect might have updated it\n\n\n  remainingLanes = root.pendingLanes; // Check if there's remaining work on this root\n  // TODO: This is part of the `componentDidCatch` implementation. Its purpose\n  // is to detect whether something might have called setState inside\n  // `componentDidCatch`. The mechanism is known to be flawed because `setState`\n  // inside `componentDidCatch` is itself flawed — that's why we recommend\n  // `getDerivedStateFromError` instead. However, it could be improved by\n  // checking if remainingLanes includes Sync work, instead of whether there's\n  // any work remaining at all (which would also include stuff like Suspense\n  // retries or transitions). It's been like this for a while, though, so fixing\n  // it probably isn't that urgent.\n\n  if (remainingLanes === NoLanes) {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n\n  {\n    if (!rootDidHavePassiveEffects) {\n      commitDoubleInvokeEffectsInDEV(root.current, false);\n    }\n  }\n\n  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);\n\n  {\n    if (isDevToolsPresent) {\n      root.memoizedUpdaters.clear();\n    }\n  }\n\n  {\n    onCommitRoot$1();\n  } // Always call this before exiting `commitRoot`, to ensure that any\n  // additional work on this root is scheduled.\n\n\n  ensureRootIsScheduled(root, now());\n\n  if (recoverableErrors !== null) {\n    // There were errors during this render, but recovered from them without\n    // needing to surface it to the UI. We log them here.\n    var onRecoverableError = root.onRecoverableError;\n\n    for (var i = 0; i < recoverableErrors.length; i++) {\n      var recoverableError = recoverableErrors[i];\n      var componentStack = recoverableError.stack;\n      var digest = recoverableError.digest;\n      onRecoverableError(recoverableError.value, {\n        componentStack: componentStack,\n        digest: digest\n      });\n    }\n  }\n\n  if (hasUncaughtError) {\n    hasUncaughtError = false;\n    var error$1 = firstUncaughtError;\n    firstUncaughtError = null;\n    throw error$1;\n  } // If the passive effects are the result of a discrete render, flush them\n  // synchronously at the end of the current task so that the result is\n  // immediately observable. Otherwise, we assume that they are not\n  // order-dependent and do not need to be observed by external systems, so we\n  // can wait until after paint.\n  // TODO: We can optimize this by not scheduling the callback earlier. Since we\n  // currently schedule the callback in multiple places, will wait until those\n  // are consolidated.\n\n\n  if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root.tag !== LegacyRoot) {\n    flushPassiveEffects();\n  } // Read this again, since a passive effect might have updated it\n\n\n  remainingLanes = root.pendingLanes;\n\n  if (includesSomeLane(remainingLanes, SyncLane)) {\n    {\n      markNestedUpdateScheduled();\n    } // Count the number of times the root synchronously re-renders without\n    // finishing. If there are too many, it indicates an infinite update loop.\n\n\n    if (root === rootWithNestedUpdates) {\n      nestedUpdateCount++;\n    } else {\n      nestedUpdateCount = 0;\n      rootWithNestedUpdates = root;\n    }\n  } else {\n    nestedUpdateCount = 0;\n  } // If layout work was scheduled, flush it now.\n\n\n  flushSyncCallbacks();\n\n  {\n    markCommitStopped();\n  }\n\n  return null;\n}\n\nfunction flushPassiveEffects() {\n  // Returns whether passive effects were flushed.\n  // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should\n  // probably just combine the two functions. I believe they were only separate\n  // in the first place because we used to wrap it with\n  // `Scheduler.runWithPriority`, which accepts a function. But now we track the\n  // priority within React itself, so we can mutate the variable directly.\n  if (rootWithPendingPassiveEffects !== null) {\n    var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);\n    var priority = lowerEventPriority(DefaultEventPriority, renderPriority);\n    var prevTransition = ReactCurrentBatchConfig$3.transition;\n    var previousPriority = getCurrentUpdatePriority();\n\n    try {\n      ReactCurrentBatchConfig$3.transition = null;\n      setCurrentUpdatePriority(priority);\n      return flushPassiveEffectsImpl();\n    } finally {\n      setCurrentUpdatePriority(previousPriority);\n      ReactCurrentBatchConfig$3.transition = prevTransition; // Once passive effects have run for the tree - giving components a\n    }\n  }\n\n  return false;\n}\nfunction enqueuePendingPassiveProfilerEffect(fiber) {\n  {\n    pendingPassiveProfilerEffects.push(fiber);\n\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback$1(NormalPriority, function () {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null) {\n    return false;\n  } // Cache and clear the transitions flag\n\n\n  var transitions = pendingPassiveTransitions;\n  pendingPassiveTransitions = null;\n  var root = rootWithPendingPassiveEffects;\n  var lanes = pendingPassiveEffectsLanes;\n  rootWithPendingPassiveEffects = null; // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.\n  // Figure out why and fix it. It's not causing any known issues (probably\n  // because it's only used for profiling), but it's a refactor hazard.\n\n  pendingPassiveEffectsLanes = NoLanes;\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Cannot flush passive effects while already rendering.');\n  }\n\n  {\n    isFlushingPassiveEffects = true;\n    didScheduleUpdateDuringPassiveEffects = false;\n  }\n\n  {\n    markPassiveEffectsStarted(lanes);\n  }\n\n  var prevExecutionContext = executionContext;\n  executionContext |= CommitContext;\n  commitPassiveUnmountEffects(root.current);\n  commitPassiveMountEffects(root, root.current, lanes, transitions); // TODO: Move to commitPassiveMountEffects\n\n  {\n    var profilerEffects = pendingPassiveProfilerEffects;\n    pendingPassiveProfilerEffects = [];\n\n    for (var i = 0; i < profilerEffects.length; i++) {\n      var _fiber = profilerEffects[i];\n      commitPassiveEffectDurations(root, _fiber);\n    }\n  }\n\n  {\n    markPassiveEffectsStopped();\n  }\n\n  {\n    commitDoubleInvokeEffectsInDEV(root.current, true);\n  }\n\n  executionContext = prevExecutionContext;\n  flushSyncCallbacks();\n\n  {\n    // If additional passive effects were scheduled, increment a counter. If this\n    // exceeds the limit, we'll fire a warning.\n    if (didScheduleUpdateDuringPassiveEffects) {\n      if (root === rootWithPassiveNestedUpdates) {\n        nestedPassiveUpdateCount++;\n      } else {\n        nestedPassiveUpdateCount = 0;\n        rootWithPassiveNestedUpdates = root;\n      }\n    } else {\n      nestedPassiveUpdateCount = 0;\n    }\n\n    isFlushingPassiveEffects = false;\n    didScheduleUpdateDuringPassiveEffects = false;\n  } // TODO: Move to commitPassiveMountEffects\n\n\n  onPostCommitRoot(root);\n\n  {\n    var stateNode = root.current.stateNode;\n    stateNode.effectDuration = 0;\n    stateNode.passiveEffectDuration = 0;\n  }\n\n  return true;\n}\n\nfunction isAlreadyFailedLegacyErrorBoundary(instance) {\n  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);\n}\nfunction markLegacyErrorBoundaryAsFailed(instance) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction prepareToThrowUncaughtError(error) {\n  if (!hasUncaughtError) {\n    hasUncaughtError = true;\n    firstUncaughtError = error;\n  }\n}\n\nvar onUncaughtError = prepareToThrowUncaughtError;\n\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n  var errorInfo = createCapturedValueAtFiber(error, sourceFiber);\n  var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);\n  var root = enqueueUpdate(rootFiber, update, SyncLane);\n  var eventTime = requestEventTime();\n\n  if (root !== null) {\n    markRootUpdated(root, SyncLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nfunction captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {\n  {\n    reportUncaughtErrorInDEV(error$1);\n    setIsRunningInsertionEffect(false);\n  }\n\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);\n    return;\n  }\n\n  var fiber = null;\n\n  {\n    fiber = nearestMountedAncestor;\n  }\n\n  while (fiber !== null) {\n    if (fiber.tag === HostRoot) {\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);\n      return;\n    } else if (fiber.tag === ClassComponent) {\n      var ctor = fiber.type;\n      var instance = fiber.stateNode;\n\n      if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {\n        var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);\n        var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);\n        var root = enqueueUpdate(fiber, update, SyncLane);\n        var eventTime = requestEventTime();\n\n        if (root !== null) {\n          markRootUpdated(root, SyncLane, eventTime);\n          ensureRootIsScheduled(root, eventTime);\n        }\n\n        return;\n      }\n    }\n\n    fiber = fiber.return;\n  }\n\n  {\n    // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning\n    // will fire for errors that are thrown by destroy functions inside deleted\n    // trees. What it should instead do is propagate the error to the parent of\n    // the deleted tree. In the meantime, do not add this warning to the\n    // allowlist; this is only for our internal use.\n    error('Internal React error: Attempted to capture a commit phase error ' + 'inside a detached tree. This indicates a bug in React. Likely ' + 'causes include deleting the same fiber more than once, committing an ' + 'already-finished tree, or an inconsistent return pointer.\\n\\n' + 'Error message:\\n\\n%s', error$1);\n  }\n}\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\n  var pingCache = root.pingCache;\n\n  if (pingCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(wakeable);\n  }\n\n  var eventTime = requestEventTime();\n  markRootPinged(root, pingedLanes);\n  warnIfSuspenseResolutionNotWrappedWithActDEV(root);\n\n  if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. We might want to restart this render. This should mirror\n    // the logic of whether or not a root suspends once it completes.\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\n    // we should probably never restart.\n    // If we're suspended with delay, or if it's a retry, we'll always suspend\n    // so we can always restart.\n    if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {\n      // Restart from the root.\n      prepareFreshStack(root, NoLanes);\n    } else {\n      // Even though we can't restart right now, we might get an\n      // opportunity later. So we mark this render as having a ping.\n      workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);\n    }\n  }\n\n  ensureRootIsScheduled(root, eventTime);\n}\n\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\n  // The boundary fiber (a Suspense component or SuspenseList component)\n  // previously was rendered in its fallback state. One of the promises that\n  // suspended it has resolved, which means at least part of the tree was\n  // likely unblocked. Try rendering again, at a new lanes.\n  if (retryLane === NoLane) {\n    // TODO: Assign this to `suspenseState.retryLane`? to avoid\n    // unnecessary entanglement?\n    retryLane = requestRetryLane(boundaryFiber);\n  } // TODO: Special case idle priority?\n\n\n  var eventTime = requestEventTime();\n  var root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n\n  if (root !== null) {\n    markRootUpdated(root, retryLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nfunction retryDehydratedSuspenseBoundary(boundaryFiber) {\n  var suspenseState = boundaryFiber.memoizedState;\n  var retryLane = NoLane;\n\n  if (suspenseState !== null) {\n    retryLane = suspenseState.retryLane;\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\n  var retryLane = NoLane; // Default\n\n  var retryCache;\n\n  switch (boundaryFiber.tag) {\n    case SuspenseComponent:\n      retryCache = boundaryFiber.stateNode;\n      var suspenseState = boundaryFiber.memoizedState;\n\n      if (suspenseState !== null) {\n        retryLane = suspenseState.retryLane;\n      }\n\n      break;\n\n    case SuspenseListComponent:\n      retryCache = boundaryFiber.stateNode;\n      break;\n\n    default:\n      throw new Error('Pinged unknown suspense boundary type. ' + 'This is probably a bug in React.');\n  }\n\n  if (retryCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(wakeable);\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n} // Computes the next Just Noticeable Difference (JND) boundary.\n// The theory is that a person can't tell the difference between small differences in time.\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\n// difference in the experience. However, waiting for longer might mean that we can avoid\n// showing an intermediate loading state. The longer we have already waited, the harder it\n// is to tell small differences in time. Therefore, the longer we've already waited,\n// the longer we can wait additionally. At some point we have to give up though.\n// We pick a train model where the next boundary commits at a consistent schedule.\n// These particular numbers are vague estimates. We expect to adjust them based on research.\n\nfunction jnd(timeElapsed) {\n  return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;\n}\n\nfunction checkForNestedUpdates() {\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    nestedUpdateCount = 0;\n    rootWithNestedUpdates = null;\n    throw new Error('Maximum update depth exceeded. This can happen when a component ' + 'repeatedly calls setState inside componentWillUpdate or ' + 'componentDidUpdate. React limits the number of nested updates to ' + 'prevent infinite loops.');\n  }\n\n  {\n    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n      nestedPassiveUpdateCount = 0;\n      rootWithPassiveNestedUpdates = null;\n\n      error('Maximum update depth exceeded. This can happen when a component ' + \"calls setState inside useEffect, but useEffect either doesn't \" + 'have a dependency array, or one of the dependencies changes on ' + 'every render.');\n    }\n  }\n}\n\nfunction flushRenderPhaseStrictModeWarningsInDEV() {\n  {\n    ReactStrictModeWarnings.flushLegacyContextWarning();\n\n    {\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n    }\n  }\n}\n\nfunction commitDoubleInvokeEffectsInDEV(fiber, hasPassiveEffects) {\n  {\n    // TODO (StrictEffects) Should we set a marker on the root if it contains strict effects\n    // so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.\n    // Maybe not a big deal since this is DEV only behavior.\n    setCurrentFiber(fiber);\n    invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);\n\n    if (hasPassiveEffects) {\n      invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectUnmountInDEV);\n    }\n\n    invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);\n\n    if (hasPassiveEffects) {\n      invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);\n    }\n\n    resetCurrentFiber();\n  }\n}\n\nfunction invokeEffectsInDev(firstChild, fiberFlags, invokeEffectFn) {\n  {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    var current = firstChild;\n    var subtreeRoot = null;\n\n    while (current !== null) {\n      var primarySubtreeFlag = current.subtreeFlags & fiberFlags;\n\n      if (current !== subtreeRoot && current.child !== null && primarySubtreeFlag !== NoFlags) {\n        current = current.child;\n      } else {\n        if ((current.flags & fiberFlags) !== NoFlags) {\n          invokeEffectFn(current);\n        }\n\n        if (current.sibling !== null) {\n          current = current.sibling;\n        } else {\n          current = subtreeRoot = current.return;\n        }\n      }\n    }\n  }\n}\n\nvar didWarnStateUpdateForNotYetMountedComponent = null;\nfunction warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\n  {\n    if ((executionContext & RenderContext) !== NoContext) {\n      // We let the other warning about render phase updates deal with this one.\n      return;\n    }\n\n    if (!(fiber.mode & ConcurrentMode)) {\n      return;\n    }\n\n    var tag = fiber.tag;\n\n    if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    } // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n\n\n    var componentName = getComponentNameFromFiber(fiber) || 'ReactComponent';\n\n    if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n        return;\n      }\n\n      didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n    }\n\n    var previousFiber = current;\n\n    try {\n      setCurrentFiber(fiber);\n\n      error(\"Can't perform a React state update on a component that hasn't mounted yet. \" + 'This indicates that you have a side-effect in your render function that ' + 'asynchronously later calls tries to update the component. Move this work to ' + 'useEffect instead.');\n    } finally {\n      if (previousFiber) {\n        setCurrentFiber(fiber);\n      } else {\n        resetCurrentFiber();\n      }\n    }\n  }\n}\nvar beginWork$1;\n\n{\n  var dummyFiber = null;\n\n  beginWork$1 = function (current, unitOfWork, lanes) {\n    // If a component throws an error, we replay it again in a synchronously\n    // dispatched event, so that the debugger will treat it as an uncaught\n    // error See ReactErrorUtils for more information.\n    // Before entering the begin phase, copy the work-in-progress onto a dummy\n    // fiber. If beginWork throws, we'll use this to reset the state.\n    var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);\n\n    try {\n      return beginWork(current, unitOfWork, lanes);\n    } catch (originalError) {\n      if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') {\n        // Don't replay promises.\n        // Don't replay errors if we are hydrating and have already suspended or handled an error\n        throw originalError;\n      } // Keep this code in sync with handleError; any changes here must have\n      // corresponding changes there.\n\n\n      resetContextDependencies();\n      resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the\n      // same fiber again.\n      // Unwind the failed stack frame\n\n      unwindInterruptedWork(current, unitOfWork); // Restore the original properties of the fiber.\n\n      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\n\n      if ( unitOfWork.mode & ProfileMode) {\n        // Reset the profiler timer.\n        startProfilerTimer(unitOfWork);\n      } // Run beginWork again.\n\n\n      invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);\n\n      if (hasCaughtError()) {\n        var replayError = clearCaughtError();\n\n        if (typeof replayError === 'object' && replayError !== null && replayError._suppressLogging && typeof originalError === 'object' && originalError !== null && !originalError._suppressLogging) {\n          // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.\n          originalError._suppressLogging = true;\n        }\n      } // We always throw the original error in case the second render pass is not idempotent.\n      // This can happen if a memoized function or CommonJS module doesn't throw after first invocation.\n\n\n      throw originalError;\n    }\n  };\n}\n\nvar didWarnAboutUpdateInRender = false;\nvar didWarnAboutUpdateInRenderForAnotherComponent;\n\n{\n  didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n}\n\nfunction warnAboutRenderPhaseUpdatesInDEV(fiber) {\n  {\n    if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {\n      switch (fiber.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent:\n          {\n            var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || 'Unknown'; // Dedupe by the rendering component because it's the one that needs to be fixed.\n\n            var dedupeKey = renderingComponentName;\n\n            if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n              didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n              var setStateComponentName = getComponentNameFromFiber(fiber) || 'Unknown';\n\n              error('Cannot update a component (`%s`) while rendering a ' + 'different component (`%s`). To locate the bad setState() call inside `%s`, ' + 'follow the stack trace as described in https://reactjs.org/link/setstate-in-render', setStateComponentName, renderingComponentName, renderingComponentName);\n            }\n\n            break;\n          }\n\n        case ClassComponent:\n          {\n            if (!didWarnAboutUpdateInRender) {\n              error('Cannot update during an existing state transition (such as ' + 'within `render`). Render methods should be a pure ' + 'function of props and state.');\n\n              didWarnAboutUpdateInRender = true;\n            }\n\n            break;\n          }\n      }\n    }\n  }\n}\n\nfunction restorePendingUpdaters(root, lanes) {\n  {\n    if (isDevToolsPresent) {\n      var memoizedUpdaters = root.memoizedUpdaters;\n      memoizedUpdaters.forEach(function (schedulingFiber) {\n        addFiberToLanesMap(root, schedulingFiber, lanes);\n      }); // This function intentionally does not clear memoized updaters.\n      // Those may still be relevant to the current commit\n      // and a future one (e.g. Suspense).\n    }\n  }\n}\nvar fakeActCallbackNode = {};\n\nfunction scheduleCallback$1(priorityLevel, callback) {\n  {\n    // If we're currently inside an `act` scope, bypass Scheduler and push to\n    // the `act` queue instead.\n    var actQueue = ReactCurrentActQueue$1.current;\n\n    if (actQueue !== null) {\n      actQueue.push(callback);\n      return fakeActCallbackNode;\n    } else {\n      return scheduleCallback(priorityLevel, callback);\n    }\n  }\n}\n\nfunction cancelCallback$1(callbackNode) {\n  if ( callbackNode === fakeActCallbackNode) {\n    return;\n  } // In production, always call Scheduler. This function will be stripped out.\n\n\n  return cancelCallback(callbackNode);\n}\n\nfunction shouldForceFlushFallbacksInDEV() {\n  // Never force flush in production. This function should get stripped out.\n  return  ReactCurrentActQueue$1.current !== null;\n}\n\nfunction warnIfUpdatesNotWrappedWithActDEV(fiber) {\n  {\n    if (fiber.mode & ConcurrentMode) {\n      if (!isConcurrentActEnvironment()) {\n        // Not in an act environment. No need to warn.\n        return;\n      }\n    } else {\n      // Legacy mode has additional cases where we suppress a warning.\n      if (!isLegacyActEnvironment()) {\n        // Not in an act environment. No need to warn.\n        return;\n      }\n\n      if (executionContext !== NoContext) {\n        // Legacy mode doesn't warn if the update is batched, i.e.\n        // batchedUpdates or flushSync.\n        return;\n      }\n\n      if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) {\n        // For backwards compatibility with pre-hooks code, legacy mode only\n        // warns for updates that originate from a hook.\n        return;\n      }\n    }\n\n    if (ReactCurrentActQueue$1.current === null) {\n      var previousFiber = current;\n\n      try {\n        setCurrentFiber(fiber);\n\n        error('An update to %s inside a test was not wrapped in act(...).\\n\\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\\n\\n' + 'act(() => {\\n' + '  /* fire events that update state */\\n' + '});\\n' + '/* assert on the output */\\n\\n' + \"This ensures that you're testing the behavior the user would see \" + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act', getComponentNameFromFiber(fiber));\n      } finally {\n        if (previousFiber) {\n          setCurrentFiber(fiber);\n        } else {\n          resetCurrentFiber();\n        }\n      }\n    }\n  }\n}\n\nfunction warnIfSuspenseResolutionNotWrappedWithActDEV(root) {\n  {\n    if (root.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) {\n      error('A suspended resource finished loading inside a test, but the event ' + 'was not wrapped in act(...).\\n\\n' + 'When testing, code that resolves suspended data should be wrapped ' + 'into act(...):\\n\\n' + 'act(() => {\\n' + '  /* finish loading suspended data */\\n' + '});\\n' + '/* assert on the output */\\n\\n' + \"This ensures that you're testing the behavior the user would see \" + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act');\n    }\n  }\n}\n\nfunction setIsRunningInsertionEffect(isRunning) {\n  {\n    isRunningInsertionEffect = isRunning;\n  }\n}\n\n/* eslint-disable react-internal/prod-error-codes */\nvar resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.\n\nvar failedBoundaries = null;\nvar setRefreshHandler = function (handler) {\n  {\n    resolveFamily = handler;\n  }\n};\nfunction resolveFunctionForHotReloading(type) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n\n    var family = resolveFamily(type);\n\n    if (family === undefined) {\n      return type;\n    } // Use the latest known implementation.\n\n\n    return family.current;\n  }\n}\nfunction resolveClassForHotReloading(type) {\n  // No implementation differences.\n  return resolveFunctionForHotReloading(type);\n}\nfunction resolveForwardRefForHotReloading(type) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n\n    var family = resolveFamily(type);\n\n    if (family === undefined) {\n      // Check if we're dealing with a real forwardRef. Don't want to crash early.\n      if (type !== null && type !== undefined && typeof type.render === 'function') {\n        // ForwardRef is special because its resolved .type is an object,\n        // but it's possible that we only have its inner render function in the map.\n        // If that inner render function is different, we'll build a new forwardRef type.\n        var currentRender = resolveFunctionForHotReloading(type.render);\n\n        if (type.render !== currentRender) {\n          var syntheticType = {\n            $$typeof: REACT_FORWARD_REF_TYPE,\n            render: currentRender\n          };\n\n          if (type.displayName !== undefined) {\n            syntheticType.displayName = type.displayName;\n          }\n\n          return syntheticType;\n        }\n      }\n\n      return type;\n    } // Use the latest known implementation.\n\n\n    return family.current;\n  }\n}\nfunction isCompatibleFamilyForHotReloading(fiber, element) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return false;\n    }\n\n    var prevType = fiber.elementType;\n    var nextType = element.type; // If we got here, we know types aren't === equal.\n\n    var needsCompareFamilies = false;\n    var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;\n\n    switch (fiber.tag) {\n      case ClassComponent:\n        {\n          if (typeof nextType === 'function') {\n            needsCompareFamilies = true;\n          }\n\n          break;\n        }\n\n      case FunctionComponent:\n        {\n          if (typeof nextType === 'function') {\n            needsCompareFamilies = true;\n          } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n            // We don't know the inner type yet.\n            // We're going to assume that the lazy inner type is stable,\n            // and so it is sufficient to avoid reconciling it away.\n            // We're not going to unwrap or actually use the new lazy type.\n            needsCompareFamilies = true;\n          }\n\n          break;\n        }\n\n      case ForwardRef:\n        {\n          if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n            needsCompareFamilies = true;\n          } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n            needsCompareFamilies = true;\n          }\n\n          break;\n        }\n\n      case MemoComponent:\n      case SimpleMemoComponent:\n        {\n          if ($$typeofNextType === REACT_MEMO_TYPE) {\n            // TODO: if it was but can no longer be simple,\n            // we shouldn't set this.\n            needsCompareFamilies = true;\n          } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n            needsCompareFamilies = true;\n          }\n\n          break;\n        }\n\n      default:\n        return false;\n    } // Check if both types have a family and it's the same one.\n\n\n    if (needsCompareFamilies) {\n      // Note: memo() and forwardRef() we'll compare outer rather than inner type.\n      // This means both of them need to be registered to preserve state.\n      // If we unwrapped and compared the inner types for wrappers instead,\n      // then we would risk falsely saying two separate memo(Foo)\n      // calls are equivalent because they wrap the same Foo function.\n      var prevFamily = resolveFamily(prevType);\n\n      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\nfunction markFailedErrorBoundaryForHotReloading(fiber) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n\n    if (typeof WeakSet !== 'function') {\n      return;\n    }\n\n    if (failedBoundaries === null) {\n      failedBoundaries = new WeakSet();\n    }\n\n    failedBoundaries.add(fiber);\n  }\n}\nvar scheduleRefresh = function (root, update) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n\n    var staleFamilies = update.staleFamilies,\n        updatedFamilies = update.updatedFamilies;\n    flushPassiveEffects();\n    flushSync(function () {\n      scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);\n    });\n  }\n};\nvar scheduleRoot = function (root, element) {\n  {\n    if (root.context !== emptyContextObject) {\n      // Super edge case: root has a legacy _renderSubtree context\n      // but we don't know the parentComponent so we can't pass it.\n      // Just ignore. We'll delete this with _renderSubtree code path later.\n      return;\n    }\n\n    flushPassiveEffects();\n    flushSync(function () {\n      updateContainer(element, root, null, null);\n    });\n  }\n};\n\nfunction scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {\n  {\n    var alternate = fiber.alternate,\n        child = fiber.child,\n        sibling = fiber.sibling,\n        tag = fiber.tag,\n        type = fiber.type;\n    var candidateType = null;\n\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n    }\n\n    if (resolveFamily === null) {\n      throw new Error('Expected resolveFamily to be set during hot reload.');\n    }\n\n    var needsRender = false;\n    var needsRemount = false;\n\n    if (candidateType !== null) {\n      var family = resolveFamily(candidateType);\n\n      if (family !== undefined) {\n        if (staleFamilies.has(family)) {\n          needsRemount = true;\n        } else if (updatedFamilies.has(family)) {\n          if (tag === ClassComponent) {\n            needsRemount = true;\n          } else {\n            needsRender = true;\n          }\n        }\n      }\n    }\n\n    if (failedBoundaries !== null) {\n      if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {\n        needsRemount = true;\n      }\n    }\n\n    if (needsRemount) {\n      fiber._debugNeedsRemount = true;\n    }\n\n    if (needsRemount || needsRender) {\n      var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (_root !== null) {\n        scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n\n    if (child !== null && !needsRemount) {\n      scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);\n    }\n\n    if (sibling !== null) {\n      scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);\n    }\n  }\n}\n\nvar findHostInstancesForRefresh = function (root, families) {\n  {\n    var hostInstances = new Set();\n    var types = new Set(families.map(function (family) {\n      return family.current;\n    }));\n    findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);\n    return hostInstances;\n  }\n};\n\nfunction findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {\n  {\n    var child = fiber.child,\n        sibling = fiber.sibling,\n        tag = fiber.tag,\n        type = fiber.type;\n    var candidateType = null;\n\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n    }\n\n    var didMatch = false;\n\n    if (candidateType !== null) {\n      if (types.has(candidateType)) {\n        didMatch = true;\n      }\n    }\n\n    if (didMatch) {\n      // We have a match. This only drills down to the closest host components.\n      // There's no need to search deeper because for the purpose of giving\n      // visual feedback, \"flashing\" outermost parent rectangles is sufficient.\n      findHostInstancesForFiberShallowly(fiber, hostInstances);\n    } else {\n      // If there's no match, maybe there will be one further down in the child tree.\n      if (child !== null) {\n        findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);\n      }\n    }\n\n    if (sibling !== null) {\n      findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);\n    }\n  }\n}\n\nfunction findHostInstancesForFiberShallowly(fiber, hostInstances) {\n  {\n    var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);\n\n    if (foundHostInstances) {\n      return;\n    } // If we didn't find any host children, fallback to closest host parent.\n\n\n    var node = fiber;\n\n    while (true) {\n      switch (node.tag) {\n        case HostComponent:\n          hostInstances.add(node.stateNode);\n          return;\n\n        case HostPortal:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n\n        case HostRoot:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n      }\n\n      if (node.return === null) {\n        throw new Error('Expected to reach root first.');\n      }\n\n      node = node.return;\n    }\n  }\n}\n\nfunction findChildHostInstancesForFiberShallowly(fiber, hostInstances) {\n  {\n    var node = fiber;\n    var foundHostInstances = false;\n\n    while (true) {\n      if (node.tag === HostComponent) {\n        // We got a match.\n        foundHostInstances = true;\n        hostInstances.add(node.stateNode); // There may still be more, so keep searching.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === fiber) {\n        return foundHostInstances;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === fiber) {\n          return foundHostInstances;\n        }\n\n        node = node.return;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n\n  return false;\n}\n\nvar hasBadMapPolyfill;\n\n{\n  hasBadMapPolyfill = false;\n\n  try {\n    var nonExtensibleObject = Object.preventExtensions({});\n    /* eslint-disable no-new */\n\n    new Map([[nonExtensibleObject, null]]);\n    new Set([nonExtensibleObject]);\n    /* eslint-enable no-new */\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n\nfunction FiberNode(tag, pendingProps, key, mode) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null; // Fiber\n\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.dependencies = null;\n  this.mode = mode; // Effects\n\n  this.flags = NoFlags;\n  this.subtreeFlags = NoFlags;\n  this.deletions = null;\n  this.lanes = NoLanes;\n  this.childLanes = NoLanes;\n  this.alternate = null;\n\n  {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n\n  {\n    // This isn't directly used but is handy for debugging internals:\n    this._debugSource = null;\n    this._debugOwner = null;\n    this._debugNeedsRemount = false;\n    this._debugHookTypes = null;\n\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {\n      Object.preventExtensions(this);\n    }\n  }\n} // This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\n\n\nvar createFiber = function (tag, pendingProps, key, mode) {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct$1(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction isSimpleFunctionComponent(type) {\n  return typeof type === 'function' && !shouldConstruct$1(type) && type.defaultProps === undefined;\n}\nfunction resolveLazyComponentTag(Component) {\n  if (typeof Component === 'function') {\n    return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    var $$typeof = Component.$$typeof;\n\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n  }\n\n  return IndeterminateComponent;\n} // This is used to create an alternate fiber to do work on.\n\nfunction createWorkInProgress(current, pendingProps) {\n  var workInProgress = current.alternate;\n\n  if (workInProgress === null) {\n    // We use a double buffering pooling technique because we know that we'll\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\n    // node that we're free to reuse. This is lazily created to avoid allocating\n    // extra objects for things that are never updated. It also allow us to\n    // reclaim the extra memory if needed.\n    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    {\n      // DEV-only fields\n      workInProgress._debugSource = current._debugSource;\n      workInProgress._debugOwner = current._debugOwner;\n      workInProgress._debugHookTypes = current._debugHookTypes;\n    }\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.\n\n    workInProgress.type = current.type; // We already have an alternate.\n    // Reset the effect tag.\n\n    workInProgress.flags = NoFlags; // The effects are no longer valid.\n\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n\n    {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  } // Reset all effects except static ones.\n  // Static effects are not specific to a render.\n\n\n  workInProgress.flags = current.flags & StaticMask;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so\n  // it cannot be shared with the current fiber.\n\n  var currentDependencies = current.dependencies;\n  workInProgress.dependencies = currentDependencies === null ? null : {\n    lanes: currentDependencies.lanes,\n    firstContext: currentDependencies.firstContext\n  }; // These will be overridden during the parent's reconciliation\n\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  {\n    workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n\n    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n      case FunctionComponent:\n      case SimpleMemoComponent:\n        workInProgress.type = resolveFunctionForHotReloading(current.type);\n        break;\n\n      case ClassComponent:\n        workInProgress.type = resolveClassForHotReloading(current.type);\n        break;\n\n      case ForwardRef:\n        workInProgress.type = resolveForwardRefForHotReloading(current.type);\n        break;\n    }\n  }\n\n  return workInProgress;\n} // Used to reuse a Fiber for a second pass.\n\nfunction resetWorkInProgress(workInProgress, renderLanes) {\n  // This resets the Fiber to what createFiber or createWorkInProgress would\n  // have set the values to before during the first pass. Ideally this wouldn't\n  // be necessary but unfortunately many code paths reads from the workInProgress\n  // when they should be reading from current and writing to workInProgress.\n  // We assume pendingProps, index, key, ref, return are still untouched to\n  // avoid doing another reconciliation.\n  // Reset the effect flags but keep any Placement tags, since that's something\n  // that child fiber is setting, not the reconciliation.\n  workInProgress.flags &= StaticMask | Placement; // The effects are no longer valid.\n\n  var current = workInProgress.alternate;\n\n  if (current === null) {\n    // Reset to createFiber's initial values.\n    workInProgress.childLanes = NoLanes;\n    workInProgress.lanes = renderLanes;\n    workInProgress.child = null;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.memoizedProps = null;\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n    workInProgress.dependencies = null;\n    workInProgress.stateNode = null;\n\n    {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = 0;\n      workInProgress.treeBaseDuration = 0;\n    }\n  } else {\n    // Reset to the cloned values that createWorkInProgress would've.\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n    workInProgress.child = current.child;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.\n\n    workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n\n    var currentDependencies = current.dependencies;\n    workInProgress.dependencies = currentDependencies === null ? null : {\n      lanes: currentDependencies.lanes,\n      firstContext: currentDependencies.firstContext\n    };\n\n    {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n  }\n\n  return workInProgress;\n}\nfunction createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {\n  var mode;\n\n  if (tag === ConcurrentRoot) {\n    mode = ConcurrentMode;\n\n    if (isStrictMode === true) {\n      mode |= StrictLegacyMode;\n\n      {\n        mode |= StrictEffectsMode;\n      }\n    }\n  } else {\n    mode = NoMode;\n  }\n\n  if ( isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\nfunction createFiberFromTypeAndProps(type, // React$ElementType\nkey, pendingProps, owner, mode, lanes) {\n  var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n\n  var resolvedType = type;\n\n  if (typeof type === 'function') {\n    if (shouldConstruct$1(type)) {\n      fiberTag = ClassComponent;\n\n      {\n        resolvedType = resolveClassForHotReloading(resolvedType);\n      }\n    } else {\n      {\n        resolvedType = resolveFunctionForHotReloading(resolvedType);\n      }\n    }\n  } else if (typeof type === 'string') {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= StrictLegacyMode;\n\n        if ( (mode & ConcurrentMode) !== NoMode) {\n          // Strict effects should never run on legacy roots\n          mode |= StrictEffectsMode;\n        }\n\n        break;\n\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, lanes, key);\n\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, lanes, key);\n\n      case REACT_SUSPENSE_LIST_TYPE:\n        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n\n      case REACT_LEGACY_HIDDEN_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_SCOPE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_CACHE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_TRACING_MARKER_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_DEBUG_TRACING_MODE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      default:\n        {\n          if (typeof type === 'object' && type !== null) {\n            switch (type.$$typeof) {\n              case REACT_PROVIDER_TYPE:\n                fiberTag = ContextProvider;\n                break getTag;\n\n              case REACT_CONTEXT_TYPE:\n                // This is a consumer\n                fiberTag = ContextConsumer;\n                break getTag;\n\n              case REACT_FORWARD_REF_TYPE:\n                fiberTag = ForwardRef;\n\n                {\n                  resolvedType = resolveForwardRefForHotReloading(resolvedType);\n                }\n\n                break getTag;\n\n              case REACT_MEMO_TYPE:\n                fiberTag = MemoComponent;\n                break getTag;\n\n              case REACT_LAZY_TYPE:\n                fiberTag = LazyComponent;\n                resolvedType = null;\n                break getTag;\n            }\n          }\n\n          var info = '';\n\n          {\n            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n              info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and \" + 'named imports.';\n            }\n\n            var ownerName = owner ? getComponentNameFromFiber(owner) : null;\n\n            if (ownerName) {\n              info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n            }\n          }\n\n          throw new Error('Element type is invalid: expected a string (for built-in ' + 'components) or a class/function (for composite components) ' + (\"but got: \" + (type == null ? type : typeof type) + \".\" + info));\n        }\n    }\n  }\n\n  var fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.lanes = lanes;\n\n  {\n    fiber._debugOwner = owner;\n  }\n\n  return fiber;\n}\nfunction createFiberFromElement(element, mode, lanes) {\n  var owner = null;\n\n  {\n    owner = element._owner;\n  }\n\n  var type = element.type;\n  var key = element.key;\n  var pendingProps = element.props;\n  var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);\n\n  {\n    fiber._debugSource = element._source;\n    fiber._debugOwner = element._owner;\n  }\n\n  return fiber;\n}\nfunction createFiberFromFragment(elements, mode, lanes, key) {\n  var fiber = createFiber(Fragment, elements, key, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(pendingProps, mode, lanes, key) {\n  {\n    if (typeof pendingProps.id !== 'string') {\n      error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);\n    }\n  }\n\n  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.lanes = lanes;\n\n  {\n    fiber.stateNode = {\n      effectDuration: 0,\n      passiveEffectDuration: 0\n    };\n  }\n\n  return fiber;\n}\n\nfunction createFiberFromSuspense(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromSuspenseList(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromOffscreen(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_OFFSCREEN_TYPE;\n  fiber.lanes = lanes;\n  var primaryChildInstance = {\n    isHidden: false\n  };\n  fiber.stateNode = primaryChildInstance;\n  return fiber;\n}\nfunction createFiberFromText(content, mode, lanes) {\n  var fiber = createFiber(HostText, content, null, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromHostInstanceForDeletion() {\n  var fiber = createFiber(HostComponent, null, null, NoMode);\n  fiber.elementType = 'DELETED';\n  return fiber;\n}\nfunction createFiberFromDehydratedFragment(dehydratedNode) {\n  var fiber = createFiber(DehydratedFragment, null, null, NoMode);\n  fiber.stateNode = dehydratedNode;\n  return fiber;\n}\nfunction createFiberFromPortal(portal, mode, lanes) {\n  var pendingProps = portal.children !== null ? portal.children : [];\n  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.lanes = lanes;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null,\n    // Used by persistent updates\n    implementation: portal.implementation\n  };\n  return fiber;\n} // Used for stashing WIP properties to replay failed work in DEV.\n\nfunction assignFiberPropertiesInDEV(target, source) {\n  if (target === null) {\n    // This Fiber's initial properties will always be overwritten.\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\n    target = createFiber(IndeterminateComponent, null, null, NoMode);\n  } // This is intentionally written as a list of all properties.\n  // We tried to use Object.assign() instead but this is called in\n  // the hottest path, and Object.assign() was too slow:\n  // https://github.com/facebook/react/issues/12502\n  // This code is DEV-only so size is not a concern.\n\n\n  target.tag = source.tag;\n  target.key = source.key;\n  target.elementType = source.elementType;\n  target.type = source.type;\n  target.stateNode = source.stateNode;\n  target.return = source.return;\n  target.child = source.child;\n  target.sibling = source.sibling;\n  target.index = source.index;\n  target.ref = source.ref;\n  target.pendingProps = source.pendingProps;\n  target.memoizedProps = source.memoizedProps;\n  target.updateQueue = source.updateQueue;\n  target.memoizedState = source.memoizedState;\n  target.dependencies = source.dependencies;\n  target.mode = source.mode;\n  target.flags = source.flags;\n  target.subtreeFlags = source.subtreeFlags;\n  target.deletions = source.deletions;\n  target.lanes = source.lanes;\n  target.childLanes = source.childLanes;\n  target.alternate = source.alternate;\n\n  {\n    target.actualDuration = source.actualDuration;\n    target.actualStartTime = source.actualStartTime;\n    target.selfBaseDuration = source.selfBaseDuration;\n    target.treeBaseDuration = source.treeBaseDuration;\n  }\n\n  target._debugSource = source._debugSource;\n  target._debugOwner = source._debugOwner;\n  target._debugNeedsRemount = source._debugNeedsRemount;\n  target._debugHookTypes = source._debugHookTypes;\n  return target;\n}\n\nfunction FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {\n  this.tag = tag;\n  this.containerInfo = containerInfo;\n  this.pendingChildren = null;\n  this.current = null;\n  this.pingCache = null;\n  this.finishedWork = null;\n  this.timeoutHandle = noTimeout;\n  this.context = null;\n  this.pendingContext = null;\n  this.callbackNode = null;\n  this.callbackPriority = NoLane;\n  this.eventTimes = createLaneMap(NoLanes);\n  this.expirationTimes = createLaneMap(NoTimestamp);\n  this.pendingLanes = NoLanes;\n  this.suspendedLanes = NoLanes;\n  this.pingedLanes = NoLanes;\n  this.expiredLanes = NoLanes;\n  this.mutableReadLanes = NoLanes;\n  this.finishedLanes = NoLanes;\n  this.entangledLanes = NoLanes;\n  this.entanglements = createLaneMap(NoLanes);\n  this.identifierPrefix = identifierPrefix;\n  this.onRecoverableError = onRecoverableError;\n\n  {\n    this.mutableSourceEagerHydrationData = null;\n  }\n\n  {\n    this.effectDuration = 0;\n    this.passiveEffectDuration = 0;\n  }\n\n  {\n    this.memoizedUpdaters = new Set();\n    var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];\n\n    for (var _i = 0; _i < TotalLanes; _i++) {\n      pendingUpdatersLaneMap.push(new Set());\n    }\n  }\n\n  {\n    switch (tag) {\n      case ConcurrentRoot:\n        this._debugRootType = hydrate ? 'hydrateRoot()' : 'createRoot()';\n        break;\n\n      case LegacyRoot:\n        this._debugRootType = hydrate ? 'hydrate()' : 'render()';\n        break;\n    }\n  }\n}\n\nfunction createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, // TODO: We have several of these arguments that are conceptually part of the\n// host config, but because they are passed in at runtime, we have to thread\n// them through the root constructor. Perhaps we should put them all into a\n// single type, like a DynamicHostConfig that is defined by the renderer.\nidentifierPrefix, onRecoverableError, transitionCallbacks) {\n  var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);\n  // stateNode is any.\n\n\n  var uninitializedFiber = createHostRootFiber(tag, isStrictMode);\n  root.current = uninitializedFiber;\n  uninitializedFiber.stateNode = root;\n\n  {\n    var _initialState = {\n      element: initialChildren,\n      isDehydrated: hydrate,\n      cache: null,\n      // not enabled yet\n      transitions: null,\n      pendingSuspenseBoundaries: null\n    };\n    uninitializedFiber.memoizedState = _initialState;\n  }\n\n  initializeUpdateQueue(uninitializedFiber);\n  return root;\n}\n\nvar ReactVersion = '18.2.0';\n\nfunction createPortal(children, containerInfo, // TODO: figure out the API for cross-renderer implementation.\nimplementation) {\n  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  {\n    checkKeyStringCoercion(key);\n  }\n\n  return {\n    // This tag allow us to uniquely identify this as a React Portal\n    $$typeof: REACT_PORTAL_TYPE,\n    key: key == null ? null : '' + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\n\nvar didWarnAboutNestedUpdates;\nvar didWarnAboutFindNodeInStrictMode;\n\n{\n  didWarnAboutNestedUpdates = false;\n  didWarnAboutFindNodeInStrictMode = {};\n}\n\nfunction getContextForSubtree(parentComponent) {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  var fiber = get(parentComponent);\n  var parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    var Component = fiber.type;\n\n    if (isContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction findHostInstanceWithWarning(component, methodName) {\n  {\n    var fiber = get(component);\n\n    if (fiber === undefined) {\n      if (typeof component.render === 'function') {\n        throw new Error('Unable to find node on an unmounted component.');\n      } else {\n        var keys = Object.keys(component).join(',');\n        throw new Error(\"Argument appears to not be a ReactComponent. Keys: \" + keys);\n      }\n    }\n\n    var hostFiber = findCurrentHostFiber(fiber);\n\n    if (hostFiber === null) {\n      return null;\n    }\n\n    if (hostFiber.mode & StrictLegacyMode) {\n      var componentName = getComponentNameFromFiber(fiber) || 'Component';\n\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\n        var previousFiber = current;\n\n        try {\n          setCurrentFiber(hostFiber);\n\n          if (fiber.mode & StrictLegacyMode) {\n            error('%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-find-node', methodName, methodName, componentName);\n          } else {\n            error('%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-find-node', methodName, methodName, componentName);\n          }\n        } finally {\n          // Ideally this should reset to previous but this shouldn't be called in\n          // render and there's another warning for that anyway.\n          if (previousFiber) {\n            setCurrentFiber(previousFiber);\n          } else {\n            resetCurrentFiber();\n          }\n        }\n      }\n    }\n\n    return hostFiber.stateNode;\n  }\n}\n\nfunction createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {\n  var hydrate = false;\n  var initialChildren = null;\n  return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);\n}\nfunction createHydrationContainer(initialChildren, // TODO: Remove `callback` when we delete legacy mode.\ncallback, containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {\n  var hydrate = true;\n  var root = createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError); // TODO: Move this to FiberRoot constructor\n\n  root.context = getContextForSubtree(null); // Schedule the initial render. In a hydration root, this is different from\n  // a regular update because the initial render must match was was rendered\n  // on the server.\n  // NOTE: This update intentionally doesn't have a payload. We're only using\n  // the update to schedule work on the root fiber (and, for legacy roots, to\n  // enqueue the callback if one is provided).\n\n  var current = root.current;\n  var eventTime = requestEventTime();\n  var lane = requestUpdateLane(current);\n  var update = createUpdate(eventTime, lane);\n  update.callback = callback !== undefined && callback !== null ? callback : null;\n  enqueueUpdate(current, update, lane);\n  scheduleInitialHydrationOnRoot(root, lane, eventTime);\n  return root;\n}\nfunction updateContainer(element, container, parentComponent, callback) {\n  {\n    onScheduleRoot(container, element);\n  }\n\n  var current$1 = container.current;\n  var eventTime = requestEventTime();\n  var lane = requestUpdateLane(current$1);\n\n  {\n    markRenderScheduled(lane);\n  }\n\n  var context = getContextForSubtree(parentComponent);\n\n  if (container.context === null) {\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n\n  {\n    if (isRendering && current !== null && !didWarnAboutNestedUpdates) {\n      didWarnAboutNestedUpdates = true;\n\n      error('Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\\n\\n' + 'Check the render method of %s.', getComponentNameFromFiber(current) || 'Unknown');\n    }\n  }\n\n  var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n\n  update.payload = {\n    element: element\n  };\n  callback = callback === undefined ? null : callback;\n\n  if (callback !== null) {\n    {\n      if (typeof callback !== 'function') {\n        error('render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback);\n      }\n    }\n\n    update.callback = callback;\n  }\n\n  var root = enqueueUpdate(current$1, update, lane);\n\n  if (root !== null) {\n    scheduleUpdateOnFiber(root, current$1, lane, eventTime);\n    entangleTransitions(root, current$1, lane);\n  }\n\n  return lane;\n}\nfunction getPublicRootInstance(container) {\n  var containerFiber = container.current;\n\n  if (!containerFiber.child) {\n    return null;\n  }\n\n  switch (containerFiber.child.tag) {\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n\n    default:\n      return containerFiber.child.stateNode;\n  }\n}\nfunction attemptSynchronousHydration$1(fiber) {\n  switch (fiber.tag) {\n    case HostRoot:\n      {\n        var root = fiber.stateNode;\n\n        if (isRootDehydrated(root)) {\n          // Flush the first scheduled \"update\".\n          var lanes = getHighestPriorityPendingLanes(root);\n          flushRoot(root, lanes);\n        }\n\n        break;\n      }\n\n    case SuspenseComponent:\n      {\n        flushSync(function () {\n          var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n          if (root !== null) {\n            var eventTime = requestEventTime();\n            scheduleUpdateOnFiber(root, fiber, SyncLane, eventTime);\n          }\n        }); // If we're still blocked after this, we need to increase\n        // the priority of any promises resolving within this\n        // boundary so that they next attempt also has higher pri.\n\n        var retryLane = SyncLane;\n        markRetryLaneIfNotHydrated(fiber, retryLane);\n        break;\n      }\n  }\n}\n\nfunction markRetryLaneImpl(fiber, retryLane) {\n  var suspenseState = fiber.memoizedState;\n\n  if (suspenseState !== null && suspenseState.dehydrated !== null) {\n    suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);\n  }\n} // Increases the priority of thenables when they resolve within this boundary.\n\n\nfunction markRetryLaneIfNotHydrated(fiber, retryLane) {\n  markRetryLaneImpl(fiber, retryLane);\n  var alternate = fiber.alternate;\n\n  if (alternate) {\n    markRetryLaneImpl(alternate, retryLane);\n  }\n}\nfunction attemptContinuousHydration$1(fiber) {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n\n  var lane = SelectiveHydrationLane;\n  var root = enqueueConcurrentRenderForLane(fiber, lane);\n\n  if (root !== null) {\n    var eventTime = requestEventTime();\n    scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n  }\n\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\nfunction attemptHydrationAtCurrentPriority$1(fiber) {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority other than synchronously flush it.\n    return;\n  }\n\n  var lane = requestUpdateLane(fiber);\n  var root = enqueueConcurrentRenderForLane(fiber, lane);\n\n  if (root !== null) {\n    var eventTime = requestEventTime();\n    scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n  }\n\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\nfunction findHostInstanceWithNoPortals(fiber) {\n  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);\n\n  if (hostFiber === null) {\n    return null;\n  }\n\n  return hostFiber.stateNode;\n}\n\nvar shouldErrorImpl = function (fiber) {\n  return null;\n};\n\nfunction shouldError(fiber) {\n  return shouldErrorImpl(fiber);\n}\n\nvar shouldSuspendImpl = function (fiber) {\n  return false;\n};\n\nfunction shouldSuspend(fiber) {\n  return shouldSuspendImpl(fiber);\n}\nvar overrideHookState = null;\nvar overrideHookStateDeletePath = null;\nvar overrideHookStateRenamePath = null;\nvar overrideProps = null;\nvar overridePropsDeletePath = null;\nvar overridePropsRenamePath = null;\nvar scheduleUpdate = null;\nvar setErrorHandler = null;\nvar setSuspenseHandler = null;\n\n{\n  var copyWithDeleteImpl = function (obj, path, index) {\n    var key = path[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n\n    if (index + 1 === path.length) {\n      if (isArray(updated)) {\n        updated.splice(key, 1);\n      } else {\n        delete updated[key];\n      }\n\n      return updated;\n    } // $FlowFixMe number or string is fine here\n\n\n    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n    return updated;\n  };\n\n  var copyWithDelete = function (obj, path) {\n    return copyWithDeleteImpl(obj, path, 0);\n  };\n\n  var copyWithRenameImpl = function (obj, oldPath, newPath, index) {\n    var oldKey = oldPath[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n\n    if (index + 1 === oldPath.length) {\n      var newKey = newPath[index]; // $FlowFixMe number or string is fine here\n\n      updated[newKey] = updated[oldKey];\n\n      if (isArray(updated)) {\n        updated.splice(oldKey, 1);\n      } else {\n        delete updated[oldKey];\n      }\n    } else {\n      // $FlowFixMe number or string is fine here\n      updated[oldKey] = copyWithRenameImpl( // $FlowFixMe number or string is fine here\n      obj[oldKey], oldPath, newPath, index + 1);\n    }\n\n    return updated;\n  };\n\n  var copyWithRename = function (obj, oldPath, newPath) {\n    if (oldPath.length !== newPath.length) {\n      warn('copyWithRename() expects paths of the same length');\n\n      return;\n    } else {\n      for (var i = 0; i < newPath.length - 1; i++) {\n        if (oldPath[i] !== newPath[i]) {\n          warn('copyWithRename() expects paths to be the same except for the deepest key');\n\n          return;\n        }\n      }\n    }\n\n    return copyWithRenameImpl(obj, oldPath, newPath, 0);\n  };\n\n  var copyWithSetImpl = function (obj, path, index, value) {\n    if (index >= path.length) {\n      return value;\n    }\n\n    var key = path[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj); // $FlowFixMe number or string is fine here\n\n    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n    return updated;\n  };\n\n  var copyWithSet = function (obj, path, value) {\n    return copyWithSetImpl(obj, path, 0, value);\n  };\n\n  var findHook = function (fiber, id) {\n    // For now, the \"id\" of stateful hooks is just the stateful hook index.\n    // This may change in the future with e.g. nested hooks.\n    var currentHook = fiber.memoizedState;\n\n    while (currentHook !== null && id > 0) {\n      currentHook = currentHook.next;\n      id--;\n    }\n\n    return currentHook;\n  }; // Support DevTools editable values for useState and useReducer.\n\n\n  overrideHookState = function (fiber, id, path, value) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithSet(hook.memoizedState, path, value);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  };\n\n  overrideHookStateDeletePath = function (fiber, id, path) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithDelete(hook.memoizedState, path);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  };\n\n  overrideHookStateRenamePath = function (fiber, id, oldPath, newPath) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n  }; // Support DevTools props for function components, forwardRef, memo, host components, etc.\n\n\n  overrideProps = function (fiber, path, value) {\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  overridePropsDeletePath = function (fiber, path) {\n    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  overridePropsRenamePath = function (fiber, oldPath, newPath) {\n    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  scheduleUpdate = function (fiber) {\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n\n    if (root !== null) {\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  setErrorHandler = function (newShouldErrorImpl) {\n    shouldErrorImpl = newShouldErrorImpl;\n  };\n\n  setSuspenseHandler = function (newShouldSuspendImpl) {\n    shouldSuspendImpl = newShouldSuspendImpl;\n  };\n}\n\nfunction findHostInstanceByFiber(fiber) {\n  var hostFiber = findCurrentHostFiber(fiber);\n\n  if (hostFiber === null) {\n    return null;\n  }\n\n  return hostFiber.stateNode;\n}\n\nfunction emptyFindFiberByHostInstance(instance) {\n  return null;\n}\n\nfunction getCurrentFiberForDevTools() {\n  return current;\n}\n\nfunction injectIntoDevTools(devToolsConfig) {\n  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;\n  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n  return injectInternals({\n    bundleType: devToolsConfig.bundleType,\n    version: devToolsConfig.version,\n    rendererPackageName: devToolsConfig.rendererPackageName,\n    rendererConfig: devToolsConfig.rendererConfig,\n    overrideHookState: overrideHookState,\n    overrideHookStateDeletePath: overrideHookStateDeletePath,\n    overrideHookStateRenamePath: overrideHookStateRenamePath,\n    overrideProps: overrideProps,\n    overridePropsDeletePath: overridePropsDeletePath,\n    overridePropsRenamePath: overridePropsRenamePath,\n    setErrorHandler: setErrorHandler,\n    setSuspenseHandler: setSuspenseHandler,\n    scheduleUpdate: scheduleUpdate,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber: findHostInstanceByFiber,\n    findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,\n    // React Refresh\n    findHostInstancesForRefresh:  findHostInstancesForRefresh ,\n    scheduleRefresh:  scheduleRefresh ,\n    scheduleRoot:  scheduleRoot ,\n    setRefreshHandler:  setRefreshHandler ,\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\n    getCurrentFiber:  getCurrentFiberForDevTools ,\n    // Enables DevTools to detect reconciler version rather than renderer version\n    // which may not match for third party renderers.\n    reconcilerVersion: ReactVersion\n  });\n}\n\n/* global reportError */\n\nvar defaultOnRecoverableError = typeof reportError === 'function' ? // In modern browsers, reportError will dispatch an error event,\n// emulating an uncaught JavaScript error.\nreportError : function (error) {\n  // In older browsers and test environments, fallback to console.error.\n  // eslint-disable-next-line react-internal/no-production-logging\n  console['error'](error);\n};\n\nfunction ReactDOMRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\n\nReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function (children) {\n  var root = this._internalRoot;\n\n  if (root === null) {\n    throw new Error('Cannot update an unmounted root.');\n  }\n\n  {\n    if (typeof arguments[1] === 'function') {\n      error('render(...): does not support the second callback argument. ' + 'To execute a side effect after rendering, declare it in a component body with useEffect().');\n    } else if (isValidContainer(arguments[1])) {\n      error('You passed a container to the second argument of root.render(...). ' + \"You don't need to pass it again since you already passed it to create the root.\");\n    } else if (typeof arguments[1] !== 'undefined') {\n      error('You passed a second argument to root.render(...) but it only accepts ' + 'one argument.');\n    }\n\n    var container = root.containerInfo;\n\n    if (container.nodeType !== COMMENT_NODE) {\n      var hostInstance = findHostInstanceWithNoPortals(root.current);\n\n      if (hostInstance) {\n        if (hostInstance.parentNode !== container) {\n          error('render(...): It looks like the React-rendered content of the ' + 'root container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + \"root.unmount() to empty a root's container.\");\n        }\n      }\n    }\n  }\n\n  updateContainer(children, root, null, null);\n};\n\nReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function () {\n  {\n    if (typeof arguments[0] === 'function') {\n      error('unmount(...): does not support a callback argument. ' + 'To execute a side effect after rendering, declare it in a component body with useEffect().');\n    }\n  }\n\n  var root = this._internalRoot;\n\n  if (root !== null) {\n    this._internalRoot = null;\n    var container = root.containerInfo;\n\n    {\n      if (isAlreadyRendering()) {\n        error('Attempted to synchronously unmount a root while React was already ' + 'rendering. React cannot finish unmounting the root until the ' + 'current render has completed, which may lead to a race condition.');\n      }\n    }\n\n    flushSync(function () {\n      updateContainer(null, root, null, null);\n    });\n    unmarkContainerAsRoot(container);\n  }\n};\n\nfunction createRoot(container, options) {\n  if (!isValidContainer(container)) {\n    throw new Error('createRoot(...): Target container is not a DOM element.');\n  }\n\n  warnIfReactDOMContainerInDEV(container);\n  var isStrictMode = false;\n  var concurrentUpdatesByDefaultOverride = false;\n  var identifierPrefix = '';\n  var onRecoverableError = defaultOnRecoverableError;\n  var transitionCallbacks = null;\n\n  if (options !== null && options !== undefined) {\n    {\n      if (options.hydrate) {\n        warn('hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.');\n      } else {\n        if (typeof options === 'object' && options !== null && options.$$typeof === REACT_ELEMENT_TYPE) {\n          error('You passed a JSX element to createRoot. You probably meant to ' + 'call root.render instead. ' + 'Example usage:\\n\\n' + '  let root = createRoot(domContainer);\\n' + '  root.render(<App />);');\n        }\n      }\n    }\n\n    if (options.unstable_strictMode === true) {\n      isStrictMode = true;\n    }\n\n    if (options.identifierPrefix !== undefined) {\n      identifierPrefix = options.identifierPrefix;\n    }\n\n    if (options.onRecoverableError !== undefined) {\n      onRecoverableError = options.onRecoverableError;\n    }\n\n    if (options.transitionCallbacks !== undefined) {\n      transitionCallbacks = options.transitionCallbacks;\n    }\n  }\n\n  var root = createContainer(container, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);\n  markContainerAsRoot(root.current, container);\n  var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;\n  listenToAllSupportedEvents(rootContainerElement);\n  return new ReactDOMRoot(root);\n}\n\nfunction ReactDOMHydrationRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\n\nfunction scheduleHydration(target) {\n  if (target) {\n    queueExplicitHydrationTarget(target);\n  }\n}\n\nReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;\nfunction hydrateRoot(container, initialChildren, options) {\n  if (!isValidContainer(container)) {\n    throw new Error('hydrateRoot(...): Target container is not a DOM element.');\n  }\n\n  warnIfReactDOMContainerInDEV(container);\n\n  {\n    if (initialChildren === undefined) {\n      error('Must provide initial children as second argument to hydrateRoot. ' + 'Example usage: hydrateRoot(domContainer, <App />)');\n    }\n  } // For now we reuse the whole bag of options since they contain\n  // the hydration callbacks.\n\n\n  var hydrationCallbacks = options != null ? options : null; // TODO: Delete this option\n\n  var mutableSources = options != null && options.hydratedSources || null;\n  var isStrictMode = false;\n  var concurrentUpdatesByDefaultOverride = false;\n  var identifierPrefix = '';\n  var onRecoverableError = defaultOnRecoverableError;\n\n  if (options !== null && options !== undefined) {\n    if (options.unstable_strictMode === true) {\n      isStrictMode = true;\n    }\n\n    if (options.identifierPrefix !== undefined) {\n      identifierPrefix = options.identifierPrefix;\n    }\n\n    if (options.onRecoverableError !== undefined) {\n      onRecoverableError = options.onRecoverableError;\n    }\n  }\n\n  var root = createHydrationContainer(initialChildren, null, container, ConcurrentRoot, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);\n  markContainerAsRoot(root.current, container); // This can't be a comment node since hydration doesn't work on comment nodes anyway.\n\n  listenToAllSupportedEvents(container);\n\n  if (mutableSources) {\n    for (var i = 0; i < mutableSources.length; i++) {\n      var mutableSource = mutableSources[i];\n      registerMutableSourceForHydration(root, mutableSource);\n    }\n  }\n\n  return new ReactDOMHydrationRoot(root);\n}\nfunction isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || !disableCommentsAsDOMContainers  ));\n} // TODO: Remove this function which also includes comment nodes.\n// We only use it in places that are currently more relaxed.\n\nfunction isValidContainerLegacy(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));\n}\n\nfunction warnIfReactDOMContainerInDEV(container) {\n  {\n    if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') {\n      error('createRoot(): Creating roots directly with document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try using a container element created ' + 'for your app.');\n    }\n\n    if (isContainerMarkedAsRoot(container)) {\n      if (container._reactRootContainer) {\n        error('You are calling ReactDOMClient.createRoot() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.');\n      } else {\n        error('You are calling ReactDOMClient.createRoot() on a container that ' + 'has already been passed to createRoot() before. Instead, call ' + 'root.render() on the existing root instead if you want to update it.');\n      }\n    }\n  }\n}\n\nvar ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;\nvar topLevelUpdateWarnings;\n\n{\n  topLevelUpdateWarnings = function (container) {\n    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {\n      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer.current);\n\n      if (hostInstance) {\n        if (hostInstance.parentNode !== container) {\n          error('render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.');\n        }\n      }\n    }\n\n    var isRootRenderedBySomeReact = !!container._reactRootContainer;\n    var rootEl = getReactRootElementInContainer(container);\n    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));\n\n    if (hasNonRootReactChild && !isRootRenderedBySomeReact) {\n      error('render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.');\n    }\n\n    if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') {\n      error('render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.');\n    }\n  };\n}\n\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOCUMENT_NODE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction noopOnRecoverableError() {// This isn't reachable because onRecoverableError isn't called in the\n  // legacy API.\n}\n\nfunction legacyCreateRootFromDOMContainer(container, initialChildren, parentComponent, callback, isHydrationContainer) {\n  if (isHydrationContainer) {\n    if (typeof callback === 'function') {\n      var originalCallback = callback;\n\n      callback = function () {\n        var instance = getPublicRootInstance(root);\n        originalCallback.call(instance);\n      };\n    }\n\n    var root = createHydrationContainer(initialChildren, callback, container, LegacyRoot, null, // hydrationCallbacks\n    false, // isStrictMode\n    false, // concurrentUpdatesByDefaultOverride,\n    '', // identifierPrefix\n    noopOnRecoverableError);\n    container._reactRootContainer = root;\n    markContainerAsRoot(root.current, container);\n    var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;\n    listenToAllSupportedEvents(rootContainerElement);\n    flushSync();\n    return root;\n  } else {\n    // First clear any existing content.\n    var rootSibling;\n\n    while (rootSibling = container.lastChild) {\n      container.removeChild(rootSibling);\n    }\n\n    if (typeof callback === 'function') {\n      var _originalCallback = callback;\n\n      callback = function () {\n        var instance = getPublicRootInstance(_root);\n\n        _originalCallback.call(instance);\n      };\n    }\n\n    var _root = createContainer(container, LegacyRoot, null, // hydrationCallbacks\n    false, // isStrictMode\n    false, // concurrentUpdatesByDefaultOverride,\n    '', // identifierPrefix\n    noopOnRecoverableError);\n\n    container._reactRootContainer = _root;\n    markContainerAsRoot(_root.current, container);\n\n    var _rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;\n\n    listenToAllSupportedEvents(_rootContainerElement); // Initial mount should not be batched.\n\n    flushSync(function () {\n      updateContainer(initialChildren, _root, parentComponent, callback);\n    });\n    return _root;\n  }\n}\n\nfunction warnOnInvalidCallback$1(callback, callerName) {\n  {\n    if (callback !== null && typeof callback !== 'function') {\n      error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);\n    }\n  }\n}\n\nfunction legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {\n  {\n    topLevelUpdateWarnings(container);\n    warnOnInvalidCallback$1(callback === undefined ? null : callback, 'render');\n  }\n\n  var maybeRoot = container._reactRootContainer;\n  var root;\n\n  if (!maybeRoot) {\n    // Initial mount\n    root = legacyCreateRootFromDOMContainer(container, children, parentComponent, callback, forceHydrate);\n  } else {\n    root = maybeRoot;\n\n    if (typeof callback === 'function') {\n      var originalCallback = callback;\n\n      callback = function () {\n        var instance = getPublicRootInstance(root);\n        originalCallback.call(instance);\n      };\n    } // Update\n\n\n    updateContainer(children, root, parentComponent, callback);\n  }\n\n  return getPublicRootInstance(root);\n}\n\nfunction findDOMNode(componentOrElement) {\n  {\n    var owner = ReactCurrentOwner$3.current;\n\n    if (owner !== null && owner.stateNode !== null) {\n      var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;\n\n      if (!warnedAboutRefsInRender) {\n        error('%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentNameFromType(owner.type) || 'A component');\n      }\n\n      owner.stateNode._warnedAboutRefsInRender = true;\n    }\n  }\n\n  if (componentOrElement == null) {\n    return null;\n  }\n\n  if (componentOrElement.nodeType === ELEMENT_NODE) {\n    return componentOrElement;\n  }\n\n  {\n    return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');\n  }\n}\nfunction hydrate(element, container, callback) {\n  {\n    error('ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot ' + 'instead. Until you switch to the new API, your app will behave as ' + \"if it's running React 17. Learn \" + 'more: https://reactjs.org/link/switch-to-createroot');\n  }\n\n  if (!isValidContainerLegacy(container)) {\n    throw new Error('Target container is not a DOM element.');\n  }\n\n  {\n    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;\n\n    if (isModernRoot) {\n      error('You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOMClient.createRoot(). This is not supported. ' + 'Did you mean to call hydrateRoot(container, element)?');\n    }\n  } // TODO: throw or warn if we couldn't hydrate?\n\n\n  return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);\n}\nfunction render(element, container, callback) {\n  {\n    error('ReactDOM.render is no longer supported in React 18. Use createRoot ' + 'instead. Until you switch to the new API, your app will behave as ' + \"if it's running React 17. Learn \" + 'more: https://reactjs.org/link/switch-to-createroot');\n  }\n\n  if (!isValidContainerLegacy(container)) {\n    throw new Error('Target container is not a DOM element.');\n  }\n\n  {\n    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;\n\n    if (isModernRoot) {\n      error('You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOMClient.createRoot(). This is not supported. ' + 'Did you mean to call root.render(element)?');\n    }\n  }\n\n  return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);\n}\nfunction unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {\n  {\n    error('ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported ' + 'in React 18. Consider using a portal instead. Until you switch to ' + \"the createRoot API, your app will behave as if it's running React \" + '17. Learn more: https://reactjs.org/link/switch-to-createroot');\n  }\n\n  if (!isValidContainerLegacy(containerNode)) {\n    throw new Error('Target container is not a DOM element.');\n  }\n\n  if (parentComponent == null || !has(parentComponent)) {\n    throw new Error('parentComponent must be a valid React Component');\n  }\n\n  return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);\n}\nfunction unmountComponentAtNode(container) {\n  if (!isValidContainerLegacy(container)) {\n    throw new Error('unmountComponentAtNode(...): Target container is not a DOM element.');\n  }\n\n  {\n    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;\n\n    if (isModernRoot) {\n      error('You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?');\n    }\n  }\n\n  if (container._reactRootContainer) {\n    {\n      var rootEl = getReactRootElementInContainer(container);\n      var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);\n\n      if (renderedByDifferentReact) {\n        error(\"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by another copy of React.');\n      }\n    } // Unmount should not be batched.\n\n\n    flushSync(function () {\n      legacyRenderSubtreeIntoContainer(null, null, container, false, function () {\n        // $FlowFixMe This should probably use `delete container._reactRootContainer`\n        container._reactRootContainer = null;\n        unmarkContainerAsRoot(container);\n      });\n    }); // If you call unmountComponentAtNode twice in quick succession, you'll\n    // get `true` twice. That's probably fine?\n\n    return true;\n  } else {\n    {\n      var _rootEl = getReactRootElementInContainer(container);\n\n      var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl)); // Check if the container itself is a React root node.\n\n      var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainerLegacy(container.parentNode) && !!container.parentNode._reactRootContainer;\n\n      if (hasNonRootReactChild) {\n        error(\"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.');\n      }\n    }\n\n    return false;\n  }\n}\n\nsetAttemptSynchronousHydration(attemptSynchronousHydration$1);\nsetAttemptContinuousHydration(attemptContinuousHydration$1);\nsetAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);\nsetGetCurrentUpdatePriority(getCurrentUpdatePriority);\nsetAttemptHydrationAtPriority(runWithPriority);\n\n{\n  if (typeof Map !== 'function' || // $FlowIssue Flow incorrectly thinks Map has no prototype\n  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || // $FlowIssue Flow incorrectly thinks Set has no prototype\n  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {\n    error('React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');\n  }\n}\n\nsetRestoreImplementation(restoreControlledState$3);\nsetBatchingImplementation(batchedUpdates$1, discreteUpdates, flushSync);\n\nfunction createPortal$1(children, container) {\n  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!isValidContainer(container)) {\n    throw new Error('Target container is not a DOM element.');\n  } // TODO: pass ReactDOM portal implementation as third argument\n  // $FlowFixMe The Flow type is opaque but there's no way to actually create it.\n\n\n  return createPortal(children, container, null, key);\n}\n\nfunction renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {\n  return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);\n}\n\nvar Internals = {\n  usingClientEntryPoint: false,\n  // Keep in sync with ReactTestUtils.js.\n  // This is an array for better minification.\n  Events: [getInstanceFromNode, getNodeFromInstance, getFiberCurrentPropsFromNode, enqueueStateRestore, restoreStateIfNeeded, batchedUpdates$1]\n};\n\nfunction createRoot$1(container, options) {\n  {\n    if (!Internals.usingClientEntryPoint && !false) {\n      error('You are importing createRoot from \"react-dom\" which is not supported. ' + 'You should instead import it from \"react-dom/client\".');\n    }\n  }\n\n  return createRoot(container, options);\n}\n\nfunction hydrateRoot$1(container, initialChildren, options) {\n  {\n    if (!Internals.usingClientEntryPoint && !false) {\n      error('You are importing hydrateRoot from \"react-dom\" which is not supported. ' + 'You should instead import it from \"react-dom/client\".');\n    }\n  }\n\n  return hydrateRoot(container, initialChildren, options);\n} // Overload the definition to the two valid signatures.\n// Warning, this opts-out of checking the function body.\n\n\n// eslint-disable-next-line no-redeclare\nfunction flushSync$1(fn) {\n  {\n    if (isAlreadyRendering()) {\n      error('flushSync was called from inside a lifecycle method. React cannot ' + 'flush when React is already rendering. Consider moving this call to ' + 'a scheduler task or micro task.');\n    }\n  }\n\n  return flushSync(fn);\n}\nvar foundDevTools = injectIntoDevTools({\n  findFiberByHostInstance: getClosestInstanceFromNode,\n  bundleType:  1 ,\n  version: ReactVersion,\n  rendererPackageName: 'react-dom'\n});\n\n{\n  if (!foundDevTools && canUseDOM && window.top === window.self) {\n    // If we're in Chrome or Firefox, provide a download link if not installed.\n    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n      var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.\n\n      if (/^(https?|file):$/.test(protocol)) {\n        // eslint-disable-next-line react-internal/no-production-logging\n        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://reactjs.org/link/react-devtools' + (protocol === 'file:' ? '\\nYou might need to use a local HTTP server (instead of file://): ' + 'https://reactjs.org/link/react-devtools-faq' : ''), 'font-weight:bold');\n      }\n    }\n  }\n}\n\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;\nexports.createPortal = createPortal$1;\nexports.createRoot = createRoot$1;\nexports.findDOMNode = findDOMNode;\nexports.flushSync = flushSync$1;\nexports.hydrate = hydrate;\nexports.hydrateRoot = hydrateRoot$1;\nexports.render = render;\nexports.unmountComponentAtNode = unmountComponentAtNode;\nexports.unstable_batchedUpdates = batchedUpdates$1;\nexports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;\nexports.version = ReactVersion;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @remix-run/router v1.7.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i],\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n  return matches;\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, null, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    if (error) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nclass ErrorResponse {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future = _extends({\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  let initialized =\n  // All initialMatches need to be loaded before we're ready.  If we have lazy\n  // functions around still then we'll need to run them in initialize()\n  !initialMatches.some(m => m.route.lazy) && (\n  // And we have to either have no loaders or have been provided hydrationData\n  !initialMatches.some(m => m.route.loader) || init.hydrationData != null);\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = [];\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked\n            init.history.go(delta);\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(subscriber => subscriber(state));\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState) {\n    var _location$state, _location$state2;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }));\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      // Create a GET request for the loaders\n      request = new Request(request.url, {\n        signal: request.signal\n      });\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, pendingActionData ? {\n      actionData: pendingActionData\n    } : {}, {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    });\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename);\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace = result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null\n      }, pendingActionData ? {\n        actionData: pendingActionData\n      } : {}, updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      return {\n        shortCircuited: true\n      };\n    }\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(rf => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData ? Object.keys(actionData).length === 0 ? {\n        actionData: null\n      } : {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach(rf => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }));\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error);\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher = getSubmittingFetcher(submission, existingFetcher);\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename);\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n      let loadingFetcher = getLoadingFetcher(submission);\n      state.fetchers.set(key, loadingFetcher);\n      updateState({\n        fetchers: new Map(state.fetchers)\n      });\n      return startRedirectNavigation(state, actionResult, {\n        submission,\n        isFetchActionRedirect: true\n      });\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, {\n      [match.route.id]: actionResult.data\n    }, undefined // No need to send through errors since we short circuit above\n    );\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      if (fetchControllers.has(staleKey)) {\n        abortFetcher(staleKey);\n      }\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(results);\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState(_extends({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)\n      }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher = getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined);\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match, matches, manifest, mapRouteProperties, basename);\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      fetchRedirectIds.add(key);\n      await startRedirectNavigation(state, result);\n      return;\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error\n        }\n      });\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    let doneFetcher = getDoneFetcher(result.data);\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(state, redirect, _temp) {\n    let {\n      submission,\n      replace,\n      isFetchActionRedirect\n    } = _temp === void 0 ? {} : _temp;\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n    let redirectLocation = createLocation(state.location, redirect.location, // TODO: This can be removed once we get rid of useTransition in Remix v2\n    _extends({\n      _isRedirect: true\n    }, isFetchActionRedirect ? {\n      _isFetchActionRedirect: true\n    } : {}));\n    invariant(redirectLocation, \"Expected a location on the redirect navigation\");\n    // Check if this an absolute external redirect that goes to a new origin\n    if (ABSOLUTE_URL_REGEX.test(redirect.location) && isBrowser) {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename = stripBasename(url.pathname, basename) == null;\n      if (routerWindow.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let activeSubmission = submission || getSubmissionFromNavigation(state.navigation);\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (redirectPreserveMethodStatusCodes.has(redirect.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: redirect.location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: getLoadingNavigation(redirectLocation),\n        fetcherSubmission: activeSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // If we have a submission, we will preserve it through the redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, activeSubmission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename)), ...fetchersToLoad.map(f => {\n      if (f.matches && f.match && f.controller) {\n        return callLoaderOrAction(\"loader\", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename);\n      } else {\n        let error = {\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        };\n        return error;\n      }\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, fetchersToLoad.map(f => f.controller ? f.controller.signal : null), true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => createUseMatchesMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(request, _temp2) {\n    let {\n      requestContext\n    } = _temp2 === void 0 ? {} : _temp2;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(request, _temp3) {\n    let {\n      routeId,\n      requestContext\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename, {\n        isStaticRequest: true,\n        isRouteRequest,\n        requestContext\n      });\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted\");\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, requestContext, undefined, {\n        [boundaryMatch.route.id]: result.error\n      });\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename, {\n      isStaticRequest: true,\n      isRouteRequest,\n      requestContext\n    }))]);\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted\");\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getPathContributingMatches(contextualMatches).map(m => m.pathnameBase), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Add an ?index param for matched index routes if we don't already have one\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate:\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired ||\n      // Clicked the same link, resubmitted a GET form\n      currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some(m => m.route.id === f.routeId)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They only set `defaultShouldRevalidate` on\n    // explicit revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n    //\n    // They automatically revalidate without even calling shouldRevalidate if:\n    // - They were cancelled\n    // - They're in the middle of their first load and therefore this is still\n    //   an initial load and not a revalidation\n    //\n    // If neither of those is true, then they _always_ check shouldRevalidate\n    let fetcher = state.fetchers.get(key);\n    let isPerformingInitialLoad = fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined &&\n    // If a fetcher.load redirected then it'll be \"loading\" without any data\n    // so ensure we're not processing the redirect from this fetcher\n    !fetchRedirectIds.has(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = cancelledFetcherLoads.includes(key) || isPerformingInitialLoad || shouldRevalidateLoader(fetcherMatch, _extends({\n      currentUrl,\n      currentParams: state.matches[state.matches.length - 1].params,\n      nextUrl,\n      nextParams: matches[matches.length - 1].params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate: isRevalidationRequired\n    }));\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\nasync function callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties, basename, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let resultType;\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([handler({\n      request,\n      params: match.params,\n      context: opts.requestContext\n    }), abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([runHandler(handler), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            data: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  if (isResponse(result)) {\n    let status = result.status;\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, true, location);\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\") ? new URL(currentUrl.protocol + location) : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null\n      };\n    }\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result\n      };\n    }\n    let data;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds);\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index];\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp4) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp4 === void 0 ? {} : _temp4;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponse(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(signal, \"Expected an AbortSignal for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n      \" _hasFetcherDoneAnything \": true\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n      \" _hasFetcherDoneAnything \": true\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n    \" _hasFetcherDoneAnything \": true\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n    \" _hasFetcherDoneAnything \": true\n  };\n  return fetcher;\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, ErrorResponse, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getPathContributingMatches as UNSAFE_getPathContributingMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * React Router v6.14.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  var _dataRouterState2;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (matches == null) {\n    var _dataRouterState;\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match;\n    // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useActionData must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state);\n}\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus;\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.14.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, Router, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, ErrorResponse, UNSAFE_invariant, joinPaths } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n  _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"submit\", \"relative\", \"preventScrollReset\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref3;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset\n    } = _ref4,\n    rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children\n    } = _ref5,\n    rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  let submit = useSubmit();\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    submit: submit,\n    ref: ref\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset\n    } = _ref6,\n    props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      relative,\n      preventScrollReset\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    router.navigate(options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType,\n      replace: options.replace,\n      fromRouteId: currentRouteId\n    });\n  }, [router, basename, currentRouteId]);\n}\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(fetcherKey, fetcherRouteId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType\n    });\n  }, [router, basename, fetcherKey, fetcherRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    let submit = useSubmitFetcher(fetcherKey, routeId);\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      submit: submit\n    }));\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher() {\n  var _route$matches;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref8) {\n  let {\n    when,\n    message\n  } = _ref8;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n","import react from 'react';\nimport reactDom from 'react-dom';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n\nfunction err(message) {\n  const error = new Error(message); // In V8, Error objects keep the closure scope chain alive until the\n  // err.stack property is accessed.\n\n  if (error.stack === undefined) {\n    // IE sets the stack only if error is thrown\n    try {\n      throw error;\n    } catch (_) {} // eslint-disable-line fb-www/no-unused-catch-bindings, no-empty\n\n  }\n\n  return error;\n}\n\nvar err_1 = err;\n\n// @oss-only\n\n\nvar Recoil_err = err_1;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n\n// Split declaration and implementation to allow this function to pretend to\n// check for actual instance of Promise instead of something with a `then`\n// method.\n// eslint-disable-next-line no-redeclare\nfunction isPromise(p) {\n  return !!p && typeof p.then === 'function';\n}\n\nvar Recoil_isPromise = isPromise;\n\nfunction nullthrows(x, message) {\n  if (x != null) {\n    return x;\n  }\n\n  throw Recoil_err(message !== null && message !== void 0 ? message : 'Got unexpected null or undefined');\n}\n\nvar Recoil_nullthrows = nullthrows;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass BaseLoadable {\n  getValue() {\n    throw Recoil_err('BaseLoadable');\n  }\n\n  toPromise() {\n    throw Recoil_err('BaseLoadable');\n  }\n\n  valueMaybe() {\n    throw Recoil_err('BaseLoadable');\n  }\n\n  valueOrThrow() {\n    // $FlowFixMe[prop-missing]\n    throw Recoil_err(`Loadable expected value, but in \"${this.state}\" state`);\n  }\n\n  promiseMaybe() {\n    throw Recoil_err('BaseLoadable');\n  }\n\n  promiseOrThrow() {\n    // $FlowFixMe[prop-missing]\n    throw Recoil_err(`Loadable expected promise, but in \"${this.state}\" state`);\n  }\n\n  errorMaybe() {\n    throw Recoil_err('BaseLoadable');\n  }\n\n  errorOrThrow() {\n    // $FlowFixMe[prop-missing]\n    throw Recoil_err(`Loadable expected error, but in \"${this.state}\" state`);\n  }\n\n  is(other) {\n    // $FlowFixMe[prop-missing]\n    return other.state === this.state && other.contents === this.contents;\n  }\n\n  map(_map) {\n    throw Recoil_err('BaseLoadable');\n  }\n\n}\n\nclass ValueLoadable extends BaseLoadable {\n  constructor(value) {\n    super();\n\n    _defineProperty(this, \"state\", 'hasValue');\n\n    _defineProperty(this, \"contents\", void 0);\n\n    this.contents = value;\n  }\n\n  getValue() {\n    return this.contents;\n  }\n\n  toPromise() {\n    return Promise.resolve(this.contents);\n  }\n\n  valueMaybe() {\n    return this.contents;\n  }\n\n  valueOrThrow() {\n    return this.contents;\n  }\n\n  promiseMaybe() {\n    return undefined;\n  }\n\n  errorMaybe() {\n    return undefined;\n  }\n\n  map(map) {\n    try {\n      const next = map(this.contents);\n      return Recoil_isPromise(next) ? loadableWithPromise(next) : isLoadable(next) ? next : loadableWithValue(next);\n    } catch (e) {\n      return Recoil_isPromise(e) ? // If we \"suspended\", then try again.\n      // errors and subsequent retries will be handled in 'loading' case\n      // $FlowFixMe[prop-missing]\n      loadableWithPromise(e.next(() => this.map(map))) : loadableWithError(e);\n    }\n  }\n\n}\n\nclass ErrorLoadable extends BaseLoadable {\n  constructor(error) {\n    super();\n\n    _defineProperty(this, \"state\", 'hasError');\n\n    _defineProperty(this, \"contents\", void 0);\n\n    this.contents = error;\n  }\n\n  getValue() {\n    throw this.contents;\n  }\n\n  toPromise() {\n    return Promise.reject(this.contents);\n  }\n\n  valueMaybe() {\n    return undefined;\n  }\n\n  promiseMaybe() {\n    return undefined;\n  }\n\n  errorMaybe() {\n    return this.contents;\n  }\n\n  errorOrThrow() {\n    return this.contents;\n  }\n\n  map(_map) {\n    // $FlowIssue[incompatible-return]\n    return this;\n  }\n\n}\n\nclass LoadingLoadable extends BaseLoadable {\n  constructor(promise) {\n    super();\n\n    _defineProperty(this, \"state\", 'loading');\n\n    _defineProperty(this, \"contents\", void 0);\n\n    this.contents = promise;\n  }\n\n  getValue() {\n    throw this.contents;\n  }\n\n  toPromise() {\n    return this.contents;\n  }\n\n  valueMaybe() {\n    return undefined;\n  }\n\n  promiseMaybe() {\n    return this.contents;\n  }\n\n  promiseOrThrow() {\n    return this.contents;\n  }\n\n  errorMaybe() {\n    return undefined;\n  }\n\n  map(map) {\n    return loadableWithPromise(this.contents.then(value => {\n      const next = map(value);\n\n      if (isLoadable(next)) {\n        const nextLoadable = next;\n\n        switch (nextLoadable.state) {\n          case 'hasValue':\n            return nextLoadable.contents;\n\n          case 'hasError':\n            throw nextLoadable.contents;\n\n          case 'loading':\n            return nextLoadable.contents;\n        }\n      } // $FlowIssue[incompatible-return]\n\n\n      return next;\n    }) // $FlowFixMe[incompatible-call]\n    .catch(e => {\n      if (Recoil_isPromise(e)) {\n        // we were \"suspended,\" try again\n        return e.then(() => this.map(map).contents);\n      }\n\n      throw e;\n    }));\n  }\n\n}\n\nfunction loadableWithValue(value) {\n  return Object.freeze(new ValueLoadable(value));\n}\n\nfunction loadableWithError(error) {\n  return Object.freeze(new ErrorLoadable(error));\n}\n\nfunction loadableWithPromise(promise) {\n  return Object.freeze(new LoadingLoadable(promise));\n}\n\nfunction loadableLoading() {\n  return Object.freeze(new LoadingLoadable(new Promise(() => {})));\n}\n\nfunction loadableAllArray(inputs) {\n  return inputs.every(i => i.state === 'hasValue') ? loadableWithValue(inputs.map(i => i.contents)) : inputs.some(i => i.state === 'hasError') ? loadableWithError(Recoil_nullthrows(inputs.find(i => i.state === 'hasError'), 'Invalid loadable passed to loadableAll').contents) : loadableWithPromise(Promise.all(inputs.map(i => i.contents)));\n}\n\nfunction loadableAll(inputs) {\n  const unwrapedInputs = Array.isArray(inputs) ? inputs : Object.getOwnPropertyNames(inputs).map(key => inputs[key]);\n  const normalizedInputs = unwrapedInputs.map(x => isLoadable(x) ? x : Recoil_isPromise(x) ? loadableWithPromise(x) : loadableWithValue(x));\n  const output = loadableAllArray(normalizedInputs);\n  return Array.isArray(inputs) ? // $FlowIssue[incompatible-return]\n  output : // Object.getOwnPropertyNames() has consistent key ordering with ES6\n  // $FlowIssue[incompatible-call]\n  output.map(outputs => Object.getOwnPropertyNames(inputs).reduce( // $FlowFixMe[invalid-computed-prop]\n  (out, key, idx) => ({ ...out,\n    [key]: outputs[idx]\n  }), {}));\n}\n\nfunction isLoadable(x) {\n  return x instanceof BaseLoadable;\n}\n\nconst LoadableStaticInterface = {\n  of: value => Recoil_isPromise(value) ? loadableWithPromise(value) : isLoadable(value) ? value : loadableWithValue(value),\n  error: error => loadableWithError(error),\n  // $FlowIssue[incompatible-return]\n  loading: () => loadableLoading(),\n  // $FlowIssue[unclear-type]\n  all: loadableAll,\n  isLoadable\n};\nvar Recoil_Loadable = {\n  loadableWithValue,\n  loadableWithError,\n  loadableWithPromise,\n  loadableLoading,\n  loadableAll,\n  isLoadable,\n  RecoilLoadable: LoadableStaticInterface\n};\n\nvar Recoil_Loadable_1 = Recoil_Loadable.loadableWithValue;\nvar Recoil_Loadable_2 = Recoil_Loadable.loadableWithError;\nvar Recoil_Loadable_3 = Recoil_Loadable.loadableWithPromise;\nvar Recoil_Loadable_4 = Recoil_Loadable.loadableLoading;\nvar Recoil_Loadable_5 = Recoil_Loadable.loadableAll;\nvar Recoil_Loadable_6 = Recoil_Loadable.isLoadable;\nvar Recoil_Loadable_7 = Recoil_Loadable.RecoilLoadable;\n\nvar Recoil_Loadable$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  loadableWithValue: Recoil_Loadable_1,\n  loadableWithError: Recoil_Loadable_2,\n  loadableWithPromise: Recoil_Loadable_3,\n  loadableLoading: Recoil_Loadable_4,\n  loadableAll: Recoil_Loadable_5,\n  isLoadable: Recoil_Loadable_6,\n  RecoilLoadable: Recoil_Loadable_7\n});\n\nconst env = {\n  RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED: true,\n  // Note: RECOIL_GKS_ENABLED settings will only be honored in OSS builds of Recoil\n  RECOIL_GKS_ENABLED: new Set(['recoil_hamt_2020', 'recoil_sync_external_store', 'recoil_suppress_rerender_in_callback', 'recoil_memory_managament_2020'])\n};\n\nfunction readProcessEnvBooleanFlag(name, set) {\n  var _process$env$name, _process$env$name$toL;\n\n  const sanitizedValue = (_process$env$name = process.env[name]) === null || _process$env$name === void 0 ? void 0 : (_process$env$name$toL = _process$env$name.toLowerCase()) === null || _process$env$name$toL === void 0 ? void 0 : _process$env$name$toL.trim();\n\n  if (sanitizedValue == null || sanitizedValue === '') {\n    return;\n  }\n\n  const allowedValues = ['true', 'false'];\n\n  if (!allowedValues.includes(sanitizedValue)) {\n    throw Recoil_err(`process.env.${name} value must be 'true', 'false', or empty: ${sanitizedValue}`);\n  }\n\n  set(sanitizedValue === 'true');\n}\n\nfunction readProcessEnvStringArrayFlag(name, set) {\n  var _process$env$name2;\n\n  const sanitizedValue = (_process$env$name2 = process.env[name]) === null || _process$env$name2 === void 0 ? void 0 : _process$env$name2.trim();\n\n  if (sanitizedValue == null || sanitizedValue === '') {\n    return;\n  }\n\n  set(sanitizedValue.split(/\\s*,\\s*|\\s+/));\n}\n/**\n * Allow NodeJS/NextJS/etc to set the initial state through process.env variable\n * Note:  we don't assume 'process' is available in all runtime environments\n *\n * @see https://github.com/facebookexperimental/Recoil/issues/733\n */\n\n\nfunction applyProcessEnvFlagOverrides() {\n  var _process;\n\n  // note: this check is needed in addition to the check below, runtime error will occur without it!\n  // eslint-disable-next-line fb-www/typeof-undefined\n  if (typeof process === 'undefined') {\n    return;\n  }\n\n  if (((_process = process) === null || _process === void 0 ? void 0 : _process.env) == null) {\n    return;\n  }\n\n  readProcessEnvBooleanFlag('RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED', value => {\n    env.RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED = value;\n  });\n  readProcessEnvStringArrayFlag('RECOIL_GKS_ENABLED', value => {\n    value.forEach(gk => {\n      env.RECOIL_GKS_ENABLED.add(gk);\n    });\n  });\n}\n\napplyProcessEnvFlagOverrides();\nvar Recoil_RecoilEnv = env;\n\nfunction Recoil_gkx_OSS(gk) {\n  return Recoil_RecoilEnv.RECOIL_GKS_ENABLED.has(gk);\n}\n\nRecoil_gkx_OSS.setPass = gk => {\n  Recoil_RecoilEnv.RECOIL_GKS_ENABLED.add(gk);\n};\n\nRecoil_gkx_OSS.setFail = gk => {\n  Recoil_RecoilEnv.RECOIL_GKS_ENABLED.delete(gk);\n};\n\nRecoil_gkx_OSS.clear = () => {\n  Recoil_RecoilEnv.RECOIL_GKS_ENABLED.clear();\n};\n\nvar Recoil_gkx = Recoil_gkx_OSS; // @oss-only\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n\nfunction recoverableViolation(message, _projectName, {\n  error\n} = {}) {\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(message, error);\n  }\n\n  return null;\n}\n\nvar recoverableViolation_1 = recoverableViolation;\n\n// @oss-only\n\n\nvar Recoil_recoverableViolation = recoverableViolation_1;\n\nvar _createMutableSource, _useMutableSource, _useSyncExternalStore;\n\n\n\n\n\n\n\nconst createMutableSource = // flowlint-next-line unclear-type:off\n(_createMutableSource = react.createMutableSource) !== null && _createMutableSource !== void 0 ? _createMutableSource : react.unstable_createMutableSource;\nconst useMutableSource = // flowlint-next-line unclear-type:off\n(_useMutableSource = react.useMutableSource) !== null && _useMutableSource !== void 0 ? _useMutableSource : react.unstable_useMutableSource; // https://github.com/reactwg/react-18/discussions/86\n\nconst useSyncExternalStore = // flowlint-next-line unclear-type:off\n(_useSyncExternalStore = react.useSyncExternalStore) !== null && _useSyncExternalStore !== void 0 ? _useSyncExternalStore : // flowlint-next-line unclear-type:off\nreact.unstable_useSyncExternalStore;\nlet ReactRendererVersionMismatchWarnOnce = false; // Check if the current renderer supports `useSyncExternalStore()`.\n// Since React goes through a proxy dispatcher and the current renderer can\n// change we can't simply check if `React.useSyncExternalStore()` is defined.\n\nfunction currentRendererSupportsUseSyncExternalStore() {\n  var _ReactCurrentDispatch;\n\n  // $FlowFixMe[incompatible-use]\n  const {\n    ReactCurrentDispatcher,\n    ReactCurrentOwner\n  } =\n  /* $FlowFixMe[prop-missing] This workaround was approved as a safer mechanism\n   * to detect if the current renderer supports useSyncExternalStore()\n   * https://fb.workplace.com/groups/reactjs/posts/9558682330846963/ */\n  react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  const dispatcher = (_ReactCurrentDispatch = ReactCurrentDispatcher === null || ReactCurrentDispatcher === void 0 ? void 0 : ReactCurrentDispatcher.current) !== null && _ReactCurrentDispatch !== void 0 ? _ReactCurrentDispatch : ReactCurrentOwner.currentDispatcher;\n  const isUseSyncExternalStoreSupported = dispatcher.useSyncExternalStore != null;\n\n  if (useSyncExternalStore && !isUseSyncExternalStoreSupported && !ReactRendererVersionMismatchWarnOnce) {\n    ReactRendererVersionMismatchWarnOnce = true;\n    Recoil_recoverableViolation('A React renderer without React 18+ API support is being used with React 18+.');\n  }\n\n  return isUseSyncExternalStoreSupported;\n}\n\n/**\n * mode: The React API and approach to use for syncing state with React\n * early: Re-renders from Recoil updates occur:\n *    1) earlier\n *    2) in sync with React updates in the same batch\n *    3) before transaction observers instead of after.\n * concurrent: Is the current mode compatible with Concurrent Mode and useTransition()\n */\nfunction reactMode() {\n  // NOTE: This mode is currently broken with some Suspense cases\n  // see Recoil_selector-test.js\n  if (Recoil_gkx('recoil_transition_support')) {\n    return {\n      mode: 'TRANSITION_SUPPORT',\n      early: true,\n      concurrent: true\n    };\n  }\n\n  if (Recoil_gkx('recoil_sync_external_store') && useSyncExternalStore != null) {\n    return {\n      mode: 'SYNC_EXTERNAL_STORE',\n      early: true,\n      concurrent: false\n    };\n  }\n\n  if (Recoil_gkx('recoil_mutable_source') && useMutableSource != null && typeof window !== 'undefined' && !window.$disableRecoilValueMutableSource_TEMP_HACK_DO_NOT_USE) {\n    return Recoil_gkx('recoil_suppress_rerender_in_callback') ? {\n      mode: 'MUTABLE_SOURCE',\n      early: true,\n      concurrent: true\n    } : {\n      mode: 'MUTABLE_SOURCE',\n      early: false,\n      concurrent: false\n    };\n  }\n\n  return Recoil_gkx('recoil_suppress_rerender_in_callback') ? {\n    mode: 'LEGACY',\n    early: true,\n    concurrent: false\n  } : {\n    mode: 'LEGACY',\n    early: false,\n    concurrent: false\n  };\n} // TODO Need to figure out if there is a standard/open-source equivalent to see if hot module replacement is happening:\n\n\nfunction isFastRefreshEnabled() {\n  // @fb-only: const {isAcceptingUpdate} = require('__debug');\n  // @fb-only: return typeof isAcceptingUpdate === 'function' && isAcceptingUpdate();\n  return false; // @oss-only\n}\n\nvar Recoil_ReactMode = {\n  createMutableSource,\n  useMutableSource,\n  useSyncExternalStore,\n  currentRendererSupportsUseSyncExternalStore,\n  reactMode,\n  isFastRefreshEnabled\n};\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n\n// eslint-disable-next-line no-unused-vars\nclass AbstractRecoilValue {\n  constructor(newKey) {\n    _defineProperty(this, \"key\", void 0);\n\n    this.key = newKey;\n  }\n\n  toJSON() {\n    return {\n      key: this.key\n    };\n  }\n\n}\n\nclass RecoilState extends AbstractRecoilValue {}\n\nclass RecoilValueReadOnly extends AbstractRecoilValue {}\n\nfunction isRecoilValue(x) {\n  return x instanceof RecoilState || x instanceof RecoilValueReadOnly;\n}\n\nvar Recoil_RecoilValue = {\n  AbstractRecoilValue,\n  RecoilState,\n  RecoilValueReadOnly,\n  isRecoilValue\n};\n\nvar Recoil_RecoilValue_1 = Recoil_RecoilValue.AbstractRecoilValue;\nvar Recoil_RecoilValue_2 = Recoil_RecoilValue.RecoilState;\nvar Recoil_RecoilValue_3 = Recoil_RecoilValue.RecoilValueReadOnly;\nvar Recoil_RecoilValue_4 = Recoil_RecoilValue.isRecoilValue;\n\nvar Recoil_RecoilValue$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AbstractRecoilValue: Recoil_RecoilValue_1,\n  RecoilState: Recoil_RecoilValue_2,\n  RecoilValueReadOnly: Recoil_RecoilValue_3,\n  isRecoilValue: Recoil_RecoilValue_4\n});\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n\nfunction sprintf(format, ...args) {\n  let index = 0;\n  return format.replace(/%s/g, () => String(args[index++]));\n}\n\nvar sprintf_1 = sprintf;\n\nfunction expectationViolation(format, ...args) {\n  if (process.env.NODE_ENV !== \"production\") {\n    const message = sprintf_1.call(null, format, ...args);\n    const error = new Error(message);\n    error.name = 'Expectation Violation';\n    console.error(error);\n  }\n}\n\nvar expectationViolation_1 = expectationViolation;\n\n// @oss-only\n\n\nvar Recoil_expectationViolation = expectationViolation_1;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n/**\n * Creates a new iterable whose output is generated by passing the input\n * iterable's values through the mapper function.\n */\n\nfunction mapIterable(iterable, callback) {\n  // Use generator to create iterable/iterator\n  return function* () {\n    let index = 0;\n\n    for (const value of iterable) {\n      yield callback(value, index++);\n    }\n  }();\n}\n\nvar Recoil_mapIterable = mapIterable;\n\nconst {\n  isFastRefreshEnabled: isFastRefreshEnabled$1\n} = Recoil_ReactMode;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass DefaultValue {}\n\nconst DEFAULT_VALUE = new DefaultValue();\n// flowlint-next-line unclear-type:off\nconst nodes = new Map(); // flowlint-next-line unclear-type:off\n\nconst recoilValues = new Map();\n/* eslint-disable no-redeclare */\n\nfunction recoilValuesForKeys(keys) {\n  return Recoil_mapIterable(keys, key => Recoil_nullthrows(recoilValues.get(key)));\n}\n\nfunction checkForDuplicateAtomKey(key) {\n  if (nodes.has(key)) {\n    const message = `Duplicate atom key \"${key}\". This is a FATAL ERROR in\n      production. But it is safe to ignore this warning if it occurred because of\n      hot module replacement.`;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      // TODO Figure this out for open-source\n      if (!isFastRefreshEnabled$1()) {\n        Recoil_expectationViolation(message, 'recoil');\n      }\n    } else {\n      // @fb-only: recoverableViolation(message, 'recoil');\n      console.warn(message); // @oss-only\n    }\n  }\n}\n\nfunction registerNode(node) {\n  if (Recoil_RecoilEnv.RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED) {\n    checkForDuplicateAtomKey(node.key);\n  }\n\n  nodes.set(node.key, node);\n  const recoilValue = node.set == null ? new Recoil_RecoilValue$1.RecoilValueReadOnly(node.key) : new Recoil_RecoilValue$1.RecoilState(node.key);\n  recoilValues.set(node.key, recoilValue);\n  return recoilValue;\n}\n/* eslint-enable no-redeclare */\n\n\nclass NodeMissingError extends Error {} // flowlint-next-line unclear-type:off\n\n\nfunction getNode(key) {\n  const node = nodes.get(key);\n\n  if (node == null) {\n    throw new NodeMissingError(`Missing definition for RecoilValue: \"${key}\"\"`);\n  }\n\n  return node;\n} // flowlint-next-line unclear-type:off\n\n\nfunction getNodeMaybe(key) {\n  return nodes.get(key);\n}\n\nconst configDeletionHandlers = new Map();\n\nfunction deleteNodeConfigIfPossible(key) {\n  var _node$shouldDeleteCon;\n\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  const node = nodes.get(key);\n\n  if (node !== null && node !== void 0 && (_node$shouldDeleteCon = node.shouldDeleteConfigOnRelease) !== null && _node$shouldDeleteCon !== void 0 && _node$shouldDeleteCon.call(node)) {\n    var _getConfigDeletionHan;\n\n    nodes.delete(key);\n    (_getConfigDeletionHan = getConfigDeletionHandler(key)) === null || _getConfigDeletionHan === void 0 ? void 0 : _getConfigDeletionHan();\n    configDeletionHandlers.delete(key);\n  }\n}\n\nfunction setConfigDeletionHandler(key, fn) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  if (fn === undefined) {\n    configDeletionHandlers.delete(key);\n  } else {\n    configDeletionHandlers.set(key, fn);\n  }\n}\n\nfunction getConfigDeletionHandler(key) {\n  return configDeletionHandlers.get(key);\n}\n\nvar Recoil_Node = {\n  nodes,\n  recoilValues,\n  registerNode,\n  getNode,\n  getNodeMaybe,\n  deleteNodeConfigIfPossible,\n  setConfigDeletionHandler,\n  getConfigDeletionHandler,\n  recoilValuesForKeys,\n  NodeMissingError,\n  DefaultValue,\n  DEFAULT_VALUE\n};\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n\nfunction enqueueExecution(s, f) {\n  f();\n}\n\nvar Recoil_Queue = {\n  enqueueExecution\n};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar hamt_1 = createCommonjsModule(function (module) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n/**\n    @fileOverview Hash Array Mapped Trie.\n\n    Code based on: https://github.com/exclipy/pdata\n*/\n\n\nvar hamt = {}; // export\n\n/* Configuration\n ******************************************************************************/\n\nvar SIZE = 5;\nvar BUCKET_SIZE = Math.pow(2, SIZE);\nvar MASK = BUCKET_SIZE - 1;\nvar MAX_INDEX_NODE = BUCKET_SIZE / 2;\nvar MIN_ARRAY_NODE = BUCKET_SIZE / 4;\n/*\n ******************************************************************************/\n\nvar nothing = {};\n\nvar constant = function constant(x) {\n  return function () {\n    return x;\n  };\n};\n/**\n    Get 32 bit hash of string.\n\n    Based on:\n    http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\n*/\n\n\nvar hash = hamt.hash = function (str) {\n  var type = typeof str === 'undefined' ? 'undefined' : _typeof(str);\n  if (type === 'number') return str;\n  if (type !== 'string') str += '';\n  var hash = 0;\n\n  for (var i = 0, len = str.length; i < len; ++i) {\n    var c = str.charCodeAt(i);\n    hash = (hash << 5) - hash + c | 0;\n  }\n\n  return hash;\n};\n/* Bit Ops\n ******************************************************************************/\n\n/**\n    Hamming weight.\n\n    Taken from: http://jsperf.com/hamming-weight\n*/\n\n\nvar popcount = function popcount(x) {\n  x -= x >> 1 & 0x55555555;\n  x = (x & 0x33333333) + (x >> 2 & 0x33333333);\n  x = x + (x >> 4) & 0x0f0f0f0f;\n  x += x >> 8;\n  x += x >> 16;\n  return x & 0x7f;\n};\n\nvar hashFragment = function hashFragment(shift, h) {\n  return h >>> shift & MASK;\n};\n\nvar toBitmap = function toBitmap(x) {\n  return 1 << x;\n};\n\nvar fromBitmap = function fromBitmap(bitmap, bit) {\n  return popcount(bitmap & bit - 1);\n};\n/* Array Ops\n ******************************************************************************/\n\n/**\n    Set a value in an array.\n\n    @param mutate Should the input array be mutated?\n    @param at Index to change.\n    @param v New value\n    @param arr Array.\n*/\n\n\nvar arrayUpdate = function arrayUpdate(mutate, at, v, arr) {\n  var out = arr;\n\n  if (!mutate) {\n    var len = arr.length;\n    out = new Array(len);\n\n    for (var i = 0; i < len; ++i) {\n      out[i] = arr[i];\n    }\n  }\n\n  out[at] = v;\n  return out;\n};\n/**\n    Remove a value from an array.\n\n    @param mutate Should the input array be mutated?\n    @param at Index to remove.\n    @param arr Array.\n*/\n\n\nvar arraySpliceOut = function arraySpliceOut(mutate, at, arr) {\n  var newLen = arr.length - 1;\n  var i = 0;\n  var g = 0;\n  var out = arr;\n\n  if (mutate) {\n    i = g = at;\n  } else {\n    out = new Array(newLen);\n\n    while (i < at) {\n      out[g++] = arr[i++];\n    }\n  }\n\n  ++i;\n\n  while (i <= newLen) {\n    out[g++] = arr[i++];\n  }\n\n  if (mutate) {\n    out.length = newLen;\n  }\n\n  return out;\n};\n/**\n    Insert a value into an array.\n\n    @param mutate Should the input array be mutated?\n    @param at Index to insert at.\n    @param v Value to insert,\n    @param arr Array.\n*/\n\n\nvar arraySpliceIn = function arraySpliceIn(mutate, at, v, arr) {\n  var len = arr.length;\n\n  if (mutate) {\n    var _i = len;\n\n    while (_i >= at) {\n      arr[_i--] = arr[_i];\n    }\n\n    arr[at] = v;\n    return arr;\n  }\n\n  var i = 0,\n      g = 0;\n  var out = new Array(len + 1);\n\n  while (i < at) {\n    out[g++] = arr[i++];\n  }\n\n  out[at] = v;\n\n  while (i < len) {\n    out[++g] = arr[i++];\n  }\n\n  return out;\n};\n/* Node Structures\n ******************************************************************************/\n\n\nvar LEAF = 1;\nvar COLLISION = 2;\nvar INDEX = 3;\nvar ARRAY = 4;\n/**\n    Empty node.\n*/\n\nvar empty = {\n  __hamt_isEmpty: true\n};\n\nvar isEmptyNode = function isEmptyNode(x) {\n  return x === empty || x && x.__hamt_isEmpty;\n};\n/**\n    Leaf holding a value.\n\n    @member edit Edit of the node.\n    @member hash Hash of key.\n    @member key Key.\n    @member value Value stored.\n*/\n\n\nvar Leaf = function Leaf(edit, hash, key, value) {\n  return {\n    type: LEAF,\n    edit: edit,\n    hash: hash,\n    key: key,\n    value: value,\n    _modify: Leaf__modify\n  };\n};\n/**\n    Leaf holding multiple values with the same hash but different keys.\n\n    @member edit Edit of the node.\n    @member hash Hash of key.\n    @member children Array of collision children node.\n*/\n\n\nvar Collision = function Collision(edit, hash, children) {\n  return {\n    type: COLLISION,\n    edit: edit,\n    hash: hash,\n    children: children,\n    _modify: Collision__modify\n  };\n};\n/**\n    Internal node with a sparse set of children.\n\n    Uses a bitmap and array to pack children.\n\n  @member edit Edit of the node.\n    @member mask Bitmap that encode the positions of children in the array.\n    @member children Array of child nodes.\n*/\n\n\nvar IndexedNode = function IndexedNode(edit, mask, children) {\n  return {\n    type: INDEX,\n    edit: edit,\n    mask: mask,\n    children: children,\n    _modify: IndexedNode__modify\n  };\n};\n/**\n    Internal node with many children.\n\n    @member edit Edit of the node.\n    @member size Number of children.\n    @member children Array of child nodes.\n*/\n\n\nvar ArrayNode = function ArrayNode(edit, size, children) {\n  return {\n    type: ARRAY,\n    edit: edit,\n    size: size,\n    children: children,\n    _modify: ArrayNode__modify\n  };\n};\n/**\n    Is `node` a leaf node?\n*/\n\n\nvar isLeaf = function isLeaf(node) {\n  return node === empty || node.type === LEAF || node.type === COLLISION;\n};\n/* Internal node operations.\n ******************************************************************************/\n\n/**\n    Expand an indexed node into an array node.\n\n  @param edit Current edit.\n    @param frag Index of added child.\n    @param child Added child.\n    @param mask Index node mask before child added.\n    @param subNodes Index node children before child added.\n*/\n\n\nvar expand = function expand(edit, frag, child, bitmap, subNodes) {\n  var arr = [];\n  var bit = bitmap;\n  var count = 0;\n\n  for (var i = 0; bit; ++i) {\n    if (bit & 1) arr[i] = subNodes[count++];\n    bit >>>= 1;\n  }\n\n  arr[frag] = child;\n  return ArrayNode(edit, count + 1, arr);\n};\n/**\n    Collapse an array node into a indexed node.\n\n  @param edit Current edit.\n    @param count Number of elements in new array.\n    @param removed Index of removed element.\n    @param elements Array node children before remove.\n*/\n\n\nvar pack = function pack(edit, count, removed, elements) {\n  var children = new Array(count - 1);\n  var g = 0;\n  var bitmap = 0;\n\n  for (var i = 0, len = elements.length; i < len; ++i) {\n    if (i !== removed) {\n      var elem = elements[i];\n\n      if (elem && !isEmptyNode(elem)) {\n        children[g++] = elem;\n        bitmap |= 1 << i;\n      }\n    }\n  }\n\n  return IndexedNode(edit, bitmap, children);\n};\n/**\n    Merge two leaf nodes.\n\n    @param shift Current shift.\n    @param h1 Node 1 hash.\n    @param n1 Node 1.\n    @param h2 Node 2 hash.\n    @param n2 Node 2.\n*/\n\n\nvar mergeLeaves = function mergeLeaves(edit, shift, h1, n1, h2, n2) {\n  if (h1 === h2) return Collision(edit, h1, [n2, n1]);\n  var subH1 = hashFragment(shift, h1);\n  var subH2 = hashFragment(shift, h2);\n  return IndexedNode(edit, toBitmap(subH1) | toBitmap(subH2), subH1 === subH2 ? [mergeLeaves(edit, shift + SIZE, h1, n1, h2, n2)] : subH1 < subH2 ? [n1, n2] : [n2, n1]);\n};\n/**\n    Update an entry in a collision list.\n\n    @param mutate Should mutation be used?\n    @param edit Current edit.\n    @param keyEq Key compare function.\n    @param hash Hash of collision.\n    @param list Collision list.\n    @param f Update function.\n    @param k Key to update.\n    @param size Size ref.\n*/\n\n\nvar updateCollisionList = function updateCollisionList(mutate, edit, keyEq, h, list, f, k, size) {\n  var len = list.length;\n\n  for (var i = 0; i < len; ++i) {\n    var child = list[i];\n\n    if (keyEq(k, child.key)) {\n      var value = child.value;\n\n      var _newValue = f(value);\n\n      if (_newValue === value) return list;\n\n      if (_newValue === nothing) {\n        --size.value;\n        return arraySpliceOut(mutate, i, list);\n      }\n\n      return arrayUpdate(mutate, i, Leaf(edit, h, k, _newValue), list);\n    }\n  }\n\n  var newValue = f();\n  if (newValue === nothing) return list;\n  ++size.value;\n  return arrayUpdate(mutate, len, Leaf(edit, h, k, newValue), list);\n};\n\nvar canEditNode = function canEditNode(edit, node) {\n  return edit === node.edit;\n};\n/* Editing\n ******************************************************************************/\n\n\nvar Leaf__modify = function Leaf__modify(edit, keyEq, shift, f, h, k, size) {\n  if (keyEq(k, this.key)) {\n    var _v = f(this.value);\n\n    if (_v === this.value) return this;else if (_v === nothing) {\n      --size.value;\n      return empty;\n    }\n\n    if (canEditNode(edit, this)) {\n      this.value = _v;\n      return this;\n    }\n\n    return Leaf(edit, h, k, _v);\n  }\n\n  var v = f();\n  if (v === nothing) return this;\n  ++size.value;\n  return mergeLeaves(edit, shift, this.hash, this, h, Leaf(edit, h, k, v));\n};\n\nvar Collision__modify = function Collision__modify(edit, keyEq, shift, f, h, k, size) {\n  if (h === this.hash) {\n    var canEdit = canEditNode(edit, this);\n    var list = updateCollisionList(canEdit, edit, keyEq, this.hash, this.children, f, k, size);\n    if (list === this.children) return this;\n    return list.length > 1 ? Collision(edit, this.hash, list) : list[0]; // collapse single element collision list\n  }\n\n  var v = f();\n  if (v === nothing) return this;\n  ++size.value;\n  return mergeLeaves(edit, shift, this.hash, this, h, Leaf(edit, h, k, v));\n};\n\nvar IndexedNode__modify = function IndexedNode__modify(edit, keyEq, shift, f, h, k, size) {\n  var mask = this.mask;\n  var children = this.children;\n  var frag = hashFragment(shift, h);\n  var bit = toBitmap(frag);\n  var indx = fromBitmap(mask, bit);\n  var exists = mask & bit;\n  var current = exists ? children[indx] : empty;\n\n  var child = current._modify(edit, keyEq, shift + SIZE, f, h, k, size);\n\n  if (current === child) return this;\n  var canEdit = canEditNode(edit, this);\n  var bitmap = mask;\n  var newChildren = void 0;\n\n  if (exists && isEmptyNode(child)) {\n    // remove\n    bitmap &= ~bit;\n    if (!bitmap) return empty;\n    if (children.length <= 2 && isLeaf(children[indx ^ 1])) return children[indx ^ 1]; // collapse\n\n    newChildren = arraySpliceOut(canEdit, indx, children);\n  } else if (!exists && !isEmptyNode(child)) {\n    // add\n    if (children.length >= MAX_INDEX_NODE) return expand(edit, frag, child, mask, children);\n    bitmap |= bit;\n    newChildren = arraySpliceIn(canEdit, indx, child, children);\n  } else {\n    // modify\n    newChildren = arrayUpdate(canEdit, indx, child, children);\n  }\n\n  if (canEdit) {\n    this.mask = bitmap;\n    this.children = newChildren;\n    return this;\n  }\n\n  return IndexedNode(edit, bitmap, newChildren);\n};\n\nvar ArrayNode__modify = function ArrayNode__modify(edit, keyEq, shift, f, h, k, size) {\n  var count = this.size;\n  var children = this.children;\n  var frag = hashFragment(shift, h);\n  var child = children[frag];\n\n  var newChild = (child || empty)._modify(edit, keyEq, shift + SIZE, f, h, k, size);\n\n  if (child === newChild) return this;\n  var canEdit = canEditNode(edit, this);\n  var newChildren = void 0;\n\n  if (isEmptyNode(child) && !isEmptyNode(newChild)) {\n    // add\n    ++count;\n    newChildren = arrayUpdate(canEdit, frag, newChild, children);\n  } else if (!isEmptyNode(child) && isEmptyNode(newChild)) {\n    // remove\n    --count;\n    if (count <= MIN_ARRAY_NODE) return pack(edit, count, frag, children);\n    newChildren = arrayUpdate(canEdit, frag, empty, children);\n  } else {\n    // modify\n    newChildren = arrayUpdate(canEdit, frag, newChild, children);\n  }\n\n  if (canEdit) {\n    this.size = count;\n    this.children = newChildren;\n    return this;\n  }\n\n  return ArrayNode(edit, count, newChildren);\n};\n\nempty._modify = function (edit, keyEq, shift, f, h, k, size) {\n  var v = f();\n  if (v === nothing) return empty;\n  ++size.value;\n  return Leaf(edit, h, k, v);\n};\n/*\n ******************************************************************************/\n\n\nfunction Map(editable, edit, config, root, size) {\n  this._editable = editable;\n  this._edit = edit;\n  this._config = config;\n  this._root = root;\n  this._size = size;\n}\n\nMap.prototype.setTree = function (newRoot, newSize) {\n  if (this._editable) {\n    this._root = newRoot;\n    this._size = newSize;\n    return this;\n  }\n\n  return newRoot === this._root ? this : new Map(this._editable, this._edit, this._config, newRoot, newSize);\n};\n/* Queries\n ******************************************************************************/\n\n/**\n    Lookup the value for `key` in `map` using a custom `hash`.\n\n    Returns the value or `alt` if none.\n*/\n\n\nvar tryGetHash = hamt.tryGetHash = function (alt, hash, key, map) {\n  var node = map._root;\n  var shift = 0;\n  var keyEq = map._config.keyEq;\n\n  while (true) {\n    switch (node.type) {\n      case LEAF:\n        {\n          return keyEq(key, node.key) ? node.value : alt;\n        }\n\n      case COLLISION:\n        {\n          if (hash === node.hash) {\n            var children = node.children;\n\n            for (var i = 0, len = children.length; i < len; ++i) {\n              var child = children[i];\n              if (keyEq(key, child.key)) return child.value;\n            }\n          }\n\n          return alt;\n        }\n\n      case INDEX:\n        {\n          var frag = hashFragment(shift, hash);\n          var bit = toBitmap(frag);\n\n          if (node.mask & bit) {\n            node = node.children[fromBitmap(node.mask, bit)];\n            shift += SIZE;\n            break;\n          }\n\n          return alt;\n        }\n\n      case ARRAY:\n        {\n          node = node.children[hashFragment(shift, hash)];\n\n          if (node) {\n            shift += SIZE;\n            break;\n          }\n\n          return alt;\n        }\n\n      default:\n        return alt;\n    }\n  }\n};\n\nMap.prototype.tryGetHash = function (alt, hash, key) {\n  return tryGetHash(alt, hash, key, this);\n};\n/**\n    Lookup the value for `key` in `map` using internal hash function.\n\n    @see `tryGetHash`\n*/\n\n\nvar tryGet = hamt.tryGet = function (alt, key, map) {\n  return tryGetHash(alt, map._config.hash(key), key, map);\n};\n\nMap.prototype.tryGet = function (alt, key) {\n  return tryGet(alt, key, this);\n};\n/**\n    Lookup the value for `key` in `map` using a custom `hash`.\n\n    Returns the value or `undefined` if none.\n*/\n\n\nvar getHash = hamt.getHash = function (hash, key, map) {\n  return tryGetHash(undefined, hash, key, map);\n};\n\nMap.prototype.getHash = function (hash, key) {\n  return getHash(hash, key, this);\n};\n/**\n    Lookup the value for `key` in `map` using internal hash function.\n\n    @see `get`\n*/\n\n\nvar get = hamt.get = function (key, map) {\n  return tryGetHash(undefined, map._config.hash(key), key, map);\n};\n\nMap.prototype.get = function (key, alt) {\n  return tryGet(alt, key, this);\n};\n/**\n    Does an entry exist for `key` in `map`? Uses custom `hash`.\n*/\n\n\nvar hasHash = hamt.has = function (hash, key, map) {\n  return tryGetHash(nothing, hash, key, map) !== nothing;\n};\n\nMap.prototype.hasHash = function (hash, key) {\n  return hasHash(hash, key, this);\n};\n/**\n    Does an entry exist for `key` in `map`? Uses internal hash function.\n*/\n\n\nvar has = hamt.has = function (key, map) {\n  return hasHash(map._config.hash(key), key, map);\n};\n\nMap.prototype.has = function (key) {\n  return has(key, this);\n};\n\nvar defKeyCompare = function defKeyCompare(x, y) {\n  return x === y;\n};\n/**\n    Create an empty map.\n\n    @param config Configuration.\n*/\n\n\nhamt.make = function (config) {\n  return new Map(0, 0, {\n    keyEq: config && config.keyEq || defKeyCompare,\n    hash: config && config.hash || hash\n  }, empty, 0);\n};\n/**\n    Empty map.\n*/\n\n\nhamt.empty = hamt.make();\n/**\n    Does `map` contain any elements?\n*/\n\nvar isEmpty = hamt.isEmpty = function (map) {\n  return map && !!isEmptyNode(map._root);\n};\n\nMap.prototype.isEmpty = function () {\n  return isEmpty(this);\n};\n/* Updates\n ******************************************************************************/\n\n/**\n    Alter the value stored for `key` in `map` using function `f` using\n    custom hash.\n\n    `f` is invoked with the current value for `k` if it exists,\n    or no arguments if no such value exists. `modify` will always either\n    update or insert a value into the map.\n\n    Returns a map with the modified value. Does not alter `map`.\n*/\n\n\nvar modifyHash = hamt.modifyHash = function (f, hash, key, map) {\n  var size = {\n    value: map._size\n  };\n\n  var newRoot = map._root._modify(map._editable ? map._edit : NaN, map._config.keyEq, 0, f, hash, key, size);\n\n  return map.setTree(newRoot, size.value);\n};\n\nMap.prototype.modifyHash = function (hash, key, f) {\n  return modifyHash(f, hash, key, this);\n};\n/**\n    Alter the value stored for `key` in `map` using function `f` using\n    internal hash function.\n\n    @see `modifyHash`\n*/\n\n\nvar modify = hamt.modify = function (f, key, map) {\n  return modifyHash(f, map._config.hash(key), key, map);\n};\n\nMap.prototype.modify = function (key, f) {\n  return modify(f, key, this);\n};\n/**\n    Store `value` for `key` in `map` using custom `hash`.\n\n    Returns a map with the modified value. Does not alter `map`.\n*/\n\n\nvar setHash = hamt.setHash = function (hash, key, value, map) {\n  return modifyHash(constant(value), hash, key, map);\n};\n\nMap.prototype.setHash = function (hash, key, value) {\n  return setHash(hash, key, value, this);\n};\n/**\n    Store `value` for `key` in `map` using internal hash function.\n\n    @see `setHash`\n*/\n\n\nvar set = hamt.set = function (key, value, map) {\n  return setHash(map._config.hash(key), key, value, map);\n};\n\nMap.prototype.set = function (key, value) {\n  return set(key, value, this);\n};\n/**\n    Remove the entry for `key` in `map`.\n\n    Returns a map with the value removed. Does not alter `map`.\n*/\n\n\nvar del = constant(nothing);\n\nvar removeHash = hamt.removeHash = function (hash, key, map) {\n  return modifyHash(del, hash, key, map);\n};\n\nMap.prototype.removeHash = Map.prototype.deleteHash = function (hash, key) {\n  return removeHash(hash, key, this);\n};\n/**\n    Remove the entry for `key` in `map` using internal hash function.\n\n    @see `removeHash`\n*/\n\n\nvar remove = hamt.remove = function (key, map) {\n  return removeHash(map._config.hash(key), key, map);\n};\n\nMap.prototype.remove = Map.prototype.delete = function (key) {\n  return remove(key, this);\n};\n/* Mutation\n ******************************************************************************/\n\n/**\n    Mark `map` as mutable.\n */\n\n\nvar beginMutation = hamt.beginMutation = function (map) {\n  return new Map(map._editable + 1, map._edit + 1, map._config, map._root, map._size);\n};\n\nMap.prototype.beginMutation = function () {\n  return beginMutation(this);\n};\n/**\n    Mark `map` as immutable.\n */\n\n\nvar endMutation = hamt.endMutation = function (map) {\n  map._editable = map._editable && map._editable - 1;\n  return map;\n};\n\nMap.prototype.endMutation = function () {\n  return endMutation(this);\n};\n/**\n    Mutate `map` within the context of `f`.\n    @param f\n    @param map HAMT\n*/\n\n\nvar mutate = hamt.mutate = function (f, map) {\n  var transient = beginMutation(map);\n  f(transient);\n  return endMutation(transient);\n};\n\nMap.prototype.mutate = function (f) {\n  return mutate(f, this);\n};\n/* Traversal\n ******************************************************************************/\n\n/**\n    Apply a continuation.\n*/\n\n\nvar appk = function appk(k) {\n  return k && lazyVisitChildren(k[0], k[1], k[2], k[3], k[4]);\n};\n/**\n    Recursively visit all values stored in an array of nodes lazily.\n*/\n\n\nvar lazyVisitChildren = function lazyVisitChildren(len, children, i, f, k) {\n  while (i < len) {\n    var child = children[i++];\n    if (child && !isEmptyNode(child)) return lazyVisit(child, f, [len, children, i, f, k]);\n  }\n\n  return appk(k);\n};\n/**\n    Recursively visit all values stored in `node` lazily.\n*/\n\n\nvar lazyVisit = function lazyVisit(node, f, k) {\n  switch (node.type) {\n    case LEAF:\n      return {\n        value: f(node),\n        rest: k\n      };\n\n    case COLLISION:\n    case ARRAY:\n    case INDEX:\n      var children = node.children;\n      return lazyVisitChildren(children.length, children, 0, f, k);\n\n    default:\n      return appk(k);\n  }\n};\n\nvar DONE = {\n  done: true\n};\n/**\n    Javascript iterator over a map.\n*/\n\nfunction MapIterator(v) {\n  this.v = v;\n}\n\nMapIterator.prototype.next = function () {\n  if (!this.v) return DONE;\n  var v0 = this.v;\n  this.v = appk(v0.rest);\n  return v0;\n};\n\nMapIterator.prototype[Symbol.iterator] = function () {\n  return this;\n};\n/**\n    Lazily visit each value in map with function `f`.\n*/\n\n\nvar visit = function visit(map, f) {\n  return new MapIterator(lazyVisit(map._root, f));\n};\n/**\n    Get a Javascsript iterator of `map`.\n\n    Iterates over `[key, value]` arrays.\n*/\n\n\nvar buildPairs = function buildPairs(x) {\n  return [x.key, x.value];\n};\n\nvar entries = hamt.entries = function (map) {\n  return visit(map, buildPairs);\n};\n\nMap.prototype.entries = Map.prototype[Symbol.iterator] = function () {\n  return entries(this);\n};\n/**\n    Get array of all keys in `map`.\n\n    Order is not guaranteed.\n*/\n\n\nvar buildKeys = function buildKeys(x) {\n  return x.key;\n};\n\nvar keys = hamt.keys = function (map) {\n  return visit(map, buildKeys);\n};\n\nMap.prototype.keys = function () {\n  return keys(this);\n};\n/**\n    Get array of all values in `map`.\n\n    Order is not guaranteed, duplicates are preserved.\n*/\n\n\nvar buildValues = function buildValues(x) {\n  return x.value;\n};\n\nvar values = hamt.values = Map.prototype.values = function (map) {\n  return visit(map, buildValues);\n};\n\nMap.prototype.values = function () {\n  return values(this);\n};\n/* Fold\n ******************************************************************************/\n\n/**\n    Visit every entry in the map, aggregating data.\n\n    Order of nodes is not guaranteed.\n\n    @param f Function mapping accumulated value, value, and key to new value.\n    @param z Starting value.\n    @param m HAMT\n*/\n\n\nvar fold = hamt.fold = function (f, z, m) {\n  var root = m._root;\n  if (root.type === LEAF) return f(z, root.value, root.key);\n  var toVisit = [root.children];\n  var children = void 0;\n\n  while (children = toVisit.pop()) {\n    for (var i = 0, len = children.length; i < len;) {\n      var child = children[i++];\n\n      if (child && child.type) {\n        if (child.type === LEAF) z = f(z, child.value, child.key);else toVisit.push(child.children);\n      }\n    }\n  }\n\n  return z;\n};\n\nMap.prototype.fold = function (f, z) {\n  return fold(f, z, this);\n};\n/**\n    Visit every entry in the map, aggregating data.\n\n    Order of nodes is not guaranteed.\n\n    @param f Function invoked with value and key\n    @param map HAMT\n*/\n\n\nvar forEach = hamt.forEach = function (f, map) {\n  return fold(function (_, value, key) {\n    return f(value, key, map);\n  }, null, map);\n};\n\nMap.prototype.forEach = function (f) {\n  return forEach(f, this);\n};\n/* Aggregate\n ******************************************************************************/\n\n/**\n    Get the number of entries in `map`.\n*/\n\n\nvar count = hamt.count = function (map) {\n  return map._size;\n};\n\nMap.prototype.count = function () {\n  return count(this);\n};\n\nObject.defineProperty(Map.prototype, 'size', {\n  get: Map.prototype.count\n});\n/* Export\n ******************************************************************************/\n\nif ( module.exports) {\n  module.exports = hamt;\n} else {\n  undefined.hamt = hamt;\n}\n});\n\nclass BuiltInMap {\n  constructor(existing) {\n    _defineProperty(this, \"_map\", void 0);\n\n    this._map = new Map(existing === null || existing === void 0 ? void 0 : existing.entries());\n  }\n\n  keys() {\n    return this._map.keys();\n  }\n\n  entries() {\n    return this._map.entries();\n  }\n\n  get(k) {\n    return this._map.get(k);\n  }\n\n  has(k) {\n    return this._map.has(k);\n  }\n\n  set(k, v) {\n    this._map.set(k, v);\n\n    return this;\n  }\n\n  delete(k) {\n    this._map.delete(k);\n\n    return this;\n  }\n\n  clone() {\n    return persistentMap(this);\n  }\n\n  toMap() {\n    return new Map(this._map);\n  }\n\n}\n\nclass HashArrayMappedTrieMap {\n  // Because hamt.empty is not a function there is no way to introduce type\n  // parameters on it, so empty is typed as HAMTPlusMap<string, mixed>.\n  // $FlowIssue\n  constructor(existing) {\n    _defineProperty(this, \"_hamt\", hamt_1.empty.beginMutation());\n\n    if (existing instanceof HashArrayMappedTrieMap) {\n      const h = existing._hamt.endMutation();\n\n      existing._hamt = h.beginMutation();\n      this._hamt = h.beginMutation();\n    } else if (existing) {\n      for (const [k, v] of existing.entries()) {\n        this._hamt.set(k, v);\n      }\n    }\n  }\n\n  keys() {\n    return this._hamt.keys();\n  }\n\n  entries() {\n    return this._hamt.entries();\n  }\n\n  get(k) {\n    return this._hamt.get(k);\n  }\n\n  has(k) {\n    return this._hamt.has(k);\n  }\n\n  set(k, v) {\n    this._hamt.set(k, v);\n\n    return this;\n  }\n\n  delete(k) {\n    this._hamt.delete(k);\n\n    return this;\n  }\n\n  clone() {\n    return persistentMap(this);\n  }\n\n  toMap() {\n    return new Map(this._hamt);\n  }\n\n}\n\nfunction persistentMap(existing) {\n  if (Recoil_gkx('recoil_hamt_2020')) {\n    return new HashArrayMappedTrieMap(existing);\n  } else {\n    return new BuiltInMap(existing);\n  }\n}\n\nvar Recoil_PersistentMap = {\n  persistentMap\n};\n\nvar Recoil_PersistentMap_1 = Recoil_PersistentMap.persistentMap;\n\nvar Recoil_PersistentMap$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  persistentMap: Recoil_PersistentMap_1\n});\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n/**\n * Returns a set containing all of the values from the first set that are not\n * present in any of the subsequent sets.\n *\n * Note: this is written procedurally (i.e., without filterSet) for performant\n * use in tight loops.\n */\n\nfunction differenceSets(set, ...setsWithValuesToRemove) {\n  const ret = new Set();\n\n  FIRST: for (const value of set) {\n    for (const otherSet of setsWithValuesToRemove) {\n      if (otherSet.has(value)) {\n        continue FIRST;\n      }\n    }\n\n    ret.add(value);\n  }\n\n  return ret;\n}\n\nvar Recoil_differenceSets = differenceSets;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n/**\n * Returns a new Map object with the same keys as the original, but with the\n * values replaced with the output of the given callback function.\n */\n\nfunction mapMap(map, callback) {\n  const result = new Map();\n  map.forEach((value, key) => {\n    result.set(key, callback(value, key));\n  });\n  return result;\n}\n\nvar Recoil_mapMap = mapMap;\n\nfunction makeGraph() {\n  return {\n    nodeDeps: new Map(),\n    nodeToNodeSubscriptions: new Map()\n  };\n}\n\nfunction cloneGraph(graph) {\n  return {\n    nodeDeps: Recoil_mapMap(graph.nodeDeps, s => new Set(s)),\n    nodeToNodeSubscriptions: Recoil_mapMap(graph.nodeToNodeSubscriptions, s => new Set(s))\n  };\n} // Note that this overwrites the deps of existing nodes, rather than unioning\n// the new deps with the old deps.\n\n\nfunction mergeDepsIntoGraph(key, newDeps, graph, // If olderGraph is given then we will not overwrite changes made to the given\n// graph compared with olderGraph:\nolderGraph) {\n  const {\n    nodeDeps,\n    nodeToNodeSubscriptions\n  } = graph;\n  const oldDeps = nodeDeps.get(key);\n\n  if (oldDeps && olderGraph && oldDeps !== olderGraph.nodeDeps.get(key)) {\n    return;\n  } // Update nodeDeps:\n\n\n  nodeDeps.set(key, newDeps); // Add new deps to nodeToNodeSubscriptions:\n\n  const addedDeps = oldDeps == null ? newDeps : Recoil_differenceSets(newDeps, oldDeps);\n\n  for (const dep of addedDeps) {\n    if (!nodeToNodeSubscriptions.has(dep)) {\n      nodeToNodeSubscriptions.set(dep, new Set());\n    }\n\n    const existing = Recoil_nullthrows(nodeToNodeSubscriptions.get(dep));\n    existing.add(key);\n  } // Remove removed deps from nodeToNodeSubscriptions:\n\n\n  if (oldDeps) {\n    const removedDeps = Recoil_differenceSets(oldDeps, newDeps);\n\n    for (const dep of removedDeps) {\n      if (!nodeToNodeSubscriptions.has(dep)) {\n        return;\n      }\n\n      const existing = Recoil_nullthrows(nodeToNodeSubscriptions.get(dep));\n      existing.delete(key);\n\n      if (existing.size === 0) {\n        nodeToNodeSubscriptions.delete(dep);\n      }\n    }\n  }\n}\n\nfunction saveDepsToStore(key, deps, store, version) {\n  var _storeState$nextTree, _storeState$previousT, _storeState$previousT2, _storeState$previousT3;\n\n  const storeState = store.getState();\n\n  if (!(version === storeState.currentTree.version || version === ((_storeState$nextTree = storeState.nextTree) === null || _storeState$nextTree === void 0 ? void 0 : _storeState$nextTree.version) || version === ((_storeState$previousT = storeState.previousTree) === null || _storeState$previousT === void 0 ? void 0 : _storeState$previousT.version))) {\n    Recoil_recoverableViolation('Tried to save dependencies to a discarded tree');\n  } // Merge the dependencies discovered into the store's dependency map\n  // for the version that was read:\n\n\n  const graph = store.getGraph(version);\n  mergeDepsIntoGraph(key, deps, graph); // If this version is not the latest version, also write these dependencies\n  // into later versions if they don't already have their own:\n\n  if (version === ((_storeState$previousT2 = storeState.previousTree) === null || _storeState$previousT2 === void 0 ? void 0 : _storeState$previousT2.version)) {\n    const currentGraph = store.getGraph(storeState.currentTree.version);\n    mergeDepsIntoGraph(key, deps, currentGraph, graph);\n  }\n\n  if (version === ((_storeState$previousT3 = storeState.previousTree) === null || _storeState$previousT3 === void 0 ? void 0 : _storeState$previousT3.version) || version === storeState.currentTree.version) {\n    var _storeState$nextTree2;\n\n    const nextVersion = (_storeState$nextTree2 = storeState.nextTree) === null || _storeState$nextTree2 === void 0 ? void 0 : _storeState$nextTree2.version;\n\n    if (nextVersion !== undefined) {\n      const nextGraph = store.getGraph(nextVersion);\n      mergeDepsIntoGraph(key, deps, nextGraph, graph);\n    }\n  }\n}\n\nvar Recoil_Graph = {\n  cloneGraph,\n  graph: makeGraph,\n  saveDepsToStore\n};\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n\nlet nextTreeStateVersion = 0;\n\nconst getNextTreeStateVersion = () => nextTreeStateVersion++;\n\nlet nextStoreID = 0;\n\nconst getNextStoreID = () => nextStoreID++;\n\nlet nextComponentID = 0;\n\nconst getNextComponentID = () => nextComponentID++;\n\nvar Recoil_Keys = {\n  getNextTreeStateVersion,\n  getNextStoreID,\n  getNextComponentID\n};\n\nconst {\n  persistentMap: persistentMap$1\n} = Recoil_PersistentMap$1;\n\nconst {\n  graph\n} = Recoil_Graph;\n\nconst {\n  getNextTreeStateVersion: getNextTreeStateVersion$1\n} = Recoil_Keys;\n\nfunction makeEmptyTreeState() {\n  const version = getNextTreeStateVersion$1();\n  return {\n    version,\n    stateID: version,\n    transactionMetadata: {},\n    dirtyAtoms: new Set(),\n    atomValues: persistentMap$1(),\n    nonvalidatedAtoms: persistentMap$1()\n  };\n}\n\nfunction makeEmptyStoreState() {\n  const currentTree = makeEmptyTreeState();\n  return {\n    currentTree,\n    nextTree: null,\n    previousTree: null,\n    commitDepth: 0,\n    knownAtoms: new Set(),\n    knownSelectors: new Set(),\n    transactionSubscriptions: new Map(),\n    nodeTransactionSubscriptions: new Map(),\n    nodeToComponentSubscriptions: new Map(),\n    queuedComponentCallbacks_DEPRECATED: [],\n    suspendedComponentResolvers: new Set(),\n    graphsByVersion: new Map().set(currentTree.version, graph()),\n    retention: {\n      referenceCounts: new Map(),\n      nodesRetainedByZone: new Map(),\n      retainablesToCheckForRelease: new Set()\n    },\n    nodeCleanupFunctions: new Map()\n  };\n}\n\nvar Recoil_State = {\n  makeEmptyTreeState,\n  makeEmptyStoreState,\n  getNextTreeStateVersion: getNextTreeStateVersion$1\n};\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n\nclass RetentionZone {}\n\nfunction retentionZone() {\n  return new RetentionZone();\n}\n\nvar Recoil_RetentionZone = {\n  RetentionZone,\n  retentionZone\n};\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Utilities for working with built-in Maps and Sets without mutating them.\n *\n * \n * @format\n * @oncall recoil\n */\n\nfunction setByAddingToSet(set, v) {\n  const next = new Set(set);\n  next.add(v);\n  return next;\n}\n\nfunction setByDeletingFromSet(set, v) {\n  const next = new Set(set);\n  next.delete(v);\n  return next;\n}\n\nfunction mapBySettingInMap(map, k, v) {\n  const next = new Map(map);\n  next.set(k, v);\n  return next;\n}\n\nfunction mapByUpdatingInMap(map, k, updater) {\n  const next = new Map(map);\n  next.set(k, updater(next.get(k)));\n  return next;\n}\n\nfunction mapByDeletingFromMap(map, k) {\n  const next = new Map(map);\n  next.delete(k);\n  return next;\n}\n\nfunction mapByDeletingMultipleFromMap(map, ks) {\n  const next = new Map(map);\n  ks.forEach(k => next.delete(k));\n  return next;\n}\n\nvar Recoil_CopyOnWrite = {\n  setByAddingToSet,\n  setByDeletingFromSet,\n  mapBySettingInMap,\n  mapByUpdatingInMap,\n  mapByDeletingFromMap,\n  mapByDeletingMultipleFromMap\n};\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n/**\n * Creates a new iterable whose output is generated by passing the input\n * iterable's values through the filter function.\n */\n\nfunction* filterIterable(iterable, predicate) {\n  // Use generator to create iterable/iterator\n  let index = 0;\n\n  for (const value of iterable) {\n    if (predicate(value, index++)) {\n      yield value;\n    }\n  }\n}\n\nvar Recoil_filterIterable = filterIterable;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n/**\n * Return a proxy object based on the provided base and factories objects.\n * The proxy will include all properties of the base object as-is.\n * The factories object contains callbacks to obtain the values of the properies\n * for its keys.\n *\n * This is useful for providing users an object where some properties may be\n * lazily computed only on first access.\n */\n// $FlowIssue[unclear-type]\n\nfunction lazyProxy(base, factories) {\n  const proxy = new Proxy(base, {\n    // Compute and cache lazy property if not already done.\n    get: (target, prop) => {\n      if (!(prop in target) && prop in factories) {\n        target[prop] = factories[prop]();\n      }\n\n      return target[prop];\n    },\n    // This method allows user to iterate keys as normal\n    ownKeys: target => {\n\n      return Object.keys(target);\n    }\n  }); // $FlowIssue[incompatible-return]\n\n  return proxy;\n}\n\nvar Recoil_lazyProxy = lazyProxy;\n\nconst {\n  getNode: getNode$1,\n  getNodeMaybe: getNodeMaybe$1,\n  recoilValuesForKeys: recoilValuesForKeys$1\n} = Recoil_Node;\n\nconst {\n  RetentionZone: RetentionZone$1\n} = Recoil_RetentionZone;\n\nconst {\n  setByAddingToSet: setByAddingToSet$1\n} = Recoil_CopyOnWrite;\n\n\n\n\n\n\n\n // flowlint-next-line unclear-type:off\n\n\nconst emptySet = Object.freeze(new Set());\n\nclass ReadOnlyRecoilValueError extends Error {}\n\nfunction initializeRetentionForNode(store, nodeKey, retainedBy) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return () => undefined;\n  }\n\n  const {\n    nodesRetainedByZone\n  } = store.getState().retention;\n\n  function addToZone(zone) {\n    let set = nodesRetainedByZone.get(zone);\n\n    if (!set) {\n      nodesRetainedByZone.set(zone, set = new Set());\n    }\n\n    set.add(nodeKey);\n  }\n\n  if (retainedBy instanceof RetentionZone$1) {\n    addToZone(retainedBy);\n  } else if (Array.isArray(retainedBy)) {\n    for (const zone of retainedBy) {\n      addToZone(zone);\n    }\n  }\n\n  return () => {\n    if (!Recoil_gkx('recoil_memory_managament_2020')) {\n      return;\n    }\n\n    const {\n      retention\n    } = store.getState();\n\n    function deleteFromZone(zone) {\n      const set = retention.nodesRetainedByZone.get(zone);\n      set === null || set === void 0 ? void 0 : set.delete(nodeKey);\n\n      if (set && set.size === 0) {\n        retention.nodesRetainedByZone.delete(zone);\n      }\n    }\n\n    if (retainedBy instanceof RetentionZone$1) {\n      deleteFromZone(retainedBy);\n    } else if (Array.isArray(retainedBy)) {\n      for (const zone of retainedBy) {\n        deleteFromZone(zone);\n      }\n    }\n  };\n}\n\nfunction initializeNodeIfNewToStore(store, treeState, key, trigger) {\n  const storeState = store.getState();\n\n  if (storeState.nodeCleanupFunctions.has(key)) {\n    return;\n  }\n\n  const node = getNode$1(key);\n  const retentionCleanup = initializeRetentionForNode(store, key, node.retainedBy);\n  const nodeCleanup = node.init(store, treeState, trigger);\n  storeState.nodeCleanupFunctions.set(key, () => {\n    nodeCleanup();\n    retentionCleanup();\n  });\n}\n\nfunction initializeNode(store, key, trigger) {\n  initializeNodeIfNewToStore(store, store.getState().currentTree, key, trigger);\n}\n\nfunction cleanUpNode(store, key) {\n  var _state$nodeCleanupFun;\n\n  const state = store.getState();\n  (_state$nodeCleanupFun = state.nodeCleanupFunctions.get(key)) === null || _state$nodeCleanupFun === void 0 ? void 0 : _state$nodeCleanupFun();\n  state.nodeCleanupFunctions.delete(key);\n} // Get the current value loadable of a node and update the state.\n// Update dependencies and subscriptions for selectors.\n// Update saved value validation for atoms.\n\n\nfunction getNodeLoadable(store, state, key) {\n  initializeNodeIfNewToStore(store, state, key, 'get');\n  return getNode$1(key).get(store, state);\n} // Peek at the current value loadable for a node without any evaluation or state change\n\n\nfunction peekNodeLoadable(store, state, key) {\n  return getNode$1(key).peek(store, state);\n} // Write value directly to state bypassing the Node interface as the node\n// definitions may not have been loaded yet when processing the initial snapshot.\n\n\nfunction setUnvalidatedAtomValue_DEPRECATED(state, key, newValue) {\n  var _node$invalidate;\n\n  const node = getNodeMaybe$1(key);\n  node === null || node === void 0 ? void 0 : (_node$invalidate = node.invalidate) === null || _node$invalidate === void 0 ? void 0 : _node$invalidate.call(node, state);\n  return { ...state,\n    atomValues: state.atomValues.clone().delete(key),\n    nonvalidatedAtoms: state.nonvalidatedAtoms.clone().set(key, newValue),\n    dirtyAtoms: setByAddingToSet$1(state.dirtyAtoms, key)\n  };\n} // Return the discovered dependencies and values to be written by setting\n// a node value. (Multiple values may be written due to selectors getting to\n// set upstreams; deps may be discovered because of reads in updater functions.)\n\n\nfunction setNodeValue(store, state, key, newValue) {\n  const node = getNode$1(key);\n\n  if (node.set == null) {\n    throw new ReadOnlyRecoilValueError(`Attempt to set read-only RecoilValue: ${key}`);\n  }\n\n  const set = node.set; // so flow doesn't lose the above refinement.\n\n  initializeNodeIfNewToStore(store, state, key, 'set');\n  return set(store, state, newValue);\n}\n\nfunction peekNodeInfo(store, state, key) {\n  const storeState = store.getState();\n  const graph = store.getGraph(state.version);\n  const type = getNode$1(key).nodeType;\n  return Recoil_lazyProxy({\n    type\n  }, {\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    loadable: () => peekNodeLoadable(store, state, key),\n    isActive: () => storeState.knownAtoms.has(key) || storeState.knownSelectors.has(key),\n    isSet: () => type === 'selector' ? false : state.atomValues.has(key),\n    isModified: () => state.dirtyAtoms.has(key),\n    // Report current dependencies.  If the node hasn't been evaluated, then\n    // dependencies may be missing based on the current state.\n    deps: () => {\n      var _graph$nodeDeps$get;\n\n      return recoilValuesForKeys$1((_graph$nodeDeps$get = graph.nodeDeps.get(key)) !== null && _graph$nodeDeps$get !== void 0 ? _graph$nodeDeps$get : []);\n    },\n    // Reports all \"current\" subscribers.  Evaluating other nodes or\n    // previous in-progress async evaluations may introduce new subscribers.\n    subscribers: () => {\n      var _storeState$nodeToCom, _storeState$nodeToCom2;\n\n      return {\n        nodes: recoilValuesForKeys$1(Recoil_filterIterable(getDownstreamNodes(store, state, new Set([key])), nodeKey => nodeKey !== key)),\n        components: Recoil_mapIterable((_storeState$nodeToCom = (_storeState$nodeToCom2 = storeState.nodeToComponentSubscriptions.get(key)) === null || _storeState$nodeToCom2 === void 0 ? void 0 : _storeState$nodeToCom2.values()) !== null && _storeState$nodeToCom !== void 0 ? _storeState$nodeToCom : [], ([name]) => ({\n          name\n        }))\n      };\n    }\n  });\n} // Find all of the recursively dependent nodes\n\n\nfunction getDownstreamNodes(store, state, keys) {\n  const visitedNodes = new Set();\n  const visitingNodes = Array.from(keys);\n  const graph = store.getGraph(state.version);\n\n  for (let key = visitingNodes.pop(); key; key = visitingNodes.pop()) {\n    var _graph$nodeToNodeSubs;\n\n    visitedNodes.add(key);\n    const subscribedNodes = (_graph$nodeToNodeSubs = graph.nodeToNodeSubscriptions.get(key)) !== null && _graph$nodeToNodeSubs !== void 0 ? _graph$nodeToNodeSubs : emptySet;\n\n    for (const downstreamNode of subscribedNodes) {\n      if (!visitedNodes.has(downstreamNode)) {\n        visitingNodes.push(downstreamNode);\n      }\n    }\n  }\n\n  return visitedNodes;\n}\n\nvar Recoil_FunctionalCore = {\n  getNodeLoadable,\n  peekNodeLoadable,\n  setNodeValue,\n  initializeNode,\n  cleanUpNode,\n  setUnvalidatedAtomValue_DEPRECATED,\n  peekNodeInfo,\n  getDownstreamNodes\n};\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n\nlet _invalidateMemoizedSnapshot = null;\n\nfunction setInvalidateMemoizedSnapshot(invalidate) {\n  _invalidateMemoizedSnapshot = invalidate;\n}\n\nfunction invalidateMemoizedSnapshot() {\n  var _invalidateMemoizedSn;\n\n  (_invalidateMemoizedSn = _invalidateMemoizedSnapshot) === null || _invalidateMemoizedSn === void 0 ? void 0 : _invalidateMemoizedSn();\n}\n\nvar Recoil_SnapshotCache = {\n  setInvalidateMemoizedSnapshot,\n  invalidateMemoizedSnapshot\n};\n\nconst {\n  getDownstreamNodes: getDownstreamNodes$1,\n  getNodeLoadable: getNodeLoadable$1,\n  setNodeValue: setNodeValue$1\n} = Recoil_FunctionalCore;\n\nconst {\n  getNextComponentID: getNextComponentID$1\n} = Recoil_Keys;\n\nconst {\n  getNode: getNode$2,\n  getNodeMaybe: getNodeMaybe$2\n} = Recoil_Node;\n\nconst {\n  DefaultValue: DefaultValue$1\n} = Recoil_Node;\n\nconst {\n  reactMode: reactMode$1\n} = Recoil_ReactMode;\n\nconst {\n  AbstractRecoilValue: AbstractRecoilValue$1,\n  RecoilState: RecoilState$1,\n  RecoilValueReadOnly: RecoilValueReadOnly$1,\n  isRecoilValue: isRecoilValue$1\n} = Recoil_RecoilValue$1;\n\nconst {\n  invalidateMemoizedSnapshot: invalidateMemoizedSnapshot$1\n} = Recoil_SnapshotCache;\n\n\n\n\n\n\n\nfunction getRecoilValueAsLoadable(store, {\n  key\n}, treeState = store.getState().currentTree) {\n  var _storeState$nextTree, _storeState$previousT;\n\n  // Reading from an older tree can cause bugs because the dependencies that we\n  // discover during the read are lost.\n  const storeState = store.getState();\n\n  if (!(treeState.version === storeState.currentTree.version || treeState.version === ((_storeState$nextTree = storeState.nextTree) === null || _storeState$nextTree === void 0 ? void 0 : _storeState$nextTree.version) || treeState.version === ((_storeState$previousT = storeState.previousTree) === null || _storeState$previousT === void 0 ? void 0 : _storeState$previousT.version))) {\n    Recoil_recoverableViolation('Tried to read from a discarded tree');\n  }\n\n  const loadable = getNodeLoadable$1(store, treeState, key);\n\n  if (loadable.state === 'loading') {\n    loadable.contents.catch(() => {\n      /**\n       * HACK: intercept thrown error here to prevent an uncaught promise exception. Ideally this would happen closer to selector\n       * execution (perhaps introducing a new ERROR class to be resolved by async selectors that are in an error state)\n       */\n      return;\n    });\n  }\n\n  return loadable;\n}\n\nfunction applyAtomValueWrites(atomValues, writes) {\n  const result = atomValues.clone();\n  writes.forEach((v, k) => {\n    if (v.state === 'hasValue' && v.contents instanceof DefaultValue$1) {\n      result.delete(k);\n    } else {\n      result.set(k, v);\n    }\n  });\n  return result;\n}\n\nfunction valueFromValueOrUpdater(store, state, {\n  key\n}, valueOrUpdater) {\n  if (typeof valueOrUpdater === 'function') {\n    // Updater form: pass in the current value. Throw if the current value\n    // is unavailable (namely when updating an async selector that's\n    // pending or errored):\n    const current = getNodeLoadable$1(store, state, key);\n\n    if (current.state === 'loading') {\n      const msg = `Tried to set atom or selector \"${key}\" using an updater function while the current state is pending, this is not currently supported.`;\n      Recoil_recoverableViolation(msg);\n      throw Recoil_err(msg);\n    } else if (current.state === 'hasError') {\n      throw current.contents;\n    } // T itself may be a function, so our refinement is not sufficient:\n\n\n    return valueOrUpdater(current.contents); // flowlint-line unclear-type:off\n  } else {\n    return valueOrUpdater;\n  }\n}\n\nfunction applyAction(store, state, action) {\n  if (action.type === 'set') {\n    const {\n      recoilValue,\n      valueOrUpdater\n    } = action;\n    const newValue = valueFromValueOrUpdater(store, state, recoilValue, valueOrUpdater);\n    const writes = setNodeValue$1(store, state, recoilValue.key, newValue);\n\n    for (const [key, loadable] of writes.entries()) {\n      writeLoadableToTreeState(state, key, loadable);\n    }\n  } else if (action.type === 'setLoadable') {\n    const {\n      recoilValue: {\n        key\n      },\n      loadable\n    } = action;\n    writeLoadableToTreeState(state, key, loadable);\n  } else if (action.type === 'markModified') {\n    const {\n      recoilValue: {\n        key\n      }\n    } = action;\n    state.dirtyAtoms.add(key);\n  } else if (action.type === 'setUnvalidated') {\n    var _node$invalidate;\n\n    // Write value directly to state bypassing the Node interface as the node\n    // definitions may not have been loaded yet when processing the initial snapshot.\n    const {\n      recoilValue: {\n        key\n      },\n      unvalidatedValue\n    } = action;\n    const node = getNodeMaybe$2(key);\n    node === null || node === void 0 ? void 0 : (_node$invalidate = node.invalidate) === null || _node$invalidate === void 0 ? void 0 : _node$invalidate.call(node, state);\n    state.atomValues.delete(key);\n    state.nonvalidatedAtoms.set(key, unvalidatedValue);\n    state.dirtyAtoms.add(key);\n  } else {\n    Recoil_recoverableViolation(`Unknown action ${action.type}`);\n  }\n}\n\nfunction writeLoadableToTreeState(state, key, loadable) {\n  if (loadable.state === 'hasValue' && loadable.contents instanceof DefaultValue$1) {\n    state.atomValues.delete(key);\n  } else {\n    state.atomValues.set(key, loadable);\n  }\n\n  state.dirtyAtoms.add(key);\n  state.nonvalidatedAtoms.delete(key);\n}\n\nfunction applyActionsToStore(store, actions) {\n  store.replaceState(state => {\n    const newState = copyTreeState(state);\n\n    for (const action of actions) {\n      applyAction(store, newState, action);\n    }\n\n    invalidateDownstreams(store, newState);\n    invalidateMemoizedSnapshot$1();\n    return newState;\n  });\n}\n\nfunction queueOrPerformStateUpdate(store, action) {\n  if (batchStack.length) {\n    const actionsByStore = batchStack[batchStack.length - 1];\n    let actions = actionsByStore.get(store);\n\n    if (!actions) {\n      actionsByStore.set(store, actions = []);\n    }\n\n    actions.push(action);\n  } else {\n    applyActionsToStore(store, [action]);\n  }\n}\n\nconst batchStack = [];\n\nfunction batchStart() {\n  const actionsByStore = new Map();\n  batchStack.push(actionsByStore);\n  return () => {\n    for (const [store, actions] of actionsByStore) {\n      applyActionsToStore(store, actions);\n    }\n\n    const popped = batchStack.pop();\n\n    if (popped !== actionsByStore) {\n      Recoil_recoverableViolation('Incorrect order of batch popping');\n    }\n  };\n}\n\nfunction copyTreeState(state) {\n  return { ...state,\n    atomValues: state.atomValues.clone(),\n    nonvalidatedAtoms: state.nonvalidatedAtoms.clone(),\n    dirtyAtoms: new Set(state.dirtyAtoms)\n  };\n}\n\nfunction invalidateDownstreams(store, state) {\n  // Inform any nodes that were changed or downstream of changes so that they\n  // can clear out any caches as needed due to the update:\n  const downstreams = getDownstreamNodes$1(store, state, state.dirtyAtoms);\n\n  for (const key of downstreams) {\n    var _getNodeMaybe, _getNodeMaybe$invalid;\n\n    (_getNodeMaybe = getNodeMaybe$2(key)) === null || _getNodeMaybe === void 0 ? void 0 : (_getNodeMaybe$invalid = _getNodeMaybe.invalidate) === null || _getNodeMaybe$invalid === void 0 ? void 0 : _getNodeMaybe$invalid.call(_getNodeMaybe, state);\n  }\n}\n\nfunction setRecoilValue(store, recoilValue, valueOrUpdater) {\n  queueOrPerformStateUpdate(store, {\n    type: 'set',\n    recoilValue,\n    valueOrUpdater\n  });\n}\n\nfunction setRecoilValueLoadable(store, recoilValue, loadable) {\n  if (loadable instanceof DefaultValue$1) {\n    return setRecoilValue(store, recoilValue, loadable);\n  }\n\n  queueOrPerformStateUpdate(store, {\n    type: 'setLoadable',\n    recoilValue,\n    loadable: loadable\n  });\n}\n\nfunction markRecoilValueModified(store, recoilValue) {\n  queueOrPerformStateUpdate(store, {\n    type: 'markModified',\n    recoilValue\n  });\n}\n\nfunction setUnvalidatedRecoilValue(store, recoilValue, unvalidatedValue) {\n  queueOrPerformStateUpdate(store, {\n    type: 'setUnvalidated',\n    recoilValue,\n    unvalidatedValue\n  });\n}\n\nfunction subscribeToRecoilValue(store, {\n  key\n}, callback, componentDebugName = null) {\n  const subID = getNextComponentID$1();\n  const storeState = store.getState();\n\n  if (!storeState.nodeToComponentSubscriptions.has(key)) {\n    storeState.nodeToComponentSubscriptions.set(key, new Map());\n  }\n\n  Recoil_nullthrows(storeState.nodeToComponentSubscriptions.get(key)).set(subID, [componentDebugName !== null && componentDebugName !== void 0 ? componentDebugName : '<not captured>', callback]); // Handle the case that, during the same tick that we are subscribing, an atom\n  // has been updated by some effect handler. Otherwise we will miss the update.\n\n  const mode = reactMode$1();\n\n  if (mode.early && (mode.mode === 'LEGACY' || mode.mode === 'MUTABLE_SOURCE')) {\n    const nextTree = store.getState().nextTree;\n\n    if (nextTree && nextTree.dirtyAtoms.has(key)) {\n      callback(nextTree);\n    }\n  }\n\n  return {\n    release: () => {\n      const releaseStoreState = store.getState();\n      const subs = releaseStoreState.nodeToComponentSubscriptions.get(key);\n\n      if (subs === undefined || !subs.has(subID)) {\n        Recoil_recoverableViolation(`Subscription missing at release time for atom ${key}. This is a bug in Recoil.`);\n        return;\n      }\n\n      subs.delete(subID);\n\n      if (subs.size === 0) {\n        releaseStoreState.nodeToComponentSubscriptions.delete(key);\n      }\n    }\n  };\n}\n\nfunction refreshRecoilValue(store, recoilValue) {\n  var _node$clearCache;\n\n  const {\n    currentTree\n  } = store.getState();\n  const node = getNode$2(recoilValue.key);\n  (_node$clearCache = node.clearCache) === null || _node$clearCache === void 0 ? void 0 : _node$clearCache.call(node, store, currentTree);\n}\n\nvar Recoil_RecoilValueInterface = {\n  RecoilValueReadOnly: RecoilValueReadOnly$1,\n  AbstractRecoilValue: AbstractRecoilValue$1,\n  RecoilState: RecoilState$1,\n  getRecoilValueAsLoadable,\n  setRecoilValue,\n  setRecoilValueLoadable,\n  markRecoilValueModified,\n  setUnvalidatedRecoilValue,\n  subscribeToRecoilValue,\n  isRecoilValue: isRecoilValue$1,\n  applyAtomValueWrites,\n  // TODO Remove export when deprecating initialStoreState_DEPRECATED in RecoilRoot\n  batchStart,\n  writeLoadableToTreeState,\n  invalidateDownstreams,\n  copyTreeState,\n  refreshRecoilValue\n};\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n/**\n * The someSet() method tests whether some elements in the given Set pass the\n * test implemented by the provided function.\n */\n\nfunction someSet(set, callback, context) {\n  const iterator = set.entries();\n  let current = iterator.next();\n\n  while (!current.done) {\n    const entry = current.value;\n\n    if (callback.call(context, entry[1], entry[0], set)) {\n      return true;\n    }\n\n    current = iterator.next();\n  }\n\n  return false;\n}\n\nvar Recoil_someSet = someSet;\n\nconst {\n  cleanUpNode: cleanUpNode$1\n} = Recoil_FunctionalCore;\n\nconst {\n  deleteNodeConfigIfPossible: deleteNodeConfigIfPossible$1,\n  getNode: getNode$3\n} = Recoil_Node;\n\nconst {\n  RetentionZone: RetentionZone$2\n} = Recoil_RetentionZone;\n\n\n\n\n\n\n\n // Components that aren't mounted after suspending for this long will be assumed\n// to be discarded and their resources released.\n\n\nconst SUSPENSE_TIMEOUT_MS = 120000;\nconst emptySet$1 = new Set();\n\nfunction releaseRetainablesNowOnCurrentTree(store, retainables) {\n  const storeState = store.getState();\n  const treeState = storeState.currentTree;\n\n  if (storeState.nextTree) {\n    Recoil_recoverableViolation('releaseNodesNowOnCurrentTree should only be called at the end of a batch');\n    return; // leak memory rather than erase something that's about to be used.\n  }\n\n  const nodes = new Set();\n\n  for (const r of retainables) {\n    if (r instanceof RetentionZone$2) {\n      for (const n of nodesRetainedByZone(storeState, r)) {\n        nodes.add(n);\n      }\n    } else {\n      nodes.add(r);\n    }\n  }\n\n  const releasableNodes = findReleasableNodes(store, nodes);\n\n  for (const node of releasableNodes) {\n    releaseNode(store, treeState, node);\n  }\n}\n\nfunction findReleasableNodes(store, searchFromNodes) {\n  const storeState = store.getState();\n  const treeState = storeState.currentTree;\n  const graph = store.getGraph(treeState.version);\n  const releasableNodes = new Set(); // mutated to collect answer\n\n  const nonReleasableNodes = new Set();\n  findReleasableNodesInner(searchFromNodes);\n  return releasableNodes;\n\n  function findReleasableNodesInner(searchFromNodes) {\n    const releasableNodesFoundThisIteration = new Set();\n    const downstreams = getDownstreamNodesInTopologicalOrder(store, treeState, searchFromNodes, releasableNodes, // don't descend into these\n    nonReleasableNodes // don't descend into these\n    ); // Find which of the downstream nodes are releasable and which are not:\n\n    for (const node of downstreams) {\n      var _storeState$retention;\n\n      // Not releasable if configured to be retained forever:\n      if (getNode$3(node).retainedBy === 'recoilRoot') {\n        nonReleasableNodes.add(node);\n        continue;\n      } // Not releasable if retained directly by a component:\n\n\n      if (((_storeState$retention = storeState.retention.referenceCounts.get(node)) !== null && _storeState$retention !== void 0 ? _storeState$retention : 0) > 0) {\n        nonReleasableNodes.add(node);\n        continue;\n      } // Not releasable if retained by a zone:\n\n\n      if (zonesThatCouldRetainNode(node).some(z => storeState.retention.referenceCounts.get(z))) {\n        nonReleasableNodes.add(node);\n        continue;\n      } // Not releasable if it has a non-releasable child (which will already be in\n      // nonReleasableNodes because we are going in topological order):\n\n\n      const nodeChildren = graph.nodeToNodeSubscriptions.get(node);\n\n      if (nodeChildren && Recoil_someSet(nodeChildren, child => nonReleasableNodes.has(child))) {\n        nonReleasableNodes.add(node);\n        continue;\n      }\n\n      releasableNodes.add(node);\n      releasableNodesFoundThisIteration.add(node);\n    } // If we found any releasable nodes, we need to walk UP from those nodes to\n    // find whether their parents can now be released as well:\n\n\n    const parents = new Set();\n\n    for (const node of releasableNodesFoundThisIteration) {\n      for (const parent of (_graph$nodeDeps$get = graph.nodeDeps.get(node)) !== null && _graph$nodeDeps$get !== void 0 ? _graph$nodeDeps$get : emptySet$1) {\n        var _graph$nodeDeps$get;\n\n        if (!releasableNodes.has(parent)) {\n          parents.add(parent);\n        }\n      }\n    }\n\n    if (parents.size) {\n      findReleasableNodesInner(parents);\n    }\n  }\n} // Children before parents\n\n\nfunction getDownstreamNodesInTopologicalOrder(store, treeState, nodes, // Mutable set is destroyed in place\ndoNotDescendInto1, doNotDescendInto2) {\n  const graph = store.getGraph(treeState.version);\n  const answer = [];\n  const visited = new Set();\n\n  while (nodes.size > 0) {\n    visit(Recoil_nullthrows(nodes.values().next().value));\n  }\n\n  return answer;\n\n  function visit(node) {\n    if (doNotDescendInto1.has(node) || doNotDescendInto2.has(node)) {\n      nodes.delete(node);\n      return;\n    }\n\n    if (visited.has(node)) {\n      return;\n    }\n\n    const children = graph.nodeToNodeSubscriptions.get(node);\n\n    if (children) {\n      for (const child of children) {\n        visit(child);\n      }\n    }\n\n    visited.add(node);\n    nodes.delete(node);\n    answer.push(node);\n  }\n}\n\nfunction releaseNode(store, treeState, node) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  } // Atom effects, in-closure caches, etc.:\n\n\n  cleanUpNode$1(store, node); // Delete from store state:\n\n  const storeState = store.getState();\n  storeState.knownAtoms.delete(node);\n  storeState.knownSelectors.delete(node);\n  storeState.nodeTransactionSubscriptions.delete(node);\n  storeState.retention.referenceCounts.delete(node);\n  const zones = zonesThatCouldRetainNode(node);\n\n  for (const zone of zones) {\n    var _storeState$retention2;\n\n    (_storeState$retention2 = storeState.retention.nodesRetainedByZone.get(zone)) === null || _storeState$retention2 === void 0 ? void 0 : _storeState$retention2.delete(node);\n  } // Note that we DO NOT delete from nodeToComponentSubscriptions because this\n  // already happens when the last component that was retaining the node unmounts,\n  // and this could happen either before or after that.\n  // Delete from TreeState and dep graph:\n\n\n  treeState.atomValues.delete(node);\n  treeState.dirtyAtoms.delete(node);\n  treeState.nonvalidatedAtoms.delete(node);\n  const graph = storeState.graphsByVersion.get(treeState.version);\n\n  if (graph) {\n    const deps = graph.nodeDeps.get(node);\n\n    if (deps !== undefined) {\n      graph.nodeDeps.delete(node);\n\n      for (const dep of deps) {\n        var _graph$nodeToNodeSubs;\n\n        (_graph$nodeToNodeSubs = graph.nodeToNodeSubscriptions.get(dep)) === null || _graph$nodeToNodeSubs === void 0 ? void 0 : _graph$nodeToNodeSubs.delete(node);\n      }\n    } // No need to delete sub's deps as there should be no subs at this point.\n    // But an invariant would require deleting nodes in topological order.\n\n\n    graph.nodeToNodeSubscriptions.delete(node);\n  } // Node config (for family members only as their configs can be recreated, and\n  // only if they are not retained within any other Stores):\n\n\n  deleteNodeConfigIfPossible$1(node);\n}\n\nfunction nodesRetainedByZone(storeState, zone) {\n  var _storeState$retention3;\n\n  return (_storeState$retention3 = storeState.retention.nodesRetainedByZone.get(zone)) !== null && _storeState$retention3 !== void 0 ? _storeState$retention3 : emptySet$1;\n}\n\nfunction zonesThatCouldRetainNode(node) {\n  const retainedBy = getNode$3(node).retainedBy;\n\n  if (retainedBy === undefined || retainedBy === 'components' || retainedBy === 'recoilRoot') {\n    return [];\n  } else if (retainedBy instanceof RetentionZone$2) {\n    return [retainedBy];\n  } else {\n    return retainedBy; // it's an array of zones\n  }\n}\n\nfunction scheduleOrPerformPossibleReleaseOfRetainable(store, retainable) {\n  const state = store.getState();\n\n  if (state.nextTree) {\n    state.retention.retainablesToCheckForRelease.add(retainable);\n  } else {\n    releaseRetainablesNowOnCurrentTree(store, new Set([retainable]));\n  }\n}\n\nfunction updateRetainCount(store, retainable, delta) {\n  var _map$get;\n\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  const map = store.getState().retention.referenceCounts;\n  const newCount = ((_map$get = map.get(retainable)) !== null && _map$get !== void 0 ? _map$get : 0) + delta;\n\n  if (newCount === 0) {\n    updateRetainCountToZero(store, retainable);\n  } else {\n    map.set(retainable, newCount);\n  }\n}\n\nfunction updateRetainCountToZero(store, retainable) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  const map = store.getState().retention.referenceCounts;\n  map.delete(retainable);\n  scheduleOrPerformPossibleReleaseOfRetainable(store, retainable);\n}\n\nfunction releaseScheduledRetainablesNow(store) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  const state = store.getState();\n  releaseRetainablesNowOnCurrentTree(store, state.retention.retainablesToCheckForRelease);\n  state.retention.retainablesToCheckForRelease.clear();\n}\n\nfunction retainedByOptionWithDefault(r) {\n  // The default will change from 'recoilRoot' to 'components' in the future.\n  return r === undefined ? 'recoilRoot' : r;\n}\n\nvar Recoil_Retention = {\n  SUSPENSE_TIMEOUT_MS,\n  updateRetainCount,\n  updateRetainCountToZero,\n  releaseScheduledRetainablesNow,\n  retainedByOptionWithDefault\n};\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * This is to export esstiential functions from react-dom\n * for our web build\n *\n * \n * @format\n * @oncall recoil\n */\nconst {\n  unstable_batchedUpdates\n} = reactDom;\n\nvar ReactBatchedUpdates = {\n  unstable_batchedUpdates\n};\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * This is to export esstiential functions from react-dom\n * for our web build\n *\n * \n * @format\n * @oncall recoil\n */\n// @fb-only: const {unstable_batchedUpdates} = require('ReactDOMComet');\n// prettier-ignore\nconst {\n  unstable_batchedUpdates: unstable_batchedUpdates$1\n} = ReactBatchedUpdates; // @oss-only\n\n\nvar Recoil_ReactBatchedUpdates = {\n  unstable_batchedUpdates: unstable_batchedUpdates$1\n};\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\nconst {\n  batchStart: batchStart$1\n} = Recoil_RecoilValueInterface;\n\nconst {\n  unstable_batchedUpdates: unstable_batchedUpdates$2\n} = Recoil_ReactBatchedUpdates; // flowlint-next-line unclear-type:off\n\n\n/*\n * During SSR, unstable_batchedUpdates may be undefined so this\n * falls back to a basic function that executes the batch\n */\nlet batcher = unstable_batchedUpdates$2 || (batchFn => batchFn());\n/**\n * Sets the provided batcher function as the batcher function used by Recoil.\n *\n * Set the batcher to a custom batcher for your renderer,\n * if you use a renderer other than React DOM or React Native.\n */\n\n\nconst setBatcher = newBatcher => {\n  batcher = newBatcher;\n};\n/**\n * Returns the current batcher function.\n */\n\n\nconst getBatcher = () => batcher;\n/**\n * Calls the current batcher function and passes the\n * provided callback function.\n */\n\n\nconst batchUpdates = callback => {\n  batcher(() => {\n    let batchEnd = () => undefined;\n\n    try {\n      batchEnd = batchStart$1();\n      callback();\n    } finally {\n      batchEnd();\n    }\n  });\n};\n\nvar Recoil_Batching = {\n  getBatcher,\n  setBatcher,\n  batchUpdates\n};\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n/**\n * Combines multiple Iterables into a single Iterable.\n * Traverses the input Iterables in the order provided and maintains the order\n * of their elements.\n *\n * Example:\n * ```\n * const r = Array.from(concatIterables(['a', 'b'], ['c'], ['d', 'e', 'f']));\n * r == ['a', 'b', 'c', 'd', 'e', 'f'];\n * ```\n */\n\nfunction* concatIterables(iters) {\n  for (const iter of iters) {\n    for (const val of iter) {\n      yield val;\n    }\n  }\n}\n\nvar Recoil_concatIterables = concatIterables;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n/* eslint-disable fb-www/typeof-undefined */\n\nconst isSSR = // $FlowFixMe(site=recoil) Window does not have a FlowType definition https://github.com/facebook/flow/issues/6709\ntypeof Window === 'undefined' || typeof window === 'undefined';\n/* eslint-enable fb-www/typeof-undefined */\n\nconst isWindow = value => !isSSR && ( // $FlowFixMe(site=recoil) Window does not have a FlowType definition https://github.com/facebook/flow/issues/6709\nvalue === window || value instanceof Window);\n\nconst isReactNative = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'; // eslint-disable-line fb-www/typeof-undefined\n\nvar Recoil_Environment = {\n  isSSR,\n  isReactNative,\n  isWindow\n};\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n/**\n * Caches a function's results based on the key returned by the passed\n * hashFunction.\n */\n\nfunction memoizeWithArgsHash(fn, hashFunction) {\n  let cache;\n  return (...args) => {\n    if (!cache) {\n      cache = {};\n    }\n\n    const key = hashFunction(...args);\n\n    if (!Object.hasOwnProperty.call(cache, key)) {\n      cache[key] = fn(...args);\n    }\n\n    return cache[key];\n  };\n}\n/**\n * Caches a function's results based on a comparison of the arguments.\n * Only caches the last return of the function.\n * Defaults to reference equality\n */\n\n\nfunction memoizeOneWithArgsHash(fn, hashFunction) {\n  let lastKey;\n  let lastResult; // breaking cache when arguments change\n\n  return (...args) => {\n    const key = hashFunction(...args);\n\n    if (lastKey === key) {\n      return lastResult;\n    }\n\n    lastKey = key;\n    lastResult = fn(...args);\n    return lastResult;\n  };\n}\n/**\n * Caches a function's results based on a comparison of the arguments.\n * Only caches the last return of the function.\n * Defaults to reference equality\n */\n\n\nfunction memoizeOneWithArgsHashAndInvalidation(fn, hashFunction) {\n  let lastKey;\n  let lastResult; // breaking cache when arguments change\n\n  const memoizedFn = (...args) => {\n    const key = hashFunction(...args);\n\n    if (lastKey === key) {\n      return lastResult;\n    }\n\n    lastKey = key;\n    lastResult = fn(...args);\n    return lastResult;\n  };\n\n  const invalidate = () => {\n    lastKey = null;\n  };\n\n  return [memoizedFn, invalidate];\n}\n\nvar Recoil_Memoize = {\n  memoizeWithArgsHash,\n  memoizeOneWithArgsHash,\n  memoizeOneWithArgsHashAndInvalidation\n};\n\nconst {\n  batchUpdates: batchUpdates$1\n} = Recoil_Batching;\n\nconst {\n  initializeNode: initializeNode$1,\n  peekNodeInfo: peekNodeInfo$1\n} = Recoil_FunctionalCore;\n\nconst {\n  graph: graph$1\n} = Recoil_Graph;\n\nconst {\n  getNextStoreID: getNextStoreID$1\n} = Recoil_Keys;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$1,\n  recoilValues: recoilValues$1,\n  recoilValuesForKeys: recoilValuesForKeys$2\n} = Recoil_Node;\n\nconst {\n  AbstractRecoilValue: AbstractRecoilValue$2,\n  getRecoilValueAsLoadable: getRecoilValueAsLoadable$1,\n  setRecoilValue: setRecoilValue$1,\n  setUnvalidatedRecoilValue: setUnvalidatedRecoilValue$1\n} = Recoil_RecoilValueInterface;\n\nconst {\n  updateRetainCount: updateRetainCount$1\n} = Recoil_Retention;\n\nconst {\n  setInvalidateMemoizedSnapshot: setInvalidateMemoizedSnapshot$1\n} = Recoil_SnapshotCache;\n\nconst {\n  getNextTreeStateVersion: getNextTreeStateVersion$2,\n  makeEmptyStoreState: makeEmptyStoreState$1\n} = Recoil_State;\n\n\n\nconst {\n  isSSR: isSSR$1\n} = Recoil_Environment;\n\n\n\n\n\n\n\n\n\nconst {\n  memoizeOneWithArgsHashAndInvalidation: memoizeOneWithArgsHashAndInvalidation$1\n} = Recoil_Memoize;\n\n\n\n // Opaque at this surface because it's part of the public API from here.\n\n\nconst retainWarning = `\nRecoil Snapshots only last for the duration of the callback they are provided to. To keep a Snapshot longer, do this:\n\n  const release = snapshot.retain();\n  try {\n    await doSomethingWithSnapshot(snapshot);\n  } finally {\n    release();\n  }\n\nThis is currently a DEV-only warning but will become a thrown exception in the next release of Recoil.\n`; // A \"Snapshot\" is \"read-only\" and captures a specific set of values of atoms.\n// However, the data-flow-graph and selector values may evolve as selector\n// evaluation functions are executed and async selectors resolve.\n\nclass Snapshot {\n  // eslint-disable-next-line fb-www/no-uninitialized-properties\n  constructor(storeState, parentStoreID) {\n    _defineProperty(this, \"_store\", void 0);\n\n    _defineProperty(this, \"_refCount\", 1);\n\n    _defineProperty(this, \"getLoadable\", recoilValue => {\n      this.checkRefCount_INTERNAL();\n      return getRecoilValueAsLoadable$1(this._store, recoilValue);\n    });\n\n    _defineProperty(this, \"getPromise\", recoilValue => {\n      this.checkRefCount_INTERNAL();\n      return this.getLoadable(recoilValue).toPromise();\n    });\n\n    _defineProperty(this, \"getNodes_UNSTABLE\", opt => {\n      this.checkRefCount_INTERNAL(); // TODO Deal with modified selectors\n\n      if ((opt === null || opt === void 0 ? void 0 : opt.isModified) === true) {\n        if ((opt === null || opt === void 0 ? void 0 : opt.isInitialized) === false) {\n          return [];\n        }\n\n        const state = this._store.getState().currentTree;\n\n        return recoilValuesForKeys$2(state.dirtyAtoms);\n      }\n\n      const knownAtoms = this._store.getState().knownAtoms;\n\n      const knownSelectors = this._store.getState().knownSelectors;\n\n      return (opt === null || opt === void 0 ? void 0 : opt.isInitialized) == null ? recoilValues$1.values() : opt.isInitialized === true ? recoilValuesForKeys$2(Recoil_concatIterables([knownAtoms, knownSelectors])) : Recoil_filterIterable(recoilValues$1.values(), ({\n        key\n      }) => !knownAtoms.has(key) && !knownSelectors.has(key));\n    });\n\n    _defineProperty(this, \"getInfo_UNSTABLE\", ({\n      key\n    }) => {\n      this.checkRefCount_INTERNAL();\n      return peekNodeInfo$1(this._store, this._store.getState().currentTree, key);\n    });\n\n    _defineProperty(this, \"map\", mapper => {\n      this.checkRefCount_INTERNAL();\n      const mutableSnapshot = new MutableSnapshot(this, batchUpdates$1);\n      mapper(mutableSnapshot); // if removing batchUpdates from `set` add it here\n\n      return mutableSnapshot;\n    });\n\n    _defineProperty(this, \"asyncMap\", async mapper => {\n      this.checkRefCount_INTERNAL();\n      const mutableSnapshot = new MutableSnapshot(this, batchUpdates$1);\n      mutableSnapshot.retain(); // Retain new snapshot during async mapper\n\n      await mapper(mutableSnapshot); // Continue to retain the new snapshot for the user, but auto-release it\n      // after the next tick, the same as a new synchronous snapshot.\n\n      mutableSnapshot.autoRelease_INTERNAL();\n      return mutableSnapshot;\n    });\n\n    this._store = {\n      storeID: getNextStoreID$1(),\n      parentStoreID,\n      getState: () => storeState,\n      replaceState: replacer => {\n        // no batching, so nextTree is never active\n        storeState.currentTree = replacer(storeState.currentTree);\n      },\n      getGraph: version => {\n        const graphs = storeState.graphsByVersion;\n\n        if (graphs.has(version)) {\n          return Recoil_nullthrows(graphs.get(version));\n        }\n\n        const newGraph = graph$1();\n        graphs.set(version, newGraph);\n        return newGraph;\n      },\n      subscribeToTransactions: () => ({\n        release: () => {}\n      }),\n      addTransactionMetadata: () => {\n        throw Recoil_err('Cannot subscribe to Snapshots');\n      }\n    }; // Initialize any nodes that are live in the parent store (primarily so that\n    // this snapshot gets counted towards the node's live stores count).\n    // TODO Optimize this when cloning snapshots for callbacks\n\n    for (const nodeKey of this._store.getState().knownAtoms) {\n      initializeNode$1(this._store, nodeKey, 'get');\n      updateRetainCount$1(this._store, nodeKey, 1);\n    }\n\n    this.autoRelease_INTERNAL();\n  }\n\n  retain() {\n    if (this._refCount <= 0) {\n      if (process.env.NODE_ENV !== \"production\") {\n        throw Recoil_err('Snapshot has already been released.');\n      } else {\n        Recoil_recoverableViolation('Attempt to retain() Snapshot that was already released.');\n      }\n    }\n\n    this._refCount++;\n    let released = false;\n    return () => {\n      if (!released) {\n        released = true;\n\n        this._release();\n      }\n    };\n  }\n  /**\n   * Release the snapshot on the next tick.  This means the snapshot is retained\n   * during the execution of the current function using it.\n   */\n\n\n  autoRelease_INTERNAL() {\n    if (!isSSR$1) {\n      // Use timeout of 10 to workaround Firefox issue: https://github.com/facebookexperimental/Recoil/issues/1936\n      window.setTimeout(() => this._release(), 10);\n    }\n  }\n\n  _release() {\n    this._refCount--;\n\n    if (this._refCount === 0) {\n      this._store.getState().nodeCleanupFunctions.forEach(cleanup => cleanup());\n\n      this._store.getState().nodeCleanupFunctions.clear();\n\n      if (!Recoil_gkx('recoil_memory_managament_2020')) {\n        return;\n      } // Temporarily nerfing this to allow us to find broken call sites without\n      // actually breaking anybody yet.\n      // for (const k of this._store.getState().knownAtoms) {\n      //   updateRetainCountToZero(this._store, k);\n      // }\n\n    } else if (this._refCount < 0) {\n      if (process.env.NODE_ENV !== \"production\") {\n        Recoil_recoverableViolation('Snapshot released an extra time.');\n      }\n    }\n  }\n\n  isRetained() {\n    return this._refCount > 0;\n  }\n\n  checkRefCount_INTERNAL() {\n    if (Recoil_gkx('recoil_memory_managament_2020') && this._refCount <= 0) {\n      if (process.env.NODE_ENV !== \"production\") {\n        Recoil_recoverableViolation(retainWarning);\n      } // What we will ship later:\n      // throw err(retainWarning);\n\n    }\n  }\n\n  getStore_INTERNAL() {\n    this.checkRefCount_INTERNAL();\n    return this._store;\n  }\n\n  getID() {\n    this.checkRefCount_INTERNAL();\n    return this._store.getState().currentTree.stateID;\n  }\n\n  getStoreID() {\n    this.checkRefCount_INTERNAL();\n    return this._store.storeID;\n  } // We want to allow the methods to be destructured and used as accessors\n\n  /* eslint-disable fb-www/extra-arrow-initializer */\n\n  /* eslint-enable fb-www/extra-arrow-initializer */\n\n\n}\n\nfunction cloneStoreState(store, treeState, bumpVersion = false) {\n  const storeState = store.getState();\n  const version = bumpVersion ? getNextTreeStateVersion$2() : treeState.version;\n  return {\n    // Always clone the TreeState to isolate stores from accidental mutations.\n    // For example, reading a selector from a cloned snapshot shouldn't cache\n    // in the original treestate which may cause the original to skip\n    // initialization of upstream atoms.\n    currentTree: {\n      // TODO snapshots shouldn't really have versions because a new version number\n      // is always assigned when the snapshot is gone to.\n      version: bumpVersion ? version : treeState.version,\n      stateID: bumpVersion ? version : treeState.stateID,\n      transactionMetadata: { ...treeState.transactionMetadata\n      },\n      dirtyAtoms: new Set(treeState.dirtyAtoms),\n      atomValues: treeState.atomValues.clone(),\n      nonvalidatedAtoms: treeState.nonvalidatedAtoms.clone()\n    },\n    commitDepth: 0,\n    nextTree: null,\n    previousTree: null,\n    knownAtoms: new Set(storeState.knownAtoms),\n    // FIXME here's a copy\n    knownSelectors: new Set(storeState.knownSelectors),\n    // FIXME here's a copy\n    transactionSubscriptions: new Map(),\n    nodeTransactionSubscriptions: new Map(),\n    nodeToComponentSubscriptions: new Map(),\n    queuedComponentCallbacks_DEPRECATED: [],\n    suspendedComponentResolvers: new Set(),\n    graphsByVersion: new Map().set(version, store.getGraph(treeState.version)),\n    retention: {\n      referenceCounts: new Map(),\n      nodesRetainedByZone: new Map(),\n      retainablesToCheckForRelease: new Set()\n    },\n    // FIXME here's a copy\n    // Create blank cleanup handlers for atoms so snapshots don't re-run\n    // atom effects.\n    nodeCleanupFunctions: new Map(Recoil_mapIterable(storeState.nodeCleanupFunctions.entries(), ([key]) => [key, () => {}]))\n  };\n} // Factory to build a fresh snapshot\n\n\nfunction freshSnapshot(initializeState) {\n  const snapshot = new Snapshot(makeEmptyStoreState$1());\n  return initializeState != null ? snapshot.map(initializeState) : snapshot;\n} // Factory to clone a snapshot state\n\n\nconst [memoizedCloneSnapshot, invalidateMemoizedSnapshot$2] = memoizeOneWithArgsHashAndInvalidation$1( // $FlowFixMe[missing-local-annot]\n(store, version) => {\n  var _storeState$nextTree;\n\n  const storeState = store.getState();\n  const treeState = version === 'latest' ? (_storeState$nextTree = storeState.nextTree) !== null && _storeState$nextTree !== void 0 ? _storeState$nextTree : storeState.currentTree : Recoil_nullthrows(storeState.previousTree);\n  return new Snapshot(cloneStoreState(store, treeState), store.storeID);\n}, (store, version) => {\n  var _store$getState$nextT, _store$getState$previ;\n\n  return String(version) + String(store.storeID) + String((_store$getState$nextT = store.getState().nextTree) === null || _store$getState$nextT === void 0 ? void 0 : _store$getState$nextT.version) + String(store.getState().currentTree.version) + String((_store$getState$previ = store.getState().previousTree) === null || _store$getState$previ === void 0 ? void 0 : _store$getState$previ.version);\n}); // Avoid circular dependencies\n\nsetInvalidateMemoizedSnapshot$1(invalidateMemoizedSnapshot$2);\n\nfunction cloneSnapshot(store, version = 'latest') {\n  const snapshot = memoizedCloneSnapshot(store, version);\n\n  if (!snapshot.isRetained()) {\n    invalidateMemoizedSnapshot$2();\n    return memoizedCloneSnapshot(store, version);\n  }\n\n  return snapshot;\n}\n\nclass MutableSnapshot extends Snapshot {\n  constructor(snapshot, batch) {\n    super(cloneStoreState(snapshot.getStore_INTERNAL(), snapshot.getStore_INTERNAL().getState().currentTree, true), snapshot.getStoreID());\n\n    _defineProperty(this, \"_batch\", void 0);\n\n    _defineProperty(this, \"set\", (recoilState, newValueOrUpdater) => {\n      this.checkRefCount_INTERNAL();\n      const store = this.getStore_INTERNAL(); // This batchUpdates ensures this `set` is applied immediately and you can\n      // read the written value after calling `set`. I would like to remove this\n      // behavior and only batch in `Snapshot.map`, but this would be a breaking\n      // change potentially.\n\n      this._batch(() => {\n        updateRetainCount$1(store, recoilState.key, 1);\n        setRecoilValue$1(this.getStore_INTERNAL(), recoilState, newValueOrUpdater);\n      });\n    });\n\n    _defineProperty(this, \"reset\", recoilState => {\n      this.checkRefCount_INTERNAL();\n      const store = this.getStore_INTERNAL(); // See note at `set` about batched updates.\n\n      this._batch(() => {\n        updateRetainCount$1(store, recoilState.key, 1);\n        setRecoilValue$1(this.getStore_INTERNAL(), recoilState, DEFAULT_VALUE$1);\n      });\n    });\n\n    _defineProperty(this, \"setUnvalidatedAtomValues_DEPRECATED\", values => {\n      this.checkRefCount_INTERNAL();\n      const store = this.getStore_INTERNAL(); // See note at `set` about batched updates.\n\n      batchUpdates$1(() => {\n        for (const [k, v] of values.entries()) {\n          updateRetainCount$1(store, k, 1);\n          setUnvalidatedRecoilValue$1(store, new AbstractRecoilValue$2(k), v);\n        }\n      });\n    });\n\n    this._batch = batch;\n  }\n\n}\n\nvar Recoil_Snapshot = {\n  Snapshot,\n  MutableSnapshot,\n  freshSnapshot,\n  cloneSnapshot\n};\n\nvar Recoil_Snapshot_1 = Recoil_Snapshot.Snapshot;\nvar Recoil_Snapshot_2 = Recoil_Snapshot.MutableSnapshot;\nvar Recoil_Snapshot_3 = Recoil_Snapshot.freshSnapshot;\nvar Recoil_Snapshot_4 = Recoil_Snapshot.cloneSnapshot;\n\nvar Recoil_Snapshot$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Snapshot: Recoil_Snapshot_1,\n  MutableSnapshot: Recoil_Snapshot_2,\n  freshSnapshot: Recoil_Snapshot_3,\n  cloneSnapshot: Recoil_Snapshot_4\n});\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n\nfunction unionSets(...sets) {\n  const result = new Set();\n\n  for (const set of sets) {\n    for (const value of set) {\n      result.add(value);\n    }\n  }\n\n  return result;\n}\n\nvar Recoil_unionSets = unionSets;\n\nconst {\n  useRef\n} = react;\n/**\n * The same as `useRef()` except that if a function is specified then it will\n * call that function to get the value to initialize the reference with.\n * This is similar to how `useState()` behaves when given a function.  It allows\n * the user to avoid generating the initial value for subsequent renders.\n * The tradeoff is that to set the reference to a function itself you need to\n * nest it: useRefInitOnce(() => () => {...});\n */\n\n\nfunction useRefInitOnce(initialValue) {\n  // $FlowExpectedError[incompatible-call]\n  const ref = useRef(initialValue);\n\n  if (ref.current === initialValue && typeof initialValue === 'function') {\n    // $FlowExpectedError[incompatible-use]\n    ref.current = initialValue();\n  }\n\n  return ref;\n}\n\nvar Recoil_useRefInitOnce = useRefInitOnce;\n\n// @fb-only: const RecoilusagelogEvent = require('RecoilusagelogEvent');\n// @fb-only: const RecoilUsageLogFalcoEvent = require('RecoilUsageLogFalcoEvent');\n// @fb-only: const URI = require('URI');\n\n\nconst {\n  getNextTreeStateVersion: getNextTreeStateVersion$3,\n  makeEmptyStoreState: makeEmptyStoreState$2\n} = Recoil_State;\n\nconst {\n  cleanUpNode: cleanUpNode$2,\n  getDownstreamNodes: getDownstreamNodes$2,\n  initializeNode: initializeNode$2,\n  setNodeValue: setNodeValue$2,\n  setUnvalidatedAtomValue_DEPRECATED: setUnvalidatedAtomValue_DEPRECATED$1\n} = Recoil_FunctionalCore;\n\nconst {\n  graph: graph$2\n} = Recoil_Graph;\n\nconst {\n  cloneGraph: cloneGraph$1\n} = Recoil_Graph;\n\nconst {\n  getNextStoreID: getNextStoreID$2\n} = Recoil_Keys;\n\nconst {\n  createMutableSource: createMutableSource$1,\n  reactMode: reactMode$2\n} = Recoil_ReactMode;\n\nconst {\n  applyAtomValueWrites: applyAtomValueWrites$1\n} = Recoil_RecoilValueInterface;\n\nconst {\n  releaseScheduledRetainablesNow: releaseScheduledRetainablesNow$1\n} = Recoil_Retention;\n\nconst {\n  freshSnapshot: freshSnapshot$1\n} = Recoil_Snapshot$1;\n\n\n\nconst {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef: useRef$1,\n  useState\n} = react;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction notInAContext() {\n  throw Recoil_err('This component must be used inside a <RecoilRoot> component.');\n}\n\nconst defaultStore = Object.freeze({\n  storeID: getNextStoreID$2(),\n  getState: notInAContext,\n  replaceState: notInAContext,\n  getGraph: notInAContext,\n  subscribeToTransactions: notInAContext,\n  addTransactionMetadata: notInAContext\n});\nlet stateReplacerIsBeingExecuted = false;\n\nfunction startNextTreeIfNeeded(store) {\n  if (stateReplacerIsBeingExecuted) {\n    throw Recoil_err('An atom update was triggered within the execution of a state updater function. State updater functions provided to Recoil must be pure functions.');\n  }\n\n  const storeState = store.getState();\n\n  if (storeState.nextTree === null) {\n    if (Recoil_gkx('recoil_memory_managament_2020') && Recoil_gkx('recoil_release_on_cascading_update_killswitch_2021')) {\n      // If this is a cascading update (that is, rendering due to one state change\n      // invokes a second state change), we won't have cleaned up retainables yet\n      // because this normally happens after notifying components. Do it before\n      // proceeding with the cascading update so that it remains predictable:\n      if (storeState.commitDepth > 0) {\n        releaseScheduledRetainablesNow$1(store);\n      }\n    }\n\n    const version = storeState.currentTree.version;\n    const nextVersion = getNextTreeStateVersion$3();\n    storeState.nextTree = { ...storeState.currentTree,\n      version: nextVersion,\n      stateID: nextVersion,\n      dirtyAtoms: new Set(),\n      transactionMetadata: {}\n    };\n    storeState.graphsByVersion.set(nextVersion, cloneGraph$1(Recoil_nullthrows(storeState.graphsByVersion.get(version))));\n  }\n}\n\nconst AppContext = react.createContext({\n  current: defaultStore\n});\n\nconst useStoreRef = () => useContext(AppContext); // $FlowExpectedError[incompatible-call]\n\n\nconst MutableSourceContext = react.createContext(null);\n\nfunction useRecoilMutableSource() {\n  const mutableSource = useContext(MutableSourceContext);\n\n  if (mutableSource == null) {\n    Recoil_expectationViolation('Attempted to use a Recoil hook outside of a <RecoilRoot>. ' + '<RecoilRoot> must be an ancestor of any component that uses ' + 'Recoil hooks.');\n  }\n\n  return mutableSource;\n}\n\nfunction notifyComponents(store, storeState, treeState) {\n  const dependentNodes = getDownstreamNodes$2(store, treeState, treeState.dirtyAtoms);\n\n  for (const key of dependentNodes) {\n    const comps = storeState.nodeToComponentSubscriptions.get(key);\n\n    if (comps) {\n      for (const [_subID, [_debugName, callback]] of comps) {\n        callback(treeState);\n      }\n    }\n  }\n}\n\nfunction sendEndOfBatchNotifications(store) {\n  const storeState = store.getState();\n  const treeState = storeState.currentTree; // Inform transaction subscribers of the transaction:\n\n  const dirtyAtoms = treeState.dirtyAtoms;\n\n  if (dirtyAtoms.size) {\n    // Execute Node-specific subscribers before global subscribers\n    for (const [key, subscriptions] of storeState.nodeTransactionSubscriptions) {\n      if (dirtyAtoms.has(key)) {\n        for (const [_, subscription] of subscriptions) {\n          subscription(store);\n        }\n      }\n    }\n\n    for (const [_, subscription] of storeState.transactionSubscriptions) {\n      subscription(store);\n    }\n\n    if (!reactMode$2().early || storeState.suspendedComponentResolvers.size > 0) {\n      // Notifying components is needed to wake from suspense, even when using\n      // early rendering.\n      notifyComponents(store, storeState, treeState); // Wake all suspended components so the right one(s) can try to re-render.\n      // We need to wake up components not just when some asynchronous selector\n      // resolved, but also when changing synchronous values because this may cause\n      // a selector to change from asynchronous to synchronous, in which case there\n      // would be no follow-up asynchronous resolution to wake us up.\n      // TODO OPTIMIZATION Only wake up related downstream components\n\n      storeState.suspendedComponentResolvers.forEach(cb => cb());\n      storeState.suspendedComponentResolvers.clear();\n    }\n  } // Special behavior ONLY invoked by useInterface.\n  // FIXME delete queuedComponentCallbacks_DEPRECATED when deleting useInterface.\n\n\n  storeState.queuedComponentCallbacks_DEPRECATED.forEach(cb => cb(treeState));\n  storeState.queuedComponentCallbacks_DEPRECATED.splice(0, storeState.queuedComponentCallbacks_DEPRECATED.length);\n}\n\nfunction endBatch(store) {\n  const storeState = store.getState();\n  storeState.commitDepth++;\n\n  try {\n    const {\n      nextTree\n    } = storeState; // Ignore commits that are not because of Recoil transactions -- namely,\n    // because something above RecoilRoot re-rendered:\n\n    if (nextTree == null) {\n      return;\n    } // nextTree is now committed -- note that copying and reset occurs when\n    // a transaction begins, in startNextTreeIfNeeded:\n\n\n    storeState.previousTree = storeState.currentTree;\n    storeState.currentTree = nextTree;\n    storeState.nextTree = null;\n    sendEndOfBatchNotifications(store);\n\n    if (storeState.previousTree != null) {\n      storeState.graphsByVersion.delete(storeState.previousTree.version);\n    } else {\n      Recoil_recoverableViolation('Ended batch with no previous state, which is unexpected', 'recoil');\n    }\n\n    storeState.previousTree = null;\n\n    if (Recoil_gkx('recoil_memory_managament_2020')) {\n      // Only release retainables if there were no writes during the end of the\n      // batch.  This avoids releasing something we might be about to use.\n      if (nextTree == null) {\n        releaseScheduledRetainablesNow$1(store);\n      }\n    }\n  } finally {\n    storeState.commitDepth--;\n  }\n}\n/*\n * The purpose of the Batcher is to observe when React batches end so that\n * Recoil state changes can be batched. Whenever Recoil state changes, we call\n * setState on the batcher. Then we wait for that change to be committed, which\n * signifies the end of the batch. That's when we respond to the Recoil change.\n */\n\n\nfunction Batcher({\n  setNotifyBatcherOfChange\n}) {\n  const storeRef = useStoreRef();\n  const [, setState] = useState([]); // $FlowFixMe[incompatible-call]\n\n  setNotifyBatcherOfChange(() => setState({}));\n  useEffect(() => {\n    // $FlowFixMe[incompatible-call]\n    setNotifyBatcherOfChange(() => setState({})); // If an asynchronous selector resolves after the Batcher is unmounted,\n    // notifyBatcherOfChange will still be called. An error gets thrown whenever\n    // setState is called after a component is already unmounted, so this sets\n    // notifyBatcherOfChange to be a no-op.\n\n    return () => {\n      setNotifyBatcherOfChange(() => {});\n    };\n  }, [setNotifyBatcherOfChange]);\n  useEffect(() => {\n    // enqueueExecution runs this function immediately; it is only used to\n    // manipulate the order of useEffects during tests, since React seems to\n    // call useEffect in an unpredictable order sometimes.\n    Recoil_Queue.enqueueExecution('Batcher', () => {\n      endBatch(storeRef.current);\n    });\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  if (typeof window !== 'undefined' && !window.$recoilDebugStates) {\n    window.$recoilDebugStates = [];\n  }\n} // When removing this deprecated function, remove stateBySettingRecoilValue\n// which will no longer be needed.\n\n\nfunction initialStoreState_DEPRECATED(store, initializeState) {\n  const initial = makeEmptyStoreState$2();\n  initializeState({\n    set: (atom, value) => {\n      const state = initial.currentTree;\n      const writes = setNodeValue$2(store, state, atom.key, value);\n      const writtenNodes = new Set(writes.keys());\n      const nonvalidatedAtoms = state.nonvalidatedAtoms.clone();\n\n      for (const n of writtenNodes) {\n        nonvalidatedAtoms.delete(n);\n      }\n\n      initial.currentTree = { ...state,\n        dirtyAtoms: Recoil_unionSets(state.dirtyAtoms, writtenNodes),\n        atomValues: applyAtomValueWrites$1(state.atomValues, writes),\n        // NB: PLEASE un-export applyAtomValueWrites when deleting this code\n        nonvalidatedAtoms\n      };\n    },\n    setUnvalidatedAtomValues: atomValues => {\n      // FIXME replace this with a mutative loop\n      atomValues.forEach((v, k) => {\n        initial.currentTree = setUnvalidatedAtomValue_DEPRECATED$1(initial.currentTree, k, v);\n      });\n    }\n  });\n  return initial;\n} // Initialize state snapshot for <RecoilRoot> for the initializeState prop.\n// Atom effect initialization takes precedence over this prop.\n// Any atom effects will be run before initialization, but then cleaned up,\n// they are then re-run when used as part of rendering.  These semantics are\n// compatible with React StrictMode where effects may be re-run multiple times\n// but state initialization only happens once the first time.\n\n\nfunction initialStoreState(initializeState) {\n  // Initialize a snapshot and get its store\n  const snapshot = freshSnapshot$1(initializeState);\n  const storeState = snapshot.getStore_INTERNAL().getState(); // Counteract the snapshot auto-release\n\n  snapshot.retain(); // Cleanup any effects run during initialization and clear the handlers so\n  // they will re-initialize if used during rendering.  This allows atom effect\n  // initialization to take precedence over initializeState and be compatible\n  // with StrictMode semantics.\n\n  storeState.nodeCleanupFunctions.forEach(cleanup => cleanup());\n  storeState.nodeCleanupFunctions.clear();\n  return storeState;\n}\n\nlet nextID = 0;\n\nfunction RecoilRoot_INTERNAL({\n  initializeState_DEPRECATED,\n  initializeState,\n  store_INTERNAL: storeProp,\n  // For use with React \"context bridging\"\n  children\n}) {\n  // prettier-ignore\n  // @fb-only: useEffect(() => {\n  // @fb-only: if (gkx('recoil_usage_logging')) {\n  // @fb-only: try {\n  // @fb-only: RecoilUsageLogFalcoEvent.log(() => ({\n  // @fb-only: type: RecoilusagelogEvent.RECOIL_ROOT_MOUNTED,\n  // @fb-only: path: URI.getRequestURI().getPath(),\n  // @fb-only: }));\n  // @fb-only: } catch {\n  // @fb-only: recoverableViolation(\n  // @fb-only: 'Error when logging Recoil Usage event',\n  // @fb-only: 'recoil',\n  // @fb-only: );\n  // @fb-only: }\n  // @fb-only: }\n  // @fb-only: }, []);\n  let storeStateRef; // eslint-disable-line prefer-const\n\n  const getGraph = version => {\n    const graphs = storeStateRef.current.graphsByVersion;\n\n    if (graphs.has(version)) {\n      return Recoil_nullthrows(graphs.get(version));\n    }\n\n    const newGraph = graph$2();\n    graphs.set(version, newGraph);\n    return newGraph;\n  };\n\n  const subscribeToTransactions = (callback, key) => {\n    if (key == null) {\n      // Global transaction subscriptions\n      const {\n        transactionSubscriptions\n      } = storeRef.current.getState();\n      const id = nextID++;\n      transactionSubscriptions.set(id, callback);\n      return {\n        release: () => {\n          transactionSubscriptions.delete(id);\n        }\n      };\n    } else {\n      // Node-specific transaction subscriptions:\n      const {\n        nodeTransactionSubscriptions\n      } = storeRef.current.getState();\n\n      if (!nodeTransactionSubscriptions.has(key)) {\n        nodeTransactionSubscriptions.set(key, new Map());\n      }\n\n      const id = nextID++;\n      Recoil_nullthrows(nodeTransactionSubscriptions.get(key)).set(id, callback);\n      return {\n        release: () => {\n          const subs = nodeTransactionSubscriptions.get(key);\n\n          if (subs) {\n            subs.delete(id);\n\n            if (subs.size === 0) {\n              nodeTransactionSubscriptions.delete(key);\n            }\n          }\n        }\n      };\n    }\n  };\n\n  const addTransactionMetadata = metadata => {\n    startNextTreeIfNeeded(storeRef.current);\n\n    for (const k of Object.keys(metadata)) {\n      Recoil_nullthrows(storeRef.current.getState().nextTree).transactionMetadata[k] = metadata[k];\n    }\n  };\n\n  const replaceState = replacer => {\n    startNextTreeIfNeeded(storeRef.current); // Use replacer to get the next state:\n\n    const nextTree = Recoil_nullthrows(storeStateRef.current.nextTree);\n    let replaced;\n\n    try {\n      stateReplacerIsBeingExecuted = true;\n      replaced = replacer(nextTree);\n    } finally {\n      stateReplacerIsBeingExecuted = false;\n    }\n\n    if (replaced === nextTree) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (typeof window !== 'undefined') {\n        window.$recoilDebugStates.push(replaced); // TODO this shouldn't happen here because it's not batched\n      }\n    } // Save changes to nextTree and schedule a React update:\n\n\n    storeStateRef.current.nextTree = replaced;\n\n    if (reactMode$2().early) {\n      notifyComponents(storeRef.current, storeStateRef.current, replaced);\n    }\n\n    Recoil_nullthrows(notifyBatcherOfChange.current)();\n  };\n\n  const notifyBatcherOfChange = useRef$1(null);\n  const setNotifyBatcherOfChange = useCallback(x => {\n    notifyBatcherOfChange.current = x;\n  }, [notifyBatcherOfChange]);\n  const storeRef = Recoil_useRefInitOnce(() => storeProp !== null && storeProp !== void 0 ? storeProp : {\n    storeID: getNextStoreID$2(),\n    getState: () => storeStateRef.current,\n    replaceState,\n    getGraph,\n    subscribeToTransactions,\n    addTransactionMetadata\n  });\n\n  if (storeProp != null) {\n    storeRef.current = storeProp;\n  }\n\n  storeStateRef = Recoil_useRefInitOnce(() => initializeState_DEPRECATED != null ? initialStoreState_DEPRECATED(storeRef.current, initializeState_DEPRECATED) : initializeState != null ? initialStoreState(initializeState) : makeEmptyStoreState$2());\n  const mutableSource = useMemo(() => createMutableSource$1 === null || createMutableSource$1 === void 0 ? void 0 : createMutableSource$1(storeStateRef, () => storeStateRef.current.currentTree.version), [storeStateRef]); // Cleanup when the <RecoilRoot> is unmounted\n\n  useEffect(() => {\n    // React is free to call effect cleanup handlers and effects at will, the\n    // deps array is only an optimization.  For example, React strict mode\n    // will execute each effect twice for testing.  Therefore, we need symmetry\n    // to re-initialize all known atoms after they were cleaned up.\n    const store = storeRef.current;\n\n    for (const atomKey of new Set(store.getState().knownAtoms)) {\n      initializeNode$2(store, atomKey, 'get');\n    }\n\n    return () => {\n      for (const atomKey of store.getState().knownAtoms) {\n        cleanUpNode$2(store, atomKey);\n      }\n    };\n  }, [storeRef]);\n  return /*#__PURE__*/react.createElement(AppContext.Provider, {\n    value: storeRef\n  }, /*#__PURE__*/react.createElement(MutableSourceContext.Provider, {\n    value: mutableSource\n  }, /*#__PURE__*/react.createElement(Batcher, {\n    setNotifyBatcherOfChange: setNotifyBatcherOfChange\n  }), children));\n}\n\nfunction RecoilRoot(props) {\n  const {\n    override,\n    ...propsExceptOverride\n  } = props;\n  const ancestorStoreRef = useStoreRef();\n\n  if (override === false && ancestorStoreRef.current !== defaultStore) {\n    // If ancestorStoreRef.current !== defaultStore, it means that this\n    // RecoilRoot is not nested within another.\n    return props.children;\n  }\n\n  return /*#__PURE__*/react.createElement(RecoilRoot_INTERNAL, propsExceptOverride);\n}\n\nfunction useRecoilStoreID() {\n  return useStoreRef().current.storeID;\n}\n\nvar Recoil_RecoilRoot = {\n  RecoilRoot,\n  useStoreRef,\n  useRecoilMutableSource,\n  useRecoilStoreID,\n  notifyComponents_FOR_TESTING: notifyComponents,\n  sendEndOfBatchNotifications_FOR_TESTING: sendEndOfBatchNotifications\n};\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n\nfunction shallowArrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar Recoil_shallowArrayEqual = shallowArrayEqual;\n\nconst {\n  useEffect: useEffect$1,\n  useRef: useRef$2\n} = react;\n\nfunction usePrevious(value) {\n  const ref = useRef$2();\n  useEffect$1(() => {\n    // $FlowFixMe[incompatible-type]\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nvar Recoil_usePrevious = usePrevious;\n\nconst {\n  useStoreRef: useStoreRef$1\n} = Recoil_RecoilRoot;\n\nconst {\n  SUSPENSE_TIMEOUT_MS: SUSPENSE_TIMEOUT_MS$1\n} = Recoil_Retention;\n\nconst {\n  updateRetainCount: updateRetainCount$2\n} = Recoil_Retention;\n\nconst {\n  RetentionZone: RetentionZone$3\n} = Recoil_RetentionZone;\n\nconst {\n  useEffect: useEffect$2,\n  useRef: useRef$3\n} = react;\n\nconst {\n  isSSR: isSSR$2\n} = Recoil_Environment;\n\n\n\n\n\n // I don't see a way to avoid the any type here because we want to accept readable\n// and writable values with any type parameter, but normally with writable ones\n// RecoilState<SomeT> is not a subtype of RecoilState<mixed>.\n\n\n// flowlint-line unclear-type:off\nfunction useRetain(toRetain) {\n  if (!Recoil_gkx('recoil_memory_managament_2020')) {\n    return;\n  } // eslint-disable-next-line fb-www/react-hooks\n\n\n  return useRetain_ACTUAL(toRetain);\n}\n\nfunction useRetain_ACTUAL(toRetain) {\n  const array = Array.isArray(toRetain) ? toRetain : [toRetain];\n  const retainables = array.map(a => a instanceof RetentionZone$3 ? a : a.key);\n  const storeRef = useStoreRef$1();\n  useEffect$2(() => {\n    if (!Recoil_gkx('recoil_memory_managament_2020')) {\n      return;\n    }\n\n    const store = storeRef.current;\n\n    if (timeoutID.current && !isSSR$2) {\n      // Already performed a temporary retain on render, simply cancel the release\n      // of that temporary retain.\n      window.clearTimeout(timeoutID.current);\n      timeoutID.current = null;\n    } else {\n      for (const r of retainables) {\n        updateRetainCount$2(store, r, 1);\n      }\n    }\n\n    return () => {\n      for (const r of retainables) {\n        updateRetainCount$2(store, r, -1);\n      }\n    }; // eslint-disable-next-line fb-www/react-hooks-deps\n  }, [storeRef, ...retainables]); // We want to retain if the component suspends. This is terrible but the Suspense\n  // API affords us no better option. If we suspend and never commit after some\n  // seconds, then release. The 'actual' retain/release in the effect above\n  // cancels this.\n\n  const timeoutID = useRef$3();\n  const previousRetainables = Recoil_usePrevious(retainables);\n\n  if (!isSSR$2 && (previousRetainables === undefined || !Recoil_shallowArrayEqual(previousRetainables, retainables))) {\n    const store = storeRef.current;\n\n    for (const r of retainables) {\n      updateRetainCount$2(store, r, 1);\n    }\n\n    if (previousRetainables) {\n      for (const r of previousRetainables) {\n        updateRetainCount$2(store, r, -1);\n      }\n    }\n\n    if (timeoutID.current) {\n      window.clearTimeout(timeoutID.current);\n    }\n\n    timeoutID.current = window.setTimeout(() => {\n      timeoutID.current = null;\n\n      for (const r of retainables) {\n        updateRetainCount$2(store, r, -1);\n      }\n    }, SUSPENSE_TIMEOUT_MS$1);\n  }\n}\n\nvar Recoil_useRetain = useRetain;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n/**\n * THIS CODE HAS BEEN COMMENTED OUT INTENTIONALLY\n *\n * This technique of getting the component name is imperfect, since it both only\n * works in a non-minified code base, and more importantly introduces performance\n * problems since it relies in throwing errors which is an expensive operation.\n *\n * At some point we may want to reevaluate this technique hence why we have commented\n * this code out, rather than delete it all together.\n */\n// const {useRef} = require('react');\n// const gkx = require('recoil-shared/util/Recoil_gkx');\n// const stackTraceParser = require('recoil-shared/util/Recoil_stackTraceParser');\n\nfunction useComponentName() {\n  // const nameRef = useRef();\n  // if (__DEV__) {\n  //   if (gkx('recoil_infer_component_names')) {\n  //     if (nameRef.current === undefined) {\n  //       // There is no blessed way to determine the calling React component from\n  //       // within a hook. This hack uses the fact that hooks must start with 'use'\n  //       // and that hooks are either called by React Components or other hooks. It\n  //       // follows therefore, that to find the calling component, you simply need\n  //       // to look down the stack and find the first function which doesn't start\n  //       // with 'use'. We are only enabling this in dev for now, since once the\n  //       // codebase is minified, the naming assumptions no longer hold true.\n  //       // eslint-disable-next-line fb-www/no-new-error\n  //       const frames = stackTraceParser(new Error().stack);\n  //       for (const {methodName} of frames) {\n  //         // I observed cases where the frame was of the form 'Object.useXXX'\n  //         // hence why I'm searching for hooks following a word boundary\n  //         if (!methodName.match(/\\buse[^\\b]+$/)) {\n  //           return (nameRef.current = methodName);\n  //         }\n  //       }\n  //       nameRef.current = null;\n  //     }\n  //     return nameRef.current ?? '<unable to determine component name>';\n  //   }\n  // }\n  // @fb-only: return \"<component name only available when both in dev mode and when passing GK 'recoil_infer_component_names'>\";\n  return '<component name not available>'; // @oss-only\n}\n\nvar Recoil_useComponentName = useComponentName;\n\nconst {\n  batchUpdates: batchUpdates$2\n} = Recoil_Batching;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$2\n} = Recoil_Node;\n\nconst {\n  currentRendererSupportsUseSyncExternalStore: currentRendererSupportsUseSyncExternalStore$1,\n  reactMode: reactMode$3,\n  useMutableSource: useMutableSource$1,\n  useSyncExternalStore: useSyncExternalStore$1\n} = Recoil_ReactMode;\n\nconst {\n  useRecoilMutableSource: useRecoilMutableSource$1,\n  useStoreRef: useStoreRef$2\n} = Recoil_RecoilRoot;\n\nconst {\n  isRecoilValue: isRecoilValue$2\n} = Recoil_RecoilValue$1;\n\nconst {\n  AbstractRecoilValue: AbstractRecoilValue$3,\n  getRecoilValueAsLoadable: getRecoilValueAsLoadable$2,\n  setRecoilValue: setRecoilValue$2,\n  setUnvalidatedRecoilValue: setUnvalidatedRecoilValue$2,\n  subscribeToRecoilValue: subscribeToRecoilValue$1\n} = Recoil_RecoilValueInterface;\n\n\n\nconst {\n  useCallback: useCallback$1,\n  useEffect: useEffect$3,\n  useMemo: useMemo$1,\n  useRef: useRef$4,\n  useState: useState$1\n} = react;\n\nconst {\n  setByAddingToSet: setByAddingToSet$2\n} = Recoil_CopyOnWrite;\n\n\n\nconst {\n  isSSR: isSSR$3\n} = Recoil_Environment;\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction handleLoadable(loadable, recoilValue, storeRef) {\n  // We can't just throw the promise we are waiting on to Suspense.  If the\n  // upstream dependencies change it may produce a state in which the component\n  // can render, but it would still be suspended on a Promise that may never resolve.\n  if (loadable.state === 'hasValue') {\n    return loadable.contents;\n  } else if (loadable.state === 'loading') {\n    const promise = new Promise(resolve => {\n      const suspendedComponentResolvers = storeRef.current.getState().suspendedComponentResolvers;\n      suspendedComponentResolvers.add(resolve); // SSR should clear out the wake-up resolver if the Promise is resolved\n      // to avoid infinite loops.  (See https://github.com/facebookexperimental/Recoil/pull/2073)\n\n      if (isSSR$3 && Recoil_isPromise(loadable.contents)) {\n        loadable.contents.finally(() => {\n          suspendedComponentResolvers.delete(resolve);\n        });\n      }\n    }); // $FlowExpectedError Flow(prop-missing) for integrating with tools that inspect thrown promises @fb-only\n    // @fb-only: promise.displayName = `Recoil State: ${recoilValue.key}`;\n\n    throw promise;\n  } else if (loadable.state === 'hasError') {\n    throw loadable.contents;\n  } else {\n    throw Recoil_err(`Invalid value of loadable atom \"${recoilValue.key}\"`);\n  }\n}\n\nfunction validateRecoilValue(recoilValue, hookName // $FlowFixMe[missing-local-annot]\n) {\n  if (!isRecoilValue$2(recoilValue)) {\n    throw Recoil_err(`Invalid argument to ${hookName}: expected an atom or selector but got ${String(recoilValue)}`);\n  }\n}\n\n/**\n * Various things are broken with useRecoilInterface, particularly concurrent\n * mode, React strict mode, and memory management. They will not be fixed.\n * */\nfunction useRecoilInterface_DEPRECATED() {\n  const componentName = Recoil_useComponentName();\n  const storeRef = useStoreRef$2(); // eslint-disable-next-line fb-www/react-no-unused-state-hook\n\n  const [, forceUpdate] = useState$1([]);\n  const recoilValuesUsed = useRef$4(new Set());\n  recoilValuesUsed.current = new Set(); // Track the RecoilValues used just during this render\n\n  const previousSubscriptions = useRef$4(new Set());\n  const subscriptions = useRef$4(new Map());\n  const unsubscribeFrom = useCallback$1(key => {\n    const sub = subscriptions.current.get(key);\n\n    if (sub) {\n      sub.release();\n      subscriptions.current.delete(key);\n    }\n  }, [subscriptions]);\n  const updateState = useCallback$1((_state, key) => {\n    if (subscriptions.current.has(key)) {\n      forceUpdate([]);\n    }\n  }, []); // Effect to add/remove subscriptions as nodes are used\n\n  useEffect$3(() => {\n    const store = storeRef.current;\n    Recoil_differenceSets(recoilValuesUsed.current, previousSubscriptions.current).forEach(key => {\n      if (subscriptions.current.has(key)) {\n        Recoil_expectationViolation(`Double subscription to RecoilValue \"${key}\"`);\n        return;\n      }\n\n      const sub = subscribeToRecoilValue$1(store, new AbstractRecoilValue$3(key), state => updateState(state, key), componentName);\n      subscriptions.current.set(key, sub);\n      /**\n       * Since we're subscribing in an effect we need to update to the latest\n       * value of the atom since it may have changed since we rendered. We can\n       * go ahead and do that now, unless we're in the middle of a batch --\n       * in which case we should do it at the end of the batch, due to the\n       * following edge case: Suppose an atom is updated in another useEffect\n       * of this same component. Then the following sequence of events occur:\n       * 1. Atom is updated and subs fired (but we may not be subscribed\n       *    yet depending on order of effects, so we miss this) Updated value\n       *    is now in nextTree, but not currentTree.\n       * 2. This effect happens. We subscribe and update.\n       * 3. From the update we re-render and read currentTree, with old value.\n       * 4. Batcher's effect sets currentTree to nextTree.\n       * In this sequence we miss the update. To avoid that, add the update\n       * to queuedComponentCallback if a batch is in progress.\n       */\n      // FIXME delete queuedComponentCallbacks_DEPRECATED when deleting useInterface.\n\n      const state = store.getState();\n\n      if (state.nextTree) {\n        store.getState().queuedComponentCallbacks_DEPRECATED.push(() => {\n          updateState(store.getState(), key);\n        });\n      } else {\n        updateState(store.getState(), key);\n      }\n    });\n    Recoil_differenceSets(previousSubscriptions.current, recoilValuesUsed.current).forEach(key => {\n      unsubscribeFrom(key);\n    });\n    previousSubscriptions.current = recoilValuesUsed.current;\n  }); // Effect to unsubscribe from all when unmounting\n\n  useEffect$3(() => {\n    const currentSubscriptions = subscriptions.current; // Restore subscriptions that were cleared due to StrictMode running this effect twice\n\n    Recoil_differenceSets(recoilValuesUsed.current, new Set(currentSubscriptions.keys())).forEach(key => {\n      const sub = subscribeToRecoilValue$1(storeRef.current, new AbstractRecoilValue$3(key), state => updateState(state, key), componentName);\n      currentSubscriptions.set(key, sub);\n    });\n    return () => currentSubscriptions.forEach((_, key) => unsubscribeFrom(key));\n  }, [componentName, storeRef, unsubscribeFrom, updateState]);\n  return useMemo$1(() => {\n    // eslint-disable-next-line no-shadow\n    function useSetRecoilState(recoilState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilState, 'useSetRecoilState');\n      }\n\n      return newValueOrUpdater => {\n        setRecoilValue$2(storeRef.current, recoilState, newValueOrUpdater);\n      };\n    } // eslint-disable-next-line no-shadow\n\n\n    function useResetRecoilState(recoilState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilState, 'useResetRecoilState');\n      }\n\n      return () => setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);\n    } // eslint-disable-next-line no-shadow\n\n\n    function useRecoilValueLoadable(recoilValue) {\n      var _storeState$nextTree;\n\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilValue, 'useRecoilValueLoadable');\n      }\n\n      if (!recoilValuesUsed.current.has(recoilValue.key)) {\n        recoilValuesUsed.current = setByAddingToSet$2(recoilValuesUsed.current, recoilValue.key);\n      } // TODO Restore optimization to memoize lookup\n\n\n      const storeState = storeRef.current.getState();\n      return getRecoilValueAsLoadable$2(storeRef.current, recoilValue, reactMode$3().early ? (_storeState$nextTree = storeState.nextTree) !== null && _storeState$nextTree !== void 0 ? _storeState$nextTree : storeState.currentTree : storeState.currentTree);\n    } // eslint-disable-next-line no-shadow\n\n\n    function useRecoilValue(recoilValue) {\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilValue, 'useRecoilValue');\n      }\n\n      const loadable = useRecoilValueLoadable(recoilValue);\n      return handleLoadable(loadable, recoilValue, storeRef);\n    } // eslint-disable-next-line no-shadow\n\n\n    function useRecoilState(recoilState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilState, 'useRecoilState');\n      }\n\n      return [useRecoilValue(recoilState), useSetRecoilState(recoilState)];\n    } // eslint-disable-next-line no-shadow\n\n\n    function useRecoilStateLoadable(recoilState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilState, 'useRecoilStateLoadable');\n      }\n\n      return [useRecoilValueLoadable(recoilState), useSetRecoilState(recoilState)];\n    }\n\n    return {\n      getRecoilValue: useRecoilValue,\n      getRecoilValueLoadable: useRecoilValueLoadable,\n      getRecoilState: useRecoilState,\n      getRecoilStateLoadable: useRecoilStateLoadable,\n      getSetRecoilState: useSetRecoilState,\n      getResetRecoilState: useResetRecoilState\n    };\n  }, [recoilValuesUsed, storeRef]);\n}\n\nconst recoilComponentGetRecoilValueCount_FOR_TESTING = {\n  current: 0\n};\n\nfunction useRecoilValueLoadable_SYNC_EXTERNAL_STORE(recoilValue) {\n  const storeRef = useStoreRef$2();\n  const componentName = Recoil_useComponentName();\n  const getSnapshot = useCallback$1(() => {\n    var _storeState$nextTree2;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      recoilComponentGetRecoilValueCount_FOR_TESTING.current++;\n    }\n\n    const store = storeRef.current;\n    const storeState = store.getState();\n    const treeState = reactMode$3().early ? (_storeState$nextTree2 = storeState.nextTree) !== null && _storeState$nextTree2 !== void 0 ? _storeState$nextTree2 : storeState.currentTree : storeState.currentTree;\n    const loadable = getRecoilValueAsLoadable$2(store, recoilValue, treeState);\n    return {\n      loadable,\n      key: recoilValue.key\n    };\n  }, [storeRef, recoilValue]); // Memoize the state to avoid unnecessary rerenders\n\n  const memoizePreviousSnapshot = useCallback$1(getState => {\n    let prevState;\n    return () => {\n      var _prevState, _prevState2;\n\n      const nextState = getState();\n\n      if ((_prevState = prevState) !== null && _prevState !== void 0 && _prevState.loadable.is(nextState.loadable) && ((_prevState2 = prevState) === null || _prevState2 === void 0 ? void 0 : _prevState2.key) === nextState.key) {\n        return prevState;\n      }\n\n      prevState = nextState;\n      return nextState;\n    };\n  }, []);\n  const getMemoizedSnapshot = useMemo$1(() => memoizePreviousSnapshot(getSnapshot), [getSnapshot, memoizePreviousSnapshot]);\n  const subscribe = useCallback$1(notify => {\n    const store = storeRef.current;\n    const subscription = subscribeToRecoilValue$1(store, recoilValue, notify, componentName);\n    return subscription.release;\n  }, [storeRef, recoilValue, componentName]);\n  return useSyncExternalStore$1(subscribe, getMemoizedSnapshot, // getSnapshot()\n  getMemoizedSnapshot // getServerSnapshot() for SSR support\n  ).loadable;\n}\n\nfunction useRecoilValueLoadable_MUTABLE_SOURCE(recoilValue) {\n  const storeRef = useStoreRef$2();\n  const getLoadable = useCallback$1(() => {\n    var _storeState$nextTree3;\n\n    const store = storeRef.current;\n    const storeState = store.getState();\n    const treeState = reactMode$3().early ? (_storeState$nextTree3 = storeState.nextTree) !== null && _storeState$nextTree3 !== void 0 ? _storeState$nextTree3 : storeState.currentTree : storeState.currentTree;\n    return getRecoilValueAsLoadable$2(store, recoilValue, treeState);\n  }, [storeRef, recoilValue]);\n  const getLoadableWithTesting = useCallback$1(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      recoilComponentGetRecoilValueCount_FOR_TESTING.current++;\n    }\n\n    return getLoadable();\n  }, [getLoadable]);\n  const componentName = Recoil_useComponentName();\n  const subscribe = useCallback$1((_storeState, notify) => {\n    const store = storeRef.current;\n    const subscription = subscribeToRecoilValue$1(store, recoilValue, () => {\n      if (!Recoil_gkx('recoil_suppress_rerender_in_callback')) {\n        return notify();\n      } // Only re-render if the value has changed.\n      // This will evaluate the atom/selector now as well as when the\n      // component renders, but that may help with prefetching.\n\n\n      const newLoadable = getLoadable();\n\n      if (!prevLoadableRef.current.is(newLoadable)) {\n        notify();\n      } // If the component is suspended then the effect setting prevLoadableRef\n      // will not run.  So, set the previous value here when its subscription\n      // is fired to wake it up.  We can't just rely on this, though, because\n      // this only executes when an atom/selector is dirty and the atom/selector\n      // passed to the hook can dynamically change.\n\n\n      prevLoadableRef.current = newLoadable;\n    }, componentName);\n    return subscription.release;\n  }, [storeRef, recoilValue, componentName, getLoadable]);\n  const source = useRecoilMutableSource$1();\n\n  if (source == null) {\n    throw Recoil_err('Recoil hooks must be used in components contained within a <RecoilRoot> component.');\n  }\n\n  const loadable = useMutableSource$1(source, getLoadableWithTesting, subscribe);\n  const prevLoadableRef = useRef$4(loadable);\n  useEffect$3(() => {\n    prevLoadableRef.current = loadable;\n  });\n  return loadable;\n}\n\nfunction useRecoilValueLoadable_TRANSITION_SUPPORT(recoilValue) {\n  const storeRef = useStoreRef$2();\n  const componentName = Recoil_useComponentName(); // Accessors to get the current state\n\n  const getLoadable = useCallback$1(() => {\n    var _storeState$nextTree4;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      recoilComponentGetRecoilValueCount_FOR_TESTING.current++;\n    }\n\n    const store = storeRef.current;\n    const storeState = store.getState();\n    const treeState = reactMode$3().early ? (_storeState$nextTree4 = storeState.nextTree) !== null && _storeState$nextTree4 !== void 0 ? _storeState$nextTree4 : storeState.currentTree : storeState.currentTree;\n    return getRecoilValueAsLoadable$2(store, recoilValue, treeState);\n  }, [storeRef, recoilValue]);\n  const getState = useCallback$1(() => ({\n    loadable: getLoadable(),\n    key: recoilValue.key\n  }), [getLoadable, recoilValue.key]); // Memoize state snapshots\n\n  const updateState = useCallback$1(prevState => {\n    const nextState = getState();\n    return prevState.loadable.is(nextState.loadable) && prevState.key === nextState.key ? prevState : nextState;\n  }, [getState]); // Subscribe to Recoil state changes\n\n  useEffect$3(() => {\n    const subscription = subscribeToRecoilValue$1(storeRef.current, recoilValue, _state => {\n      setState(updateState);\n    }, componentName); // Update state in case we are using a different key\n\n    setState(updateState);\n    return subscription.release;\n  }, [componentName, recoilValue, storeRef, updateState]); // Get the current state\n\n  const [state, setState] = useState$1(getState); // If we changed keys, then return the state for the new key.\n  // This is important in case the old key would cause the component to suspend.\n  // We don't have to set the new state here since the subscribing effect above\n  // will do that.\n\n  return state.key !== recoilValue.key ? getState().loadable : state.loadable;\n}\n\nfunction useRecoilValueLoadable_LEGACY(recoilValue) {\n  const storeRef = useStoreRef$2(); // eslint-disable-next-line fb-www/react-no-unused-state-hook\n\n  const [, forceUpdate] = useState$1([]);\n  const componentName = Recoil_useComponentName();\n  const getLoadable = useCallback$1(() => {\n    var _storeState$nextTree5;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      recoilComponentGetRecoilValueCount_FOR_TESTING.current++;\n    }\n\n    const store = storeRef.current;\n    const storeState = store.getState();\n    const treeState = reactMode$3().early ? (_storeState$nextTree5 = storeState.nextTree) !== null && _storeState$nextTree5 !== void 0 ? _storeState$nextTree5 : storeState.currentTree : storeState.currentTree;\n    return getRecoilValueAsLoadable$2(store, recoilValue, treeState);\n  }, [storeRef, recoilValue]);\n  const loadable = getLoadable();\n  const prevLoadableRef = useRef$4(loadable);\n  useEffect$3(() => {\n    prevLoadableRef.current = loadable;\n  });\n  useEffect$3(() => {\n    const store = storeRef.current;\n    const storeState = store.getState();\n    const subscription = subscribeToRecoilValue$1(store, recoilValue, _state => {\n      var _prevLoadableRef$curr;\n\n      if (!Recoil_gkx('recoil_suppress_rerender_in_callback')) {\n        return forceUpdate([]);\n      }\n\n      const newLoadable = getLoadable();\n\n      if (!((_prevLoadableRef$curr = prevLoadableRef.current) !== null && _prevLoadableRef$curr !== void 0 && _prevLoadableRef$curr.is(newLoadable))) {\n        // $FlowFixMe[incompatible-call]\n        forceUpdate(newLoadable);\n      }\n\n      prevLoadableRef.current = newLoadable;\n    }, componentName);\n    /**\n     * Since we're subscribing in an effect we need to update to the latest\n     * value of the atom since it may have changed since we rendered. We can\n     * go ahead and do that now, unless we're in the middle of a batch --\n     * in which case we should do it at the end of the batch, due to the\n     * following edge case: Suppose an atom is updated in another useEffect\n     * of this same component. Then the following sequence of events occur:\n     * 1. Atom is updated and subs fired (but we may not be subscribed\n     *    yet depending on order of effects, so we miss this) Updated value\n     *    is now in nextTree, but not currentTree.\n     * 2. This effect happens. We subscribe and update.\n     * 3. From the update we re-render and read currentTree, with old value.\n     * 4. Batcher's effect sets currentTree to nextTree.\n     * In this sequence we miss the update. To avoid that, add the update\n     * to queuedComponentCallback if a batch is in progress.\n     */\n\n    if (storeState.nextTree) {\n      store.getState().queuedComponentCallbacks_DEPRECATED.push(() => {\n        // $FlowFixMe[incompatible-type]\n        prevLoadableRef.current = null;\n        forceUpdate([]);\n      });\n    } else {\n      var _prevLoadableRef$curr2;\n\n      if (!Recoil_gkx('recoil_suppress_rerender_in_callback')) {\n        return forceUpdate([]);\n      }\n\n      const newLoadable = getLoadable();\n\n      if (!((_prevLoadableRef$curr2 = prevLoadableRef.current) !== null && _prevLoadableRef$curr2 !== void 0 && _prevLoadableRef$curr2.is(newLoadable))) {\n        // $FlowFixMe[incompatible-call]\n        forceUpdate(newLoadable);\n      }\n\n      prevLoadableRef.current = newLoadable;\n    }\n\n    return subscription.release;\n  }, [componentName, getLoadable, recoilValue, storeRef]);\n  return loadable;\n}\n/**\n  Like useRecoilValue(), but either returns the value if available or\n  just undefined if not available for any reason, such as pending or error.\n*/\n\n\nfunction useRecoilValueLoadable(recoilValue) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilValue, 'useRecoilValueLoadable');\n  }\n\n  if (Recoil_gkx('recoil_memory_managament_2020')) {\n    // eslint-disable-next-line fb-www/react-hooks\n    Recoil_useRetain(recoilValue);\n  }\n\n  return {\n    TRANSITION_SUPPORT: useRecoilValueLoadable_TRANSITION_SUPPORT,\n    // Recoil will attemp to detect if `useSyncExternalStore()` is supported with\n    // `reactMode()` before calling it.  However, sometimes the host React\n    // environment supports it but uses additional React renderers (such as with\n    // `react-three-fiber`) which do not.  While this is technically a user issue\n    // by using a renderer with React 18+ that doesn't fully support React 18 we\n    // don't want to break users if it can be avoided. As the current renderer can\n    // change at runtime, we need to dynamically check and fallback if necessary.\n    SYNC_EXTERNAL_STORE: currentRendererSupportsUseSyncExternalStore$1() ? useRecoilValueLoadable_SYNC_EXTERNAL_STORE : useRecoilValueLoadable_TRANSITION_SUPPORT,\n    MUTABLE_SOURCE: useRecoilValueLoadable_MUTABLE_SOURCE,\n    LEGACY: useRecoilValueLoadable_LEGACY\n  }[reactMode$3().mode](recoilValue);\n}\n/**\n  Returns the value represented by the RecoilValue.\n  If the value is pending, it will throw a Promise to suspend the component,\n  if the value is an error it will throw it for the nearest React error boundary.\n  This will also subscribe the component for any updates in the value.\n  */\n\n\nfunction useRecoilValue(recoilValue) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilValue, 'useRecoilValue');\n  }\n\n  const storeRef = useStoreRef$2();\n  const loadable = useRecoilValueLoadable(recoilValue);\n  return handleLoadable(loadable, recoilValue, storeRef);\n}\n/**\n  Returns a function that allows the value of a RecoilState to be updated, but does\n  not subscribe the component to changes to that RecoilState.\n*/\n\n\nfunction useSetRecoilState(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilState, 'useSetRecoilState');\n  }\n\n  const storeRef = useStoreRef$2();\n  return useCallback$1(newValueOrUpdater => {\n    setRecoilValue$2(storeRef.current, recoilState, newValueOrUpdater);\n  }, [storeRef, recoilState]);\n}\n/**\n  Returns a function that will reset the value of a RecoilState to its default\n*/\n\n\nfunction useResetRecoilState(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilState, 'useResetRecoilState');\n  }\n\n  const storeRef = useStoreRef$2();\n  return useCallback$1(() => {\n    setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);\n  }, [storeRef, recoilState]);\n}\n/**\n  Equivalent to useState(). Allows the value of the RecoilState to be read and written.\n  Subsequent updates to the RecoilState will cause the component to re-render. If the\n  RecoilState is pending, this will suspend the component and initiate the\n  retrieval of the value. If evaluating the RecoilState resulted in an error, this will\n  throw the error so that the nearest React error boundary can catch it.\n*/\n\n\nfunction useRecoilState(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilState, 'useRecoilState');\n  }\n\n  return [useRecoilValue(recoilState), useSetRecoilState(recoilState)];\n}\n/**\n  Like useRecoilState(), but does not cause Suspense or React error handling. Returns\n  an object that indicates whether the RecoilState is available, pending, or\n  unavailable due to an error.\n*/\n\n\nfunction useRecoilStateLoadable(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilState, 'useRecoilStateLoadable');\n  }\n\n  return [useRecoilValueLoadable(recoilState), useSetRecoilState(recoilState)];\n}\n\nfunction useSetUnvalidatedAtomValues() {\n  const storeRef = useStoreRef$2();\n  return (values, transactionMetadata = {}) => {\n    batchUpdates$2(() => {\n      storeRef.current.addTransactionMetadata(transactionMetadata);\n      values.forEach((value, key) => setUnvalidatedRecoilValue$2(storeRef.current, new AbstractRecoilValue$3(key), value));\n    });\n  };\n}\n/**\n * Experimental variants of hooks with support for useTransition()\n */\n\n\nfunction useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE(recoilValue) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilValue, 'useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE');\n\n    if (!reactMode$3().early) {\n      Recoil_recoverableViolation('Attepmt to use a hook with UNSTABLE_TRANSITION_SUPPORT in a rendering mode incompatible with concurrent rendering.  Try enabling the recoil_sync_external_store or recoil_transition_support GKs.');\n    }\n  }\n\n  if (Recoil_gkx('recoil_memory_managament_2020')) {\n    // eslint-disable-next-line fb-www/react-hooks\n    Recoil_useRetain(recoilValue);\n  }\n\n  return useRecoilValueLoadable_TRANSITION_SUPPORT(recoilValue);\n}\n\nfunction useRecoilValue_TRANSITION_SUPPORT_UNSTABLE(recoilValue) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilValue, 'useRecoilValue_TRANSITION_SUPPORT_UNSTABLE');\n  }\n\n  const storeRef = useStoreRef$2();\n  const loadable = useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE(recoilValue);\n  return handleLoadable(loadable, recoilValue, storeRef);\n}\n\nfunction useRecoilState_TRANSITION_SUPPORT_UNSTABLE(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilState, 'useRecoilState_TRANSITION_SUPPORT_UNSTABLE');\n  }\n\n  return [useRecoilValue_TRANSITION_SUPPORT_UNSTABLE(recoilState), useSetRecoilState(recoilState)];\n}\n\nvar Recoil_Hooks = {\n  recoilComponentGetRecoilValueCount_FOR_TESTING,\n  useRecoilInterface: useRecoilInterface_DEPRECATED,\n  useRecoilState,\n  useRecoilStateLoadable,\n  useRecoilValue,\n  useRecoilValueLoadable,\n  useResetRecoilState,\n  useSetRecoilState,\n  useSetUnvalidatedAtomValues,\n  useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE,\n  useRecoilValue_TRANSITION_SUPPORT_UNSTABLE,\n  useRecoilState_TRANSITION_SUPPORT_UNSTABLE\n};\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n/**\n * Returns a map containing all of the keys + values from the original map where\n * the given callback returned true.\n */\n\nfunction filterMap(map, callback) {\n  const result = new Map();\n\n  for (const [key, value] of map) {\n    if (callback(value, key)) {\n      result.set(key, value);\n    }\n  }\n\n  return result;\n}\n\nvar Recoil_filterMap = filterMap;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n/**\n * Returns a set containing all of the values from the original set where\n * the given callback returned true.\n */\n\nfunction filterSet(set, callback) {\n  const result = new Set();\n\n  for (const value of set) {\n    if (callback(value)) {\n      result.add(value);\n    }\n  }\n\n  return result;\n}\n\nvar Recoil_filterSet = filterSet;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n\nfunction mergeMaps(...maps) {\n  const result = new Map();\n\n  for (let i = 0; i < maps.length; i++) {\n    const iterator = maps[i].keys();\n    let nextKey;\n\n    while (!(nextKey = iterator.next()).done) {\n      // $FlowIssue[incompatible-call] - map/iterator knows nothing about flow types\n      result.set(nextKey.value, maps[i].get(nextKey.value));\n    }\n  }\n\n  return result;\n}\n\nvar Recoil_mergeMaps = mergeMaps;\n\nconst {\n  batchUpdates: batchUpdates$3\n} = Recoil_Batching;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$3,\n  getNode: getNode$4,\n  nodes: nodes$1\n} = Recoil_Node;\n\nconst {\n  useStoreRef: useStoreRef$3\n} = Recoil_RecoilRoot;\n\nconst {\n  AbstractRecoilValue: AbstractRecoilValue$4,\n  setRecoilValueLoadable: setRecoilValueLoadable$1\n} = Recoil_RecoilValueInterface;\n\nconst {\n  SUSPENSE_TIMEOUT_MS: SUSPENSE_TIMEOUT_MS$2\n} = Recoil_Retention;\n\nconst {\n  cloneSnapshot: cloneSnapshot$1\n} = Recoil_Snapshot$1;\n\nconst {\n  useCallback: useCallback$2,\n  useEffect: useEffect$4,\n  useRef: useRef$5,\n  useState: useState$2\n} = react;\n\nconst {\n  isSSR: isSSR$4\n} = Recoil_Environment;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction useTransactionSubscription(callback) {\n  const storeRef = useStoreRef$3();\n  useEffect$4(() => {\n    const sub = storeRef.current.subscribeToTransactions(callback);\n    return sub.release;\n  }, [callback, storeRef]);\n}\n\nfunction externallyVisibleAtomValuesInState(state) {\n  const atomValues = state.atomValues.toMap();\n  const persistedAtomContentsValues = Recoil_mapMap(Recoil_filterMap(atomValues, (v, k) => {\n    const node = getNode$4(k);\n    const persistence = node.persistence_UNSTABLE;\n    return persistence != null && persistence.type !== 'none' && v.state === 'hasValue';\n  }), v => v.contents); // Merge in nonvalidated atoms; we may not have defs for them but they will\n  // all have persistence on or they wouldn't be there in the first place.\n\n  return Recoil_mergeMaps(state.nonvalidatedAtoms.toMap(), persistedAtomContentsValues);\n}\n\n/**\n  Calls the given callback after any atoms have been modified and the consequent\n  component re-renders have been committed. This is intended for persisting\n  the values of the atoms to storage. The stored values can then be restored\n  using the useSetUnvalidatedAtomValues hook.\n\n  The callback receives the following info:\n\n  atomValues: The current value of every atom that is both persistable (persistence\n              type not set to 'none') and whose value is available (not in an\n              error or loading state).\n\n  previousAtomValues: The value of every persistable and available atom before\n               the transaction began.\n\n  atomInfo: A map containing the persistence settings for each atom. Every key\n            that exists in atomValues will also exist in atomInfo.\n\n  modifiedAtoms: The set of atoms that were written to during the transaction.\n\n  transactionMetadata: Arbitrary information that was added via the\n          useSetUnvalidatedAtomValues hook. Useful for ignoring the useSetUnvalidatedAtomValues\n          transaction, to avoid loops.\n*/\nfunction useTransactionObservation_DEPRECATED(callback) {\n  useTransactionSubscription(useCallback$2(store => {\n    let previousTree = store.getState().previousTree;\n    const currentTree = store.getState().currentTree;\n\n    if (!previousTree) {\n      Recoil_recoverableViolation('Transaction subscribers notified without a previous tree being present -- this is a bug in Recoil');\n      previousTree = store.getState().currentTree; // attempt to trundle on\n    }\n\n    const atomValues = externallyVisibleAtomValuesInState(currentTree);\n    const previousAtomValues = externallyVisibleAtomValuesInState(previousTree);\n    const atomInfo = Recoil_mapMap(nodes$1, node => {\n      var _node$persistence_UNS, _node$persistence_UNS2, _node$persistence_UNS3, _node$persistence_UNS4;\n\n      return {\n        persistence_UNSTABLE: {\n          type: (_node$persistence_UNS = (_node$persistence_UNS2 = node.persistence_UNSTABLE) === null || _node$persistence_UNS2 === void 0 ? void 0 : _node$persistence_UNS2.type) !== null && _node$persistence_UNS !== void 0 ? _node$persistence_UNS : 'none',\n          backButton: (_node$persistence_UNS3 = (_node$persistence_UNS4 = node.persistence_UNSTABLE) === null || _node$persistence_UNS4 === void 0 ? void 0 : _node$persistence_UNS4.backButton) !== null && _node$persistence_UNS3 !== void 0 ? _node$persistence_UNS3 : false\n        }\n      };\n    }); // Filter on existance in atomValues so that externally-visible rules\n    // are also applied to modified atoms (specifically exclude selectors):\n\n    const modifiedAtoms = Recoil_filterSet(currentTree.dirtyAtoms, k => atomValues.has(k) || previousAtomValues.has(k));\n    callback({\n      atomValues,\n      previousAtomValues,\n      atomInfo,\n      modifiedAtoms,\n      transactionMetadata: { ...currentTree.transactionMetadata\n      }\n    });\n  }, [callback]));\n}\n\nfunction useRecoilTransactionObserver(callback) {\n  useTransactionSubscription(useCallback$2(store => {\n    const snapshot = cloneSnapshot$1(store, 'latest');\n    const previousSnapshot = cloneSnapshot$1(store, 'previous');\n    callback({\n      snapshot,\n      previousSnapshot\n    });\n  }, [callback]));\n} // Return a snapshot of the current state and subscribe to all state changes\n\n\nfunction useRecoilSnapshot() {\n  const storeRef = useStoreRef$3();\n  const [snapshot, setSnapshot] = useState$2(() => cloneSnapshot$1(storeRef.current));\n  const previousSnapshot = Recoil_usePrevious(snapshot);\n  const timeoutID = useRef$5();\n  const releaseRef = useRef$5();\n  useTransactionSubscription(useCallback$2(store => setSnapshot(cloneSnapshot$1(store)), [])); // Retain snapshot for duration component is mounted\n\n  useEffect$4(() => {\n    const release = snapshot.retain(); // Release the retain from the rendering call\n\n    if (timeoutID.current && !isSSR$4) {\n      var _releaseRef$current;\n\n      window.clearTimeout(timeoutID.current);\n      timeoutID.current = null;\n      (_releaseRef$current = releaseRef.current) === null || _releaseRef$current === void 0 ? void 0 : _releaseRef$current.call(releaseRef);\n      releaseRef.current = null;\n    }\n\n    return () => {\n      // Defer the release.  If \"Fast Refresh\"\" is used then the component may\n      // re-render with the same state.  The previous cleanup will then run and\n      // then the new effect will run. We don't want the snapshot to be released\n      // by that cleanup before the new effect has a chance to retain it again.\n      // Use timeout of 10 to workaround Firefox issue: https://github.com/facebookexperimental/Recoil/issues/1936\n      window.setTimeout(release, 10);\n    };\n  }, [snapshot]); // Retain snapshot until above effect is run.\n  // Release after a threshold in case component is suspended.\n\n  if (previousSnapshot !== snapshot && !isSSR$4) {\n    // Release the previous snapshot\n    if (timeoutID.current) {\n      var _releaseRef$current2;\n\n      window.clearTimeout(timeoutID.current);\n      timeoutID.current = null;\n      (_releaseRef$current2 = releaseRef.current) === null || _releaseRef$current2 === void 0 ? void 0 : _releaseRef$current2.call(releaseRef);\n      releaseRef.current = null;\n    }\n\n    releaseRef.current = snapshot.retain();\n    timeoutID.current = window.setTimeout(() => {\n      var _releaseRef$current3;\n\n      timeoutID.current = null;\n      (_releaseRef$current3 = releaseRef.current) === null || _releaseRef$current3 === void 0 ? void 0 : _releaseRef$current3.call(releaseRef);\n      releaseRef.current = null;\n    }, SUSPENSE_TIMEOUT_MS$2);\n  }\n\n  return snapshot;\n}\n\nfunction gotoSnapshot(store, snapshot) {\n  var _storeState$nextTree;\n\n  const storeState = store.getState();\n  const prev = (_storeState$nextTree = storeState.nextTree) !== null && _storeState$nextTree !== void 0 ? _storeState$nextTree : storeState.currentTree;\n  const next = snapshot.getStore_INTERNAL().getState().currentTree;\n  batchUpdates$3(() => {\n    const keysToUpdate = new Set();\n\n    for (const keys of [prev.atomValues.keys(), next.atomValues.keys()]) {\n      for (const key of keys) {\n        var _prev$atomValues$get, _next$atomValues$get;\n\n        if (((_prev$atomValues$get = prev.atomValues.get(key)) === null || _prev$atomValues$get === void 0 ? void 0 : _prev$atomValues$get.contents) !== ((_next$atomValues$get = next.atomValues.get(key)) === null || _next$atomValues$get === void 0 ? void 0 : _next$atomValues$get.contents) && getNode$4(key).shouldRestoreFromSnapshots) {\n          keysToUpdate.add(key);\n        }\n      }\n    }\n\n    keysToUpdate.forEach(key => {\n      setRecoilValueLoadable$1(store, new AbstractRecoilValue$4(key), next.atomValues.has(key) ? Recoil_nullthrows(next.atomValues.get(key)) : DEFAULT_VALUE$3);\n    });\n    store.replaceState(state => ({ ...state,\n      stateID: snapshot.getID()\n    }));\n  });\n}\n\nfunction useGotoRecoilSnapshot() {\n  const storeRef = useStoreRef$3();\n  return useCallback$2(snapshot => gotoSnapshot(storeRef.current, snapshot), [storeRef]);\n}\n\nvar Recoil_SnapshotHooks = {\n  useRecoilSnapshot,\n  gotoSnapshot,\n  useGotoRecoilSnapshot,\n  useRecoilTransactionObserver,\n  useTransactionObservation_DEPRECATED,\n  useTransactionSubscription_DEPRECATED: useTransactionSubscription\n};\n\nconst {\n  peekNodeInfo: peekNodeInfo$2\n} = Recoil_FunctionalCore;\n\nconst {\n  useStoreRef: useStoreRef$4\n} = Recoil_RecoilRoot;\n\nfunction useGetRecoilValueInfo() {\n  const storeRef = useStoreRef$4(); // $FlowFixMe[incompatible-return]\n\n  return ({\n    key\n  }) => peekNodeInfo$2(storeRef.current, storeRef.current.getState().currentTree, key);\n}\n\nvar Recoil_useGetRecoilValueInfo = useGetRecoilValueInfo;\n\nconst {\n  reactMode: reactMode$4\n} = Recoil_ReactMode;\n\nconst {\n  RecoilRoot: RecoilRoot$1,\n  useStoreRef: useStoreRef$5\n} = Recoil_RecoilRoot;\n\n\n\nconst {\n  useMemo: useMemo$2\n} = react;\n\nfunction useRecoilBridgeAcrossReactRoots() {\n  // The test fails when using useMutableSource(), but only if act() is used\n  // for the nested root.  So, this may only be a testing environment issue.\n  if (reactMode$4().mode === 'MUTABLE_SOURCE') {\n    // eslint-disable-next-line fb-www/no-console\n    console.warn('Warning: There are known issues using useRecoilBridgeAcrossReactRoots() in recoil_mutable_source rendering mode.  Please consider upgrading to recoil_sync_external_store mode.');\n  }\n\n  const store = useStoreRef$5().current;\n  return useMemo$2(() => {\n    // eslint-disable-next-line no-shadow\n    function RecoilBridge({\n      children\n    }) {\n      return /*#__PURE__*/react.createElement(RecoilRoot$1, {\n        store_INTERNAL: store\n      }, children);\n    }\n\n    return RecoilBridge;\n  }, [store]);\n}\n\nvar Recoil_useRecoilBridgeAcrossReactRoots = useRecoilBridgeAcrossReactRoots;\n\nconst {\n  loadableWithValue: loadableWithValue$1\n} = Recoil_Loadable$1;\n\nconst {\n  initializeNode: initializeNode$3\n} = Recoil_FunctionalCore;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$4,\n  getNode: getNode$5\n} = Recoil_Node;\n\nconst {\n  copyTreeState: copyTreeState$1,\n  getRecoilValueAsLoadable: getRecoilValueAsLoadable$3,\n  invalidateDownstreams: invalidateDownstreams$1,\n  writeLoadableToTreeState: writeLoadableToTreeState$1\n} = Recoil_RecoilValueInterface;\n\n\n\nfunction isAtom(recoilValue) {\n  return getNode$5(recoilValue.key).nodeType === 'atom';\n}\n\nclass TransactionInterfaceImpl {\n  constructor(store, treeState) {\n    _defineProperty(this, \"_store\", void 0);\n\n    _defineProperty(this, \"_treeState\", void 0);\n\n    _defineProperty(this, \"_changes\", void 0);\n\n    _defineProperty(this, \"get\", recoilValue => {\n      if (this._changes.has(recoilValue.key)) {\n        // $FlowIssue[incompatible-return]\n        return this._changes.get(recoilValue.key);\n      }\n\n      if (!isAtom(recoilValue)) {\n        throw Recoil_err('Reading selectors within atomicUpdate is not supported');\n      }\n\n      const loadable = getRecoilValueAsLoadable$3(this._store, recoilValue, this._treeState);\n\n      if (loadable.state === 'hasValue') {\n        return loadable.contents;\n      } else if (loadable.state === 'hasError') {\n        throw loadable.contents;\n      } else {\n        throw Recoil_err(`Expected Recoil atom ${recoilValue.key} to have a value, but it is in a loading state.`);\n      }\n    });\n\n    _defineProperty(this, \"set\", (recoilState, valueOrUpdater) => {\n      if (!isAtom(recoilState)) {\n        throw Recoil_err('Setting selectors within atomicUpdate is not supported');\n      }\n\n      if (typeof valueOrUpdater === 'function') {\n        const current = this.get(recoilState);\n\n        this._changes.set(recoilState.key, valueOrUpdater(current)); // flowlint-line unclear-type:off\n\n      } else {\n        // Initialize atom and run effects if not initialized yet\n        initializeNode$3(this._store, recoilState.key, 'set');\n\n        this._changes.set(recoilState.key, valueOrUpdater);\n      }\n    });\n\n    _defineProperty(this, \"reset\", recoilState => {\n      this.set(recoilState, DEFAULT_VALUE$4);\n    });\n\n    this._store = store;\n    this._treeState = treeState;\n    this._changes = new Map();\n  } // Allow destructing\n  // eslint-disable-next-line fb-www/extra-arrow-initializer\n\n\n  newTreeState_INTERNAL() {\n    if (this._changes.size === 0) {\n      return this._treeState;\n    }\n\n    const newState = copyTreeState$1(this._treeState);\n\n    for (const [k, v] of this._changes) {\n      writeLoadableToTreeState$1(newState, k, loadableWithValue$1(v));\n    }\n\n    invalidateDownstreams$1(this._store, newState);\n    return newState;\n  }\n\n}\n\nfunction atomicUpdater(store) {\n  return fn => {\n    store.replaceState(treeState => {\n      const changeset = new TransactionInterfaceImpl(store, treeState);\n      fn(changeset);\n      return changeset.newTreeState_INTERNAL();\n    });\n  };\n}\n\nvar Recoil_AtomicUpdates = {\n  atomicUpdater\n};\n\nvar Recoil_AtomicUpdates_1 = Recoil_AtomicUpdates.atomicUpdater;\n\nvar Recoil_AtomicUpdates$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  atomicUpdater: Recoil_AtomicUpdates_1\n});\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n\nfunction invariant(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar invariant_1 = invariant;\n\n// @oss-only\n\n\nvar Recoil_invariant = invariant_1;\n\nconst {\n  atomicUpdater: atomicUpdater$1\n} = Recoil_AtomicUpdates$1;\n\nconst {\n  batchUpdates: batchUpdates$4\n} = Recoil_Batching;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$5\n} = Recoil_Node;\n\nconst {\n  useStoreRef: useStoreRef$6\n} = Recoil_RecoilRoot;\n\nconst {\n  refreshRecoilValue: refreshRecoilValue$1,\n  setRecoilValue: setRecoilValue$3\n} = Recoil_RecoilValueInterface;\n\nconst {\n  cloneSnapshot: cloneSnapshot$2\n} = Recoil_Snapshot$1;\n\nconst {\n  gotoSnapshot: gotoSnapshot$1\n} = Recoil_SnapshotHooks;\n\nconst {\n  useCallback: useCallback$3\n} = react;\n\n\n\n\n\n\n\n\n\nclass Sentinel {}\n\nconst SENTINEL = new Sentinel();\n\nfunction recoilCallback(store, fn, args, extraInterface) {\n  let ret = SENTINEL;\n  let releaseSnapshot;\n  batchUpdates$4(() => {\n    const errMsg = 'useRecoilCallback() expects a function that returns a function: ' + 'it accepts a function of the type (RecoilInterface) => (Args) => ReturnType ' + 'and returns a callback function (Args) => ReturnType, where RecoilInterface is ' + 'an object {snapshot, set, ...} and Args and ReturnType are the argument and return ' + 'types of the callback you want to create.  Please see the docs ' + 'at recoiljs.org for details.';\n\n    if (typeof fn !== 'function') {\n      throw Recoil_err(errMsg);\n    } // Clone the snapshot lazily to avoid overhead if the callback does not use it.\n    // Note that this means the snapshot may represent later state from when\n    // the callback was called if it first accesses the snapshot asynchronously.\n\n\n    const callbackInterface = Recoil_lazyProxy({ ...(extraInterface !== null && extraInterface !== void 0 ? extraInterface : {}),\n      // flowlint-line unclear-type:off\n      // $FlowFixMe[missing-local-annot]\n      set: (node, newValue) => setRecoilValue$3(store, node, newValue),\n      // $FlowFixMe[missing-local-annot]\n      reset: node => setRecoilValue$3(store, node, DEFAULT_VALUE$5),\n      // $FlowFixMe[missing-local-annot]\n      refresh: node => refreshRecoilValue$1(store, node),\n      gotoSnapshot: snapshot => gotoSnapshot$1(store, snapshot),\n      transact_UNSTABLE: transaction => atomicUpdater$1(store)(transaction)\n    }, {\n      snapshot: () => {\n        const snapshot = cloneSnapshot$2(store);\n        releaseSnapshot = snapshot.retain();\n        return snapshot;\n      }\n    });\n    const callback = fn(callbackInterface);\n\n    if (typeof callback !== 'function') {\n      throw Recoil_err(errMsg);\n    }\n\n    ret = callback(...args);\n  });\n  !!(ret instanceof Sentinel) ? process.env.NODE_ENV !== \"production\" ? Recoil_invariant(false, 'batchUpdates should return immediately') : Recoil_invariant(false) : void 0;\n\n  if (Recoil_isPromise(ret)) {\n    ret = ret.finally(() => {\n      var _releaseSnapshot;\n\n      (_releaseSnapshot = releaseSnapshot) === null || _releaseSnapshot === void 0 ? void 0 : _releaseSnapshot();\n    });\n  } else {\n    var _releaseSnapshot2;\n\n    (_releaseSnapshot2 = releaseSnapshot) === null || _releaseSnapshot2 === void 0 ? void 0 : _releaseSnapshot2();\n  }\n\n  return ret;\n}\n\nfunction useRecoilCallback(fn, deps) {\n  const storeRef = useStoreRef$6();\n  return useCallback$3( // $FlowIssue[incompatible-call]\n  (...args) => {\n    return recoilCallback(storeRef.current, fn, args);\n  }, deps != null ? [...deps, storeRef] : undefined // eslint-disable-line fb-www/react-hooks-deps\n  );\n}\n\nvar Recoil_useRecoilCallback = {\n  recoilCallback,\n  useRecoilCallback\n};\n\nconst {\n  useStoreRef: useStoreRef$7\n} = Recoil_RecoilRoot;\n\nconst {\n  refreshRecoilValue: refreshRecoilValue$2\n} = Recoil_RecoilValueInterface;\n\nconst {\n  useCallback: useCallback$4\n} = react;\n\nfunction useRecoilRefresher(recoilValue) {\n  const storeRef = useStoreRef$7();\n  return useCallback$4(() => {\n    const store = storeRef.current;\n    refreshRecoilValue$2(store, recoilValue);\n  }, [recoilValue, storeRef]);\n}\n\nvar Recoil_useRecoilRefresher = useRecoilRefresher;\n\nconst {\n  atomicUpdater: atomicUpdater$2\n} = Recoil_AtomicUpdates$1;\n\nconst {\n  useStoreRef: useStoreRef$8\n} = Recoil_RecoilRoot;\n\nconst {\n  useMemo: useMemo$3\n} = react;\n\nfunction useRecoilTransaction(fn, deps) {\n  const storeRef = useStoreRef$8();\n  return useMemo$3(() => (...args) => {\n    const atomicUpdate = atomicUpdater$2(storeRef.current);\n    atomicUpdate(transactionInterface => {\n      fn(transactionInterface)(...args);\n    });\n  }, deps != null ? [...deps, storeRef] : undefined // eslint-disable-line fb-www/react-hooks-deps\n  );\n}\n\nvar Recoil_useRecoilTransaction = useRecoilTransaction;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n\nclass WrappedValue {\n  constructor(value) {\n    _defineProperty(this, \"value\", void 0);\n\n    this.value = value;\n  }\n\n}\n\nvar Recoil_Wrapper = {\n  WrappedValue\n};\n\nvar Recoil_Wrapper_1 = Recoil_Wrapper.WrappedValue;\n\nvar Recoil_Wrapper$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  WrappedValue: Recoil_Wrapper_1\n});\n\nconst {\n  isFastRefreshEnabled: isFastRefreshEnabled$2\n} = Recoil_ReactMode;\n\n\n\nclass ChangedPathError extends Error {}\n\nclass TreeCache {\n  // $FlowIssue[unclear-type]\n  constructor(options) {\n    var _options$onHit, _options$onSet, _options$mapNodeValue;\n\n    _defineProperty(this, \"_name\", void 0);\n\n    _defineProperty(this, \"_numLeafs\", void 0);\n\n    _defineProperty(this, \"_root\", void 0);\n\n    _defineProperty(this, \"_onHit\", void 0);\n\n    _defineProperty(this, \"_onSet\", void 0);\n\n    _defineProperty(this, \"_mapNodeValue\", void 0);\n\n    this._name = options === null || options === void 0 ? void 0 : options.name;\n    this._numLeafs = 0;\n    this._root = null;\n    this._onHit = (_options$onHit = options === null || options === void 0 ? void 0 : options.onHit) !== null && _options$onHit !== void 0 ? _options$onHit : () => {};\n    this._onSet = (_options$onSet = options === null || options === void 0 ? void 0 : options.onSet) !== null && _options$onSet !== void 0 ? _options$onSet : () => {};\n    this._mapNodeValue = (_options$mapNodeValue = options === null || options === void 0 ? void 0 : options.mapNodeValue) !== null && _options$mapNodeValue !== void 0 ? _options$mapNodeValue : val => val;\n  }\n\n  size() {\n    return this._numLeafs;\n  } // $FlowIssue[unclear-type]\n\n\n  root() {\n    return this._root;\n  }\n\n  get(getNodeValue, handlers) {\n    var _this$getLeafNode;\n\n    return (_this$getLeafNode = this.getLeafNode(getNodeValue, handlers)) === null || _this$getLeafNode === void 0 ? void 0 : _this$getLeafNode.value;\n  }\n\n  getLeafNode(getNodeValue, handlers) {\n    if (this._root == null) {\n      return undefined;\n    } // Iterate down the tree based on the current node values until we hit a leaf\n    // $FlowIssue[unclear-type]\n\n\n    let node = this._root;\n\n    while (node) {\n      handlers === null || handlers === void 0 ? void 0 : handlers.onNodeVisit(node);\n\n      if (node.type === 'leaf') {\n        this._onHit(node);\n\n        return node;\n      }\n\n      const nodeValue = this._mapNodeValue(getNodeValue(node.nodeKey));\n\n      node = node.branches.get(nodeValue);\n    }\n\n    return undefined;\n  }\n\n  set(route, value, handlers) {\n    const addLeaf = () => {\n      var _node2, _node3, _this$_root2, _handlers$onNodeVisit2;\n\n      // First, setup the branch nodes for the route:\n      // Iterate down the tree to find or add branch nodes following the route\n      let node;\n      let branchKey;\n\n      for (const [nodeKey, nodeValue] of route) {\n        var _node, _handlers$onNodeVisit, _this$_root;\n\n        // If the previous root was a leaf, while we not have a get(), it means\n        // the selector has inconsistent values or implementation changed.\n        const root = this._root;\n\n        if ((root === null || root === void 0 ? void 0 : root.type) === 'leaf') {\n          throw this.invalidCacheError();\n        } // node now refers to the next node down in the tree\n\n\n        const parent = node; // $FlowFixMe[prop-missing]\n        // $FlowFixMe[incompatible-type]\n\n        node = parent ? parent.branches.get(branchKey) : root; // $FlowFixMe[prop-missing]\n        // $FlowFixMe[incompatible-type]\n\n        node = (_node = node) !== null && _node !== void 0 ? _node : {\n          type: 'branch',\n          nodeKey,\n          parent,\n          branches: new Map(),\n          branchKey\n        }; // If we found an existing node, confirm it has a consistent value\n\n        if (node.type !== 'branch' || node.nodeKey !== nodeKey) {\n          throw this.invalidCacheError();\n        } // Add the branch node to the tree\n\n\n        parent === null || parent === void 0 ? void 0 : parent.branches.set(branchKey, node);\n        handlers === null || handlers === void 0 ? void 0 : (_handlers$onNodeVisit = handlers.onNodeVisit) === null || _handlers$onNodeVisit === void 0 ? void 0 : _handlers$onNodeVisit.call(handlers, node); // Prepare for next iteration and install root if it is new.\n\n        branchKey = this._mapNodeValue(nodeValue);\n        this._root = (_this$_root = this._root) !== null && _this$_root !== void 0 ? _this$_root : node;\n      } // Second, setup the leaf node:\n      // If there is an existing leaf for this route confirm it is consistent\n\n\n      const oldLeaf = node ? (_node2 = node) === null || _node2 === void 0 ? void 0 : _node2.branches.get(branchKey) : this._root;\n\n      if (oldLeaf != null && (oldLeaf.type !== 'leaf' || oldLeaf.branchKey !== branchKey)) {\n        throw this.invalidCacheError();\n      } // Create a new or replacement leaf.\n\n\n      const leafNode = {\n        type: 'leaf',\n        value,\n        parent: node,\n        branchKey\n      }; // Install the leaf and call handlers\n\n      (_node3 = node) === null || _node3 === void 0 ? void 0 : _node3.branches.set(branchKey, leafNode);\n      this._root = (_this$_root2 = this._root) !== null && _this$_root2 !== void 0 ? _this$_root2 : leafNode;\n      this._numLeafs++;\n\n      this._onSet(leafNode);\n\n      handlers === null || handlers === void 0 ? void 0 : (_handlers$onNodeVisit2 = handlers.onNodeVisit) === null || _handlers$onNodeVisit2 === void 0 ? void 0 : _handlers$onNodeVisit2.call(handlers, leafNode);\n    };\n\n    try {\n      addLeaf();\n    } catch (error) {\n      // If the cache was stale or observed inconsistent values, such as with\n      // Fast Refresh, then clear it and rebuild with the new values.\n      if (error instanceof ChangedPathError) {\n        this.clear();\n        addLeaf();\n      } else {\n        throw error;\n      }\n    }\n  } // Returns true if leaf was actually deleted from the tree\n\n\n  delete(leaf) {\n    const root = this.root();\n\n    if (!root) {\n      return false;\n    }\n\n    if (leaf === root) {\n      this._root = null;\n      this._numLeafs = 0;\n      return true;\n    } // Iterate up from the leaf deleteing it from it's parent's branches.\n\n\n    let node = leaf.parent;\n    let branchKey = leaf.branchKey;\n\n    while (node) {\n      var _node4;\n\n      node.branches.delete(branchKey); // Stop iterating if we hit the root.\n\n      if (node === root) {\n        if (node.branches.size === 0) {\n          this._root = null;\n          this._numLeafs = 0;\n        } else {\n          this._numLeafs--;\n        }\n\n        return true;\n      } // Stop iterating if there are other branches since we don't need to\n      // remove any more nodes.\n\n\n      if (node.branches.size > 0) {\n        break;\n      } // Iterate up to our parent\n\n\n      branchKey = (_node4 = node) === null || _node4 === void 0 ? void 0 : _node4.branchKey;\n      node = node.parent;\n    } // Confirm that the leaf we are deleting is actually attached to our tree\n\n\n    for (; node !== root; node = node.parent) {\n      if (node == null) {\n        return false;\n      }\n    }\n\n    this._numLeafs--;\n    return true;\n  }\n\n  clear() {\n    this._numLeafs = 0;\n    this._root = null;\n  }\n\n  invalidCacheError() {\n    const CHANGED_PATH_ERROR_MESSAGE = isFastRefreshEnabled$2() ? 'Possible Fast Refresh module reload detected.  ' + 'This may also be caused by an selector returning inconsistent values. ' + 'Resetting cache.' : 'Invalid cache values.  This happens when selectors do not return ' + 'consistent values for the same input dependency values.  That may also ' + 'be caused when using Fast Refresh to change a selector implementation.  ' + 'Resetting cache.';\n    Recoil_recoverableViolation(CHANGED_PATH_ERROR_MESSAGE + (this._name != null ? ` - ${this._name}` : ''));\n    throw new ChangedPathError();\n  }\n\n}\n\nvar Recoil_TreeCache = {\n  TreeCache\n};\n\nvar Recoil_TreeCache_1 = Recoil_TreeCache.TreeCache;\n\nvar Recoil_TreeCache$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  TreeCache: Recoil_TreeCache_1\n});\n\nclass LRUCache {\n  constructor(options) {\n    var _options$mapKey;\n\n    _defineProperty(this, \"_maxSize\", void 0);\n\n    _defineProperty(this, \"_size\", void 0);\n\n    _defineProperty(this, \"_head\", void 0);\n\n    _defineProperty(this, \"_tail\", void 0);\n\n    _defineProperty(this, \"_map\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    this._maxSize = options.maxSize;\n    this._size = 0;\n    this._head = null;\n    this._tail = null;\n    this._map = new Map();\n    this._keyMapper = (_options$mapKey = options.mapKey) !== null && _options$mapKey !== void 0 ? _options$mapKey : v => v;\n  }\n\n  head() {\n    return this._head;\n  }\n\n  tail() {\n    return this._tail;\n  }\n\n  size() {\n    return this._size;\n  }\n\n  maxSize() {\n    return this._maxSize;\n  }\n\n  has(key) {\n    return this._map.has(this._keyMapper(key));\n  }\n\n  get(key) {\n    const mappedKey = this._keyMapper(key);\n\n    const node = this._map.get(mappedKey);\n\n    if (!node) {\n      return undefined;\n    }\n\n    this.set(key, node.value);\n    return node.value;\n  }\n\n  set(key, val) {\n    const mappedKey = this._keyMapper(key);\n\n    const existingNode = this._map.get(mappedKey);\n\n    if (existingNode) {\n      this.delete(key);\n    }\n\n    const head = this.head();\n    const node = {\n      key,\n      right: head,\n      left: null,\n      value: val\n    };\n\n    if (head) {\n      head.left = node;\n    } else {\n      this._tail = node;\n    }\n\n    this._map.set(mappedKey, node);\n\n    this._head = node;\n    this._size++;\n\n    this._maybeDeleteLRU();\n  }\n\n  _maybeDeleteLRU() {\n    if (this.size() > this.maxSize()) {\n      this.deleteLru();\n    }\n  }\n\n  deleteLru() {\n    const tail = this.tail();\n\n    if (tail) {\n      this.delete(tail.key);\n    }\n  }\n\n  delete(key) {\n    const mappedKey = this._keyMapper(key);\n\n    if (!this._size || !this._map.has(mappedKey)) {\n      return;\n    }\n\n    const node = Recoil_nullthrows(this._map.get(mappedKey));\n    const right = node.right;\n    const left = node.left;\n\n    if (right) {\n      right.left = node.left;\n    }\n\n    if (left) {\n      left.right = node.right;\n    }\n\n    if (node === this.head()) {\n      this._head = right;\n    }\n\n    if (node === this.tail()) {\n      this._tail = left;\n    }\n\n    this._map.delete(mappedKey);\n\n    this._size--;\n  }\n\n  clear() {\n    this._size = 0;\n    this._head = null;\n    this._tail = null;\n    this._map = new Map();\n  }\n\n}\n\nvar Recoil_LRUCache = {\n  LRUCache\n};\n\nvar Recoil_LRUCache_1 = Recoil_LRUCache.LRUCache;\n\nvar Recoil_LRUCache$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LRUCache: Recoil_LRUCache_1\n});\n\nconst {\n  LRUCache: LRUCache$1\n} = Recoil_LRUCache$1;\n\nconst {\n  TreeCache: TreeCache$1\n} = Recoil_TreeCache$1;\n\nfunction treeCacheLRU({\n  name,\n  maxSize,\n  mapNodeValue = v => v\n}) {\n  const lruCache = new LRUCache$1({\n    maxSize\n  });\n  const cache = new TreeCache$1({\n    name,\n    mapNodeValue,\n    onHit: node => {\n      lruCache.set(node, true);\n    },\n    onSet: node => {\n      const lruNode = lruCache.tail();\n      lruCache.set(node, true);\n\n      if (lruNode && cache.size() > maxSize) {\n        // $FlowFixMe[incompatible-call]\n        cache.delete(lruNode.key);\n      }\n    }\n  });\n  return cache;\n}\n\nvar Recoil_treeCacheLRU = treeCacheLRU;\n\nconst TIME_WARNING_THRESHOLD_MS = 15;\n\nfunction stringify(x, opt, key) {\n  // A optimization to avoid the more expensive JSON.stringify() for simple strings\n  // This may lose protection for u2028 and u2029, though.\n  if (typeof x === 'string' && !x.includes('\"') && !x.includes('\\\\')) {\n    return `\"${x}\"`;\n  } // Handle primitive types\n\n\n  switch (typeof x) {\n    case 'undefined':\n      return '';\n    // JSON.stringify(undefined) returns undefined, but we always want to return a string\n\n    case 'boolean':\n      return x ? 'true' : 'false';\n\n    case 'number':\n    case 'symbol':\n      // case 'bigint': // BigInt is not supported in www\n      return String(x);\n\n    case 'string':\n      // Add surrounding quotes and escape internal quotes\n      return JSON.stringify(x);\n\n    case 'function':\n      if ((opt === null || opt === void 0 ? void 0 : opt.allowFunctions) !== true) {\n        throw Recoil_err('Attempt to serialize function in a Recoil cache key');\n      }\n\n      return `__FUNCTION(${x.name})__`;\n  }\n\n  if (x === null) {\n    return 'null';\n  } // Fallback case for unknown types\n\n\n  if (typeof x !== 'object') {\n    var _JSON$stringify;\n\n    return (_JSON$stringify = JSON.stringify(x)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : '';\n  } // Deal with all promises as equivalent for now.\n\n\n  if (Recoil_isPromise(x)) {\n    return '__PROMISE__';\n  } // Arrays handle recursive stringification\n\n\n  if (Array.isArray(x)) {\n    // $FlowFixMe[missing-local-annot]\n    return `[${x.map((v, i) => stringify(v, opt, i.toString()))}]`;\n  } // If an object defines a toJSON() method, then use that to override the\n  // serialization.  This matches the behavior of JSON.stringify().\n  // Pass the key for compatibility.\n  // Immutable.js collections define this method to allow us to serialize them.\n\n\n  if (typeof x.toJSON === 'function') {\n    // flowlint-next-line unclear-type: off\n    return stringify(x.toJSON(key), opt, key);\n  } // For built-in Maps, sort the keys in a stable order instead of the\n  // default insertion order.  Support non-string keys.\n\n\n  if (x instanceof Map) {\n    const obj = {};\n\n    for (const [k, v] of x) {\n      // Stringify will escape any nested quotes\n      obj[typeof k === 'string' ? k : stringify(k, opt)] = v;\n    }\n\n    return stringify(obj, opt, key);\n  } // For built-in Sets, sort the keys in a stable order instead of the\n  // default insertion order.\n\n\n  if (x instanceof Set) {\n    return stringify( // $FlowFixMe[missing-local-annot]\n    Array.from(x).sort((a, b) => stringify(a, opt).localeCompare(stringify(b, opt))), opt, key);\n  } // Anything else that is iterable serialize as an Array.\n\n\n  if (Symbol !== undefined && x[Symbol.iterator] != null && typeof x[Symbol.iterator] === 'function') {\n    // flowlint-next-line unclear-type: off\n    return stringify(Array.from(x), opt, key);\n  } // For all other Objects, sort the keys in a stable order.\n\n\n  return `{${Object.keys(x).filter(k => x[k] !== undefined).sort() // stringify the key to add quotes and escape any nested slashes or quotes.\n  .map(k => `${stringify(k, opt)}:${stringify(x[k], opt, k)}`).join(',')}}`;\n} // Utility similar to JSON.stringify() except:\n// * Serialize built-in Sets as an Array\n// * Serialize built-in Maps as an Object.  Supports non-string keys.\n// * Serialize other iterables as arrays\n// * Sort the keys of Objects and Maps to have a stable order based on string conversion.\n//    This overrides their default insertion order.\n// * Still uses toJSON() of any object to override serialization\n// * Support Symbols (though don't guarantee uniqueness)\n// * We could support BigInt, but Flow doesn't seem to like it.\n// See Recoil_stableStringify-test.js for examples\n\n\nfunction stableStringify(x, opt = {\n  allowFunctions: false\n}) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof window !== 'undefined') {\n      const startTime = window.performance ? window.performance.now() : 0;\n      const str = stringify(x, opt);\n      const endTime = window.performance ? window.performance.now() : 0;\n\n      if (endTime - startTime > TIME_WARNING_THRESHOLD_MS) {\n        /* eslint-disable fb-www/no-console */\n        console.groupCollapsed(`Recoil: Spent ${endTime - startTime}ms computing a cache key`);\n        console.warn(x, str);\n        console.groupEnd();\n        /* eslint-enable fb-www/no-console */\n      }\n\n      return str;\n    }\n  }\n\n  return stringify(x, opt);\n}\n\nvar Recoil_stableStringify = stableStringify;\n\nconst {\n  TreeCache: TreeCache$2\n} = Recoil_TreeCache$1;\n\n\n\n\n\n\n\n\n\nconst defaultPolicy = {\n  equality: 'reference',\n  eviction: 'keep-all',\n  maxSize: Infinity\n};\n\nfunction treeCacheFromPolicy({\n  equality = defaultPolicy.equality,\n  eviction = defaultPolicy.eviction,\n  maxSize = defaultPolicy.maxSize\n} = defaultPolicy, name) {\n  const valueMapper = getValueMapper(equality);\n  return getTreeCache(eviction, maxSize, valueMapper, name);\n}\n\nfunction getValueMapper(equality) {\n  switch (equality) {\n    case 'reference':\n      return val => val;\n\n    case 'value':\n      return val => Recoil_stableStringify(val);\n  }\n\n  throw Recoil_err(`Unrecognized equality policy ${equality}`);\n}\n\nfunction getTreeCache(eviction, maxSize, mapNodeValue, name) {\n  switch (eviction) {\n    case 'keep-all':\n      return new TreeCache$2({\n        name,\n        mapNodeValue\n      });\n\n    case 'lru':\n      return Recoil_treeCacheLRU({\n        name,\n        maxSize: Recoil_nullthrows(maxSize),\n        mapNodeValue\n      });\n\n    case 'most-recent':\n      return Recoil_treeCacheLRU({\n        name,\n        maxSize: 1,\n        mapNodeValue\n      });\n  }\n\n  throw Recoil_err(`Unrecognized eviction policy ${eviction}`);\n}\n\nvar Recoil_treeCacheFromPolicy = treeCacheFromPolicy;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n\nfunction isNode(object) {\n  var _ownerDocument, _doc$defaultView;\n\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  const doc = object != null ? (_ownerDocument = object.ownerDocument) !== null && _ownerDocument !== void 0 ? _ownerDocument : object : document;\n  const defaultView = (_doc$defaultView = doc.defaultView) !== null && _doc$defaultView !== void 0 ? _doc$defaultView : window;\n  return !!(object != null && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nvar Recoil_isNode = isNode;\n\nconst {\n  isReactNative: isReactNative$1,\n  isWindow: isWindow$1\n} = Recoil_Environment;\n\n\n\n\n\nfunction shouldNotBeFrozen(value) {\n  // Primitives and functions:\n  if (value === null || typeof value !== 'object') {\n    return true;\n  } // React elements:\n\n\n  switch (typeof value.$$typeof) {\n    case 'symbol':\n      return true;\n\n    case 'number':\n      return true;\n  } // Immutable structures:\n\n\n  if (value['@@__IMMUTABLE_ITERABLE__@@'] != null || value['@@__IMMUTABLE_KEYED__@@'] != null || value['@@__IMMUTABLE_INDEXED__@@'] != null || value['@@__IMMUTABLE_ORDERED__@@'] != null || value['@@__IMMUTABLE_RECORD__@@'] != null) {\n    return true;\n  } // DOM nodes:\n\n\n  if (Recoil_isNode(value)) {\n    return true;\n  }\n\n  if (Recoil_isPromise(value)) {\n    return true;\n  }\n\n  if (value instanceof Error) {\n    return true;\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return true;\n  } // Some environments, just as Jest, don't work with the instanceof check\n\n\n  if (!isReactNative$1 && isWindow$1(value)) {\n    return true;\n  }\n\n  return false;\n} // Recursively freeze a value to enforce it is read-only.\n// This may also have minimal performance improvements for enumerating\n// objects (based on browser implementations, of course)\n\n\nfunction deepFreezeValue(value) {\n  if (typeof value !== 'object' || shouldNotBeFrozen(value)) {\n    return;\n  }\n\n  Object.freeze(value); // Make all properties read-only\n\n  for (const key in value) {\n    // $FlowIssue[method-unbinding] added when improving typing for this parameters\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      const prop = value[key]; // Prevent infinite recurssion for circular references.\n\n      if (typeof prop === 'object' && prop != null && !Object.isFrozen(prop)) {\n        deepFreezeValue(prop);\n      }\n    }\n  }\n\n  Object.seal(value); // This also makes existing properties non-configurable.\n}\n\nvar Recoil_deepFreezeValue = deepFreezeValue;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * This is a stub for some integration into FB internal stuff\n *\n * \n * @format\n * @oncall recoil\n */\nfunction startPerfBlock(_id) {\n  return () => null;\n}\n\nvar Recoil_PerformanceTimings = {\n  startPerfBlock\n};\n\nconst {\n  isLoadable: isLoadable$1,\n  loadableWithError: loadableWithError$1,\n  loadableWithPromise: loadableWithPromise$1,\n  loadableWithValue: loadableWithValue$2\n} = Recoil_Loadable$1;\n\nconst {\n  WrappedValue: WrappedValue$1\n} = Recoil_Wrapper$1;\n\n\n\nconst {\n  getNodeLoadable: getNodeLoadable$2,\n  peekNodeLoadable: peekNodeLoadable$1,\n  setNodeValue: setNodeValue$3\n} = Recoil_FunctionalCore;\n\nconst {\n  saveDepsToStore: saveDepsToStore$1\n} = Recoil_Graph;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$6,\n  getConfigDeletionHandler: getConfigDeletionHandler$1,\n  getNode: getNode$6,\n  registerNode: registerNode$1\n} = Recoil_Node;\n\nconst {\n  isRecoilValue: isRecoilValue$3\n} = Recoil_RecoilValue$1;\n\nconst {\n  markRecoilValueModified: markRecoilValueModified$1\n} = Recoil_RecoilValueInterface;\n\nconst {\n  retainedByOptionWithDefault: retainedByOptionWithDefault$1\n} = Recoil_Retention;\n\nconst {\n  recoilCallback: recoilCallback$1\n} = Recoil_useRecoilCallback;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst {\n  startPerfBlock: startPerfBlock$1\n} = Recoil_PerformanceTimings;\n\n\n\nclass Canceled {}\n\nconst CANCELED = new Canceled();\n/**\n * An ExecutionID is an arbitrary ID that lets us distinguish executions from\n * each other. This is necessary as we need a way of solving this problem:\n * \"given 3 async executions, only update state for the 'latest' execution when\n * it finishes running regardless of when the other 2 finish\". ExecutionIDs\n * provide a convenient way of identifying executions so that we can track and\n * manage them over time.\n */\n\nconst dependencyStack = []; // for detecting circular dependencies.\n\nconst waitingStores = new Map();\n\nconst getNewExecutionID = (() => {\n  let executionID = 0;\n  return () => executionID++;\n})();\n/* eslint-disable no-redeclare */\n\n\nfunction selector(options) {\n  let recoilValue = null;\n  const {\n    key,\n    get,\n    cachePolicy_UNSTABLE: cachePolicy\n  } = options;\n  const set = options.set != null ? options.set : undefined; // flow\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof key !== 'string') {\n      throw Recoil_err('A key option with a unique string value must be provided when creating a selector.');\n    }\n\n    if (typeof get !== 'function') {\n      throw Recoil_err('Selectors must specify a get callback option to get the selector value.');\n    }\n  } // This is every discovered dependency across all executions\n\n\n  const discoveredDependencyNodeKeys = new Set();\n  const cache = Recoil_treeCacheFromPolicy(cachePolicy !== null && cachePolicy !== void 0 ? cachePolicy : {\n    equality: 'reference',\n    eviction: 'keep-all'\n  }, key);\n  const retainedBy = retainedByOptionWithDefault$1(options.retainedBy_UNSTABLE);\n  const executionInfoMap = new Map();\n  let liveStoresCount = 0;\n\n  function selectorIsLive() {\n    return !Recoil_gkx('recoil_memory_managament_2020') || liveStoresCount > 0;\n  }\n\n  function selectorInit(store) {\n    store.getState().knownSelectors.add(key);\n    liveStoresCount++;\n    return () => {\n      liveStoresCount--;\n    };\n  }\n\n  function selectorShouldDeleteConfigOnRelease() {\n    return getConfigDeletionHandler$1(key) !== undefined && !selectorIsLive();\n  }\n\n  function resolveAsync(store, state, executionID, loadable, depValues) {\n    setCache(state, loadable, depValues);\n    notifyStoresOfResolvedAsync(store, executionID);\n  }\n\n  function notifyStoresOfResolvedAsync(store, executionID) {\n    if (isLatestExecution(store, executionID)) {\n      clearExecutionInfo(store);\n    }\n\n    notifyWaitingStores(executionID, true);\n  }\n  /**\n   * Notify stores to pull the selector again if a new async dep was discovered.\n   * 1) Async selector adds a new dep but doesn't resolve yet.\n   *    Note that deps for an async selector are based on the state when the\n   *    evaluation started, in order to provide a consistent picture of state.\n   * 2) But, new value of dep based on the current state might cause the selector\n   *    to resolve or resolve differently.\n   * 3) Therefore, this notification will pull the selector based on the current\n   *    state for the components\n   */\n\n\n  function notifyStoresOfNewAsyncDep(store, executionID) {\n    if (isLatestExecution(store, executionID)) {\n      const executionInfo = Recoil_nullthrows(getExecutionInfo(store));\n      executionInfo.stateVersions.clear();\n      notifyWaitingStores(executionID, false);\n    }\n  }\n\n  function notifyWaitingStores(executionID, clearWaitlist) {\n    const stores = waitingStores.get(executionID);\n\n    if (stores != null) {\n      for (const waitingStore of stores) {\n        markRecoilValueModified$1(waitingStore, Recoil_nullthrows(recoilValue));\n      }\n\n      if (clearWaitlist) {\n        waitingStores.delete(executionID);\n      }\n    }\n  }\n\n  function markStoreWaitingForResolvedAsync(store, executionID) {\n    let stores = waitingStores.get(executionID);\n\n    if (stores == null) {\n      waitingStores.set(executionID, stores = new Set());\n    }\n\n    stores.add(store);\n  }\n  /**\n   * This function attaches a then() and a catch() to a promise that was\n   * returned from a selector's get() (either explicitly or implicitly by\n   * running a function that uses the \"async\" keyword). If a selector's get()\n   * returns a promise, we have two possibilities:\n   *\n   * 1. The promise will resolve, in which case it will have completely finished\n   *    executing without any remaining pending dependencies. No more retries\n   *    are needed and we can proceed with updating the cache and notifying\n   *    subscribers (if it is the latest execution, otherwise only the cache\n   *    will be updated and subscriptions will not be fired). This is the case\n   *    handled by the attached then() handler.\n   *\n   * 2. The promise will throw because it either has an error or it came across\n   *    an async dependency that has not yet resolved, in which case we will\n   *    call wrapDepdencyPromise(), whose responsibility is to handle dependency\n   *    promises. This case is handled by the attached catch() handler.\n   *\n   * Both branches will eventually resolve to the final result of the selector\n   * (or an error if a real error occurred).\n   *\n   * The execution will run to completion even if it is stale, and its value\n   * will be cached. But stale executions will not update global state or update\n   * executionInfo as that is the responsibility of the 'latest' execution.\n   *\n   * Note this function should not be passed a promise that was thrown--AKA a\n   * dependency promise. Dependency promises should be passed to\n   * wrapPendingDependencyPromise()).\n   */\n\n\n  function wrapResultPromise(store, promise, state, depValues, executionID, loadingDepsState) {\n    return promise.then(value => {\n      if (!selectorIsLive()) {\n        // The selector was released since the request began; ignore the response.\n        clearExecutionInfo(store);\n        throw CANCELED;\n      }\n\n      const loadable = loadableWithValue$2(value);\n      resolveAsync(store, state, executionID, loadable, depValues);\n      return value;\n    }).catch(errorOrPromise => {\n      if (!selectorIsLive()) {\n        // The selector was released since the request began; ignore the response.\n        clearExecutionInfo(store);\n        throw CANCELED;\n      }\n\n      if (Recoil_isPromise(errorOrPromise)) {\n        return wrapPendingDependencyPromise(store, errorOrPromise, state, depValues, executionID, loadingDepsState);\n      }\n\n      const loadable = loadableWithError$1(errorOrPromise);\n      resolveAsync(store, state, executionID, loadable, depValues);\n      throw errorOrPromise;\n    });\n  }\n  /**\n   * This function attaches a then() and a catch() to a promise that was\n   * thrown from a selector's get(). If a selector's get() throws a promise,\n   * we have two possibilities:\n   *\n   * 1. The promise will resolve, meaning one of our selector's dependencies is\n   *    now available and we should \"retry\" our get() by running it again. This\n   *    is the case handled by the attached then() handler.\n   *\n   * 2. The promise will throw because something went wrong with the dependency\n   *    promise (in other words a real error occurred). This case is handled by\n   *    the attached catch() handler. If the dependency promise throws, it is\n   *    _always_ a real error and not another dependency promise (any dependency\n   *    promises would have been handled upstream).\n   *\n   * The then() branch will eventually resolve to the final result of the\n   * selector (or an error if a real error occurs), and the catch() will always\n   * resolve to an error because the dependency promise is a promise that was\n   * wrapped upstream, meaning it will only resolve to its real value or to a\n   * real error.\n   *\n   * The execution will run to completion even if it is stale, and its value\n   * will be cached. But stale executions will not update global state or update\n   * executionInfo as that is the responsibility of the 'latest' execution.\n   *\n   * Note this function should not be passed a promise that was returned from\n   * get(). The intention is that this function is only passed promises that\n   * were thrown due to a pending dependency. Promises returned by get() should\n   * be passed to wrapResultPromise() instead.\n   */\n\n\n  function wrapPendingDependencyPromise(store, promise, state, existingDeps, executionID, loadingDepsState) {\n    return promise.then(resolvedDep => {\n      if (!selectorIsLive()) {\n        // The selector was released since the request began; ignore the response.\n        clearExecutionInfo(store);\n        throw CANCELED;\n      } // Check if we are handling a pending Recoil dependency or if the user\n      // threw their own Promise to \"suspend\" a selector evaluation.  We need\n      // to check that the loadingDepPromise actually matches the promise that\n      // we caught in case the selector happened to catch the promise we threw\n      // for a pending Recoil dependency from `getRecoilValue()` and threw\n      // their own promise instead.\n\n\n      if (loadingDepsState.loadingDepKey != null && loadingDepsState.loadingDepPromise === promise) {\n        /**\n         * Note for async atoms, this means we are changing the atom's value\n         * in the store for the given version. This should be alright because\n         * the version of state is now stale and a new version will have\n         * already been triggered by the atom being resolved (see this logic\n         * in Recoil_atom.js)\n         */\n        state.atomValues.set(loadingDepsState.loadingDepKey, loadableWithValue$2(resolvedDep));\n      } else {\n        /**\n         * If resolvedDepKey is not defined, the promise was a user-thrown\n         * promise. User-thrown promises are an advanced feature and they\n         * should be avoided in almost all cases. Using `loadable.map()` inside\n         * of selectors for loading loadables and then throwing that mapped\n         * loadable's promise is an example of a user-thrown promise.\n         *\n         * When we hit a user-thrown promise, we have to bail out of an optimization\n         * where we bypass calculating selector cache keys for selectors that\n         * have been previously seen for a given state (these selectors are saved in\n         * state.atomValues) to avoid stale state as we have no way of knowing\n         * what state changes happened (if any) in result to the promise resolving.\n         *\n         * Ideally we would only bail out selectors that are in the chain of\n         * dependencies for this selector, but there's currently no way to get\n         * a full list of a selector's downstream nodes because the state that\n         * is executing may be a discarded tree (so store.getGraph(state.version)\n         * will be empty), and the full dep tree may not be in the selector\n         * caches in the case where the selector's cache was cleared. To solve\n         * for this we would have to keep track of all running selector\n         * executions and their downstream deps. Because this only covers edge\n         * cases, that complexity might not be justifyable.\n         */\n        store.getState().knownSelectors.forEach(nodeKey => {\n          state.atomValues.delete(nodeKey);\n        });\n      }\n      /**\n       * Optimization: Now that the dependency has resolved, let's try hitting\n       * the cache in case the dep resolved to a value we have previously seen.\n       *\n       * TODO:\n       * Note this optimization is not perfect because it only prevents re-executions\n       * _after_ the point where an async dependency is found. Any code leading\n       * up to the async dependency may have run unnecessarily. The ideal case\n       * would be to wait for the async dependency to resolve first, check the\n       * cache, and prevent _any_ execution of the selector if the resulting\n       * value of the dependency leads to a path that is found in the cache.\n       * The ideal case is more difficult to implement as it would require that\n       * we capture and wait for the the async dependency right after checking\n       * the cache. The current approach takes advantage of the fact that running\n       * the selector already has a code path that lets us exit early when\n       * an async dep resolves.\n       */\n\n\n      const cachedLoadable = getLoadableFromCacheAndUpdateDeps(store, state);\n\n      if (cachedLoadable && cachedLoadable.state !== 'loading') {\n        /**\n         * This has to notify stores of a resolved async, even if there is no\n         * current pending execution for the following case:\n         * 1) A component renders with this pending loadable.\n         * 2) The upstream dependency resolves.\n         * 3) While processing some other selector it reads this one, such as\n         *    while traversing its dependencies.  At this point it gets the\n         *    new resolved value synchronously and clears the current\n         *    execution ID.  The component wasn't getting the value itself,\n         *    though, so it still has the pending loadable.\n         * 4) When this code executes the current execution id was cleared\n         *    and it wouldn't notify the component of the new value.\n         *\n         * I think this is only an issue with \"early\" rendering since the\n         * components got their value using the in-progress execution.\n         * We don't have a unit test for this case yet.  I'm not sure it is\n         * necessary with recoil_transition_support mode.\n         */\n        if (isLatestExecution(store, executionID) || getExecutionInfo(store) == null) {\n          notifyStoresOfResolvedAsync(store, executionID);\n        }\n\n        if (cachedLoadable.state === 'hasValue') {\n          return cachedLoadable.contents;\n        } else {\n          throw cachedLoadable.contents;\n        }\n      }\n      /**\n       * If this execution is stale, let's check to see if there is some in\n       * progress execution with a matching state. If we find a match, then\n       * we can take the value from that in-progress execution. Note this may\n       * sound like an edge case, but may be very common in cases where a\n       * loading dependency resolves from loading to having a value (thus\n       * possibly triggering a re-render), and React re-renders before the\n       * chained .then() functions run, thus starting a new execution as the\n       * dep has changed value. Without this check we will run the selector\n       * twice (once in the new execution and once again in this .then(), so\n       * this check is necessary to keep unnecessary re-executions to a\n       * minimum).\n       *\n       * Also note this code does not check across all executions that may be\n       * running. It only optimizes for the _latest_ execution per store as\n       * we currently do not maintain a list of all currently running executions.\n       * This means in some cases we may run selectors more than strictly\n       * necessary when there are multiple executions running for the same\n       * selector. This may be a valid tradeoff as checking for dep changes\n       * across all in-progress executions may take longer than just\n       * re-running the selector. This will be app-dependent, and maybe in the\n       * future we can make the behavior configurable. An ideal fix may be\n       * to extend the tree cache to support caching loading states.\n       */\n\n\n      if (!isLatestExecution(store, executionID)) {\n        const executionInfo = getInProgressExecutionInfo(store, state);\n\n        if (executionInfo != null) {\n          /**\n           * Returning promise here without wrapping as the wrapper logic was\n           * already done upstream when this promise was generated.\n           */\n          return executionInfo.loadingLoadable.contents;\n        }\n      } // Retry the selector evaluation now that the dependency has resolved\n\n\n      const [loadable, depValues] = evaluateSelectorGetter(store, state, executionID);\n\n      if (loadable.state !== 'loading') {\n        resolveAsync(store, state, executionID, loadable, depValues);\n      }\n\n      if (loadable.state === 'hasError') {\n        throw loadable.contents;\n      }\n\n      return loadable.contents;\n    }).catch(error => {\n      // The selector was released since the request began; ignore the response.\n      if (error instanceof Canceled) {\n        throw CANCELED;\n      }\n\n      if (!selectorIsLive()) {\n        clearExecutionInfo(store);\n        throw CANCELED;\n      }\n\n      const loadable = loadableWithError$1(error);\n      resolveAsync(store, state, executionID, loadable, existingDeps);\n      throw error;\n    });\n  }\n\n  function updateDeps(store, state, deps, executionID) {\n    var _store$getState, _store$getState$curre, _store$getState2, _store$getState2$next;\n\n    if (isLatestExecution(store, executionID) || state.version === ((_store$getState = store.getState()) === null || _store$getState === void 0 ? void 0 : (_store$getState$curre = _store$getState.currentTree) === null || _store$getState$curre === void 0 ? void 0 : _store$getState$curre.version) || state.version === ((_store$getState2 = store.getState()) === null || _store$getState2 === void 0 ? void 0 : (_store$getState2$next = _store$getState2.nextTree) === null || _store$getState2$next === void 0 ? void 0 : _store$getState2$next.version)) {\n      var _store$getState$nextT, _store$getState3, _store$getState3$next;\n\n      saveDepsToStore$1(key, deps, store, (_store$getState$nextT = (_store$getState3 = store.getState()) === null || _store$getState3 === void 0 ? void 0 : (_store$getState3$next = _store$getState3.nextTree) === null || _store$getState3$next === void 0 ? void 0 : _store$getState3$next.version) !== null && _store$getState$nextT !== void 0 ? _store$getState$nextT : store.getState().currentTree.version);\n    }\n\n    for (const nodeKey of deps) {\n      discoveredDependencyNodeKeys.add(nodeKey);\n    }\n  }\n\n  function evaluateSelectorGetter(store, state, executionID) {\n    const endPerfBlock = startPerfBlock$1(key); // TODO T63965866: use execution ID here\n\n    let duringSynchronousExecution = true;\n    let duringAsynchronousExecution = true;\n\n    const finishEvaluation = () => {\n      endPerfBlock();\n      duringAsynchronousExecution = false;\n    };\n\n    let result;\n    let resultIsError = false;\n    let loadable;\n    const loadingDepsState = {\n      loadingDepKey: null,\n      loadingDepPromise: null\n    };\n    /**\n     * Starting a fresh set of deps that we'll be using to update state. We're\n     * starting a new set versus adding it in existing state deps because\n     * the version of state that we update deps for may be a more recent version\n     * than the version the selector was called with. This is because the latest\n     * execution will update the deps of the current/latest version of state\n     * (This is safe to do because the fact that the selector is the latest\n     * execution means the deps we discover below are our best guess at the\n     * deps for the current/latest state in the store)\n     */\n\n    const depValues = new Map();\n\n    function getRecoilValue({\n      key: depKey\n    }) {\n      const depLoadable = getNodeLoadable$2(store, state, depKey);\n      depValues.set(depKey, depLoadable); // We need to update asynchronous dependencies as we go so the selector\n      // knows if it has to restart evaluation if one of them is updated before\n      // the asynchronous selector completely resolves.\n\n      if (!duringSynchronousExecution) {\n        updateDeps(store, state, new Set(depValues.keys()), executionID);\n        notifyStoresOfNewAsyncDep(store, executionID);\n      }\n\n      switch (depLoadable.state) {\n        case 'hasValue':\n          return depLoadable.contents;\n\n        case 'hasError':\n          throw depLoadable.contents;\n\n        case 'loading':\n          loadingDepsState.loadingDepKey = depKey;\n          loadingDepsState.loadingDepPromise = depLoadable.contents;\n          throw depLoadable.contents;\n      }\n\n      throw Recoil_err('Invalid Loadable state');\n    }\n\n    const getCallback = fn => {\n      return (...args) => {\n        if (duringAsynchronousExecution) {\n          throw Recoil_err('Callbacks from getCallback() should only be called asynchronously after the selector is evalutated.  It can be used for selectors to return objects with callbacks that can work with Recoil state without a subscription.');\n        }\n\n        !(recoilValue != null) ? process.env.NODE_ENV !== \"production\" ? Recoil_invariant(false, 'Recoil Value can never be null') : Recoil_invariant(false) : void 0;\n        return recoilCallback$1(store, fn, args, {\n          node: recoilValue\n        } // flowlint-line unclear-type:off\n        );\n      };\n    };\n\n    try {\n      result = get({\n        get: getRecoilValue,\n        getCallback\n      });\n      result = isRecoilValue$3(result) ? getRecoilValue(result) : result;\n\n      if (isLoadable$1(result)) {\n        if (result.state === 'hasError') {\n          resultIsError = true;\n        }\n\n        result = result.contents;\n      }\n\n      if (Recoil_isPromise(result)) {\n        result = wrapResultPromise(store, result, state, depValues, executionID, loadingDepsState).finally(finishEvaluation);\n      } else {\n        finishEvaluation();\n      }\n\n      result = result instanceof WrappedValue$1 ? result.value : result;\n    } catch (errorOrDepPromise) {\n      result = errorOrDepPromise;\n\n      if (Recoil_isPromise(result)) {\n        result = wrapPendingDependencyPromise(store, result, state, depValues, executionID, loadingDepsState).finally(finishEvaluation);\n      } else {\n        resultIsError = true;\n        finishEvaluation();\n      }\n    }\n\n    if (resultIsError) {\n      loadable = loadableWithError$1(result);\n    } else if (Recoil_isPromise(result)) {\n      loadable = loadableWithPromise$1(result);\n    } else {\n      loadable = loadableWithValue$2(result);\n    }\n\n    duringSynchronousExecution = false;\n    updateExecutionInfoDepValues(store, executionID, depValues);\n    updateDeps(store, state, new Set(depValues.keys()), executionID);\n    return [loadable, depValues];\n  }\n\n  function getLoadableFromCacheAndUpdateDeps(store, state) {\n    // First, look up in the state cache\n    // If it's here, then the deps in the store should already be valid.\n    let cachedLoadable = state.atomValues.get(key);\n\n    if (cachedLoadable != null) {\n      return cachedLoadable;\n    } // Second, look up in the selector cache and update the deps in the store\n\n\n    const depsAfterCacheLookup = new Set();\n\n    try {\n      cachedLoadable = cache.get(nodeKey => {\n        !(typeof nodeKey === 'string') ? process.env.NODE_ENV !== \"production\" ? Recoil_invariant(false, 'Cache nodeKey is type string') : Recoil_invariant(false) : void 0;\n        return getNodeLoadable$2(store, state, nodeKey).contents;\n      }, {\n        onNodeVisit: node => {\n          if (node.type === 'branch' && node.nodeKey !== key) {\n            depsAfterCacheLookup.add(node.nodeKey);\n          }\n        }\n      });\n    } catch (error) {\n      throw Recoil_err(`Problem with cache lookup for selector \"${key}\": ${error.message}`);\n    }\n\n    if (cachedLoadable) {\n      var _getExecutionInfo;\n\n      // Cache the results in the state to allow for cheaper lookup than\n      // iterating the tree cache of dependencies.\n      state.atomValues.set(key, cachedLoadable);\n      /**\n       * Ensure store contains correct dependencies if we hit the cache so that\n       * the store deps and cache are in sync for a given state. This is important\n       * because store deps are normally updated when new executions are created,\n       * but cache hits don't trigger new executions but they still _may_ signify\n       * a change in deps in the store if the store deps for this state are empty\n       * or stale.\n       */\n\n      updateDeps(store, state, depsAfterCacheLookup, (_getExecutionInfo = getExecutionInfo(store)) === null || _getExecutionInfo === void 0 ? void 0 : _getExecutionInfo.executionID);\n    }\n\n    return cachedLoadable;\n  }\n  /**\n   * Given a tree state, this function returns a Loadable of the current state.\n   *\n   * The selector's get() function will only be re-evaluated if _both_ of the\n   * following statements are true:\n   *\n   * 1. The current dep values from the given state produced a cache key that\n   *    was not found in the cache.\n   * 2. There is no currently running async execution OR there is an\n   *    async execution that is running, but after comparing the dep values in\n   *    the given state with the dep values that the execution has discovered so\n   *    far we find that at least one dep value has changed, in which case we\n   *    start a new execution (the previously running execution will continue to\n   *    run to completion, but only the new execution will be deemed the\n   *    'latest' execution, meaning it will be the only execution that will\n   *    update global state when it is finished. Any non-latest executions will\n   *    run to completion and update the selector cache but not global state).\n   */\n\n\n  function getSelectorLoadableAndUpdateDeps(store, state) {\n    // First, see if our current state is cached\n    const cachedVal = getLoadableFromCacheAndUpdateDeps(store, state);\n\n    if (cachedVal != null) {\n      clearExecutionInfo(store);\n      return cachedVal;\n    } // Second, check if there is already an ongoing execution based on the current state\n\n\n    const inProgressExecutionInfo = getInProgressExecutionInfo(store, state);\n\n    if (inProgressExecutionInfo != null) {\n      var _inProgressExecutionI;\n\n      if (((_inProgressExecutionI = inProgressExecutionInfo.loadingLoadable) === null || _inProgressExecutionI === void 0 ? void 0 : _inProgressExecutionI.state) === 'loading') {\n        markStoreWaitingForResolvedAsync(store, inProgressExecutionInfo.executionID);\n      } // FIXME: check after the fact to see if we made the right choice by waiting\n\n\n      return inProgressExecutionInfo.loadingLoadable;\n    } // Third, start a new evaluation of the selector\n\n\n    const newExecutionID = getNewExecutionID();\n    const [loadable, newDepValues] = evaluateSelectorGetter(store, state, newExecutionID);\n    /**\n     * Conditionally updates the cache with a given loadable.\n     *\n     * We only cache loadables that are not loading because our cache keys are\n     * based on dep values, which are in an unfinished state for loadables that\n     * have a 'loading' state (new deps may be discovered while the selector\n     * runs its async code). We never want to cache partial dependencies b/c it\n     * could lead to errors, such as prematurely returning the result based on a\n     * partial list of deps-- we need the full list of deps to ensure that we\n     * are returning the correct result from cache.\n     */\n\n    if (loadable.state === 'loading') {\n      setExecutionInfo(store, newExecutionID, loadable, newDepValues, state);\n      markStoreWaitingForResolvedAsync(store, newExecutionID);\n    } else {\n      clearExecutionInfo(store);\n      setCache(state, loadable, newDepValues);\n    }\n\n    return loadable;\n  }\n  /**\n   * Searches execution info across all stores to see if there is an in-progress\n   * execution whose dependency values match the values of the requesting store.\n   */\n\n\n  function getInProgressExecutionInfo(store, state) {\n    // Sort the pending executions so that our current store is checked first.\n    const pendingExecutions = Recoil_concatIterables([executionInfoMap.has(store) ? [Recoil_nullthrows(executionInfoMap.get(store))] : [], Recoil_mapIterable(Recoil_filterIterable(executionInfoMap, ([s]) => s !== store), ([, execInfo]) => execInfo)]);\n\n    function anyDepChanged(execDepValues) {\n      for (const [depKey, execLoadable] of execDepValues) {\n        if (!getNodeLoadable$2(store, state, depKey).is(execLoadable)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    for (const execInfo of pendingExecutions) {\n      if ( // If this execution was already checked to be valid with this version\n      // of state, then let's use it!\n      execInfo.stateVersions.get(state.version) || // If the deps for the execution match our current state, then it's valid\n      !anyDepChanged(execInfo.depValuesDiscoveredSoFarDuringAsyncWork)) {\n        execInfo.stateVersions.set(state.version, true);\n        return execInfo;\n      } else {\n        execInfo.stateVersions.set(state.version, false);\n      }\n    }\n\n    return undefined;\n  }\n\n  function getExecutionInfo(store) {\n    return executionInfoMap.get(store);\n  }\n  /**\n   * This function will update the selector's execution info when the selector\n   * has either finished running an execution or has started a new execution. If\n   * the given loadable is in a 'loading' state, the intention is that a new\n   * execution has started. Otherwise, the intention is that an execution has\n   * just finished.\n   */\n\n\n  function setExecutionInfo(store, newExecutionID, loadable, depValues, state) {\n    executionInfoMap.set(store, {\n      depValuesDiscoveredSoFarDuringAsyncWork: depValues,\n      executionID: newExecutionID,\n      loadingLoadable: loadable,\n      stateVersions: new Map([[state.version, true]])\n    });\n  }\n\n  function updateExecutionInfoDepValues(store, executionID, depValues) {\n    // We only need to bother updating the deps for the latest execution because\n    // that's all getInProgressExecutionInfo() will be looking for.\n    if (isLatestExecution(store, executionID)) {\n      const executionInfo = getExecutionInfo(store);\n\n      if (executionInfo != null) {\n        executionInfo.depValuesDiscoveredSoFarDuringAsyncWork = depValues;\n      }\n    }\n  }\n\n  function clearExecutionInfo(store) {\n    executionInfoMap.delete(store);\n  }\n\n  function isLatestExecution(store, executionID) {\n    var _getExecutionInfo2;\n\n    return executionID === ((_getExecutionInfo2 = getExecutionInfo(store)) === null || _getExecutionInfo2 === void 0 ? void 0 : _getExecutionInfo2.executionID);\n  }\n  /**\n   * FIXME: dep keys should take into account the state of the loadable to\n   * prevent the edge case where a loadable with an error and a loadable with\n   * an error as a value are treated as the same thing incorrectly. For example\n   * these two should be treated differently:\n   *\n   * selector({key: '', get: () => new Error('hi')});\n   * selector({key: '', get () => {throw new Error('hi')}});\n   *\n   * With current implementation they are treated the same\n   */\n\n\n  function depValuesToDepRoute(depValues) {\n    return Array.from(depValues.entries()).map(([depKey, valLoadable]) => [depKey, valLoadable.contents]);\n  }\n\n  function setCache(state, loadable, depValues) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (loadable.state !== 'loading' && Boolean(options.dangerouslyAllowMutability) === false) {\n        Recoil_deepFreezeValue(loadable.contents);\n      }\n    }\n\n    state.atomValues.set(key, loadable);\n\n    try {\n      cache.set(depValuesToDepRoute(depValues), loadable);\n    } catch (error) {\n      throw Recoil_err(`Problem with setting cache for selector \"${key}\": ${error.message}`);\n    }\n  }\n\n  function detectCircularDependencies(fn) {\n    if (dependencyStack.includes(key)) {\n      const message = `Recoil selector has circular dependencies: ${dependencyStack.slice(dependencyStack.indexOf(key)).join(' \\u2192 ')}`;\n      return loadableWithError$1(Recoil_err(message));\n    }\n\n    dependencyStack.push(key);\n\n    try {\n      return fn();\n    } finally {\n      dependencyStack.pop();\n    }\n  }\n\n  function selectorPeek(store, state) {\n    const cachedLoadable = state.atomValues.get(key);\n\n    if (cachedLoadable != null) {\n      return cachedLoadable;\n    }\n\n    return cache.get(nodeKey => {\n      var _peekNodeLoadable;\n\n      !(typeof nodeKey === 'string') ? process.env.NODE_ENV !== \"production\" ? Recoil_invariant(false, 'Cache nodeKey is type string') : Recoil_invariant(false) : void 0;\n      return (_peekNodeLoadable = peekNodeLoadable$1(store, state, nodeKey)) === null || _peekNodeLoadable === void 0 ? void 0 : _peekNodeLoadable.contents;\n    });\n  }\n\n  function selectorGet(store, state) {\n    return detectCircularDependencies(() => getSelectorLoadableAndUpdateDeps(store, state));\n  }\n\n  function invalidateSelector(state) {\n    state.atomValues.delete(key);\n  }\n\n  function clearSelectorCache(store, treeState) {\n    !(recoilValue != null) ? process.env.NODE_ENV !== \"production\" ? Recoil_invariant(false, 'Recoil Value can never be null') : Recoil_invariant(false) : void 0;\n\n    for (const nodeKey of discoveredDependencyNodeKeys) {\n      var _node$clearCache;\n\n      const node = getNode$6(nodeKey);\n      (_node$clearCache = node.clearCache) === null || _node$clearCache === void 0 ? void 0 : _node$clearCache.call(node, store, treeState);\n    }\n\n    discoveredDependencyNodeKeys.clear();\n    invalidateSelector(treeState);\n    cache.clear();\n    markRecoilValueModified$1(store, recoilValue);\n  }\n\n  if (set != null) {\n    /**\n     * ES5 strict mode prohibits defining non-top-level function declarations,\n     * so don't use function declaration syntax here\n     */\n    const selectorSet = (store, state, newValue) => {\n      let syncSelectorSetFinished = false;\n      const writes = new Map();\n\n      function getRecoilValue({\n        key: depKey\n      }) {\n        if (syncSelectorSetFinished) {\n          throw Recoil_err('Recoil: Async selector sets are not currently supported.');\n        }\n\n        const loadable = getNodeLoadable$2(store, state, depKey);\n\n        if (loadable.state === 'hasValue') {\n          return loadable.contents;\n        } else if (loadable.state === 'loading') {\n          const msg = `Getting value of asynchronous atom or selector \"${depKey}\" in a pending state while setting selector \"${key}\" is not yet supported.`;\n          Recoil_recoverableViolation(msg);\n          throw Recoil_err(msg);\n        } else {\n          throw loadable.contents;\n        }\n      }\n\n      function setRecoilState(recoilState, valueOrUpdater // $FlowFixMe[missing-local-annot]\n      ) {\n        if (syncSelectorSetFinished) {\n          const msg = 'Recoil: Async selector sets are not currently supported.';\n          Recoil_recoverableViolation(msg);\n          throw Recoil_err(msg);\n        }\n\n        const setValue = typeof valueOrUpdater === 'function' ? // cast to any because we can't restrict type S from being a function itself without losing support for opaque types\n        // flowlint-next-line unclear-type:off\n        valueOrUpdater(getRecoilValue(recoilState)) : valueOrUpdater;\n        const upstreamWrites = setNodeValue$3(store, state, recoilState.key, setValue);\n        upstreamWrites.forEach((v, k) => writes.set(k, v));\n      }\n\n      function resetRecoilState(recoilState) {\n        setRecoilState(recoilState, DEFAULT_VALUE$6);\n      }\n\n      const ret = set({\n        set: setRecoilState,\n        get: getRecoilValue,\n        reset: resetRecoilState\n      }, newValue); // set should be a void method, but if the user makes it `async`, then it\n      // will return a Promise, which we don't currently support.\n\n      if (ret !== undefined) {\n        throw Recoil_isPromise(ret) ? Recoil_err('Recoil: Async selector sets are not currently supported.') : Recoil_err('Recoil: selector set should be a void function.');\n      }\n\n      syncSelectorSetFinished = true;\n      return writes;\n    };\n\n    return recoilValue = registerNode$1({\n      key,\n      nodeType: 'selector',\n      peek: selectorPeek,\n      get: selectorGet,\n      set: selectorSet,\n      init: selectorInit,\n      invalidate: invalidateSelector,\n      clearCache: clearSelectorCache,\n      shouldDeleteConfigOnRelease: selectorShouldDeleteConfigOnRelease,\n      dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n      shouldRestoreFromSnapshots: false,\n      retainedBy\n    });\n  } else {\n    return recoilValue = registerNode$1({\n      key,\n      nodeType: 'selector',\n      peek: selectorPeek,\n      get: selectorGet,\n      init: selectorInit,\n      invalidate: invalidateSelector,\n      clearCache: clearSelectorCache,\n      shouldDeleteConfigOnRelease: selectorShouldDeleteConfigOnRelease,\n      dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n      shouldRestoreFromSnapshots: false,\n      retainedBy\n    });\n  }\n}\n/* eslint-enable no-redeclare */\n// $FlowIssue[incompatible-use]\n// $FlowFixMe[missing-local-annot]\n\n\nselector.value = value => new WrappedValue$1(value);\n\nvar Recoil_selector = selector;\n\n// @fb-only: import type {ScopeRules} from 'Recoil_ScopedAtom';\n// @fb-only: const {scopedAtom} = require('Recoil_ScopedAtom');\nconst {\n  isLoadable: isLoadable$2,\n  loadableWithError: loadableWithError$2,\n  loadableWithPromise: loadableWithPromise$2,\n  loadableWithValue: loadableWithValue$3\n} = Recoil_Loadable$1;\n\nconst {\n  WrappedValue: WrappedValue$2\n} = Recoil_Wrapper$1;\n\nconst {\n  peekNodeInfo: peekNodeInfo$3\n} = Recoil_FunctionalCore;\n\nconst {\n  DEFAULT_VALUE: DEFAULT_VALUE$7,\n  DefaultValue: DefaultValue$2,\n  getConfigDeletionHandler: getConfigDeletionHandler$2,\n  registerNode: registerNode$2,\n  setConfigDeletionHandler: setConfigDeletionHandler$1\n} = Recoil_Node;\n\nconst {\n  isRecoilValue: isRecoilValue$4\n} = Recoil_RecoilValue$1;\n\nconst {\n  getRecoilValueAsLoadable: getRecoilValueAsLoadable$4,\n  markRecoilValueModified: markRecoilValueModified$2,\n  setRecoilValue: setRecoilValue$4,\n  setRecoilValueLoadable: setRecoilValueLoadable$2\n} = Recoil_RecoilValueInterface;\n\nconst {\n  retainedByOptionWithDefault: retainedByOptionWithDefault$2\n} = Recoil_Retention;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst unwrap = x => x instanceof WrappedValue$2 ? x.value : x;\n\nfunction baseAtom(options) {\n  const {\n    key,\n    persistence_UNSTABLE: persistence\n  } = options;\n  const retainedBy = retainedByOptionWithDefault$2(options.retainedBy_UNSTABLE);\n  let liveStoresCount = 0;\n\n  function unwrapPromise(promise) {\n    return loadableWithPromise$2(promise.then(value => {\n      defaultLoadable = loadableWithValue$3(value);\n      return value;\n    }).catch(error => {\n      defaultLoadable = loadableWithError$2(error);\n      throw error;\n    }));\n  }\n\n  let defaultLoadable = Recoil_isPromise(options.default) ? unwrapPromise(options.default) : isLoadable$2(options.default) ? options.default.state === 'loading' ? unwrapPromise(options.default.contents) : options.default : // $FlowFixMe[incompatible-call]\n  loadableWithValue$3(unwrap(options.default));\n  maybeFreezeValueOrPromise(defaultLoadable.contents);\n  let cachedAnswerForUnvalidatedValue = undefined; // Cleanup handlers for this atom\n  // Rely on stable reference equality of the store to use it as a key per <RecoilRoot>\n\n  const cleanupEffectsByStore = new Map();\n\n  function maybeFreezeValueOrPromise(valueOrPromise) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (options.dangerouslyAllowMutability !== true) {\n        if (Recoil_isPromise(valueOrPromise)) {\n          return valueOrPromise.then(value => {\n            Recoil_deepFreezeValue(value);\n            return value;\n          });\n        } else {\n          Recoil_deepFreezeValue(valueOrPromise);\n          return valueOrPromise;\n        }\n      }\n    }\n\n    return valueOrPromise;\n  }\n\n  function wrapPendingPromise(store, promise) {\n    const wrappedPromise = promise.then(value => {\n      var _store$getState$nextT, _state$atomValues$get;\n\n      const state = (_store$getState$nextT = store.getState().nextTree) !== null && _store$getState$nextT !== void 0 ? _store$getState$nextT : store.getState().currentTree;\n\n      if (((_state$atomValues$get = state.atomValues.get(key)) === null || _state$atomValues$get === void 0 ? void 0 : _state$atomValues$get.contents) === wrappedPromise) {\n        setRecoilValue$4(store, node, value);\n      }\n\n      return value;\n    }).catch(error => {\n      var _store$getState$nextT2, _state$atomValues$get2;\n\n      const state = (_store$getState$nextT2 = store.getState().nextTree) !== null && _store$getState$nextT2 !== void 0 ? _store$getState$nextT2 : store.getState().currentTree;\n\n      if (((_state$atomValues$get2 = state.atomValues.get(key)) === null || _state$atomValues$get2 === void 0 ? void 0 : _state$atomValues$get2.contents) === wrappedPromise) {\n        setRecoilValueLoadable$2(store, node, loadableWithError$2(error));\n      }\n\n      throw error;\n    });\n    return wrappedPromise;\n  }\n\n  function initAtom(store, initState, trigger) {\n    var _options$effects;\n\n    liveStoresCount++;\n\n    const cleanupAtom = () => {\n      var _cleanupEffectsByStor;\n\n      liveStoresCount--;\n      (_cleanupEffectsByStor = cleanupEffectsByStore.get(store)) === null || _cleanupEffectsByStor === void 0 ? void 0 : _cleanupEffectsByStor.forEach(cleanup => cleanup());\n      cleanupEffectsByStore.delete(store);\n    };\n\n    store.getState().knownAtoms.add(key); // Setup async defaults to notify subscribers when they resolve\n\n    if (defaultLoadable.state === 'loading') {\n      const notifyDefaultSubscribers = () => {\n        var _store$getState$nextT3;\n\n        const state = (_store$getState$nextT3 = store.getState().nextTree) !== null && _store$getState$nextT3 !== void 0 ? _store$getState$nextT3 : store.getState().currentTree;\n\n        if (!state.atomValues.has(key)) {\n          markRecoilValueModified$2(store, node);\n        }\n      };\n\n      defaultLoadable.contents.finally(notifyDefaultSubscribers);\n    } ///////////////////\n    // Run Atom Effects\n    ///////////////////\n\n\n    const effects = (_options$effects = options.effects) !== null && _options$effects !== void 0 ? _options$effects : options.effects_UNSTABLE;\n\n    if (effects != null) {\n      // This state is scoped by Store, since this is in the initAtom() closure\n      let initValue = DEFAULT_VALUE$7;\n      let isDuringInit = true;\n      let isInitError = false;\n      let pendingSetSelf = null;\n\n      function getLoadable(recoilValue) {\n        // Normally we can just get the current value of another atom.\n        // But for our own value we need to check if there is a pending\n        // initialized value or get the fallback default value.\n        if (isDuringInit && recoilValue.key === key) {\n          // Cast T to S\n          const retValue = initValue; // flowlint-line unclear-type:off\n\n          return retValue instanceof DefaultValue$2 ? peekAtom(store, initState) // flowlint-line unclear-type:off\n          : Recoil_isPromise(retValue) ? loadableWithPromise$2(retValue.then(v => v instanceof DefaultValue$2 ? // Cast T to S\n          defaultLoadable.toPromise() // flowlint-line unclear-type:off\n          : v)) : // $FlowFixMe[incompatible-call]\n          loadableWithValue$3(retValue);\n        }\n\n        return getRecoilValueAsLoadable$4(store, recoilValue);\n      }\n\n      function getPromise(recoilValue) {\n        return getLoadable(recoilValue).toPromise();\n      }\n\n      function getInfo_UNSTABLE(recoilValue) {\n        var _store$getState$nextT4;\n\n        const info = peekNodeInfo$3(store, (_store$getState$nextT4 = store.getState().nextTree) !== null && _store$getState$nextT4 !== void 0 ? _store$getState$nextT4 : store.getState().currentTree, recoilValue.key);\n        return isDuringInit && recoilValue.key === key && !(initValue instanceof DefaultValue$2) ? { ...info,\n          isSet: true,\n          loadable: getLoadable(recoilValue)\n        } : info;\n      }\n\n      const setSelf = effect => valueOrUpdater => {\n        if (isDuringInit) {\n          const currentLoadable = getLoadable(node);\n          const currentValue = currentLoadable.state === 'hasValue' ? currentLoadable.contents : DEFAULT_VALUE$7;\n          initValue = typeof valueOrUpdater === 'function' ? // cast to any because we can't restrict T from being a function without losing support for opaque types\n          valueOrUpdater(currentValue) // flowlint-line unclear-type:off\n          : valueOrUpdater;\n\n          if (Recoil_isPromise(initValue)) {\n            initValue = initValue.then(value => {\n              // Avoid calling onSet() when setSelf() initializes with a Promise\n              pendingSetSelf = {\n                effect,\n                value\n              };\n              return value;\n            });\n          }\n        } else {\n          if (Recoil_isPromise(valueOrUpdater)) {\n            throw Recoil_err('Setting atoms to async values is not implemented.');\n          }\n\n          if (typeof valueOrUpdater !== 'function') {\n            pendingSetSelf = {\n              effect,\n              value: unwrap(valueOrUpdater)\n            };\n          }\n\n          setRecoilValue$4(store, node, typeof valueOrUpdater === 'function' ? currentValue => {\n            const newValue = unwrap( // cast to any because we can't restrict T from being a function without losing support for opaque types\n            valueOrUpdater(currentValue) // flowlint-line unclear-type:off\n            ); // $FlowFixMe[incompatible-type]\n\n            pendingSetSelf = {\n              effect,\n              value: newValue\n            };\n            return newValue;\n          } : unwrap(valueOrUpdater));\n        }\n      };\n\n      const resetSelf = effect => () => setSelf(effect)(DEFAULT_VALUE$7);\n\n      const onSet = effect => handler => {\n        var _cleanupEffectsByStor2;\n\n        const {\n          release\n        } = store.subscribeToTransactions(currentStore => {\n          var _currentTree$atomValu;\n\n          // eslint-disable-next-line prefer-const\n          let {\n            currentTree,\n            previousTree\n          } = currentStore.getState();\n\n          if (!previousTree) {\n            Recoil_recoverableViolation('Transaction subscribers notified without a next tree being present -- this is a bug in Recoil');\n            previousTree = currentTree; // attempt to trundle on\n          }\n\n          const newLoadable = (_currentTree$atomValu = currentTree.atomValues.get(key)) !== null && _currentTree$atomValu !== void 0 ? _currentTree$atomValu : defaultLoadable;\n\n          if (newLoadable.state === 'hasValue') {\n            var _previousTree$atomVal, _pendingSetSelf, _pendingSetSelf2, _pendingSetSelf3;\n\n            const newValue = newLoadable.contents;\n            const oldLoadable = (_previousTree$atomVal = previousTree.atomValues.get(key)) !== null && _previousTree$atomVal !== void 0 ? _previousTree$atomVal : defaultLoadable;\n            const oldValue = oldLoadable.state === 'hasValue' ? oldLoadable.contents : DEFAULT_VALUE$7; // TODO This isn't actually valid, use as a placeholder for now.\n            // Ignore atom value changes that were set via setSelf() in the same effect.\n            // We will still properly call the handler if there was a subsequent\n            // set from something other than an atom effect which was batched\n            // with the `setSelf()` call.  However, we may incorrectly ignore\n            // the handler if the subsequent batched call happens to set the\n            // atom to the exact same value as the `setSelf()`.   But, in that\n            // case, it was kind of a noop, so the semantics are debatable..\n\n            if (((_pendingSetSelf = pendingSetSelf) === null || _pendingSetSelf === void 0 ? void 0 : _pendingSetSelf.effect) !== effect || ((_pendingSetSelf2 = pendingSetSelf) === null || _pendingSetSelf2 === void 0 ? void 0 : _pendingSetSelf2.value) !== newValue) {\n              handler(newValue, oldValue, !currentTree.atomValues.has(key));\n            } else if (((_pendingSetSelf3 = pendingSetSelf) === null || _pendingSetSelf3 === void 0 ? void 0 : _pendingSetSelf3.effect) === effect) {\n              pendingSetSelf = null;\n            }\n          }\n        }, key);\n        cleanupEffectsByStore.set(store, [...((_cleanupEffectsByStor2 = cleanupEffectsByStore.get(store)) !== null && _cleanupEffectsByStor2 !== void 0 ? _cleanupEffectsByStor2 : []), release]);\n      };\n\n      for (const effect of effects) {\n        try {\n          const cleanup = effect({\n            node,\n            storeID: store.storeID,\n            parentStoreID_UNSTABLE: store.parentStoreID,\n            trigger,\n            setSelf: setSelf(effect),\n            resetSelf: resetSelf(effect),\n            onSet: onSet(effect),\n            getPromise,\n            getLoadable,\n            getInfo_UNSTABLE\n          });\n\n          if (cleanup != null) {\n            var _cleanupEffectsByStor3;\n\n            cleanupEffectsByStore.set(store, [...((_cleanupEffectsByStor3 = cleanupEffectsByStore.get(store)) !== null && _cleanupEffectsByStor3 !== void 0 ? _cleanupEffectsByStor3 : []), cleanup]);\n          }\n        } catch (error) {\n          initValue = error;\n          isInitError = true;\n        }\n      }\n\n      isDuringInit = false; // Mutate initial state in place since we know there are no other subscribers\n      // since we are the ones initializing on first use.\n\n      if (!(initValue instanceof DefaultValue$2)) {\n        var _store$getState$nextT5;\n\n        const initLoadable = isInitError ? loadableWithError$2(initValue) : Recoil_isPromise(initValue) ? loadableWithPromise$2(wrapPendingPromise(store, initValue)) : loadableWithValue$3(unwrap(initValue));\n        maybeFreezeValueOrPromise(initLoadable.contents);\n        initState.atomValues.set(key, initLoadable); // If there is a pending transaction, then also mutate the next state tree.\n        // This could happen if the atom was first initialized in an action that\n        // also updated some other atom's state.\n\n        (_store$getState$nextT5 = store.getState().nextTree) === null || _store$getState$nextT5 === void 0 ? void 0 : _store$getState$nextT5.atomValues.set(key, initLoadable);\n      }\n    }\n\n    return cleanupAtom;\n  }\n\n  function peekAtom(_store, state) {\n    var _ref, _state$atomValues$get3;\n\n    return (_ref = (_state$atomValues$get3 = state.atomValues.get(key)) !== null && _state$atomValues$get3 !== void 0 ? _state$atomValues$get3 : cachedAnswerForUnvalidatedValue) !== null && _ref !== void 0 ? _ref : defaultLoadable;\n  }\n\n  function getAtom(_store, state) {\n    if (state.atomValues.has(key)) {\n      // Atom value is stored in state:\n      return Recoil_nullthrows(state.atomValues.get(key));\n    } else if (state.nonvalidatedAtoms.has(key)) {\n      // Atom value is stored but needs validation before use.\n      // We might have already validated it and have a cached validated value:\n      if (cachedAnswerForUnvalidatedValue != null) {\n        return cachedAnswerForUnvalidatedValue;\n      }\n\n      if (persistence == null) {\n        Recoil_expectationViolation(`Tried to restore a persisted value for atom ${key} but it has no persistence settings.`);\n        return defaultLoadable;\n      }\n\n      const nonvalidatedValue = state.nonvalidatedAtoms.get(key);\n      const validatorResult = persistence.validator(nonvalidatedValue, DEFAULT_VALUE$7);\n      const validatedValueLoadable = validatorResult instanceof DefaultValue$2 ? defaultLoadable : loadableWithValue$3(validatorResult);\n      cachedAnswerForUnvalidatedValue = validatedValueLoadable;\n      return cachedAnswerForUnvalidatedValue;\n    } else {\n      return defaultLoadable;\n    }\n  }\n\n  function invalidateAtom() {\n    cachedAnswerForUnvalidatedValue = undefined;\n  }\n\n  function setAtom(_store, state, newValue) {\n    // Bail out if we're being set to the existing value, or if we're being\n    // reset but have no stored value (validated or unvalidated) to reset from:\n    if (state.atomValues.has(key)) {\n      const existing = Recoil_nullthrows(state.atomValues.get(key));\n\n      if (existing.state === 'hasValue' && newValue === existing.contents) {\n        return new Map();\n      }\n    } else if (!state.nonvalidatedAtoms.has(key) && newValue instanceof DefaultValue$2) {\n      return new Map();\n    }\n\n    maybeFreezeValueOrPromise(newValue);\n    cachedAnswerForUnvalidatedValue = undefined; // can be released now if it was previously in use\n\n    return new Map().set(key, loadableWithValue$3(newValue));\n  }\n\n  function shouldDeleteConfigOnReleaseAtom() {\n    return getConfigDeletionHandler$2(key) !== undefined && liveStoresCount <= 0;\n  }\n\n  const node = registerNode$2({\n    key,\n    nodeType: 'atom',\n    peek: peekAtom,\n    get: getAtom,\n    set: setAtom,\n    init: initAtom,\n    invalidate: invalidateAtom,\n    shouldDeleteConfigOnRelease: shouldDeleteConfigOnReleaseAtom,\n    dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n    persistence_UNSTABLE: options.persistence_UNSTABLE ? {\n      type: options.persistence_UNSTABLE.type,\n      backButton: options.persistence_UNSTABLE.backButton\n    } : undefined,\n    shouldRestoreFromSnapshots: true,\n    retainedBy\n  });\n  return node;\n} // prettier-ignore\n\n\nfunction atom(options) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options.key !== 'string') {\n      throw Recoil_err('A key option with a unique string value must be provided when creating an atom.');\n    }\n  }\n\n  const { // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,\n    ...restOptions\n  } = options;\n  const optionsDefault = 'default' in options ? // $FlowIssue[incompatible-type] No way to refine in Flow that property is not defined\n  options.default : new Promise(() => {});\n\n  if (isRecoilValue$4(optionsDefault) // Continue to use atomWithFallback for promise defaults for scoped atoms\n  // for now, since scoped atoms don't support async defaults\n  // @fb-only: || (isPromise(optionsDefault) && scopeRules_APPEND_ONLY_READ_THE_DOCS)\n  // @fb-only: || (isLoadable(optionsDefault) && scopeRules_APPEND_ONLY_READ_THE_DOCS)\n  ) {\n    return atomWithFallback({ ...restOptions,\n      default: optionsDefault // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,\n\n    }); // @fb-only: } else if (scopeRules_APPEND_ONLY_READ_THE_DOCS\n    // @fb-only: && !isPromise(optionsDefault)\n    // @fb-only: && !isLoadable(optionsDefault)\n    // @fb-only: ) {\n    // @fb-only: return scopedAtom<T>({\n    // @fb-only: ...restOptions,\n    // @fb-only: default: unwrap<T>(optionsDefault),\n    // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,\n    // @fb-only: });\n  } else {\n    return baseAtom({ ...restOptions,\n      default: optionsDefault\n    });\n  }\n}\n\nfunction atomWithFallback(options) {\n  const base = atom({ ...options,\n    default: DEFAULT_VALUE$7,\n    persistence_UNSTABLE: options.persistence_UNSTABLE === undefined ? undefined : { ...options.persistence_UNSTABLE,\n      validator: storedValue => storedValue instanceof DefaultValue$2 ? storedValue : Recoil_nullthrows(options.persistence_UNSTABLE).validator(storedValue, DEFAULT_VALUE$7)\n    },\n    // TODO Hack for now.\n    effects: options.effects,\n    // flowlint-line unclear-type: off\n    effects_UNSTABLE: options.effects_UNSTABLE // flowlint-line unclear-type: off\n\n  }); // $FlowFixMe[incompatible-call]\n\n  const sel = Recoil_selector({\n    key: `${options.key}__withFallback`,\n    get: ({\n      get\n    }) => {\n      const baseValue = get(base);\n      return baseValue instanceof DefaultValue$2 ? options.default : baseValue;\n    },\n    // $FlowFixMe[incompatible-call]\n    set: ({\n      set\n    }, newValue) => set(base, newValue),\n    // This selector does not need to cache as it is a wrapper selector\n    // and the selector within the wrapper selector will have a cache\n    // option by default\n    cachePolicy_UNSTABLE: {\n      eviction: 'most-recent'\n    },\n    dangerouslyAllowMutability: options.dangerouslyAllowMutability\n  });\n  setConfigDeletionHandler$1(sel.key, getConfigDeletionHandler$2(options.key));\n  return sel;\n} // $FlowFixMe[missing-local-annot]\n\n\natom.value = value => new WrappedValue$2(value);\n\nvar Recoil_atom = atom;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall recoil\n */\n\nclass MapCache {\n  constructor(options) {\n    var _options$mapKey;\n\n    _defineProperty(this, \"_map\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    this._map = new Map();\n    this._keyMapper = (_options$mapKey = options === null || options === void 0 ? void 0 : options.mapKey) !== null && _options$mapKey !== void 0 ? _options$mapKey : v => v;\n  }\n\n  size() {\n    return this._map.size;\n  }\n\n  has(key) {\n    return this._map.has(this._keyMapper(key));\n  }\n\n  get(key) {\n    return this._map.get(this._keyMapper(key));\n  }\n\n  set(key, val) {\n    this._map.set(this._keyMapper(key), val);\n  }\n\n  delete(key) {\n    this._map.delete(this._keyMapper(key));\n  }\n\n  clear() {\n    this._map.clear();\n  }\n\n}\n\nvar Recoil_MapCache = {\n  MapCache\n};\n\nvar Recoil_MapCache_1 = Recoil_MapCache.MapCache;\n\nvar Recoil_MapCache$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MapCache: Recoil_MapCache_1\n});\n\nconst {\n  LRUCache: LRUCache$2\n} = Recoil_LRUCache$1;\n\nconst {\n  MapCache: MapCache$1\n} = Recoil_MapCache$1;\n\n\n\n\n\n\n\nconst defaultPolicy$1 = {\n  equality: 'reference',\n  eviction: 'none',\n  maxSize: Infinity\n};\n\nfunction cacheFromPolicy({\n  equality = defaultPolicy$1.equality,\n  eviction = defaultPolicy$1.eviction,\n  maxSize = defaultPolicy$1.maxSize\n} = defaultPolicy$1) {\n  const valueMapper = getValueMapper$1(equality);\n  const cache = getCache(eviction, maxSize, valueMapper);\n  return cache;\n}\n\nfunction getValueMapper$1(equality) {\n  switch (equality) {\n    case 'reference':\n      return val => val;\n\n    case 'value':\n      return val => Recoil_stableStringify(val);\n  }\n\n  throw Recoil_err(`Unrecognized equality policy ${equality}`);\n}\n\nfunction getCache(eviction, maxSize, mapKey) {\n  switch (eviction) {\n    case 'keep-all':\n      return new MapCache$1({\n        mapKey\n      });\n\n    case 'lru':\n      return new LRUCache$2({\n        mapKey,\n        maxSize: Recoil_nullthrows(maxSize)\n      });\n\n    case 'most-recent':\n      return new LRUCache$2({\n        mapKey,\n        maxSize: 1\n      });\n  }\n\n  throw Recoil_err(`Unrecognized eviction policy ${eviction}`);\n}\n\nvar Recoil_cacheFromPolicy = cacheFromPolicy;\n\n// @fb-only: import type {ScopeRules} from 'Recoil_ScopedAtom';\n\n\nconst {\n  setConfigDeletionHandler: setConfigDeletionHandler$2\n} = Recoil_Node;\n\n\n\n\n\n// Process scopeRules to handle any entries which are functions taking parameters\n// prettier-ignore\n// @fb-only: function mapScopeRules<P>(\n// @fb-only: scopeRules?: ParameterizedScopeRules<P>,\n// @fb-only: param: P,\n// @fb-only: ): ScopeRules | void {\n// @fb-only: return scopeRules?.map(rule =>\n// @fb-only: Array.isArray(rule)\n// @fb-only: ? rule.map(entry => (typeof entry === 'function' ? entry(param) : entry))\n// @fb-only: : rule,\n// @fb-only: );\n// @fb-only: }\n\n/*\nA function which returns an atom based on the input parameter.\n\nEach unique parameter returns a unique atom. E.g.,\n\n  const f = atomFamily(...);\n  f({a: 1}) => an atom\n  f({a: 2}) => a different atom\n\nThis allows components to persist local, private state using atoms.  Each\ninstance of the component may have a different key, which it uses as the\nparameter for a family of atoms; in this way, each component will have\nits own atom not shared by other instances.  These state keys may be composed\ninto children's state keys as well.\n*/\nfunction atomFamily(options) {\n  var _options$cachePolicyF, _options$cachePolicyF2;\n\n  const atomCache = Recoil_cacheFromPolicy({\n    equality: (_options$cachePolicyF = (_options$cachePolicyF2 = options.cachePolicyForParams_UNSTABLE) === null || _options$cachePolicyF2 === void 0 ? void 0 : _options$cachePolicyF2.equality) !== null && _options$cachePolicyF !== void 0 ? _options$cachePolicyF : 'value',\n    eviction: 'keep-all'\n  }); // Simple atomFamily implementation to cache individual atoms based\n  // on the parameter value equality.\n\n  return params => {\n    var _stableStringify, _options$effects;\n\n    const cachedAtom = atomCache.get(params);\n\n    if (cachedAtom != null) {\n      return cachedAtom;\n    }\n\n    const {\n      cachePolicyForParams_UNSTABLE,\n      ...atomOptions\n    } = options;\n    const optionsDefault = 'default' in options ? // $FlowIssue[incompatible-type] No way to refine in Flow that property is not defined\n    options.default : new Promise(() => {});\n    const newAtom = Recoil_atom({ ...atomOptions,\n      key: `${options.key}__${(_stableStringify = Recoil_stableStringify(params)) !== null && _stableStringify !== void 0 ? _stableStringify : 'void'}`,\n      default: typeof optionsDefault === 'function' ? // The default was parameterized\n      // Flow doesn't know that T isn't a function, so we need to case to any\n      // $FlowIssue[incompatible-use]\n      optionsDefault(params) : // Default may be a static value, promise, or RecoilValue\n      optionsDefault,\n      retainedBy_UNSTABLE: typeof options.retainedBy_UNSTABLE === 'function' ? options.retainedBy_UNSTABLE(params) : options.retainedBy_UNSTABLE,\n      effects: typeof options.effects === 'function' ? options.effects(params) : typeof options.effects_UNSTABLE === 'function' ? options.effects_UNSTABLE(params) : (_options$effects = options.effects) !== null && _options$effects !== void 0 ? _options$effects : options.effects_UNSTABLE // prettier-ignore\n      // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS: mapScopeRules(\n      // @fb-only: options.scopeRules_APPEND_ONLY_READ_THE_DOCS,\n      // @fb-only: params,\n      // @fb-only: ),\n\n    });\n    atomCache.set(params, newAtom);\n    setConfigDeletionHandler$2(newAtom.key, () => {\n      atomCache.delete(params);\n    });\n    return newAtom;\n  };\n}\n\nvar Recoil_atomFamily = atomFamily;\n\nconst {\n  setConfigDeletionHandler: setConfigDeletionHandler$3\n} = Recoil_Node;\n\n\n\n\n\n // Keep in mind the parameter needs to be serializable as a cahche key\n// using Recoil_stableStringify\n\n\n// Add a unique index to each selector in case the cache implementation allows\n// duplicate keys based on equivalent stringified parameters\nlet nextIndex = 0;\n/* eslint-disable no-redeclare */\n\n// Return a function that returns members of a family of selectors of the same type\n// E.g.,\n//\n// const s = selectorFamily(...);\n// s({a: 1}) => a selector\n// s({a: 2}) => a different selector\n//\n// By default, the selectors are distinguished by distinct values of the\n// parameter based on value equality, not reference equality.  This allows using\n// object literals or other equivalent objects at callsites to not create\n// duplicate cache entries.  This behavior may be overridden with the\n// cacheImplementationForParams option.\nfunction selectorFamily(options) {\n  var _options$cachePolicyF, _options$cachePolicyF2;\n\n  const selectorCache = Recoil_cacheFromPolicy({\n    equality: (_options$cachePolicyF = (_options$cachePolicyF2 = options.cachePolicyForParams_UNSTABLE) === null || _options$cachePolicyF2 === void 0 ? void 0 : _options$cachePolicyF2.equality) !== null && _options$cachePolicyF !== void 0 ? _options$cachePolicyF : 'value',\n    eviction: 'keep-all'\n  });\n  return params => {\n    var _stableStringify;\n\n    // Throw an error with selector key so that it is clear which\n    // selector is causing an error\n    let cachedSelector;\n\n    try {\n      cachedSelector = selectorCache.get(params);\n    } catch (error) {\n      throw Recoil_err(`Problem with cache lookup for selector ${options.key}: ${error.message}`);\n    }\n\n    if (cachedSelector != null) {\n      return cachedSelector;\n    }\n\n    const myKey = `${options.key}__selectorFamily/${(_stableStringify = Recoil_stableStringify(params, {\n      // It is possible to use functions in parameters if the user uses\n      // a cache with reference equality thanks to the incrementing index.\n      allowFunctions: true\n    })) !== null && _stableStringify !== void 0 ? _stableStringify : 'void'}/${nextIndex++}`; // Append index in case values serialize to the same key string\n\n    const myGet = callbacks => options.get(params)(callbacks);\n\n    const myCachePolicy = options.cachePolicy_UNSTABLE;\n    const retainedBy = typeof options.retainedBy_UNSTABLE === 'function' ? options.retainedBy_UNSTABLE(params) : options.retainedBy_UNSTABLE;\n    let newSelector;\n\n    if (options.set != null) {\n      const set = options.set;\n\n      const mySet = (callbacks, newValue) => set(params)(callbacks, newValue);\n\n      newSelector = Recoil_selector({\n        key: myKey,\n        get: myGet,\n        set: mySet,\n        cachePolicy_UNSTABLE: myCachePolicy,\n        dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n        retainedBy_UNSTABLE: retainedBy\n      });\n    } else {\n      newSelector = Recoil_selector({\n        key: myKey,\n        get: myGet,\n        cachePolicy_UNSTABLE: myCachePolicy,\n        dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n        retainedBy_UNSTABLE: retainedBy\n      });\n    }\n\n    selectorCache.set(params, newSelector);\n    setConfigDeletionHandler$3(newSelector.key, () => {\n      selectorCache.delete(params);\n    });\n    return newSelector;\n  };\n}\n/* eslint-enable no-redeclare */\n\n\nvar Recoil_selectorFamily = selectorFamily;\n\n// flowlint-next-line unclear-type:off\n\n\nconst constantSelector = Recoil_selectorFamily({\n  key: '__constant',\n  get: constant => () => constant,\n  cachePolicyForParams_UNSTABLE: {\n    equality: 'reference'\n  }\n}); // Function that returns a selector which always produces the\n// same constant value.  It may be called multiple times with the\n// same value, based on reference equality, and will provide the\n// same selector.\n\nfunction constSelector(constant) {\n  return constantSelector(constant);\n}\n\nvar Recoil_constSelector = constSelector;\n\n// flowlint-next-line unclear-type:off\n\n\nconst throwingSelector = Recoil_selectorFamily({\n  key: '__error',\n  get: message => () => {\n    throw Recoil_err(message);\n  },\n  // TODO Why?\n  cachePolicyForParams_UNSTABLE: {\n    equality: 'reference'\n  }\n}); // Function that returns a selector which always throws an error\n// with the provided message.\n\nfunction errorSelector(message) {\n  return throwingSelector(message);\n}\n\nvar Recoil_errorSelector = errorSelector;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Wraps another recoil value and prevents writing to it.\n *\n * \n * @format\n * @oncall recoil\n */\n\nfunction readOnlySelector(atom) {\n  // flowlint-next-line unclear-type: off\n  return atom;\n}\n\nvar Recoil_readOnlySelector = readOnlySelector;\n\nconst {\n  loadableWithError: loadableWithError$3,\n  loadableWithPromise: loadableWithPromise$3,\n  loadableWithValue: loadableWithValue$4\n} = Recoil_Loadable$1;\n\n\n\n\n\n /////////////////\n//  TRUTH TABLE\n/////////////////\n// Dependencies        waitForNone         waitForAny        waitForAll       waitForAllSettled\n//  [loading, loading]  [Promise, Promise]  Promise           Promise         Promise\n//  [value, loading]    [value, Promise]    [value, Promise]  Promise         Promise\n//  [value, value]      [value, value]      [value, value]    [value, value]  [value, value]\n//\n//  [error, loading]    [Error, Promise]    [Error, Promise]  Error           Promise\n//  [error, error]      [Error, Error]      [Error, Error]    Error           [error, error]\n//  [value, error]      [value, Error]      [value, Error]    Error           [value, error]\n// Issue parallel requests for all dependencies and return the current\n// status if they have results, have some error, or are still pending.\n\n\nfunction concurrentRequests(getRecoilValue, deps) {\n  const results = Array(deps.length).fill(undefined);\n  const exceptions = Array(deps.length).fill(undefined);\n\n  for (const [i, dep] of deps.entries()) {\n    try {\n      results[i] = getRecoilValue(dep);\n    } catch (e) {\n      // exceptions can either be Promises of pending results or real errors\n      exceptions[i] = e;\n    }\n  }\n\n  return [results, exceptions];\n}\n\nfunction isError(exp) {\n  return exp != null && !Recoil_isPromise(exp);\n}\n\nfunction unwrapDependencies(dependencies) {\n  return Array.isArray(dependencies) ? dependencies : Object.getOwnPropertyNames(dependencies).map(key => dependencies[key]);\n}\n\nfunction wrapResults(dependencies,\n/* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n * LTI update could not be added via codemod */\nresults) {\n  return Array.isArray(dependencies) ? results : // Object.getOwnPropertyNames() has consistent key ordering with ES6\n  Object.getOwnPropertyNames(dependencies).reduce((out, key, idx) => ({ ...out,\n    [key]: results[idx]\n  }), {});\n}\n\nfunction wrapLoadables(dependencies, results, exceptions) {\n  const output = exceptions.map((exception, idx) => exception == null ? loadableWithValue$4(results[idx]) : Recoil_isPromise(exception) ? loadableWithPromise$3(exception) : loadableWithError$3(exception));\n  return wrapResults(dependencies, output);\n}\n\nfunction combineAsyncResultsWithSyncResults(syncResults, asyncResults) {\n  return asyncResults.map((result, idx) =>\n  /**\n   * it's important we use === undefined as opposed to == null, because the\n   * resolved value of the async promise could be `null`, in which case we\n   * don't want to use syncResults[idx], which would be undefined. If async\n   * promise resolves to `undefined`, that's ok because `syncResults[idx]`\n   * will also be `undefined`. That's a little hacky, but it works.\n   */\n  result === undefined ? syncResults[idx] : result);\n} // Selector that requests all dependencies in parallel and immediately returns\n// current results without waiting.\n\n\nconst waitForNone = Recoil_selectorFamily({\n  key: '__waitForNone',\n  get: dependencies => ({\n    get\n  }) => {\n    // Issue requests for all dependencies in parallel.\n    const deps = unwrapDependencies(dependencies);\n    const [results, exceptions] = concurrentRequests(get, deps); // Always return the current status of the results; never block.\n\n    return wrapLoadables(dependencies, results, exceptions);\n  },\n  dangerouslyAllowMutability: true\n}); // Selector that requests all dependencies in parallel and waits for at least\n// one to be available before returning results.  It will only error if all\n// dependencies have errors.\n\nconst waitForAny = Recoil_selectorFamily({\n  key: '__waitForAny',\n  get: dependencies => ({\n    get\n  }) => {\n    // Issue requests for all dependencies in parallel.\n    // Exceptions can either be Promises of pending results or real errors\n    const deps = unwrapDependencies(dependencies);\n    const [results, exceptions] = concurrentRequests(get, deps); // If any results are available, value or error, return the current status\n\n    if (exceptions.some(exp => !Recoil_isPromise(exp))) {\n      return wrapLoadables(dependencies, results, exceptions);\n    } // Otherwise, return a promise that will resolve when the next result is\n    // available, whichever one happens to be next.  But, if all pending\n    // dependencies end up with errors, then reject the promise.\n\n\n    return new Promise(resolve => {\n      for (const [i, exp] of exceptions.entries()) {\n        if (Recoil_isPromise(exp)) {\n          exp.then(result => {\n            results[i] = result;\n            exceptions[i] = undefined;\n            resolve(wrapLoadables(dependencies, results, exceptions));\n          }).catch(error => {\n            exceptions[i] = error;\n            resolve(wrapLoadables(dependencies, results, exceptions));\n          });\n        }\n      }\n    });\n  },\n  dangerouslyAllowMutability: true\n}); // Selector that requests all dependencies in parallel and waits for all to be\n// available before returning a value.  It will error if any dependencies error.\n\nconst waitForAll = Recoil_selectorFamily({\n  key: '__waitForAll',\n  get: dependencies => ({\n    get\n  }) => {\n    // Issue requests for all dependencies in parallel.\n    // Exceptions can either be Promises of pending results or real errors\n    const deps = unwrapDependencies(dependencies);\n    const [results, exceptions] = concurrentRequests(get, deps); // If all results are available, return the results\n\n    if (exceptions.every(exp => exp == null)) {\n      return wrapResults(dependencies, results);\n    } // If we have any errors, throw the first error\n\n\n    const error = exceptions.find(isError);\n\n    if (error != null) {\n      throw error;\n    } // Otherwise, return a promise that will resolve when all results are available\n\n\n    return Promise.all(exceptions).then(exceptionResults => wrapResults(dependencies, combineAsyncResultsWithSyncResults(results, exceptionResults)));\n  },\n  dangerouslyAllowMutability: true\n});\nconst waitForAllSettled = Recoil_selectorFamily({\n  key: '__waitForAllSettled',\n  get: dependencies => ({\n    get\n  }) => {\n    // Issue requests for all dependencies in parallel.\n    // Exceptions can either be Promises of pending results or real errors\n    const deps = unwrapDependencies(dependencies);\n    const [results, exceptions] = concurrentRequests(get, deps); // If all results are available, return the results\n\n    if (exceptions.every(exp => !Recoil_isPromise(exp))) {\n      return wrapLoadables(dependencies, results, exceptions);\n    } // Wait for all results to settle\n\n\n    return Promise.all(exceptions.map((exp, i) => Recoil_isPromise(exp) ? exp.then(result => {\n      results[i] = result;\n      exceptions[i] = undefined;\n    }).catch(error => {\n      results[i] = undefined;\n      exceptions[i] = error;\n    }) : null)) // Then wrap them as loadables\n    .then(() => wrapLoadables(dependencies, results, exceptions));\n  },\n  dangerouslyAllowMutability: true\n});\nconst noWait = Recoil_selectorFamily({\n  key: '__noWait',\n  get: dependency => ({\n    get\n  }) => {\n    try {\n      return Recoil_selector.value(loadableWithValue$4(get(dependency)));\n    } catch (exception) {\n      return Recoil_selector.value(Recoil_isPromise(exception) ? loadableWithPromise$3(exception) : loadableWithError$3(exception));\n    }\n  },\n  dangerouslyAllowMutability: true\n});\nvar Recoil_WaitFor = {\n  waitForNone,\n  waitForAny,\n  waitForAll,\n  waitForAllSettled,\n  noWait\n};\n\nconst {\n  RecoilLoadable\n} = Recoil_Loadable$1;\n\nconst {\n  DefaultValue: DefaultValue$3\n} = Recoil_Node;\n\nconst {\n  RecoilRoot: RecoilRoot$2,\n  useRecoilStoreID: useRecoilStoreID$1\n} = Recoil_RecoilRoot;\n\nconst {\n  isRecoilValue: isRecoilValue$5\n} = Recoil_RecoilValue$1;\n\nconst {\n  retentionZone: retentionZone$1\n} = Recoil_RetentionZone;\n\nconst {\n  freshSnapshot: freshSnapshot$2\n} = Recoil_Snapshot$1;\n\nconst {\n  useRecoilState: useRecoilState$1,\n  useRecoilState_TRANSITION_SUPPORT_UNSTABLE: useRecoilState_TRANSITION_SUPPORT_UNSTABLE$1,\n  useRecoilStateLoadable: useRecoilStateLoadable$1,\n  useRecoilValue: useRecoilValue$1,\n  useRecoilValue_TRANSITION_SUPPORT_UNSTABLE: useRecoilValue_TRANSITION_SUPPORT_UNSTABLE$1,\n  useRecoilValueLoadable: useRecoilValueLoadable$1,\n  useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE: useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE$1,\n  useResetRecoilState: useResetRecoilState$1,\n  useSetRecoilState: useSetRecoilState$1\n} = Recoil_Hooks;\n\nconst {\n  useGotoRecoilSnapshot: useGotoRecoilSnapshot$1,\n  useRecoilSnapshot: useRecoilSnapshot$1,\n  useRecoilTransactionObserver: useRecoilTransactionObserver$1\n} = Recoil_SnapshotHooks;\n\n\n\n\n\nconst {\n  useRecoilCallback: useRecoilCallback$1\n} = Recoil_useRecoilCallback;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst {\n  noWait: noWait$1,\n  waitForAll: waitForAll$1,\n  waitForAllSettled: waitForAllSettled$1,\n  waitForAny: waitForAny$1,\n  waitForNone: waitForNone$1\n} = Recoil_WaitFor;\n\n\n\nvar Recoil_index = {\n  // Types\n  DefaultValue: DefaultValue$3,\n  isRecoilValue: isRecoilValue$5,\n  RecoilLoadable,\n  // Global Recoil environment settiongs\n  RecoilEnv: Recoil_RecoilEnv,\n  // Recoil Root\n  RecoilRoot: RecoilRoot$2,\n  useRecoilStoreID: useRecoilStoreID$1,\n  useRecoilBridgeAcrossReactRoots_UNSTABLE: Recoil_useRecoilBridgeAcrossReactRoots,\n  // Atoms/Selectors\n  atom: Recoil_atom,\n  selector: Recoil_selector,\n  // Convenience Atoms/Selectors\n  atomFamily: Recoil_atomFamily,\n  selectorFamily: Recoil_selectorFamily,\n  constSelector: Recoil_constSelector,\n  errorSelector: Recoil_errorSelector,\n  readOnlySelector: Recoil_readOnlySelector,\n  // Concurrency Helpers for Atoms/Selectors\n  noWait: noWait$1,\n  waitForNone: waitForNone$1,\n  waitForAny: waitForAny$1,\n  waitForAll: waitForAll$1,\n  waitForAllSettled: waitForAllSettled$1,\n  // Hooks for Atoms/Selectors\n  useRecoilValue: useRecoilValue$1,\n  useRecoilValueLoadable: useRecoilValueLoadable$1,\n  useRecoilState: useRecoilState$1,\n  useRecoilStateLoadable: useRecoilStateLoadable$1,\n  useSetRecoilState: useSetRecoilState$1,\n  useResetRecoilState: useResetRecoilState$1,\n  useGetRecoilValueInfo_UNSTABLE: Recoil_useGetRecoilValueInfo,\n  useRecoilRefresher_UNSTABLE: Recoil_useRecoilRefresher,\n  useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE: useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE$1,\n  useRecoilValue_TRANSITION_SUPPORT_UNSTABLE: useRecoilValue_TRANSITION_SUPPORT_UNSTABLE$1,\n  useRecoilState_TRANSITION_SUPPORT_UNSTABLE: useRecoilState_TRANSITION_SUPPORT_UNSTABLE$1,\n  // Hooks for complex operations\n  useRecoilCallback: useRecoilCallback$1,\n  useRecoilTransaction_UNSTABLE: Recoil_useRecoilTransaction,\n  // Snapshots\n  useGotoRecoilSnapshot: useGotoRecoilSnapshot$1,\n  useRecoilSnapshot: useRecoilSnapshot$1,\n  useRecoilTransactionObserver_UNSTABLE: useRecoilTransactionObserver$1,\n  snapshot_UNSTABLE: freshSnapshot$2,\n  // Memory Management\n  useRetain: Recoil_useRetain,\n  retentionZone: retentionZone$1\n};\nvar Recoil_index_1 = Recoil_index.DefaultValue;\nvar Recoil_index_2 = Recoil_index.isRecoilValue;\nvar Recoil_index_3 = Recoil_index.RecoilLoadable;\nvar Recoil_index_4 = Recoil_index.RecoilEnv;\nvar Recoil_index_5 = Recoil_index.RecoilRoot;\nvar Recoil_index_6 = Recoil_index.useRecoilStoreID;\nvar Recoil_index_7 = Recoil_index.useRecoilBridgeAcrossReactRoots_UNSTABLE;\nvar Recoil_index_8 = Recoil_index.atom;\nvar Recoil_index_9 = Recoil_index.selector;\nvar Recoil_index_10 = Recoil_index.atomFamily;\nvar Recoil_index_11 = Recoil_index.selectorFamily;\nvar Recoil_index_12 = Recoil_index.constSelector;\nvar Recoil_index_13 = Recoil_index.errorSelector;\nvar Recoil_index_14 = Recoil_index.readOnlySelector;\nvar Recoil_index_15 = Recoil_index.noWait;\nvar Recoil_index_16 = Recoil_index.waitForNone;\nvar Recoil_index_17 = Recoil_index.waitForAny;\nvar Recoil_index_18 = Recoil_index.waitForAll;\nvar Recoil_index_19 = Recoil_index.waitForAllSettled;\nvar Recoil_index_20 = Recoil_index.useRecoilValue;\nvar Recoil_index_21 = Recoil_index.useRecoilValueLoadable;\nvar Recoil_index_22 = Recoil_index.useRecoilState;\nvar Recoil_index_23 = Recoil_index.useRecoilStateLoadable;\nvar Recoil_index_24 = Recoil_index.useSetRecoilState;\nvar Recoil_index_25 = Recoil_index.useResetRecoilState;\nvar Recoil_index_26 = Recoil_index.useGetRecoilValueInfo_UNSTABLE;\nvar Recoil_index_27 = Recoil_index.useRecoilRefresher_UNSTABLE;\nvar Recoil_index_28 = Recoil_index.useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE;\nvar Recoil_index_29 = Recoil_index.useRecoilValue_TRANSITION_SUPPORT_UNSTABLE;\nvar Recoil_index_30 = Recoil_index.useRecoilState_TRANSITION_SUPPORT_UNSTABLE;\nvar Recoil_index_31 = Recoil_index.useRecoilCallback;\nvar Recoil_index_32 = Recoil_index.useRecoilTransaction_UNSTABLE;\nvar Recoil_index_33 = Recoil_index.useGotoRecoilSnapshot;\nvar Recoil_index_34 = Recoil_index.useRecoilSnapshot;\nvar Recoil_index_35 = Recoil_index.useRecoilTransactionObserver_UNSTABLE;\nvar Recoil_index_36 = Recoil_index.snapshot_UNSTABLE;\nvar Recoil_index_37 = Recoil_index.useRetain;\nvar Recoil_index_38 = Recoil_index.retentionZone;\n\nexport default Recoil_index;\nexport { Recoil_index_1 as DefaultValue, Recoil_index_4 as RecoilEnv, Recoil_index_3 as RecoilLoadable, Recoil_index_5 as RecoilRoot, Recoil_index_8 as atom, Recoil_index_10 as atomFamily, Recoil_index_12 as constSelector, Recoil_index_13 as errorSelector, Recoil_index_2 as isRecoilValue, Recoil_index_15 as noWait, Recoil_index_14 as readOnlySelector, Recoil_index_38 as retentionZone, Recoil_index_9 as selector, Recoil_index_11 as selectorFamily, Recoil_index_36 as snapshot_UNSTABLE, Recoil_index_26 as useGetRecoilValueInfo_UNSTABLE, Recoil_index_33 as useGotoRecoilSnapshot, Recoil_index_7 as useRecoilBridgeAcrossReactRoots_UNSTABLE, Recoil_index_31 as useRecoilCallback, Recoil_index_27 as useRecoilRefresher_UNSTABLE, Recoil_index_34 as useRecoilSnapshot, Recoil_index_22 as useRecoilState, Recoil_index_23 as useRecoilStateLoadable, Recoil_index_30 as useRecoilState_TRANSITION_SUPPORT_UNSTABLE, Recoil_index_6 as useRecoilStoreID, Recoil_index_35 as useRecoilTransactionObserver_UNSTABLE, Recoil_index_32 as useRecoilTransaction_UNSTABLE, Recoil_index_20 as useRecoilValue, Recoil_index_21 as useRecoilValueLoadable, Recoil_index_28 as useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE, Recoil_index_29 as useRecoilValue_TRANSITION_SUPPORT_UNSTABLE, Recoil_index_25 as useResetRecoilState, Recoil_index_37 as useRetain, Recoil_index_24 as useSetRecoilState, Recoil_index_18 as waitForAll, Recoil_index_19 as waitForAllSettled, Recoil_index_17 as waitForAny, Recoil_index_16 as waitForNone };\n","import React from \"react\";\r\n//import PropTypes from 'prop-types';\r\n\r\nconst FlexColumn = ({style, children, bgHex=\"#f9f9f9\" }) => {\r\n  const styles = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    backgroundColor: bgHex,\r\n    ...style\r\n  };\r\n\r\n  return <div style={styles}>{children}</div>;\r\n};\r\n\r\n// FlexColumn.propTypes = {\r\n//   children: PropTypes.node.isRequired,\r\n// };\r\n\r\nexport default FlexColumn;\r\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = require('./lib/has');\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) { /**/ }\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = Function.call.bind(Object.prototype.hasOwnProperty);\n","/** @license React v16.14.0\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar _assign = require('object-assign');\nvar checkPropTypes = require('prop-types/checkPropTypes');\n\nvar ReactVersion = '16.14.0';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  suspense: null\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\nfunction describeComponentFrame (name, source, ownerName) {\n  var sourceInfo = '';\n\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, '');\n\n    {\n      // In DEV, include code for a common special case:\n      // prefer \"folder/index.js\" instead of just \"index.js\".\n      if (/^index\\./.test(fileName)) {\n        var match = path.match(BEFORE_SLASH_RE);\n\n        if (match) {\n          var pathBeforeSlash = match[1];\n\n          if (pathBeforeSlash) {\n            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n            fileName = folderName + '/' + fileName;\n          }\n        }\n      }\n    }\n\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nvar Resolved = 1;\nfunction refineResolvedLazyComponent(lazyComponent) {\n  return lazyComponent._status === Resolved ? lazyComponent._result : null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type.render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var thenable = type;\n          var resolvedThenable = refineResolvedLazyComponent(thenable);\n\n          if (resolvedThenable) {\n            return getComponentName(resolvedThenable);\n          }\n\n          break;\n        }\n    }\n  }\n\n  return null;\n}\n\nvar ReactDebugCurrentFrame = {};\nvar currentlyValidatingElement = null;\nfunction setCurrentlyValidatingElement(element) {\n  {\n    currentlyValidatingElement = element;\n  }\n}\n\n{\n  // Stack implementation injected by the current renderer.\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentlyValidatingElement) {\n      var name = getComponentName(currentlyValidatingElement.type);\n      var owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n/**\n * Used by act() to track whether you're inside an act() scope.\n */\nvar IsSomeRendererActing = {\n  current: false\n};\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner,\n  IsSomeRendererActing: IsSomeRendererActing,\n  // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n  assign: _assign\n};\n\n{\n  _assign(ReactSharedInternals, {\n    // These should not be included in production.\n    ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n    // TODO: remove in React 17.0.\n    ReactComponentTreeHook: {}\n  });\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    printWarning('warn', format, args);\n  }\n}\nfunction error(format) {\n  {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var hasExistingStack = args.length > 0 && typeof args[args.length - 1] === 'string' && args[args.length - 1].indexOf('\\n    in') === 0;\n\n    if (!hasExistingStack) {\n      var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n      var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n      if (stack !== '') {\n        format += '%s';\n        args = args.concat([stack]);\n      }\n    }\n\n    var argsWithFormat = args.map(function (item) {\n      return '' + item;\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      throw new Error(message);\n    } catch (x) {}\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {\n    {\n      throw Error( \"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\" );\n    }\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\n_assign(pureComponentPrototype, Component.prototype);\n\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (!!(element === null || element === undefined)) {\n    {\n      throw Error( \"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\" );\n    }\n  }\n\n  var propName; // Original props are copied\n\n  var props = _assign({}, element.props); // Reserved names are extracted\n\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\nvar POOL_SIZE = 10;\nvar traverseContextPool = [];\n\nfunction getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n  if (traverseContextPool.length) {\n    var traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0\n    };\n  }\n}\n\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\n\n\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    callback(traverseContext, children, // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is deprecated and will be removed in ' + 'a future major release. Consider converting children to ' + 'an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(children);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n\n      {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n      }\n\n      var childrenString = '' + children;\n\n      {\n        {\n          throw Error( \"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \").\" + addendum );\n        }\n      }\n    }\n  }\n\n  return subtreeCount;\n}\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\n\n\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof component === 'object' && component !== null && component.key != null) {\n    // Explicit key\n    return escape(component.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n  func.call(context, child, bookKeeping.count++);\n}\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\n\n\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n\n  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {\n      return c;\n    });\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n\n  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\n\n\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  return traverseAllChildren(children, function () {\n    return null;\n  }, null);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {\n    return child;\n  });\n  return result;\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    {\n      throw Error( \"React.Children.only expected to receive a single React element child.\" );\n    }\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue, calculateChangedBits) {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    {\n      if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') {\n        error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);\n      }\n    }\n  }\n\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context,\n      _calculateChangedBits: context._calculateChangedBits\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nfunction lazy(ctor) {\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _ctor: ctor,\n    // React uses these fields to store the result.\n    _status: -1,\n    _result: null\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes;\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n}\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  if (!(dispatcher !== null)) {\n    {\n      throw Error( \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.\" );\n    }\n  }\n\n  return dispatcher;\n}\n\nfunction useContext(Context, unstable_observedBits) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    if (unstable_observedBits !== undefined) {\n      error('useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\\n\\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '');\n    } // TODO: add a more generic warning for invalid values.\n\n\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context, unstable_observedBits);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n  }\n\n  setCurrentlyValidatingElement(element);\n\n  {\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);\n  }\n\n  setCurrentlyValidatingElement(null);\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var name = getComponentName(type);\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      setCurrentlyValidatingElement(element);\n      checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);\n      setCurrentlyValidatingElement(null);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true;\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    setCurrentlyValidatingElement(fragment);\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n    }\n\n    setCurrentlyValidatingElement(null);\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\n{\n\n  try {\n    var frozenObject = Object.freeze({});\n    var testMap = new Map([[frozenObject, null]]);\n    var testSet = new Set([frozenObject]); // This is necessary for Rollup to not consider these unused.\n    // https://github.com/rollup/rollup/issues/1771\n    // TODO: we can remove these if Rollup fixes the bug.\n\n    testMap.set(0, 0);\n    testSet.add(0);\n  } catch (e) {\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useEffect = useEffect;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.version = ReactVersion;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar has = require('./lib/has');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bigint: createPrimitiveTypeChecker('bigint'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message, data) {\n    this.message = message;\n    this.data = data && typeof data === 'object' ? data: {};\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError(\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\n          {expectedType: expectedType}\n        );\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var expectedTypes = [];\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n        if (checkerResult == null) {\n          return null;\n        }\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n          expectedTypes.push(checkerResult.data.expectedType);\n        }\n      }\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\n    return new PropTypeError(\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\n    );\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UilFilm = (props) => {\n  const { color, size, ...otherProps } = props\n  return React.createElement('svg', {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: size,\n    height: size,\n    viewBox: '0 0 24 24',\n    fill: color,\n    ...otherProps\n  }, React.createElement('path', {\n    d: 'M21,2a1,1,0,0,0-1,1V5H18V3a1,1,0,0,0-2,0V4H8V3A1,1,0,0,0,6,3V5H4V3A1,1,0,0,0,2,3V21a1,1,0,0,0,2,0V19H6v2a1,1,0,0,0,2,0V20h8v1a1,1,0,0,0,2,0V19h2v2a1,1,0,0,0,2,0V3A1,1,0,0,0,21,2ZM6,17H4V15H6Zm0-4H4V11H6ZM6,9H4V7H6Zm10,9H8V13h8Zm0-7H8V6h8Zm4,6H18V15h2Zm0-4H18V11h2Zm0-4H18V7h2Z'\n  }));\n};\n\nUilFilm.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nUilFilm.defaultProps = {\n  color: 'currentColor',\n  size: '24',\n};\n\nexport default UilFilm;","import React from \"react\";\r\nimport UniFilm from '@iconscout/react-unicons/icons/uil-film';\r\n\r\nconst Watch = ({ link }) => {\r\n  return(\r\n   <div className=\"watchNow\">\r\n      <a href={link} target=\"_blank\">\r\n        <UniFilm />\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst HostGuest = ({host, guest}) => {\r\n  return(\r\n    <div className=\"hostGuest\">\r\n      <h3>Featuring:</h3>\r\n      <p>{host}</p>\r\n      <p>{guest}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst VideoDescription = ({subtitle}) => {\r\n  return (\r\n    <div className=\"videoDescription\">\r\n      <p style={{textOverflow: \"ellipsis\"}}>{subtitle}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Card = ({host, link, guest, title, subtitle}) => {\r\n    return (\r\n      <div className={\"card\"} key={\"card\"}>\r\n        <h3 className=\"cardTitle\">{title}</h3>\r\n        <HostGuest  host={host} guest={guest} />\r\n        <VideoDescription subtitle={subtitle} key={\"data\"} />\r\n        <Watch link={link}  key={\"watch\"} />\r\n      </div>\r\n    )\r\n}","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nconst CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nconst assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nconst assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst stringToByteArray$1 = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nconst byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        const c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            const c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            const c4 = bytes[pos++];\r\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nconst base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray(input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        const byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length; i += 3) {\r\n            const byte1 = input[i];\r\n            const haveByte2 = i + 1 < input.length;\r\n            const byte2 = haveByte2 ? input[i + 1] : 0;\r\n            const haveByte3 = i + 2 < input.length;\r\n            const byte3 = haveByte3 ? input[i + 2] : 0;\r\n            const outByte1 = byte1 >> 2;\r\n            const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            let outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray(input, webSafe) {\r\n        this.init_();\r\n        const charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length;) {\r\n            const byte1 = charToByteMap[input.charAt(i++)];\r\n            const haveByte2 = i < input.length;\r\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            const haveByte3 = i < input.length;\r\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            const haveByte4 = i < input.length;\r\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw new DecodeBase64StringError();\r\n            }\r\n            const outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_() {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (let i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * An error encountered while decoding base64 string.\r\n */\r\nclass DecodeBase64StringError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.name = 'DecodeBase64StringError';\r\n    }\r\n}\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nconst base64Encode = function (str) {\r\n    const utf8Bytes = stringToByteArray$1(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\r\nconst base64urlEncodeWithoutPadding = function (str) {\r\n    // Use base64url encoding and remove padding in the end (dot characters).\r\n    return base64Encode(str).replace(/\\./g, '');\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nconst base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            const dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (const prop in source) {\r\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\r\n        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\nfunction isValidKey(key) {\r\n    return key !== '__proto__';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n * @public\r\n */\r\nfunction getGlobal() {\r\n    if (typeof self !== 'undefined') {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        return window;\r\n    }\r\n    if (typeof global !== 'undefined') {\r\n        return global;\r\n    }\r\n    throw new Error('Unable to locate global object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst getDefaultsFromGlobal = () => getGlobal().__FIREBASE_DEFAULTS__;\r\n/**\r\n * Attempt to read defaults from a JSON string provided to\r\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\r\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\r\n * The dots are in parens because certain compilers (Vite?) cannot\r\n * handle seeing that variable in comments.\r\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\r\n */\r\nconst getDefaultsFromEnvVariable = () => {\r\n    if (typeof process === 'undefined' || typeof process.env === 'undefined') {\r\n        return;\r\n    }\r\n    const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\r\n    if (defaultsJsonString) {\r\n        return JSON.parse(defaultsJsonString);\r\n    }\r\n};\r\nconst getDefaultsFromCookie = () => {\r\n    if (typeof document === 'undefined') {\r\n        return;\r\n    }\r\n    let match;\r\n    try {\r\n        match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\r\n    }\r\n    catch (e) {\r\n        // Some environments such as Angular Universal SSR have a\r\n        // `document` object but error on accessing `document.cookie`.\r\n        return;\r\n    }\r\n    const decoded = match && base64Decode(match[1]);\r\n    return decoded && JSON.parse(decoded);\r\n};\r\n/**\r\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\r\n * (1) if such an object exists as a property of `globalThis`\r\n * (2) if such an object was provided on a shell environment variable\r\n * (3) if such an object exists in a cookie\r\n * @public\r\n */\r\nconst getDefaults = () => {\r\n    try {\r\n        return (getDefaultsFromGlobal() ||\r\n            getDefaultsFromEnvVariable() ||\r\n            getDefaultsFromCookie());\r\n    }\r\n    catch (e) {\r\n        /**\r\n         * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\r\n         * to any environment case we have not accounted for. Log to\r\n         * info instead of swallowing so we can find these unknown cases\r\n         * and add paths for them if needed.\r\n         */\r\n        console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\r\n        return;\r\n    }\r\n};\r\n/**\r\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHost = (productName) => { var _a, _b; return (_b = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.emulatorHosts) === null || _b === void 0 ? void 0 : _b[productName]; };\r\n/**\r\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHostnameAndPort = (productName) => {\r\n    const host = getDefaultEmulatorHost(productName);\r\n    if (!host) {\r\n        return undefined;\r\n    }\r\n    const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\r\n    if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\r\n        throw new Error(`Invalid host ${host} with no separate hostname and port!`);\r\n    }\r\n    // eslint-disable-next-line no-restricted-globals\r\n    const port = parseInt(host.substring(separatorIndex + 1), 10);\r\n    if (host[0] === '[') {\r\n        // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\r\n        return [host.substring(1, separatorIndex - 1), port];\r\n    }\r\n    else {\r\n        return [host.substring(0, separatorIndex), port];\r\n    }\r\n};\r\n/**\r\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\r\n * @public\r\n */\r\nconst getDefaultAppConfig = () => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.config; };\r\n/**\r\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\r\n * prefixed by \"_\")\r\n * @public\r\n */\r\nconst getExperimentalSetting = (name) => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a[`_${name}`]; };\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        this.reject = () => { };\r\n        this.resolve = () => { };\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    wrapCallback(callback) {\r\n        return (error, value) => {\r\n            if (error) {\r\n                this.reject(error);\r\n            }\r\n            else {\r\n                this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                this.promise.catch(() => { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createMockUserToken(token, projectId) {\r\n    if (token.uid) {\r\n        throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\r\n    }\r\n    // Unsecured JWTs use \"none\" as the algorithm.\r\n    const header = {\r\n        alg: 'none',\r\n        type: 'JWT'\r\n    };\r\n    const project = projectId || 'demo-project';\r\n    const iat = token.iat || 0;\r\n    const sub = token.sub || token.user_id;\r\n    if (!sub) {\r\n        throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\r\n    }\r\n    const payload = Object.assign({ \r\n        // Set all required fields to decent defaults\r\n        iss: `https://securetoken.google.com/${project}`, aud: project, iat, exp: iat + 3600, auth_time: iat, sub, user_id: sub, firebase: {\r\n            sign_in_provider: 'custom',\r\n            identities: {}\r\n        } }, token);\r\n    // Unsecured JWTs use the empty string as a signature.\r\n    const signature = '';\r\n    return [\r\n        base64urlEncodeWithoutPadding(JSON.stringify(header)),\r\n        base64urlEncodeWithoutPadding(JSON.stringify(payload)),\r\n        signature\r\n    ].join('.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected or specified.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    var _a;\r\n    const forceEnvironment = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.forceEnvironment;\r\n    if (forceEnvironment === 'node') {\r\n        return true;\r\n    }\r\n    else if (forceEnvironment === 'browser') {\r\n        return false;\r\n    }\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    const runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    const ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    try {\r\n        return typeof indexedDB === 'object';\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let preExist = true;\r\n            const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            const request = self.indexedDB.open(DB_CHECK_NAME);\r\n            request.onsuccess = () => {\r\n                request.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request.onupgradeneeded = () => {\r\n                preExist = false;\r\n            };\r\n            request.onerror = () => {\r\n                var _a;\r\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\r\nconst ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nclass FirebaseError extends Error {\r\n    constructor(\r\n    /** The error code for this error. */\r\n    code, message, \r\n    /** Custom data for this error. */\r\n    customData) {\r\n        super(message);\r\n        this.code = code;\r\n        this.customData = customData;\r\n        /** The custom name for all FirebaseErrors. */\r\n        this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n    }\r\n}\r\nclass ErrorFactory {\r\n    constructor(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    create(code, ...data) {\r\n        const customData = data[0] || {};\r\n        const fullCode = `${this.service}/${code}`;\r\n        const template = this.errors[code];\r\n        const message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\r\n        const error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    }\r\n}\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, (_, key) => {\r\n        const value = data[key];\r\n        return value != null ? String(value) : `<${key}?>`;\r\n    });\r\n}\r\nconst PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst decode = function (token) {\r\n    let header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        const parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header,\r\n        claims,\r\n        data,\r\n        signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidTimestamp = function (token) {\r\n    const claims = decode(token).claims;\r\n    const now = Math.floor(new Date().getTime() / 1000);\r\n    let validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst issuedAtTime = function (token) {\r\n    const claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidFormat = function (token) {\r\n    const decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isAdmin = function (token) {\r\n    const claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    const res = {};\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    for (const k of aKeys) {\r\n        if (!bKeys.includes(k)) {\r\n            return false;\r\n        }\r\n        const aProp = a[k];\r\n        const bProp = b[k];\r\n        if (isObject(aProp) && isObject(bProp)) {\r\n            if (!deepEqual(aProp, bProp)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (aProp !== bProp) {\r\n            return false;\r\n        }\r\n    }\r\n    for (const k of bKeys) {\r\n        if (!aKeys.includes(k)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isObject(thing) {\r\n    return thing !== null && typeof thing === 'object';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\r\n * @internal\r\n */\r\nfunction promiseWithTimeout(promise, timeInMS = 2000) {\r\n    const deferredPromise = new Deferred();\r\n    setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\r\n    promise.then(deferredPromise.resolve, deferredPromise.reject);\r\n    return deferredPromise.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    const params = [];\r\n    for (const [key, value] of Object.entries(querystringParams)) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(arrayVal => {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    const obj = {};\r\n    const tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(token => {\r\n        if (token) {\r\n            const [key, value] = token.split('=');\r\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\r\nfunction extractQuerystring(url) {\r\n    const queryStart = url.indexOf('?');\r\n    if (!queryStart) {\r\n        return '';\r\n    }\r\n    const fragmentStart = url.indexOf('#', queryStart);\r\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nclass Sha1 {\r\n    constructor() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (let i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    }\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    compress_(buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        const W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (let i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (let i = 16; i < 80; i++) {\r\n            const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        let a = this.chain_[0];\r\n        let b = this.chain_[1];\r\n        let c = this.chain_[2];\r\n        let d = this.chain_[3];\r\n        let e = this.chain_[4];\r\n        let f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (let i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    }\r\n    update(bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        const lengthMinusBlock = length - this.blockSize;\r\n        let n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        const buf = this.buf_;\r\n        let inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    }\r\n    /** @override */\r\n    digest() {\r\n        const digest = [];\r\n        let totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (let i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        let n = 0;\r\n        for (let i = 0; i < 5; i++) {\r\n            for (let j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    }\r\n}\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    const proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nclass ObserverProxy {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    constructor(executor, onNoObservers) {\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(() => {\r\n            executor(this);\r\n        })\r\n            .catch(e => {\r\n            this.error(e);\r\n        });\r\n    }\r\n    next(value) {\r\n        this.forEachObserver((observer) => {\r\n            observer.next(value);\r\n        });\r\n    }\r\n    error(error) {\r\n        this.forEachObserver((observer) => {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    }\r\n    complete() {\r\n        this.forEachObserver((observer) => {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    }\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    subscribe(nextOrObserver, error, complete) {\r\n        let observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error,\r\n                complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        const unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(() => {\r\n                try {\r\n                    if (this.finalError) {\r\n                        observer.error(this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    }\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    unsubscribeOne(i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    }\r\n    forEachObserver(fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (let i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    }\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    sendOne(i, fn) {\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            if (this.observers !== undefined && this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    close(err) {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            this.observers = undefined;\r\n            this.onNoObservers = undefined;\r\n        });\r\n    }\r\n}\r\n/** Turn synchronous function into one called asynchronously. */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(fn, onError) {\r\n    return (...args) => {\r\n        Promise.resolve(true)\r\n            .then(() => {\r\n            fn(...args);\r\n        })\r\n            .catch((error) => {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (const method of methods) {\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nconst validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    let argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        const error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argName) {\r\n    return `${fnName} failed: ${argName} argument `;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentName, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ncallback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentName, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nconst stringToByteArray = function (str) {\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            const high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nconst stringLength = function (str) {\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        const c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n * Generates a new uuid.\r\n * @public\r\n */\r\nconst uuidv4 = function () {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nconst DEFAULT_INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nconst DEFAULT_BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount, intervalMillis = DEFAULT_INTERVAL_MILLIS, backoffFactor = DEFAULT_BACKOFF_FACTOR) {\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    const randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provide English ordinal letters after a number\r\n */\r\nfunction ordinal(i) {\r\n    if (!Number.isFinite(i)) {\r\n        return `${i}`;\r\n    }\r\n    return i + indicator(i);\r\n}\r\nfunction indicator(i) {\r\n    i = Math.abs(i);\r\n    const cent = i % 100;\r\n    if (cent >= 10 && cent <= 20) {\r\n        return 'th';\r\n    }\r\n    const dec = i % 10;\r\n    if (dec === 1) {\r\n        return 'st';\r\n    }\r\n    if (dec === 2) {\r\n        return 'nd';\r\n    }\r\n    if (dec === 3) {\r\n        return 'rd';\r\n    }\r\n    return 'th';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getModularInstance(service) {\r\n    if (service && service._delegate) {\r\n        return service._delegate;\r\n    }\r\n    else {\r\n        return service;\r\n    }\r\n}\n\nexport { CONSTANTS, DecodeBase64StringError, Deferred, ErrorFactory, FirebaseError, MAX_VALUE_MILLIS, RANDOM_FACTOR, Sha1, areCookiesEnabled, assert, assertionError, async, base64, base64Decode, base64Encode, base64urlEncodeWithoutPadding, calculateBackoffMillis, contains, createMockUserToken, createSubscribe, decode, deepCopy, deepEqual, deepExtend, errorPrefix, extractQuerystring, getDefaultAppConfig, getDefaultEmulatorHost, getDefaultEmulatorHostnameAndPort, getDefaults, getExperimentalSetting, getGlobal, getModularInstance, getUA, isAdmin, isBrowser, isBrowserExtension, isElectron, isEmpty, isIE, isIndexedDBAvailable, isMobileCordova, isNode, isNodeSdk, isReactNative, isSafari, isUWP, isValidFormat, isValidTimestamp, issuedAtTime, jsonEval, map, ordinal, promiseWithTimeout, querystring, querystringDecode, safeGet, stringLength, stringToByteArray, stringify, uuidv4, validateArgCount, validateCallback, validateContextObject, validateIndexedDBOpenable, validateNamespace };\n//# sourceMappingURL=index.esm2017.js.map\n","import { Deferred } from '@firebase/util';\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass Component {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    constructor(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    setInstantiationMode(mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    }\r\n    setMultipleInstances(multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    }\r\n    setServiceProps(props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    }\r\n    setInstanceCreatedCallback(callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nclass Provider {\r\n    constructor(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    get(identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            const deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    const instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    }\r\n    getImmediate(options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(`Service ${this.name} is not available`);\r\n            }\r\n        }\r\n    }\r\n    getComponent() {\r\n        return this.component;\r\n    }\r\n    setComponent(component) {\r\n        if (component.name !== this.name) {\r\n            throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\r\n        }\r\n        if (this.component) {\r\n            throw Error(`Component for ${this.name} has already been provided`);\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        // Create service instances for the pending promises and resolve them\r\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n        // and all promises with resolve with it regardless of the identifier.\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            try {\r\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                const instance = this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception, it should not cause\r\n                // a fatal error. We just leave the promise unresolved.\r\n            }\r\n        }\r\n    }\r\n    clearInstance(identifier = DEFAULT_ENTRY_NAME) {\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    }\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    async delete() {\r\n        const services = Array.from(this.instances.values());\r\n        await Promise.all([\r\n            ...services\r\n                .filter(service => 'INTERNAL' in service) // legacy services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service.INTERNAL.delete()),\r\n            ...services\r\n                .filter(service => '_delete' in service) // modularized services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service._delete())\r\n        ]);\r\n    }\r\n    isComponentSet() {\r\n        return this.component != null;\r\n    }\r\n    isInitialized(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instances.has(identifier);\r\n    }\r\n    getOptions(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instancesOptions.get(identifier) || {};\r\n    }\r\n    initialize(opts = {}) {\r\n        const { options = {} } = opts;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(`Component ${this.name} has not been registered yet`);\r\n        }\r\n        const instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options\r\n        });\r\n        // resolve any pending promise waiting for the service instance\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    onInit(callback, identifier) {\r\n        var _a;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        const existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return () => {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    }\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    invokeOnInitCallbacks(instance, identifier) {\r\n        const callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        for (const callback of callbacks) {\r\n            try {\r\n                callback(instance, identifier);\r\n            }\r\n            catch (_a) {\r\n                // ignore errors in the onInit callback\r\n            }\r\n        }\r\n    }\r\n    getOrInitializeService({ instanceIdentifier, options = {} }) {\r\n        let instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_a) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    }\r\n    normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    }\r\n    shouldAutoInitialize() {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */);\r\n    }\r\n}\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass ComponentContainer {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    addComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\r\n        }\r\n        provider.setComponent(component);\r\n    }\r\n    addOrOverwriteComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    }\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    getProvider(name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        const provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    }\r\n    getProviders() {\r\n        return Array.from(this.providers.values());\r\n    }\r\n}\n\nexport { Component, ComponentContainer, Provider };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nconst instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nconst levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nconst defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nconst ConsoleMethod = {\r\n    [LogLevel.DEBUG]: 'log',\r\n    [LogLevel.VERBOSE]: 'log',\r\n    [LogLevel.INFO]: 'info',\r\n    [LogLevel.WARN]: 'warn',\r\n    [LogLevel.ERROR]: 'error'\r\n};\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nconst defaultLogHandler = (instance, logType, ...args) => {\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    const now = new Date().toISOString();\r\n    const method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method](`[${now}]  ${instance.name}:`, ...args);\r\n    }\r\n    else {\r\n        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\r\n    }\r\n};\r\nclass Logger {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    get logLevel() {\r\n        return this._logLevel;\r\n    }\r\n    set logLevel(val) {\r\n        if (!(val in LogLevel)) {\r\n            throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\r\n        }\r\n        this._logLevel = val;\r\n    }\r\n    // Workaround for setter/getter having to be the same type.\r\n    setLogLevel(val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    }\r\n    get logHandler() {\r\n        return this._logHandler;\r\n    }\r\n    set logHandler(val) {\r\n        if (typeof val !== 'function') {\r\n            throw new TypeError('Value assigned to `logHandler` must be a function');\r\n        }\r\n        this._logHandler = val;\r\n    }\r\n    get userLogHandler() {\r\n        return this._userLogHandler;\r\n    }\r\n    set userLogHandler(val) {\r\n        this._userLogHandler = val;\r\n    }\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    debug(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\r\n        this._logHandler(this, LogLevel.DEBUG, ...args);\r\n    }\r\n    log(...args) {\r\n        this._userLogHandler &&\r\n            this._userLogHandler(this, LogLevel.VERBOSE, ...args);\r\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\r\n    }\r\n    info(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\r\n        this._logHandler(this, LogLevel.INFO, ...args);\r\n    }\r\n    warn(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\r\n        this._logHandler(this, LogLevel.WARN, ...args);\r\n    }\r\n    error(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\r\n        this._logHandler(this, LogLevel.ERROR, ...args);\r\n    }\r\n}\r\nfunction setLogLevel(level) {\r\n    instances.forEach(inst => {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    for (const instance of instances) {\r\n        let customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = (instance, level, ...args) => {\r\n                const message = args\r\n                    .map(arg => {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(arg => arg)\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message,\r\n                        args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm2017.js.map\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, getDefaultAppConfig, deepEqual, FirebaseError, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.9.13\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"9.23.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    const heartbeatController = app.container\r\n        .getProvider('heartbeat')\r\n        .getImmediate({ optional: true });\r\n    if (heartbeatController) {\r\n        void heartbeatController.triggerHeartbeat();\r\n    }\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call initializeApp() first',\r\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\r\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(_options, rawConfig = {}) {\r\n    let options = _options;\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    options || (options = getDefaultAppConfig());\r\n    if (!options) {\r\n        throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\r\n        return initializeApp();\r\n    }\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        _apps.delete(name);\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* ComponentType.VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebase-heartbeat-database';\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = 'firebase-heartbeat-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DB_NAME, DB_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        db.createObjectStore(STORE_NAME);\r\n                }\r\n            }\r\n        }).catch(e => {\r\n            throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\nasync function readHeartbeatsFromIndexedDB(app) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const result = await db\r\n            .transaction(STORE_NAME)\r\n            .objectStore(STORE_NAME)\r\n            .get(computeKey(app));\r\n        return result;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME, 'readwrite');\r\n        const objectStore = tx.objectStore(STORE_NAME);\r\n        await objectStore.put(heartbeatObject, computeKey(app));\r\n        await tx.done;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nfunction computeKey(app) {\r\n    return `${app.name}!${app.options.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst MAX_HEADER_BYTES = 1024;\r\n// 30 days\r\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\r\nclass HeartbeatServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */\r\n        this._heartbeatsCache = null;\r\n        const app = this.container.getProvider('app').getImmediate();\r\n        this._storage = new HeartbeatStorageImpl(app);\r\n        this._heartbeatsCachePromise = this._storage.read().then(result => {\r\n            this._heartbeatsCache = result;\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */\r\n    async triggerHeartbeat() {\r\n        const platformLogger = this.container\r\n            .getProvider('platform-logger')\r\n            .getImmediate();\r\n        // This is the \"Firebase user agent\" string from the platform logger\r\n        // service, not the browser user agent.\r\n        const agent = platformLogger.getPlatformInfoString();\r\n        const date = getUTCDateString();\r\n        if (this._heartbeatsCache === null) {\r\n            this._heartbeatsCache = await this._heartbeatsCachePromise;\r\n        }\r\n        // Do not store a heartbeat if one is already stored for this day\r\n        // or if a header has already been sent today.\r\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date ||\r\n            this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\r\n            return;\r\n        }\r\n        else {\r\n            // There is no entry for this date. Create one.\r\n            this._heartbeatsCache.heartbeats.push({ date, agent });\r\n        }\r\n        // Remove entries older than 30 days.\r\n        this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\r\n            const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\r\n            const now = Date.now();\r\n            return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\r\n        });\r\n        return this._storage.overwrite(this._heartbeatsCache);\r\n    }\r\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\r\n    async getHeartbeatsHeader() {\r\n        if (this._heartbeatsCache === null) {\r\n            await this._heartbeatsCachePromise;\r\n        }\r\n        // If it's still null or the array is empty, there is no data to send.\r\n        if (this._heartbeatsCache === null ||\r\n            this._heartbeatsCache.heartbeats.length === 0) {\r\n            return '';\r\n        }\r\n        const date = getUTCDateString();\r\n        // Extract as many heartbeats from the cache as will fit under the size limit.\r\n        const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\r\n        const headerString = base64urlEncodeWithoutPadding(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));\r\n        // Store last sent date to prevent another being logged/sent for the same day.\r\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\r\n        if (unsentEntries.length > 0) {\r\n            // Store any unsent entries if they exist.\r\n            this._heartbeatsCache.heartbeats = unsentEntries;\r\n            // This seems more likely than emptying the array (below) to lead to some odd state\r\n            // since the cache isn't empty and this will be called again on the next request,\r\n            // and is probably safest if we await it.\r\n            await this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        else {\r\n            this._heartbeatsCache.heartbeats = [];\r\n            // Do not wait for this, to reduce latency.\r\n            void this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        return headerString;\r\n    }\r\n}\r\nfunction getUTCDateString() {\r\n    const today = new Date();\r\n    // Returns date format 'YYYY-MM-DD'\r\n    return today.toISOString().substring(0, 10);\r\n}\r\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\r\n    // Heartbeats grouped by user agent in the standard format to be sent in\r\n    // the header.\r\n    const heartbeatsToSend = [];\r\n    // Single date format heartbeats that are not sent.\r\n    let unsentEntries = heartbeatsCache.slice();\r\n    for (const singleDateHeartbeat of heartbeatsCache) {\r\n        // Look for an existing entry with the same user agent.\r\n        const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\r\n        if (!heartbeatEntry) {\r\n            // If no entry for this user agent exists, create one.\r\n            heartbeatsToSend.push({\r\n                agent: singleDateHeartbeat.agent,\r\n                dates: [singleDateHeartbeat.date]\r\n            });\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                // If the header would exceed max size, remove the added heartbeat\r\n                // entry and stop adding to the header.\r\n                heartbeatsToSend.pop();\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\r\n            // If the header would exceed max size, remove the added date\r\n            // and stop adding to the header.\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                heartbeatEntry.dates.pop();\r\n                break;\r\n            }\r\n        }\r\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\r\n        // quota and the loop breaks early.)\r\n        unsentEntries = unsentEntries.slice(1);\r\n    }\r\n    return {\r\n        heartbeatsToSend,\r\n        unsentEntries\r\n    };\r\n}\r\nclass HeartbeatStorageImpl {\r\n    constructor(app) {\r\n        this.app = app;\r\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\r\n    }\r\n    async runIndexedDBEnvironmentCheck() {\r\n        if (!isIndexedDBAvailable()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return validateIndexedDBOpenable()\r\n                .then(() => true)\r\n                .catch(() => false);\r\n        }\r\n    }\r\n    /**\r\n     * Read all heartbeats.\r\n     */\r\n    async read() {\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return { heartbeats: [] };\r\n        }\r\n        else {\r\n            const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\r\n            return idbHeartbeatObject || { heartbeats: [] };\r\n        }\r\n    }\r\n    // overwrite the storage with the provided heartbeats\r\n    async overwrite(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: heartbeatsObject.heartbeats\r\n            });\r\n        }\r\n    }\r\n    // add heartbeats\r\n    async add(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: [\r\n                    ...existingHeartbeatsObject.heartbeats,\r\n                    ...heartbeatsObject.heartbeats\r\n                ]\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\r\nfunction countBytes(heartbeatsCache) {\r\n    // base64 has a restricted set of characters, all of which should be 1 byte.\r\n    return base64urlEncodeWithoutPadding(\r\n    // heartbeatsCache wrapper properties\r\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })).length;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    _registerComponent(new Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$o, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n","import { registerVersion } from '@firebase/app';\nexport * from '@firebase/app';\n\nvar name = \"firebase\";\nvar version = \"9.23.0\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterVersion(name, version, 'app');\n//# sourceMappingURL=index.esm.js.map\n","var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nvar esm = {};\n\n/*\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\n\nvar k,goog=goog||{},l=commonjsGlobal||self;function aa(a){var b=typeof a;b=\"object\"!=b?b:a?Array.isArray(a)?\"array\":b:\"null\";return \"array\"==b||\"object\"==b&&\"number\"==typeof a.length}function p(a){var b=typeof a;return \"object\"==b&&null!=a||\"function\"==b}function ba(a){return Object.prototype.hasOwnProperty.call(a,ca)&&a[ca]||(a[ca]=++da)}var ca=\"closure_uid_\"+(1E9*Math.random()>>>0),da=0;function ea(a,b,c){return a.call.apply(a.bind,arguments)}\nfunction fa(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}}function q(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?q=ea:q=fa;return q.apply(null,arguments)}\nfunction ha(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}}function r(a,b){function c(){}c.prototype=b.prototype;a.$=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.ac=function(d,e,f){for(var h=Array(arguments.length-2),n=2;n<arguments.length;n++)h[n-2]=arguments[n];return b.prototype[e].apply(d,h)};}function v(){this.s=this.s;this.o=this.o;}var ia=0;v.prototype.s=!1;v.prototype.sa=function(){if(!this.s&&(this.s=!0,this.N(),0!=ia)){ba(this);}};v.prototype.N=function(){if(this.o)for(;this.o.length;)this.o.shift()();};const ka=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if(\"string\"===typeof a)return \"string\"!==typeof b||1!=b.length?-1:a.indexOf(b,0);for(let c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return -1};function ma(a){const b=a.length;if(0<b){const c=Array(b);for(let d=0;d<b;d++)c[d]=a[d];return c}return []}\nfunction na(a,b){for(let c=1;c<arguments.length;c++){const d=arguments[c];if(aa(d)){const e=a.length||0,f=d.length||0;a.length=e+f;for(let h=0;h<f;h++)a[e+h]=d[h];}else a.push(d);}}function w(a,b){this.type=a;this.g=this.target=b;this.defaultPrevented=!1;}w.prototype.h=function(){this.defaultPrevented=!0;};var oa=function(){if(!l.addEventListener||!Object.defineProperty)return !1;var a=!1,b=Object.defineProperty({},\"passive\",{get:function(){a=!0;}});try{l.addEventListener(\"test\",()=>{},b),l.removeEventListener(\"test\",()=>{},b);}catch(c){}return a}();function x(a){return /^[\\s\\xa0]*$/.test(a)}function pa(){var a=l.navigator;return a&&(a=a.userAgent)?a:\"\"}function y(a){return -1!=pa().indexOf(a)}function qa(a){qa[\" \"](a);return a}qa[\" \"]=function(){};function ra(a,b){var c=sa;return Object.prototype.hasOwnProperty.call(c,a)?c[a]:c[a]=b(a)}var ta=y(\"Opera\"),z=y(\"Trident\")||y(\"MSIE\"),ua=y(\"Edge\"),va=ua||z,wa=y(\"Gecko\")&&!(-1!=pa().toLowerCase().indexOf(\"webkit\")&&!y(\"Edge\"))&&!(y(\"Trident\")||y(\"MSIE\"))&&!y(\"Edge\"),xa=-1!=pa().toLowerCase().indexOf(\"webkit\")&&!y(\"Edge\");function ya(){var a=l.document;return a?a.documentMode:void 0}var za;\na:{var Aa=\"\",Ba=function(){var a=pa();if(wa)return /rv:([^\\);]+)(\\)|;)/.exec(a);if(ua)return /Edge\\/([\\d\\.]+)/.exec(a);if(z)return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);if(xa)return /WebKit\\/(\\S+)/.exec(a);if(ta)return /(?:Version)[ \\/]?(\\S+)/.exec(a)}();Ba&&(Aa=Ba?Ba[1]:\"\");if(z){var Ca=ya();if(null!=Ca&&Ca>parseFloat(Aa)){za=String(Ca);break a}}za=Aa;}var Da;if(l.document&&z){var Ea=ya();Da=Ea?Ea:parseInt(za,10)||void 0;}else Da=void 0;var Fa=Da;function A(a,b){w.call(this,a?a.type:\"\");this.relatedTarget=this.g=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key=\"\";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.state=null;this.pointerId=0;this.pointerType=\"\";this.i=null;if(a){var c=this.type=a.type,d=a.changedTouches&&a.changedTouches.length?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.g=b;if(b=a.relatedTarget){if(wa){a:{try{qa(b.nodeName);var e=!0;break a}catch(f){}e=\n!1;}e||(b=null);}}else \"mouseover\"==c?b=a.fromElement:\"mouseout\"==c&&(b=a.toElement);this.relatedTarget=b;d?(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0):(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0);this.button=a.button;this.key=a.key||\"\";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=\na.shiftKey;this.metaKey=a.metaKey;this.pointerId=a.pointerId||0;this.pointerType=\"string\"===typeof a.pointerType?a.pointerType:Ga[a.pointerType]||\"\";this.state=a.state;this.i=a;a.defaultPrevented&&A.$.h.call(this);}}r(A,w);var Ga={2:\"touch\",3:\"pen\",4:\"mouse\"};A.prototype.h=function(){A.$.h.call(this);var a=this.i;a.preventDefault?a.preventDefault():a.returnValue=!1;};var Ha=\"closure_listenable_\"+(1E6*Math.random()|0);var Ia=0;function Ja(a,b,c,d,e){this.listener=a;this.proxy=null;this.src=b;this.type=c;this.capture=!!d;this.la=e;this.key=++Ia;this.fa=this.ia=!1;}function Ka(a){a.fa=!0;a.listener=null;a.proxy=null;a.src=null;a.la=null;}function Na(a,b,c){for(const d in a)b.call(c,a[d],d,a);}function Oa(a,b){for(const c in a)b.call(void 0,a[c],c,a);}function Pa(a){const b={};for(const c in a)b[c]=a[c];return b}const Qa=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");function Ra(a,b){let c,d;for(let e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(let f=0;f<Qa.length;f++)c=Qa[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c]);}}function Sa(a){this.src=a;this.g={};this.h=0;}Sa.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.g[f];a||(a=this.g[f]=[],this.h++);var h=Ta(a,b,d,e);-1<h?(b=a[h],c||(b.ia=!1)):(b=new Ja(b,this.src,f,!!d,e),b.ia=c,a.push(b));return b};function Ua(a,b){var c=b.type;if(c in a.g){var d=a.g[c],e=ka(d,b),f;(f=0<=e)&&Array.prototype.splice.call(d,e,1);f&&(Ka(b),0==a.g[c].length&&(delete a.g[c],a.h--));}}\nfunction Ta(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.fa&&f.listener==b&&f.capture==!!c&&f.la==d)return e}return -1}var Va=\"closure_lm_\"+(1E6*Math.random()|0),Wa={};function Ya(a,b,c,d,e){if(d&&d.once)return Za(a,b,c,d,e);if(Array.isArray(b)){for(var f=0;f<b.length;f++)Ya(a,b[f],c,d,e);return null}c=$a(c);return a&&a[Ha]?a.O(b,c,p(d)?!!d.capture:!!d,e):ab(a,b,c,!1,d,e)}\nfunction ab(a,b,c,d,e,f){if(!b)throw Error(\"Invalid event type\");var h=p(e)?!!e.capture:!!e,n=bb(a);n||(a[Va]=n=new Sa(a));c=n.add(b,c,d,h,f);if(c.proxy)return c;d=cb();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)oa||(e=h),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(db(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error(\"addEventListener and attachEvent are unavailable.\");return c}\nfunction cb(){function a(c){return b.call(a.src,a.listener,c)}const b=eb;return a}function Za(a,b,c,d,e){if(Array.isArray(b)){for(var f=0;f<b.length;f++)Za(a,b[f],c,d,e);return null}c=$a(c);return a&&a[Ha]?a.P(b,c,p(d)?!!d.capture:!!d,e):ab(a,b,c,!0,d,e)}\nfunction fb(a,b,c,d,e){if(Array.isArray(b))for(var f=0;f<b.length;f++)fb(a,b[f],c,d,e);else (d=p(d)?!!d.capture:!!d,c=$a(c),a&&a[Ha])?(a=a.i,b=String(b).toString(),b in a.g&&(f=a.g[b],c=Ta(f,c,d,e),-1<c&&(Ka(f[c]),Array.prototype.splice.call(f,c,1),0==f.length&&(delete a.g[b],a.h--)))):a&&(a=bb(a))&&(b=a.g[b.toString()],a=-1,b&&(a=Ta(b,c,d,e)),(c=-1<a?b[a]:null)&&gb(c));}\nfunction gb(a){if(\"number\"!==typeof a&&a&&!a.fa){var b=a.src;if(b&&b[Ha])Ua(b.i,a);else {var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(db(c),d):b.addListener&&b.removeListener&&b.removeListener(d);(c=bb(b))?(Ua(c,a),0==c.h&&(c.src=null,b[Va]=null)):Ka(a);}}}function db(a){return a in Wa?Wa[a]:Wa[a]=\"on\"+a}function eb(a,b){if(a.fa)a=!0;else {b=new A(b,this);var c=a.listener,d=a.la||a.src;a.ia&&gb(a);a=c.call(d,b);}return a}\nfunction bb(a){a=a[Va];return a instanceof Sa?a:null}var hb=\"__closure_events_fn_\"+(1E9*Math.random()>>>0);function $a(a){if(\"function\"===typeof a)return a;a[hb]||(a[hb]=function(b){return a.handleEvent(b)});return a[hb]}function B(){v.call(this);this.i=new Sa(this);this.S=this;this.J=null;}r(B,v);B.prototype[Ha]=!0;B.prototype.removeEventListener=function(a,b,c,d){fb(this,a,b,c,d);};\nfunction C(a,b){var c,d=a.J;if(d)for(c=[];d;d=d.J)c.push(d);a=a.S;d=b.type||b;if(\"string\"===typeof b)b=new w(b,a);else if(b instanceof w)b.target=b.target||a;else {var e=b;b=new w(d,a);Ra(b,e);}e=!0;if(c)for(var f=c.length-1;0<=f;f--){var h=b.g=c[f];e=ib(h,d,!0,b)&&e;}h=b.g=a;e=ib(h,d,!0,b)&&e;e=ib(h,d,!1,b)&&e;if(c)for(f=0;f<c.length;f++)h=b.g=c[f],e=ib(h,d,!1,b)&&e;}\nB.prototype.N=function(){B.$.N.call(this);if(this.i){var a=this.i,c;for(c in a.g){for(var d=a.g[c],e=0;e<d.length;e++)Ka(d[e]);delete a.g[c];a.h--;}}this.J=null;};B.prototype.O=function(a,b,c,d){return this.i.add(String(a),b,!1,c,d)};B.prototype.P=function(a,b,c,d){return this.i.add(String(a),b,!0,c,d)};\nfunction ib(a,b,c,d){b=a.i.g[String(b)];if(!b)return !0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var h=b[f];if(h&&!h.fa&&h.capture==c){var n=h.listener,t=h.la||h.src;h.ia&&Ua(a.i,h);e=!1!==n.call(t,d)&&e;}}return e&&!d.defaultPrevented}var jb=l.JSON.stringify;class kb{constructor(a,b){this.i=a;this.j=b;this.h=0;this.g=null;}get(){let a;0<this.h?(this.h--,a=this.g,this.g=a.next,a.next=null):a=this.i();return a}}function lb(){var a=mb;let b=null;a.g&&(b=a.g,a.g=a.g.next,a.g||(a.h=null),b.next=null);return b}class nb{constructor(){this.h=this.g=null;}add(a,b){const c=ob.get();c.set(a,b);this.h?this.h.next=c:this.g=c;this.h=c;}}var ob=new kb(()=>new pb,a=>a.reset());class pb{constructor(){this.next=this.g=this.h=null;}set(a,b){this.h=a;this.g=b;this.next=null;}reset(){this.next=this.g=this.h=null;}}function qb(a){var b=1;a=a.split(\":\");const c=[];for(;0<b&&a.length;)c.push(a.shift()),b--;a.length&&c.push(a.join(\":\"));return c}function rb(a){l.setTimeout(()=>{throw a;},0);}let sb,tb=!1,mb=new nb,vb=()=>{const a=l.Promise.resolve(void 0);sb=()=>{a.then(ub);};};var ub=()=>{for(var a;a=lb();){try{a.h.call(a.g);}catch(c){rb(c);}var b=ob;b.j(a);100>b.h&&(b.h++,a.next=b.g,b.g=a);}tb=!1;};function wb(a,b){B.call(this);this.h=a||1;this.g=b||l;this.j=q(this.qb,this);this.l=Date.now();}r(wb,B);k=wb.prototype;k.ga=!1;k.T=null;k.qb=function(){if(this.ga){var a=Date.now()-this.l;0<a&&a<.8*this.h?this.T=this.g.setTimeout(this.j,this.h-a):(this.T&&(this.g.clearTimeout(this.T),this.T=null),C(this,\"tick\"),this.ga&&(xb(this),this.start()));}};k.start=function(){this.ga=!0;this.T||(this.T=this.g.setTimeout(this.j,this.h),this.l=Date.now());};\nfunction xb(a){a.ga=!1;a.T&&(a.g.clearTimeout(a.T),a.T=null);}k.N=function(){wb.$.N.call(this);xb(this);delete this.g;};function yb(a,b,c){if(\"function\"===typeof a)c&&(a=q(a,c));else if(a&&\"function\"==typeof a.handleEvent)a=q(a.handleEvent,a);else throw Error(\"Invalid listener argument\");return 2147483647<Number(b)?-1:l.setTimeout(a,b||0)}function zb(a){a.g=yb(()=>{a.g=null;a.i&&(a.i=!1,zb(a));},a.j);const b=a.h;a.h=null;a.m.apply(null,b);}class Ab extends v{constructor(a,b){super();this.m=a;this.j=b;this.h=null;this.i=!1;this.g=null;}l(a){this.h=arguments;this.g?this.i=!0:zb(this);}N(){super.N();this.g&&(l.clearTimeout(this.g),this.g=null,this.i=!1,this.h=null);}}function Bb(a){v.call(this);this.h=a;this.g={};}r(Bb,v);var Cb=[];function Db(a,b,c,d){Array.isArray(c)||(c&&(Cb[0]=c.toString()),c=Cb);for(var e=0;e<c.length;e++){var f=Ya(b,c[e],d||a.handleEvent,!1,a.h||a);if(!f)break;a.g[f.key]=f;}}function Fb(a){Na(a.g,function(b,c){this.g.hasOwnProperty(c)&&gb(b);},a);a.g={};}Bb.prototype.N=function(){Bb.$.N.call(this);Fb(this);};Bb.prototype.handleEvent=function(){throw Error(\"EventHandler.handleEvent not implemented\");};function Gb(){this.g=!0;}Gb.prototype.Ea=function(){this.g=!1;};function Hb(a,b,c,d,e,f){a.info(function(){if(a.g)if(f){var h=\"\";for(var n=f.split(\"&\"),t=0;t<n.length;t++){var m=n[t].split(\"=\");if(1<m.length){var u=m[0];m=m[1];var L=u.split(\"_\");h=2<=L.length&&\"type\"==L[1]?h+(u+\"=\"+m+\"&\"):h+(u+\"=redacted&\");}}}else h=null;else h=f;return \"XMLHTTP REQ (\"+d+\") [attempt \"+e+\"]: \"+b+\"\\n\"+c+\"\\n\"+h});}\nfunction Ib(a,b,c,d,e,f,h){a.info(function(){return \"XMLHTTP RESP (\"+d+\") [ attempt \"+e+\"]: \"+b+\"\\n\"+c+\"\\n\"+f+\" \"+h});}function D(a,b,c,d){a.info(function(){return \"XMLHTTP TEXT (\"+b+\"): \"+Jb(a,c)+(d?\" \"+d:\"\")});}function Kb(a,b){a.info(function(){return \"TIMEOUT: \"+b});}Gb.prototype.info=function(){};\nfunction Jb(a,b){if(!a.g)return b;if(!b)return null;try{var c=JSON.parse(b);if(c)for(a=0;a<c.length;a++)if(Array.isArray(c[a])){var d=c[a];if(!(2>d.length)){var e=d[1];if(Array.isArray(e)&&!(1>e.length)){var f=e[0];if(\"noop\"!=f&&\"stop\"!=f&&\"close\"!=f)for(var h=1;h<e.length;h++)e[h]=\"\";}}}return jb(c)}catch(n){return b}}var E={},Lb=null;function Mb(){return Lb=Lb||new B}E.Ta=\"serverreachability\";function Nb(a){w.call(this,E.Ta,a);}r(Nb,w);function Ob(a){const b=Mb();C(b,new Nb(b));}E.STAT_EVENT=\"statevent\";function Pb(a,b){w.call(this,E.STAT_EVENT,a);this.stat=b;}r(Pb,w);function F(a){const b=Mb();C(b,new Pb(b,a));}E.Ua=\"timingevent\";function Qb(a,b){w.call(this,E.Ua,a);this.size=b;}r(Qb,w);\nfunction Rb(a,b){if(\"function\"!==typeof a)throw Error(\"Fn must not be null and must be a function\");return l.setTimeout(function(){a();},b)}var Sb={NO_ERROR:0,rb:1,Eb:2,Db:3,yb:4,Cb:5,Fb:6,Qa:7,TIMEOUT:8,Ib:9};var Tb={wb:\"complete\",Sb:\"success\",Ra:\"error\",Qa:\"abort\",Kb:\"ready\",Lb:\"readystatechange\",TIMEOUT:\"timeout\",Gb:\"incrementaldata\",Jb:\"progress\",zb:\"downloadprogress\",$b:\"uploadprogress\"};function Ub(){}Ub.prototype.h=null;function Vb(a){return a.h||(a.h=a.i())}function Wb(){}var Xb={OPEN:\"a\",vb:\"b\",Ra:\"c\",Hb:\"d\"};function Yb(){w.call(this,\"d\");}r(Yb,w);function Zb(){w.call(this,\"c\");}r(Zb,w);var $b;function ac(){}r(ac,Ub);ac.prototype.g=function(){return new XMLHttpRequest};ac.prototype.i=function(){return {}};$b=new ac;function bc(a,b,c,d){this.l=a;this.j=b;this.m=c;this.W=d||1;this.U=new Bb(this);this.P=cc;a=va?125:void 0;this.V=new wb(a);this.I=null;this.i=!1;this.s=this.A=this.v=this.L=this.G=this.Y=this.B=null;this.F=[];this.g=null;this.C=0;this.o=this.u=null;this.ca=-1;this.J=!1;this.O=0;this.M=null;this.ba=this.K=this.aa=this.S=!1;this.h=new dc;}function dc(){this.i=null;this.g=\"\";this.h=!1;}var cc=45E3,ec={},fc={};k=bc.prototype;k.setTimeout=function(a){this.P=a;};\nfunction gc(a,b,c){a.L=1;a.v=hc(G(b));a.s=c;a.S=!0;ic(a,null);}function ic(a,b){a.G=Date.now();jc(a);a.A=G(a.v);var c=a.A,d=a.W;Array.isArray(d)||(d=[String(d)]);kc(c.i,\"t\",d);a.C=0;c=a.l.J;a.h=new dc;a.g=lc(a.l,c?b:null,!a.s);0<a.O&&(a.M=new Ab(q(a.Pa,a,a.g),a.O));Db(a.U,a.g,\"readystatechange\",a.nb);b=a.I?Pa(a.I):{};a.s?(a.u||(a.u=\"POST\"),b[\"Content-Type\"]=\"application/x-www-form-urlencoded\",a.g.ha(a.A,a.u,a.s,b)):(a.u=\"GET\",a.g.ha(a.A,a.u,null,b));Ob();Hb(a.j,a.u,a.A,a.m,a.W,a.s);}\nk.nb=function(a){a=a.target;const b=this.M;b&&3==H(a)?b.l():this.Pa(a);};\nk.Pa=function(a){try{if(a==this.g)a:{const u=H(this.g);var b=this.g.Ia();const L=this.g.da();if(!(3>u)&&(3!=u||va||this.g&&(this.h.h||this.g.ja()||mc(this.g)))){this.J||4!=u||7==b||(8==b||0>=L?Ob(3):Ob(2));nc(this);var c=this.g.da();this.ca=c;b:if(oc(this)){var d=mc(this.g);a=\"\";var e=d.length,f=4==H(this.g);if(!this.h.i){if(\"undefined\"===typeof TextDecoder){I(this);pc(this);var h=\"\";break b}this.h.i=new l.TextDecoder;}for(b=0;b<e;b++)this.h.h=!0,a+=this.h.i.decode(d[b],{stream:f&&b==e-1});d.splice(0,\ne);this.h.g+=a;this.C=0;h=this.h.g;}else h=this.g.ja();this.i=200==c;Ib(this.j,this.u,this.A,this.m,this.W,u,c);if(this.i){if(this.aa&&!this.K){b:{if(this.g){var n,t=this.g;if((n=t.g?t.g.getResponseHeader(\"X-HTTP-Initial-Response\"):null)&&!x(n)){var m=n;break b}}m=null;}if(c=m)D(this.j,this.m,c,\"Initial handshake response via X-HTTP-Initial-Response\"),this.K=!0,qc(this,c);else {this.i=!1;this.o=3;F(12);I(this);pc(this);break a}}this.S?(rc(this,u,h),va&&this.i&&3==u&&(Db(this.U,this.V,\"tick\",this.mb),\nthis.V.start())):(D(this.j,this.m,h,null),qc(this,h));4==u&&I(this);this.i&&!this.J&&(4==u?sc(this.l,this):(this.i=!1,jc(this)));}else tc(this.g),400==c&&0<h.indexOf(\"Unknown SID\")?(this.o=3,F(12)):(this.o=0,F(13)),I(this),pc(this);}}}catch(u){}finally{}};function oc(a){return a.g?\"GET\"==a.u&&2!=a.L&&a.l.Ha:!1}\nfunction rc(a,b,c){let d=!0,e;for(;!a.J&&a.C<c.length;)if(e=uc(a,c),e==fc){4==b&&(a.o=4,F(14),d=!1);D(a.j,a.m,null,\"[Incomplete Response]\");break}else if(e==ec){a.o=4;F(15);D(a.j,a.m,c,\"[Invalid Chunk]\");d=!1;break}else D(a.j,a.m,e,null),qc(a,e);oc(a)&&e!=fc&&e!=ec&&(a.h.g=\"\",a.C=0);4!=b||0!=c.length||a.h.h||(a.o=1,F(16),d=!1);a.i=a.i&&d;d?0<c.length&&!a.ba&&(a.ba=!0,b=a.l,b.g==a&&b.ca&&!b.M&&(b.l.info(\"Great, no buffering proxy detected. Bytes received: \"+c.length),vc(b),b.M=!0,F(11))):(D(a.j,a.m,\nc,\"[Invalid Chunked Response]\"),I(a),pc(a));}k.mb=function(){if(this.g){var a=H(this.g),b=this.g.ja();this.C<b.length&&(nc(this),rc(this,a,b),this.i&&4!=a&&jc(this));}};function uc(a,b){var c=a.C,d=b.indexOf(\"\\n\",c);if(-1==d)return fc;c=Number(b.substring(c,d));if(isNaN(c))return ec;d+=1;if(d+c>b.length)return fc;b=b.slice(d,d+c);a.C=d+c;return b}k.cancel=function(){this.J=!0;I(this);};function jc(a){a.Y=Date.now()+a.P;wc(a,a.P);}\nfunction wc(a,b){if(null!=a.B)throw Error(\"WatchDog timer not null\");a.B=Rb(q(a.lb,a),b);}function nc(a){a.B&&(l.clearTimeout(a.B),a.B=null);}k.lb=function(){this.B=null;const a=Date.now();0<=a-this.Y?(Kb(this.j,this.A),2!=this.L&&(Ob(),F(17)),I(this),this.o=2,pc(this)):wc(this,this.Y-a);};function pc(a){0==a.l.H||a.J||sc(a.l,a);}function I(a){nc(a);var b=a.M;b&&\"function\"==typeof b.sa&&b.sa();a.M=null;xb(a.V);Fb(a.U);a.g&&(b=a.g,a.g=null,b.abort(),b.sa());}\nfunction qc(a,b){try{var c=a.l;if(0!=c.H&&(c.g==a||xc(c.i,a)))if(!a.K&&xc(c.i,a)&&3==c.H){try{var d=c.Ja.g.parse(b);}catch(m){d=null;}if(Array.isArray(d)&&3==d.length){var e=d;if(0==e[0])a:{if(!c.u){if(c.g)if(c.g.G+3E3<a.G)yc(c),zc(c);else break a;Ac(c);F(18);}}else c.Fa=e[1],0<c.Fa-c.V&&37500>e[2]&&c.G&&0==c.A&&!c.v&&(c.v=Rb(q(c.ib,c),6E3));if(1>=Bc(c.i)&&c.oa){try{c.oa();}catch(m){}c.oa=void 0;}}else J(c,11);}else if((a.K||c.g==a)&&yc(c),!x(b))for(e=c.Ja.g.parse(b),b=0;b<e.length;b++){let m=e[b];c.V=\nm[0];m=m[1];if(2==c.H)if(\"c\"==m[0]){c.K=m[1];c.pa=m[2];const u=m[3];null!=u&&(c.ra=u,c.l.info(\"VER=\"+c.ra));const L=m[4];null!=L&&(c.Ga=L,c.l.info(\"SVER=\"+c.Ga));const La=m[5];null!=La&&\"number\"===typeof La&&0<La&&(d=1.5*La,c.L=d,c.l.info(\"backChannelRequestTimeoutMs_=\"+d));d=c;const la=a.g;if(la){const Ma=la.g?la.g.getResponseHeader(\"X-Client-Wire-Protocol\"):null;if(Ma){var f=d.i;f.g||-1==Ma.indexOf(\"spdy\")&&-1==Ma.indexOf(\"quic\")&&-1==Ma.indexOf(\"h2\")||(f.j=f.l,f.g=new Set,f.h&&(Cc(f,f.h),f.h=null));}if(d.F){const Eb=\nla.g?la.g.getResponseHeader(\"X-HTTP-Session-Id\"):null;Eb&&(d.Da=Eb,K(d.I,d.F,Eb));}}c.H=3;c.h&&c.h.Ba();c.ca&&(c.S=Date.now()-a.G,c.l.info(\"Handshake RTT: \"+c.S+\"ms\"));d=c;var h=a;d.wa=Dc(d,d.J?d.pa:null,d.Y);if(h.K){Ec(d.i,h);var n=h,t=d.L;t&&n.setTimeout(t);n.B&&(nc(n),jc(n));d.g=h;}else Fc(d);0<c.j.length&&Gc(c);}else \"stop\"!=m[0]&&\"close\"!=m[0]||J(c,7);else 3==c.H&&(\"stop\"==m[0]||\"close\"==m[0]?\"stop\"==m[0]?J(c,7):Hc(c):\"noop\"!=m[0]&&c.h&&c.h.Aa(m),c.A=0);}Ob(4);}catch(m){}}function Ic(a){if(a.Z&&\"function\"==typeof a.Z)return a.Z();if(\"undefined\"!==typeof Map&&a instanceof Map||\"undefined\"!==typeof Set&&a instanceof Set)return Array.from(a.values());if(\"string\"===typeof a)return a.split(\"\");if(aa(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}b=[];c=0;for(d in a)b[c++]=a[d];return b}\nfunction Jc(a){if(a.ta&&\"function\"==typeof a.ta)return a.ta();if(!a.Z||\"function\"!=typeof a.Z){if(\"undefined\"!==typeof Map&&a instanceof Map)return Array.from(a.keys());if(!(\"undefined\"!==typeof Set&&a instanceof Set)){if(aa(a)||\"string\"===typeof a){var b=[];a=a.length;for(var c=0;c<a;c++)b.push(c);return b}b=[];c=0;for(const d in a)b[c++]=d;return b}}}\nfunction Kc(a,b){if(a.forEach&&\"function\"==typeof a.forEach)a.forEach(b,void 0);else if(aa(a)||\"string\"===typeof a)Array.prototype.forEach.call(a,b,void 0);else for(var c=Jc(a),d=Ic(a),e=d.length,f=0;f<e;f++)b.call(void 0,d[f],c&&c[f],a);}var Lc=RegExp(\"^(?:([^:/?#.]+):)?(?://(?:([^\\\\\\\\/?#]*)@)?([^\\\\\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\\\\\/?#]|$))?([^?#]+)?(?:\\\\?([^#]*))?(?:#([\\\\s\\\\S]*))?$\");function Mc(a,b){if(a){a=a.split(\"&\");for(var c=0;c<a.length;c++){var d=a[c].indexOf(\"=\"),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1);}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\\+/g,\" \")):\"\");}}}function M(a){this.g=this.s=this.j=\"\";this.m=null;this.o=this.l=\"\";this.h=!1;if(a instanceof M){this.h=a.h;Nc(this,a.j);this.s=a.s;this.g=a.g;Oc(this,a.m);this.l=a.l;var b=a.i;var c=new Pc;c.i=b.i;b.g&&(c.g=new Map(b.g),c.h=b.h);Qc(this,c);this.o=a.o;}else a&&(b=String(a).match(Lc))?(this.h=!1,Nc(this,b[1]||\"\",!0),this.s=Rc(b[2]||\"\"),this.g=Rc(b[3]||\"\",!0),Oc(this,b[4]),this.l=Rc(b[5]||\"\",!0),Qc(this,b[6]||\"\",!0),this.o=Rc(b[7]||\"\")):(this.h=!1,this.i=new Pc(null,this.h));}\nM.prototype.toString=function(){var a=[],b=this.j;b&&a.push(Sc(b,Tc,!0),\":\");var c=this.g;if(c||\"file\"==b)a.push(\"//\"),(b=this.s)&&a.push(Sc(b,Tc,!0),\"@\"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),c=this.m,null!=c&&a.push(\":\",String(c));if(c=this.l)this.g&&\"/\"!=c.charAt(0)&&a.push(\"/\"),a.push(Sc(c,\"/\"==c.charAt(0)?Uc:Vc,!0));(c=this.i.toString())&&a.push(\"?\",c);(c=this.o)&&a.push(\"#\",Sc(c,Wc));return a.join(\"\")};function G(a){return new M(a)}\nfunction Nc(a,b,c){a.j=c?Rc(b,!0):b;a.j&&(a.j=a.j.replace(/:$/,\"\"));}function Oc(a,b){if(b){b=Number(b);if(isNaN(b)||0>b)throw Error(\"Bad port number \"+b);a.m=b;}else a.m=null;}function Qc(a,b,c){b instanceof Pc?(a.i=b,Xc(a.i,a.h)):(c||(b=Sc(b,Yc)),a.i=new Pc(b,a.h));}function K(a,b,c){a.i.set(b,c);}function hc(a){K(a,\"zx\",Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^Date.now()).toString(36));return a}\nfunction Rc(a,b){return a?b?decodeURI(a.replace(/%25/g,\"%2525\")):decodeURIComponent(a):\"\"}function Sc(a,b,c){return \"string\"===typeof a?(a=encodeURI(a).replace(b,Zc),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),a):null}function Zc(a){a=a.charCodeAt(0);return \"%\"+(a>>4&15).toString(16)+(a&15).toString(16)}var Tc=/[#\\/\\?@]/g,Vc=/[#\\?:]/g,Uc=/[#\\?]/g,Yc=/[#\\?@]/g,Wc=/#/g;function Pc(a,b){this.h=this.g=null;this.i=a||null;this.j=!!b;}\nfunction N(a){a.g||(a.g=new Map,a.h=0,a.i&&Mc(a.i,function(b,c){a.add(decodeURIComponent(b.replace(/\\+/g,\" \")),c);}));}k=Pc.prototype;k.add=function(a,b){N(this);this.i=null;a=O(this,a);var c=this.g.get(a);c||this.g.set(a,c=[]);c.push(b);this.h+=1;return this};function $c(a,b){N(a);b=O(a,b);a.g.has(b)&&(a.i=null,a.h-=a.g.get(b).length,a.g.delete(b));}function ad(a,b){N(a);b=O(a,b);return a.g.has(b)}\nk.forEach=function(a,b){N(this);this.g.forEach(function(c,d){c.forEach(function(e){a.call(b,e,d,this);},this);},this);};k.ta=function(){N(this);const a=Array.from(this.g.values()),b=Array.from(this.g.keys()),c=[];for(let d=0;d<b.length;d++){const e=a[d];for(let f=0;f<e.length;f++)c.push(b[d]);}return c};k.Z=function(a){N(this);let b=[];if(\"string\"===typeof a)ad(this,a)&&(b=b.concat(this.g.get(O(this,a))));else {a=Array.from(this.g.values());for(let c=0;c<a.length;c++)b=b.concat(a[c]);}return b};\nk.set=function(a,b){N(this);this.i=null;a=O(this,a);ad(this,a)&&(this.h-=this.g.get(a).length);this.g.set(a,[b]);this.h+=1;return this};k.get=function(a,b){if(!a)return b;a=this.Z(a);return 0<a.length?String(a[0]):b};function kc(a,b,c){$c(a,b);0<c.length&&(a.i=null,a.g.set(O(a,b),ma(c)),a.h+=c.length);}\nk.toString=function(){if(this.i)return this.i;if(!this.g)return \"\";const a=[],b=Array.from(this.g.keys());for(var c=0;c<b.length;c++){var d=b[c];const f=encodeURIComponent(String(d)),h=this.Z(d);for(d=0;d<h.length;d++){var e=f;\"\"!==h[d]&&(e+=\"=\"+encodeURIComponent(String(h[d])));a.push(e);}}return this.i=a.join(\"&\")};function O(a,b){b=String(b);a.j&&(b=b.toLowerCase());return b}\nfunction Xc(a,b){b&&!a.j&&(N(a),a.i=null,a.g.forEach(function(c,d){var e=d.toLowerCase();d!=e&&($c(this,d),kc(this,e,c));},a));a.j=b;}var bd=class{constructor(a,b){this.g=a;this.map=b;}};function cd(a){this.l=a||dd;l.PerformanceNavigationTiming?(a=l.performance.getEntriesByType(\"navigation\"),a=0<a.length&&(\"hq\"==a[0].nextHopProtocol||\"h2\"==a[0].nextHopProtocol)):a=!!(l.g&&l.g.Ka&&l.g.Ka()&&l.g.Ka().ec);this.j=a?this.l:1;this.g=null;1<this.j&&(this.g=new Set);this.h=null;this.i=[];}var dd=10;function ed(a){return a.h?!0:a.g?a.g.size>=a.j:!1}function Bc(a){return a.h?1:a.g?a.g.size:0}function xc(a,b){return a.h?a.h==b:a.g?a.g.has(b):!1}function Cc(a,b){a.g?a.g.add(b):a.h=b;}\nfunction Ec(a,b){a.h&&a.h==b?a.h=null:a.g&&a.g.has(b)&&a.g.delete(b);}cd.prototype.cancel=function(){this.i=fd(this);if(this.h)this.h.cancel(),this.h=null;else if(this.g&&0!==this.g.size){for(const a of this.g.values())a.cancel();this.g.clear();}};function fd(a){if(null!=a.h)return a.i.concat(a.h.F);if(null!=a.g&&0!==a.g.size){let b=a.i;for(const c of a.g.values())b=b.concat(c.F);return b}return ma(a.i)}var gd=class{stringify(a){return l.JSON.stringify(a,void 0)}parse(a){return l.JSON.parse(a,void 0)}};function hd(){this.g=new gd;}function id(a,b,c){const d=c||\"\";try{Kc(a,function(e,f){let h=e;p(e)&&(h=jb(e));b.push(d+f+\"=\"+encodeURIComponent(h));});}catch(e){throw b.push(d+\"type=\"+encodeURIComponent(\"_badmap\")),e;}}function jd(a,b){const c=new Gb;if(l.Image){const d=new Image;d.onload=ha(kd,c,d,\"TestLoadImage: loaded\",!0,b);d.onerror=ha(kd,c,d,\"TestLoadImage: error\",!1,b);d.onabort=ha(kd,c,d,\"TestLoadImage: abort\",!1,b);d.ontimeout=ha(kd,c,d,\"TestLoadImage: timeout\",!1,b);l.setTimeout(function(){if(d.ontimeout)d.ontimeout();},1E4);d.src=a;}else b(!1);}function kd(a,b,c,d,e){try{b.onload=null,b.onerror=null,b.onabort=null,b.ontimeout=null,e(d);}catch(f){}}function ld(a){this.l=a.fc||null;this.j=a.ob||!1;}r(ld,Ub);ld.prototype.g=function(){return new md(this.l,this.j)};ld.prototype.i=function(a){return function(){return a}}({});function md(a,b){B.call(this);this.F=a;this.u=b;this.m=void 0;this.readyState=nd;this.status=0;this.responseType=this.responseText=this.response=this.statusText=\"\";this.onreadystatechange=null;this.v=new Headers;this.h=null;this.C=\"GET\";this.B=\"\";this.g=!1;this.A=this.j=this.l=null;}r(md,B);var nd=0;k=md.prototype;\nk.open=function(a,b){if(this.readyState!=nd)throw this.abort(),Error(\"Error reopening a connection\");this.C=a;this.B=b;this.readyState=1;od(this);};k.send=function(a){if(1!=this.readyState)throw this.abort(),Error(\"need to call open() first. \");this.g=!0;const b={headers:this.v,method:this.C,credentials:this.m,cache:void 0};a&&(b.body=a);(this.F||l).fetch(new Request(this.B,b)).then(this.$a.bind(this),this.ka.bind(this));};\nk.abort=function(){this.response=this.responseText=\"\";this.v=new Headers;this.status=0;this.j&&this.j.cancel(\"Request was aborted.\").catch(()=>{});1<=this.readyState&&this.g&&4!=this.readyState&&(this.g=!1,pd(this));this.readyState=nd;};\nk.$a=function(a){if(this.g&&(this.l=a,this.h||(this.status=this.l.status,this.statusText=this.l.statusText,this.h=a.headers,this.readyState=2,od(this)),this.g&&(this.readyState=3,od(this),this.g)))if(\"arraybuffer\"===this.responseType)a.arrayBuffer().then(this.Ya.bind(this),this.ka.bind(this));else if(\"undefined\"!==typeof l.ReadableStream&&\"body\"in a){this.j=a.body.getReader();if(this.u){if(this.responseType)throw Error('responseType must be empty for \"streamBinaryChunks\" mode responses.');this.response=\n[];}else this.response=this.responseText=\"\",this.A=new TextDecoder;qd(this);}else a.text().then(this.Za.bind(this),this.ka.bind(this));};function qd(a){a.j.read().then(a.Xa.bind(a)).catch(a.ka.bind(a));}k.Xa=function(a){if(this.g){if(this.u&&a.value)this.response.push(a.value);else if(!this.u){var b=a.value?a.value:new Uint8Array(0);if(b=this.A.decode(b,{stream:!a.done}))this.response=this.responseText+=b;}a.done?pd(this):od(this);3==this.readyState&&qd(this);}};\nk.Za=function(a){this.g&&(this.response=this.responseText=a,pd(this));};k.Ya=function(a){this.g&&(this.response=a,pd(this));};k.ka=function(){this.g&&pd(this);};function pd(a){a.readyState=4;a.l=null;a.j=null;a.A=null;od(a);}k.setRequestHeader=function(a,b){this.v.append(a,b);};k.getResponseHeader=function(a){return this.h?this.h.get(a.toLowerCase())||\"\":\"\"};\nk.getAllResponseHeaders=function(){if(!this.h)return \"\";const a=[],b=this.h.entries();for(var c=b.next();!c.done;)c=c.value,a.push(c[0]+\": \"+c[1]),c=b.next();return a.join(\"\\r\\n\")};function od(a){a.onreadystatechange&&a.onreadystatechange.call(a);}Object.defineProperty(md.prototype,\"withCredentials\",{get:function(){return \"include\"===this.m},set:function(a){this.m=a?\"include\":\"same-origin\";}});var rd=l.JSON.parse;function P(a){B.call(this);this.headers=new Map;this.u=a||null;this.h=!1;this.C=this.g=null;this.I=\"\";this.m=0;this.j=\"\";this.l=this.G=this.v=this.F=!1;this.B=0;this.A=null;this.K=sd;this.L=this.M=!1;}r(P,B);var sd=\"\",td=/^https?$/i,ud=[\"POST\",\"PUT\"];k=P.prototype;k.Oa=function(a){this.M=a;};\nk.ha=function(a,b,c,d){if(this.g)throw Error(\"[goog.net.XhrIo] Object is active with another request=\"+this.I+\"; newUri=\"+a);b=b?b.toUpperCase():\"GET\";this.I=a;this.j=\"\";this.m=0;this.F=!1;this.h=!0;this.g=this.u?this.u.g():$b.g();this.C=this.u?Vb(this.u):Vb($b);this.g.onreadystatechange=q(this.La,this);try{this.G=!0,this.g.open(b,String(a),!0),this.G=!1;}catch(f){vd(this,f);return}a=c||\"\";c=new Map(this.headers);if(d)if(Object.getPrototypeOf(d)===Object.prototype)for(var e in d)c.set(e,d[e]);else if(\"function\"===\ntypeof d.keys&&\"function\"===typeof d.get)for(const f of d.keys())c.set(f,d.get(f));else throw Error(\"Unknown input type for opt_headers: \"+String(d));d=Array.from(c.keys()).find(f=>\"content-type\"==f.toLowerCase());e=l.FormData&&a instanceof l.FormData;!(0<=ka(ud,b))||d||e||c.set(\"Content-Type\",\"application/x-www-form-urlencoded;charset=utf-8\");for(const [f,h]of c)this.g.setRequestHeader(f,h);this.K&&(this.g.responseType=this.K);\"withCredentials\"in this.g&&this.g.withCredentials!==this.M&&(this.g.withCredentials=\nthis.M);try{wd(this),0<this.B&&((this.L=xd(this.g))?(this.g.timeout=this.B,this.g.ontimeout=q(this.ua,this)):this.A=yb(this.ua,this.B,this)),this.v=!0,this.g.send(a),this.v=!1;}catch(f){vd(this,f);}};function xd(a){return z&&\"number\"===typeof a.timeout&&void 0!==a.ontimeout}k.ua=function(){\"undefined\"!=typeof goog&&this.g&&(this.j=\"Timed out after \"+this.B+\"ms, aborting\",this.m=8,C(this,\"timeout\"),this.abort(8));};function vd(a,b){a.h=!1;a.g&&(a.l=!0,a.g.abort(),a.l=!1);a.j=b;a.m=5;yd(a);zd(a);}\nfunction yd(a){a.F||(a.F=!0,C(a,\"complete\"),C(a,\"error\"));}k.abort=function(a){this.g&&this.h&&(this.h=!1,this.l=!0,this.g.abort(),this.l=!1,this.m=a||7,C(this,\"complete\"),C(this,\"abort\"),zd(this));};k.N=function(){this.g&&(this.h&&(this.h=!1,this.l=!0,this.g.abort(),this.l=!1),zd(this,!0));P.$.N.call(this);};k.La=function(){this.s||(this.G||this.v||this.l?Ad(this):this.kb());};k.kb=function(){Ad(this);};\nfunction Ad(a){if(a.h&&\"undefined\"!=typeof goog&&(!a.C[1]||4!=H(a)||2!=a.da()))if(a.v&&4==H(a))yb(a.La,0,a);else if(C(a,\"readystatechange\"),4==H(a)){a.h=!1;try{const h=a.da();a:switch(h){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var b=!0;break a;default:b=!1;}var c;if(!(c=b)){var d;if(d=0===h){var e=String(a.I).match(Lc)[1]||null;!e&&l.self&&l.self.location&&(e=l.self.location.protocol.slice(0,-1));d=!td.test(e?e.toLowerCase():\"\");}c=d;}if(c)C(a,\"complete\"),C(a,\"success\");else {a.m=\n6;try{var f=2<H(a)?a.g.statusText:\"\";}catch(n){f=\"\";}a.j=f+\" [\"+a.da()+\"]\";yd(a);}}finally{zd(a);}}}function zd(a,b){if(a.g){wd(a);const c=a.g,d=a.C[0]?()=>{}:null;a.g=null;a.C=null;b||C(a,\"ready\");try{c.onreadystatechange=d;}catch(e){}}}function wd(a){a.g&&a.L&&(a.g.ontimeout=null);a.A&&(l.clearTimeout(a.A),a.A=null);}k.isActive=function(){return !!this.g};function H(a){return a.g?a.g.readyState:0}k.da=function(){try{return 2<H(this)?this.g.status:-1}catch(a){return -1}};\nk.ja=function(){try{return this.g?this.g.responseText:\"\"}catch(a){return \"\"}};k.Wa=function(a){if(this.g){var b=this.g.responseText;a&&0==b.indexOf(a)&&(b=b.substring(a.length));return rd(b)}};function mc(a){try{if(!a.g)return null;if(\"response\"in a.g)return a.g.response;switch(a.K){case sd:case \"text\":return a.g.responseText;case \"arraybuffer\":if(\"mozResponseArrayBuffer\"in a.g)return a.g.mozResponseArrayBuffer}return null}catch(b){return null}}\nfunction tc(a){const b={};a=(a.g&&2<=H(a)?a.g.getAllResponseHeaders()||\"\":\"\").split(\"\\r\\n\");for(let d=0;d<a.length;d++){if(x(a[d]))continue;var c=qb(a[d]);const e=c[0];c=c[1];if(\"string\"!==typeof c)continue;c=c.trim();const f=b[e]||[];b[e]=f;f.push(c);}Oa(b,function(d){return d.join(\", \")});}k.Ia=function(){return this.m};k.Sa=function(){return \"string\"===typeof this.j?this.j:String(this.j)};function Bd(a){let b=\"\";Na(a,function(c,d){b+=d;b+=\":\";b+=c;b+=\"\\r\\n\";});return b}function Cd(a,b,c){a:{for(d in c){var d=!1;break a}d=!0;}d||(c=Bd(c),\"string\"===typeof a?(null!=c&&encodeURIComponent(String(c))):K(a,b,c));}function Dd(a,b,c){return c&&c.internalChannelParams?c.internalChannelParams[a]||b:b}\nfunction Ed(a){this.Ga=0;this.j=[];this.l=new Gb;this.pa=this.wa=this.I=this.Y=this.g=this.Da=this.F=this.na=this.o=this.U=this.s=null;this.fb=this.W=0;this.cb=Dd(\"failFast\",!1,a);this.G=this.v=this.u=this.m=this.h=null;this.aa=!0;this.Fa=this.V=-1;this.ba=this.A=this.C=0;this.ab=Dd(\"baseRetryDelayMs\",5E3,a);this.hb=Dd(\"retryDelaySeedMs\",1E4,a);this.eb=Dd(\"forwardChannelMaxRetries\",2,a);this.xa=Dd(\"forwardChannelRequestTimeoutMs\",2E4,a);this.va=a&&a.xmlHttpFactory||void 0;this.Ha=a&&a.dc||!1;this.L=\nvoid 0;this.J=a&&a.supportsCrossDomainXhr||!1;this.K=\"\";this.i=new cd(a&&a.concurrentRequestLimit);this.Ja=new hd;this.P=a&&a.fastHandshake||!1;this.O=a&&a.encodeInitMessageHeaders||!1;this.P&&this.O&&(this.O=!1);this.bb=a&&a.bc||!1;a&&a.Ea&&this.l.Ea();a&&a.forceLongPolling&&(this.aa=!1);this.ca=!this.P&&this.aa&&a&&a.detectBufferingProxy||!1;this.qa=void 0;a&&a.longPollingTimeout&&0<a.longPollingTimeout&&(this.qa=a.longPollingTimeout);this.oa=void 0;this.S=0;this.M=!1;this.ma=this.B=null;}k=Ed.prototype;\nk.ra=8;k.H=1;function Hc(a){Fd(a);if(3==a.H){var b=a.W++,c=G(a.I);K(c,\"SID\",a.K);K(c,\"RID\",b);K(c,\"TYPE\",\"terminate\");Gd(a,c);b=new bc(a,a.l,b);b.L=2;b.v=hc(G(c));c=!1;if(l.navigator&&l.navigator.sendBeacon)try{c=l.navigator.sendBeacon(b.v.toString(),\"\");}catch(d){}!c&&l.Image&&((new Image).src=b.v,c=!0);c||(b.g=lc(b.l,null),b.g.ha(b.v));b.G=Date.now();jc(b);}Hd(a);}function zc(a){a.g&&(vc(a),a.g.cancel(),a.g=null);}\nfunction Fd(a){zc(a);a.u&&(l.clearTimeout(a.u),a.u=null);yc(a);a.i.cancel();a.m&&(\"number\"===typeof a.m&&l.clearTimeout(a.m),a.m=null);}function Gc(a){if(!ed(a.i)&&!a.m){a.m=!0;var b=a.Na;sb||vb();tb||(sb(),tb=!0);mb.add(b,a);a.C=0;}}function Id(a,b){if(Bc(a.i)>=a.i.j-(a.m?1:0))return !1;if(a.m)return a.j=b.F.concat(a.j),!0;if(1==a.H||2==a.H||a.C>=(a.cb?0:a.eb))return !1;a.m=Rb(q(a.Na,a,b),Jd(a,a.C));a.C++;return !0}\nk.Na=function(a){if(this.m)if(this.m=null,1==this.H){if(!a){this.W=Math.floor(1E5*Math.random());a=this.W++;const e=new bc(this,this.l,a);let f=this.s;this.U&&(f?(f=Pa(f),Ra(f,this.U)):f=this.U);null!==this.o||this.O||(e.I=f,f=null);if(this.P)a:{var b=0;for(var c=0;c<this.j.length;c++){b:{var d=this.j[c];if(\"__data__\"in d.map&&(d=d.map.__data__,\"string\"===typeof d)){d=d.length;break b}d=void 0;}if(void 0===d)break;b+=d;if(4096<b){b=c;break a}if(4096===b||c===this.j.length-1){b=c+1;break a}}b=1E3;}else b=\n1E3;b=Kd(this,e,b);c=G(this.I);K(c,\"RID\",a);K(c,\"CVER\",22);this.F&&K(c,\"X-HTTP-Session-Id\",this.F);Gd(this,c);f&&(this.O?b=\"headers=\"+encodeURIComponent(String(Bd(f)))+\"&\"+b:this.o&&Cd(c,this.o,f));Cc(this.i,e);this.bb&&K(c,\"TYPE\",\"init\");this.P?(K(c,\"$req\",b),K(c,\"SID\",\"null\"),e.aa=!0,gc(e,c,null)):gc(e,c,b);this.H=2;}}else 3==this.H&&(a?Ld(this,a):0==this.j.length||ed(this.i)||Ld(this));};\nfunction Ld(a,b){var c;b?c=b.m:c=a.W++;const d=G(a.I);K(d,\"SID\",a.K);K(d,\"RID\",c);K(d,\"AID\",a.V);Gd(a,d);a.o&&a.s&&Cd(d,a.o,a.s);c=new bc(a,a.l,c,a.C+1);null===a.o&&(c.I=a.s);b&&(a.j=b.F.concat(a.j));b=Kd(a,c,1E3);c.setTimeout(Math.round(.5*a.xa)+Math.round(.5*a.xa*Math.random()));Cc(a.i,c);gc(c,d,b);}function Gd(a,b){a.na&&Na(a.na,function(c,d){K(b,d,c);});a.h&&Kc({},function(c,d){K(b,d,c);});}\nfunction Kd(a,b,c){c=Math.min(a.j.length,c);var d=a.h?q(a.h.Va,a.h,a):null;a:{var e=a.j;let f=-1;for(;;){const h=[\"count=\"+c];-1==f?0<c?(f=e[0].g,h.push(\"ofs=\"+f)):f=0:h.push(\"ofs=\"+f);let n=!0;for(let t=0;t<c;t++){let m=e[t].g;const u=e[t].map;m-=f;if(0>m)f=Math.max(0,e[t].g-100),n=!1;else try{id(u,h,\"req\"+m+\"_\");}catch(L){d&&d(u);}}if(n){d=h.join(\"&\");break a}}}a=a.j.splice(0,c);b.F=a;return d}function Fc(a){if(!a.g&&!a.u){a.ba=1;var b=a.Ma;sb||vb();tb||(sb(),tb=!0);mb.add(b,a);a.A=0;}}\nfunction Ac(a){if(a.g||a.u||3<=a.A)return !1;a.ba++;a.u=Rb(q(a.Ma,a),Jd(a,a.A));a.A++;return !0}k.Ma=function(){this.u=null;Md(this);if(this.ca&&!(this.M||null==this.g||0>=this.S)){var a=2*this.S;this.l.info(\"BP detection timer enabled: \"+a);this.B=Rb(q(this.jb,this),a);}};k.jb=function(){this.B&&(this.B=null,this.l.info(\"BP detection timeout reached.\"),this.l.info(\"Buffering proxy detected and switch to long-polling!\"),this.G=!1,this.M=!0,F(10),zc(this),Md(this));};\nfunction vc(a){null!=a.B&&(l.clearTimeout(a.B),a.B=null);}function Md(a){a.g=new bc(a,a.l,\"rpc\",a.ba);null===a.o&&(a.g.I=a.s);a.g.O=0;var b=G(a.wa);K(b,\"RID\",\"rpc\");K(b,\"SID\",a.K);K(b,\"AID\",a.V);K(b,\"CI\",a.G?\"0\":\"1\");!a.G&&a.qa&&K(b,\"TO\",a.qa);K(b,\"TYPE\",\"xmlhttp\");Gd(a,b);a.o&&a.s&&Cd(b,a.o,a.s);a.L&&a.g.setTimeout(a.L);var c=a.g;a=a.pa;c.L=1;c.v=hc(G(b));c.s=null;c.S=!0;ic(c,a);}k.ib=function(){null!=this.v&&(this.v=null,zc(this),Ac(this),F(19));};\nfunction yc(a){null!=a.v&&(l.clearTimeout(a.v),a.v=null);}function sc(a,b){var c=null;if(a.g==b){yc(a);vc(a);a.g=null;var d=2;}else if(xc(a.i,b))c=b.F,Ec(a.i,b),d=1;else return;if(0!=a.H)if(b.i)if(1==d){c=b.s?b.s.length:0;b=Date.now()-b.G;var e=a.C;d=Mb();C(d,new Qb(d,c));Gc(a);}else Fc(a);else if(e=b.o,3==e||0==e&&0<b.ca||!(1==d&&Id(a,b)||2==d&&Ac(a)))switch(c&&0<c.length&&(b=a.i,b.i=b.i.concat(c)),e){case 1:J(a,5);break;case 4:J(a,10);break;case 3:J(a,6);break;default:J(a,2);}}\nfunction Jd(a,b){let c=a.ab+Math.floor(Math.random()*a.hb);a.isActive()||(c*=2);return c*b}function J(a,b){a.l.info(\"Error code \"+b);if(2==b){var c=null;a.h&&(c=null);var d=q(a.pb,a);c||(c=new M(\"//www.google.com/images/cleardot.gif\"),l.location&&\"http\"==l.location.protocol||Nc(c,\"https\"),hc(c));jd(c.toString(),d);}else F(2);a.H=0;a.h&&a.h.za(b);Hd(a);Fd(a);}k.pb=function(a){a?(this.l.info(\"Successfully pinged google.com\"),F(2)):(this.l.info(\"Failed to ping google.com\"),F(1));};\nfunction Hd(a){a.H=0;a.ma=[];if(a.h){const b=fd(a.i);if(0!=b.length||0!=a.j.length)na(a.ma,b),na(a.ma,a.j),a.i.i.length=0,ma(a.j),a.j.length=0;a.h.ya();}}function Dc(a,b,c){var d=c instanceof M?G(c):new M(c);if(\"\"!=d.g)b&&(d.g=b+\".\"+d.g),Oc(d,d.m);else {var e=l.location;d=e.protocol;b=b?b+\".\"+e.hostname:e.hostname;e=+e.port;var f=new M(null);d&&Nc(f,d);b&&(f.g=b);e&&Oc(f,e);c&&(f.l=c);d=f;}c=a.F;b=a.Da;c&&b&&K(d,c,b);K(d,\"VER\",a.ra);Gd(a,d);return d}\nfunction lc(a,b,c){if(b&&!a.J)throw Error(\"Can't create secondary domain capable XhrIo object.\");b=c&&a.Ha&&!a.va?new P(new ld({ob:!0})):new P(a.va);b.Oa(a.J);return b}k.isActive=function(){return !!this.h&&this.h.isActive(this)};function Nd(){}k=Nd.prototype;k.Ba=function(){};k.Aa=function(){};k.za=function(){};k.ya=function(){};k.isActive=function(){return !0};k.Va=function(){};function Od(){if(z&&!(10<=Number(Fa)))throw Error(\"Environmental error: no available transport.\");}Od.prototype.g=function(a,b){return new Q(a,b)};\nfunction Q(a,b){B.call(this);this.g=new Ed(b);this.l=a;this.h=b&&b.messageUrlParams||null;a=b&&b.messageHeaders||null;b&&b.clientProtocolHeaderRequired&&(a?a[\"X-Client-Protocol\"]=\"webchannel\":a={\"X-Client-Protocol\":\"webchannel\"});this.g.s=a;a=b&&b.initMessageHeaders||null;b&&b.messageContentType&&(a?a[\"X-WebChannel-Content-Type\"]=b.messageContentType:a={\"X-WebChannel-Content-Type\":b.messageContentType});b&&b.Ca&&(a?a[\"X-WebChannel-Client-Profile\"]=b.Ca:a={\"X-WebChannel-Client-Profile\":b.Ca});this.g.U=\na;(a=b&&b.cc)&&!x(a)&&(this.g.o=a);this.A=b&&b.supportsCrossDomainXhr||!1;this.v=b&&b.sendRawJson||!1;(b=b&&b.httpSessionIdParam)&&!x(b)&&(this.g.F=b,a=this.h,null!==a&&b in a&&(a=this.h,b in a&&delete a[b]));this.j=new R(this);}r(Q,B);Q.prototype.m=function(){this.g.h=this.j;this.A&&(this.g.J=!0);var a=this.g,b=this.l,c=this.h||void 0;F(0);a.Y=b;a.na=c||{};a.G=a.aa;a.I=Dc(a,null,a.Y);Gc(a);};Q.prototype.close=function(){Hc(this.g);};\nQ.prototype.u=function(a){var b=this.g;if(\"string\"===typeof a){var c={};c.__data__=a;a=c;}else this.v&&(c={},c.__data__=jb(a),a=c);b.j.push(new bd(b.fb++,a));3==b.H&&Gc(b);};Q.prototype.N=function(){this.g.h=null;delete this.j;Hc(this.g);delete this.g;Q.$.N.call(this);};\nfunction Pd(a){Yb.call(this);a.__headers__&&(this.headers=a.__headers__,this.statusCode=a.__status__,delete a.__headers__,delete a.__status__);var b=a.__sm__;if(b){a:{for(const c in b){a=c;break a}a=void 0;}if(this.i=a)a=this.i,b=null!==b&&a in b?b[a]:void 0;this.data=b;}else this.data=a;}r(Pd,Yb);function Qd(){Zb.call(this);this.status=1;}r(Qd,Zb);function R(a){this.g=a;}r(R,Nd);R.prototype.Ba=function(){C(this.g,\"a\");};R.prototype.Aa=function(a){C(this.g,new Pd(a));};\nR.prototype.za=function(a){C(this.g,new Qd());};R.prototype.ya=function(){C(this.g,\"b\");};function Rd(){this.blockSize=-1;}function S(){this.blockSize=-1;this.blockSize=64;this.g=Array(4);this.m=Array(this.blockSize);this.i=this.h=0;this.reset();}r(S,Rd);S.prototype.reset=function(){this.g[0]=1732584193;this.g[1]=4023233417;this.g[2]=2562383102;this.g[3]=271733878;this.i=this.h=0;};\nfunction Sd(a,b,c){c||(c=0);var d=Array(16);if(\"string\"===typeof b)for(var e=0;16>e;++e)d[e]=b.charCodeAt(c++)|b.charCodeAt(c++)<<8|b.charCodeAt(c++)<<16|b.charCodeAt(c++)<<24;else for(e=0;16>e;++e)d[e]=b[c++]|b[c++]<<8|b[c++]<<16|b[c++]<<24;b=a.g[0];c=a.g[1];e=a.g[2];var f=a.g[3];var h=b+(f^c&(e^f))+d[0]+3614090360&4294967295;b=c+(h<<7&4294967295|h>>>25);h=f+(e^b&(c^e))+d[1]+3905402710&4294967295;f=b+(h<<12&4294967295|h>>>20);h=e+(c^f&(b^c))+d[2]+606105819&4294967295;e=f+(h<<17&4294967295|h>>>15);\nh=c+(b^e&(f^b))+d[3]+3250441966&4294967295;c=e+(h<<22&4294967295|h>>>10);h=b+(f^c&(e^f))+d[4]+4118548399&4294967295;b=c+(h<<7&4294967295|h>>>25);h=f+(e^b&(c^e))+d[5]+1200080426&4294967295;f=b+(h<<12&4294967295|h>>>20);h=e+(c^f&(b^c))+d[6]+2821735955&4294967295;e=f+(h<<17&4294967295|h>>>15);h=c+(b^e&(f^b))+d[7]+4249261313&4294967295;c=e+(h<<22&4294967295|h>>>10);h=b+(f^c&(e^f))+d[8]+1770035416&4294967295;b=c+(h<<7&4294967295|h>>>25);h=f+(e^b&(c^e))+d[9]+2336552879&4294967295;f=b+(h<<12&4294967295|\nh>>>20);h=e+(c^f&(b^c))+d[10]+4294925233&4294967295;e=f+(h<<17&4294967295|h>>>15);h=c+(b^e&(f^b))+d[11]+2304563134&4294967295;c=e+(h<<22&4294967295|h>>>10);h=b+(f^c&(e^f))+d[12]+1804603682&4294967295;b=c+(h<<7&4294967295|h>>>25);h=f+(e^b&(c^e))+d[13]+4254626195&4294967295;f=b+(h<<12&4294967295|h>>>20);h=e+(c^f&(b^c))+d[14]+2792965006&4294967295;e=f+(h<<17&4294967295|h>>>15);h=c+(b^e&(f^b))+d[15]+1236535329&4294967295;c=e+(h<<22&4294967295|h>>>10);h=b+(e^f&(c^e))+d[1]+4129170786&4294967295;b=c+(h<<\n5&4294967295|h>>>27);h=f+(c^e&(b^c))+d[6]+3225465664&4294967295;f=b+(h<<9&4294967295|h>>>23);h=e+(b^c&(f^b))+d[11]+643717713&4294967295;e=f+(h<<14&4294967295|h>>>18);h=c+(f^b&(e^f))+d[0]+3921069994&4294967295;c=e+(h<<20&4294967295|h>>>12);h=b+(e^f&(c^e))+d[5]+3593408605&4294967295;b=c+(h<<5&4294967295|h>>>27);h=f+(c^e&(b^c))+d[10]+38016083&4294967295;f=b+(h<<9&4294967295|h>>>23);h=e+(b^c&(f^b))+d[15]+3634488961&4294967295;e=f+(h<<14&4294967295|h>>>18);h=c+(f^b&(e^f))+d[4]+3889429448&4294967295;c=\ne+(h<<20&4294967295|h>>>12);h=b+(e^f&(c^e))+d[9]+568446438&4294967295;b=c+(h<<5&4294967295|h>>>27);h=f+(c^e&(b^c))+d[14]+3275163606&4294967295;f=b+(h<<9&4294967295|h>>>23);h=e+(b^c&(f^b))+d[3]+4107603335&4294967295;e=f+(h<<14&4294967295|h>>>18);h=c+(f^b&(e^f))+d[8]+1163531501&4294967295;c=e+(h<<20&4294967295|h>>>12);h=b+(e^f&(c^e))+d[13]+2850285829&4294967295;b=c+(h<<5&4294967295|h>>>27);h=f+(c^e&(b^c))+d[2]+4243563512&4294967295;f=b+(h<<9&4294967295|h>>>23);h=e+(b^c&(f^b))+d[7]+1735328473&4294967295;\ne=f+(h<<14&4294967295|h>>>18);h=c+(f^b&(e^f))+d[12]+2368359562&4294967295;c=e+(h<<20&4294967295|h>>>12);h=b+(c^e^f)+d[5]+4294588738&4294967295;b=c+(h<<4&4294967295|h>>>28);h=f+(b^c^e)+d[8]+2272392833&4294967295;f=b+(h<<11&4294967295|h>>>21);h=e+(f^b^c)+d[11]+1839030562&4294967295;e=f+(h<<16&4294967295|h>>>16);h=c+(e^f^b)+d[14]+4259657740&4294967295;c=e+(h<<23&4294967295|h>>>9);h=b+(c^e^f)+d[1]+2763975236&4294967295;b=c+(h<<4&4294967295|h>>>28);h=f+(b^c^e)+d[4]+1272893353&4294967295;f=b+(h<<11&4294967295|\nh>>>21);h=e+(f^b^c)+d[7]+4139469664&4294967295;e=f+(h<<16&4294967295|h>>>16);h=c+(e^f^b)+d[10]+3200236656&4294967295;c=e+(h<<23&4294967295|h>>>9);h=b+(c^e^f)+d[13]+681279174&4294967295;b=c+(h<<4&4294967295|h>>>28);h=f+(b^c^e)+d[0]+3936430074&4294967295;f=b+(h<<11&4294967295|h>>>21);h=e+(f^b^c)+d[3]+3572445317&4294967295;e=f+(h<<16&4294967295|h>>>16);h=c+(e^f^b)+d[6]+76029189&4294967295;c=e+(h<<23&4294967295|h>>>9);h=b+(c^e^f)+d[9]+3654602809&4294967295;b=c+(h<<4&4294967295|h>>>28);h=f+(b^c^e)+d[12]+\n3873151461&4294967295;f=b+(h<<11&4294967295|h>>>21);h=e+(f^b^c)+d[15]+530742520&4294967295;e=f+(h<<16&4294967295|h>>>16);h=c+(e^f^b)+d[2]+3299628645&4294967295;c=e+(h<<23&4294967295|h>>>9);h=b+(e^(c|~f))+d[0]+4096336452&4294967295;b=c+(h<<6&4294967295|h>>>26);h=f+(c^(b|~e))+d[7]+1126891415&4294967295;f=b+(h<<10&4294967295|h>>>22);h=e+(b^(f|~c))+d[14]+2878612391&4294967295;e=f+(h<<15&4294967295|h>>>17);h=c+(f^(e|~b))+d[5]+4237533241&4294967295;c=e+(h<<21&4294967295|h>>>11);h=b+(e^(c|~f))+d[12]+1700485571&\n4294967295;b=c+(h<<6&4294967295|h>>>26);h=f+(c^(b|~e))+d[3]+2399980690&4294967295;f=b+(h<<10&4294967295|h>>>22);h=e+(b^(f|~c))+d[10]+4293915773&4294967295;e=f+(h<<15&4294967295|h>>>17);h=c+(f^(e|~b))+d[1]+2240044497&4294967295;c=e+(h<<21&4294967295|h>>>11);h=b+(e^(c|~f))+d[8]+1873313359&4294967295;b=c+(h<<6&4294967295|h>>>26);h=f+(c^(b|~e))+d[15]+4264355552&4294967295;f=b+(h<<10&4294967295|h>>>22);h=e+(b^(f|~c))+d[6]+2734768916&4294967295;e=f+(h<<15&4294967295|h>>>17);h=c+(f^(e|~b))+d[13]+1309151649&\n4294967295;c=e+(h<<21&4294967295|h>>>11);h=b+(e^(c|~f))+d[4]+4149444226&4294967295;b=c+(h<<6&4294967295|h>>>26);h=f+(c^(b|~e))+d[11]+3174756917&4294967295;f=b+(h<<10&4294967295|h>>>22);h=e+(b^(f|~c))+d[2]+718787259&4294967295;e=f+(h<<15&4294967295|h>>>17);h=c+(f^(e|~b))+d[9]+3951481745&4294967295;a.g[0]=a.g[0]+b&4294967295;a.g[1]=a.g[1]+(e+(h<<21&4294967295|h>>>11))&4294967295;a.g[2]=a.g[2]+e&4294967295;a.g[3]=a.g[3]+f&4294967295;}\nS.prototype.j=function(a,b){void 0===b&&(b=a.length);for(var c=b-this.blockSize,d=this.m,e=this.h,f=0;f<b;){if(0==e)for(;f<=c;)Sd(this,a,f),f+=this.blockSize;if(\"string\"===typeof a)for(;f<b;){if(d[e++]=a.charCodeAt(f++),e==this.blockSize){Sd(this,d);e=0;break}}else for(;f<b;)if(d[e++]=a[f++],e==this.blockSize){Sd(this,d);e=0;break}}this.h=e;this.i+=b;};\nS.prototype.l=function(){var a=Array((56>this.h?this.blockSize:2*this.blockSize)-this.h);a[0]=128;for(var b=1;b<a.length-8;++b)a[b]=0;var c=8*this.i;for(b=a.length-8;b<a.length;++b)a[b]=c&255,c/=256;this.j(a);a=Array(16);for(b=c=0;4>b;++b)for(var d=0;32>d;d+=8)a[c++]=this.g[b]>>>d&255;return a};function T(a,b){this.h=b;for(var c=[],d=!0,e=a.length-1;0<=e;e--){var f=a[e]|0;d&&f==b||(c[e]=f,d=!1);}this.g=c;}var sa={};function Td(a){return -128<=a&&128>a?ra(a,function(b){return new T([b|0],0>b?-1:0)}):new T([a|0],0>a?-1:0)}function U(a){if(isNaN(a)||!isFinite(a))return V;if(0>a)return W(U(-a));for(var b=[],c=1,d=0;a>=c;d++)b[d]=a/c|0,c*=Ud;return new T(b,0)}\nfunction Vd(a,b){if(0==a.length)throw Error(\"number format error: empty string\");b=b||10;if(2>b||36<b)throw Error(\"radix out of range: \"+b);if(\"-\"==a.charAt(0))return W(Vd(a.substring(1),b));if(0<=a.indexOf(\"-\"))throw Error('number format error: interior \"-\" character');for(var c=U(Math.pow(b,8)),d=V,e=0;e<a.length;e+=8){var f=Math.min(8,a.length-e),h=parseInt(a.substring(e,e+f),b);8>f?(f=U(Math.pow(b,f)),d=d.R(f).add(U(h))):(d=d.R(c),d=d.add(U(h)));}return d}\nvar Ud=4294967296,V=Td(0),Wd=Td(1),Xd=Td(16777216);k=T.prototype;k.ea=function(){if(X(this))return -W(this).ea();for(var a=0,b=1,c=0;c<this.g.length;c++){var d=this.D(c);a+=(0<=d?d:Ud+d)*b;b*=Ud;}return a};\nk.toString=function(a){a=a||10;if(2>a||36<a)throw Error(\"radix out of range: \"+a);if(Y(this))return \"0\";if(X(this))return \"-\"+W(this).toString(a);for(var b=U(Math.pow(a,6)),c=this,d=\"\";;){var e=Yd(c,b).g;c=Zd(c,e.R(b));var f=((0<c.g.length?c.g[0]:c.h)>>>0).toString(a);c=e;if(Y(c))return f+d;for(;6>f.length;)f=\"0\"+f;d=f+d;}};k.D=function(a){return 0>a?0:a<this.g.length?this.g[a]:this.h};function Y(a){if(0!=a.h)return !1;for(var b=0;b<a.g.length;b++)if(0!=a.g[b])return !1;return !0}\nfunction X(a){return -1==a.h}k.X=function(a){a=Zd(this,a);return X(a)?-1:Y(a)?0:1};function W(a){for(var b=a.g.length,c=[],d=0;d<b;d++)c[d]=~a.g[d];return (new T(c,~a.h)).add(Wd)}k.abs=function(){return X(this)?W(this):this};k.add=function(a){for(var b=Math.max(this.g.length,a.g.length),c=[],d=0,e=0;e<=b;e++){var f=d+(this.D(e)&65535)+(a.D(e)&65535),h=(f>>>16)+(this.D(e)>>>16)+(a.D(e)>>>16);d=h>>>16;f&=65535;h&=65535;c[e]=h<<16|f;}return new T(c,c[c.length-1]&-2147483648?-1:0)};\nfunction Zd(a,b){return a.add(W(b))}\nk.R=function(a){if(Y(this)||Y(a))return V;if(X(this))return X(a)?W(this).R(W(a)):W(W(this).R(a));if(X(a))return W(this.R(W(a)));if(0>this.X(Xd)&&0>a.X(Xd))return U(this.ea()*a.ea());for(var b=this.g.length+a.g.length,c=[],d=0;d<2*b;d++)c[d]=0;for(d=0;d<this.g.length;d++)for(var e=0;e<a.g.length;e++){var f=this.D(d)>>>16,h=this.D(d)&65535,n=a.D(e)>>>16,t=a.D(e)&65535;c[2*d+2*e]+=h*t;$d(c,2*d+2*e);c[2*d+2*e+1]+=f*t;$d(c,2*d+2*e+1);c[2*d+2*e+1]+=h*n;$d(c,2*d+2*e+1);c[2*d+2*e+2]+=f*n;$d(c,2*d+2*e+2);}for(d=\n0;d<b;d++)c[d]=c[2*d+1]<<16|c[2*d];for(d=b;d<2*b;d++)c[d]=0;return new T(c,0)};function $d(a,b){for(;(a[b]&65535)!=a[b];)a[b+1]+=a[b]>>>16,a[b]&=65535,b++;}function ae(a,b){this.g=a;this.h=b;}\nfunction Yd(a,b){if(Y(b))throw Error(\"division by zero\");if(Y(a))return new ae(V,V);if(X(a))return b=Yd(W(a),b),new ae(W(b.g),W(b.h));if(X(b))return b=Yd(a,W(b)),new ae(W(b.g),b.h);if(30<a.g.length){if(X(a)||X(b))throw Error(\"slowDivide_ only works with positive integers.\");for(var c=Wd,d=b;0>=d.X(a);)c=be(c),d=be(d);var e=Z(c,1),f=Z(d,1);d=Z(d,2);for(c=Z(c,2);!Y(d);){var h=f.add(d);0>=h.X(a)&&(e=e.add(c),f=h);d=Z(d,1);c=Z(c,1);}b=Zd(a,e.R(b));return new ae(e,b)}for(e=V;0<=a.X(b);){c=Math.max(1,Math.floor(a.ea()/\nb.ea()));d=Math.ceil(Math.log(c)/Math.LN2);d=48>=d?1:Math.pow(2,d-48);f=U(c);for(h=f.R(b);X(h)||0<h.X(a);)c-=d,f=U(c),h=f.R(b);Y(f)&&(f=Wd);e=e.add(f);a=Zd(a,h);}return new ae(e,a)}k.gb=function(a){return Yd(this,a).h};k.and=function(a){for(var b=Math.max(this.g.length,a.g.length),c=[],d=0;d<b;d++)c[d]=this.D(d)&a.D(d);return new T(c,this.h&a.h)};k.or=function(a){for(var b=Math.max(this.g.length,a.g.length),c=[],d=0;d<b;d++)c[d]=this.D(d)|a.D(d);return new T(c,this.h|a.h)};\nk.xor=function(a){for(var b=Math.max(this.g.length,a.g.length),c=[],d=0;d<b;d++)c[d]=this.D(d)^a.D(d);return new T(c,this.h^a.h)};function be(a){for(var b=a.g.length+1,c=[],d=0;d<b;d++)c[d]=a.D(d)<<1|a.D(d-1)>>>31;return new T(c,a.h)}function Z(a,b){var c=b>>5;b%=32;for(var d=a.g.length-c,e=[],f=0;f<d;f++)e[f]=0<b?a.D(f+c)>>>b|a.D(f+c+1)<<32-b:a.D(f+c);return new T(e,a.h)}Od.prototype.createWebChannel=Od.prototype.g;Q.prototype.send=Q.prototype.u;Q.prototype.open=Q.prototype.m;Q.prototype.close=Q.prototype.close;Sb.NO_ERROR=0;Sb.TIMEOUT=8;Sb.HTTP_ERROR=6;Tb.COMPLETE=\"complete\";Wb.EventType=Xb;Xb.OPEN=\"a\";Xb.CLOSE=\"b\";Xb.ERROR=\"c\";Xb.MESSAGE=\"d\";B.prototype.listen=B.prototype.O;P.prototype.listenOnce=P.prototype.P;P.prototype.getLastError=P.prototype.Sa;P.prototype.getLastErrorCode=P.prototype.Ia;P.prototype.getStatus=P.prototype.da;P.prototype.getResponseJson=P.prototype.Wa;\nP.prototype.getResponseText=P.prototype.ja;P.prototype.send=P.prototype.ha;P.prototype.setWithCredentials=P.prototype.Oa;S.prototype.digest=S.prototype.l;S.prototype.reset=S.prototype.reset;S.prototype.update=S.prototype.j;T.prototype.add=T.prototype.add;T.prototype.multiply=T.prototype.R;T.prototype.modulo=T.prototype.gb;T.prototype.compare=T.prototype.X;T.prototype.toNumber=T.prototype.ea;T.prototype.toString=T.prototype.toString;T.prototype.getBits=T.prototype.D;T.fromNumber=U;T.fromString=Vd;\nvar createWebChannelTransport = esm.createWebChannelTransport=function(){return new Od};var getStatEventTarget = esm.getStatEventTarget=function(){return Mb()};var ErrorCode = esm.ErrorCode=Sb;var EventType = esm.EventType=Tb;var Event = esm.Event=E;var Stat = esm.Stat={xb:0,Ab:1,Bb:2,Ub:3,Zb:4,Wb:5,Xb:6,Vb:7,Tb:8,Yb:9,PROXY:10,NOPROXY:11,Rb:12,Nb:13,Ob:14,Mb:15,Pb:16,Qb:17,tb:18,sb:19,ub:20};var FetchXmlHttpFactory = esm.FetchXmlHttpFactory=ld;var WebChannel = esm.WebChannel=Wb;var XhrIo = esm.XhrIo=P;var Md5 = esm.Md5=S;var Integer = esm.Integer=T;\n\nexport { ErrorCode, Event, EventType, FetchXmlHttpFactory, Integer, Md5, Stat, WebChannel, XhrIo, createWebChannelTransport, esm as default, getStatEventTarget };\n//# sourceMappingURL=index.esm2017.js.map\n","import { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { FirebaseError, createMockUserToken, getModularInstance, deepEqual, getDefaultEmulatorHostnameAndPort, getUA, isIndexedDBAvailable, isSafari } from '@firebase/util';\nimport { Integer, XhrIo, EventType, ErrorCode, createWebChannelTransport, getStatEventTarget, FetchXmlHttpFactory, WebChannel, Event, Stat, Md5 } from '@firebase/webchannel-wrapper';\n\nconst b = \"@firebase/firestore\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass V {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ V.UNAUTHENTICATED = new V(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nV.GOOGLE_CREDENTIALS = new V(\"google-credentials-uid\"), V.FIRST_PARTY = new V(\"first-party-uid\"), \nV.MOCK_USER = new V(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet S = \"9.23.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst D = new Logger(\"@firebase/firestore\");\n\n// Helper methods are needed because variables can't be exported as read/write\nfunction C() {\n    return D.logLevel;\n}\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function x(t) {\n    D.setLogLevel(t);\n}\n\nfunction N(t, ...e) {\n    if (D.logLevel <= LogLevel.DEBUG) {\n        const n = e.map($);\n        D.debug(`Firestore (${S}): ${t}`, ...n);\n    }\n}\n\nfunction k(t, ...e) {\n    if (D.logLevel <= LogLevel.ERROR) {\n        const n = e.map($);\n        D.error(`Firestore (${S}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function M(t, ...e) {\n    if (D.logLevel <= LogLevel.WARN) {\n        const n = e.map($);\n        D.warn(`Firestore (${S}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function $(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function O(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${S}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw k(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function F(t, e) {\n    t || O();\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * The code of callsites invoking this function are stripped out in production\n * builds. Any side-effects of code within the debugAssert() invocation will not\n * happen in this case.\n *\n * @internal\n */ function B(t, e) {\n    t || O();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function L(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const q = {\n    // Causes are copied from:\n    // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n    /** Not an error; returned on success. */\n    OK: \"ok\",\n    /** The operation was cancelled (typically by the caller). */\n    CANCELLED: \"cancelled\",\n    /** Unknown error or an error from a different error domain. */\n    UNKNOWN: \"unknown\",\n    /**\n     * Client specified an invalid argument. Note that this differs from\n     * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are\n     * problematic regardless of the state of the system (e.g., a malformed file\n     * name).\n     */\n    INVALID_ARGUMENT: \"invalid-argument\",\n    /**\n     * Deadline expired before operation could complete. For operations that\n     * change the state of the system, this error may be returned even if the\n     * operation has completed successfully. For example, a successful response\n     * from a server could have been delayed long enough for the deadline to\n     * expire.\n     */\n    DEADLINE_EXCEEDED: \"deadline-exceeded\",\n    /** Some requested entity (e.g., file or directory) was not found. */\n    NOT_FOUND: \"not-found\",\n    /**\n     * Some entity that we attempted to create (e.g., file or directory) already\n     * exists.\n     */\n    ALREADY_EXISTS: \"already-exists\",\n    /**\n     * The caller does not have permission to execute the specified operation.\n     * PERMISSION_DENIED must not be used for rejections caused by exhausting\n     * some resource (use RESOURCE_EXHAUSTED instead for those errors).\n     * PERMISSION_DENIED must not be used if the caller can not be identified\n     * (use UNAUTHENTICATED instead for those errors).\n     */\n    PERMISSION_DENIED: \"permission-denied\",\n    /**\n     * The request does not have valid authentication credentials for the\n     * operation.\n     */\n    UNAUTHENTICATED: \"unauthenticated\",\n    /**\n     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\n     * entire file system is out of space.\n     */\n    RESOURCE_EXHAUSTED: \"resource-exhausted\",\n    /**\n     * Operation was rejected because the system is not in a state required for\n     * the operation's execution. For example, directory to be deleted may be\n     * non-empty, an rmdir operation is applied to a non-directory, etc.\n     *\n     * A litmus test that may help a service implementor in deciding\n     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n     *  (a) Use UNAVAILABLE if the client can retry just the failing call.\n     *  (b) Use ABORTED if the client should retry at a higher-level\n     *      (e.g., restarting a read-modify-write sequence).\n     *  (c) Use FAILED_PRECONDITION if the client should not retry until\n     *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\n     *      fails because the directory is non-empty, FAILED_PRECONDITION\n     *      should be returned since the client should not retry unless\n     *      they have first fixed up the directory by deleting files from it.\n     *  (d) Use FAILED_PRECONDITION if the client performs conditional\n     *      REST Get/Update/Delete on a resource and the resource on the\n     *      server does not match the condition. E.g., conflicting\n     *      read-modify-write on the same resource.\n     */\n    FAILED_PRECONDITION: \"failed-precondition\",\n    /**\n     * The operation was aborted, typically due to a concurrency issue like\n     * sequencer check failures, transaction aborts, etc.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    ABORTED: \"aborted\",\n    /**\n     * Operation was attempted past the valid range. E.g., seeking or reading\n     * past end of file.\n     *\n     * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed\n     * if the system state changes. For example, a 32-bit file system will\n     * generate INVALID_ARGUMENT if asked to read at an offset that is not in the\n     * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from\n     * an offset past the current file size.\n     *\n     * There is a fair bit of overlap between FAILED_PRECONDITION and\n     * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)\n     * when it applies so that callers who are iterating through a space can\n     * easily look for an OUT_OF_RANGE error to detect when they are done.\n     */\n    OUT_OF_RANGE: \"out-of-range\",\n    /** Operation is not implemented or not supported/enabled in this service. */\n    UNIMPLEMENTED: \"unimplemented\",\n    /**\n     * Internal errors. Means some invariants expected by underlying System has\n     * been broken. If you see one of these errors, Something is very broken.\n     */\n    INTERNAL: \"internal\",\n    /**\n     * The service is currently unavailable. This is a most likely a transient\n     * condition and may be corrected by retrying with a backoff.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    UNAVAILABLE: \"unavailable\",\n    /** Unrecoverable data loss or corruption. */\n    DATA_LOSS: \"data-loss\"\n};\n\n/** An error returned by a Firestore operation. */ class U extends FirebaseError {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class K {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class G {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class Q {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(V.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class j {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\nclass z {\n    constructor(t) {\n        this.t = t, \n        /** Tracks the current User. */\n        this.currentUser = V.UNAUTHENTICATED, \n        /**\n         * Counter used to detect if the token changed while a getToken request was\n         * outstanding.\n         */\n        this.i = 0, this.forceRefresh = !1, this.auth = null;\n    }\n    start(t, e) {\n        let n = this.i;\n        // A change listener that prevents double-firing for the same token change.\n                const s = t => this.i !== n ? (n = this.i, e(t)) : Promise.resolve();\n        // A promise that can be waited on to block on the next token change.\n        // This promise is re-created after each change.\n                let i = new K;\n        this.o = () => {\n            this.i++, this.currentUser = this.u(), i.resolve(), i = new K, t.enqueueRetryable((() => s(this.currentUser)));\n        };\n        const r = () => {\n            const e = i;\n            t.enqueueRetryable((async () => {\n                await e.promise, await s(this.currentUser);\n            }));\n        }, o = t => {\n            N(\"FirebaseAuthCredentialsProvider\", \"Auth detected\"), this.auth = t, this.auth.addAuthTokenListener(this.o), \n            r();\n        };\n        this.t.onInit((t => o(t))), \n        // Our users can initialize Auth right after Firestore, so we give it\n        // a chance to register itself with the component framework before we\n        // determine whether to start up in unauthenticated mode.\n        setTimeout((() => {\n            if (!this.auth) {\n                const t = this.t.getImmediate({\n                    optional: !0\n                });\n                t ? o(t) : (\n                // If auth is still not available, proceed with `null` user\n                N(\"FirebaseAuthCredentialsProvider\", \"Auth not yet detected\"), i.resolve(), i = new K);\n            }\n        }), 0), r();\n    }\n    getToken() {\n        // Take note of the current value of the tokenCounter so that this method\n        // can fail (with an ABORTED error) if there is a token change while the\n        // request is outstanding.\n        const t = this.i, e = this.forceRefresh;\n        return this.forceRefresh = !1, this.auth ? this.auth.getToken(e).then((e => \n        // Cancel the request since the token changed while the request was\n        // outstanding so the response is potentially for a previous user (which\n        // user, we can't be sure).\n        this.i !== t ? (N(\"FirebaseAuthCredentialsProvider\", \"getToken aborted due to token change.\"), \n        this.getToken()) : e ? (F(\"string\" == typeof e.accessToken), new G(e.accessToken, this.currentUser)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {\n        this.forceRefresh = !0;\n    }\n    shutdown() {\n        this.auth && this.auth.removeAuthTokenListener(this.o);\n    }\n    // Auth.getUid() can return null even with a user logged in. It is because\n    // getUid() is synchronous, but the auth code populating Uid is asynchronous.\n    // This method should only be called in the AuthTokenListener callback\n    // to guarantee to get the actual user.\n    u() {\n        const t = this.auth && this.auth.getUid();\n        return F(null === t || \"string\" == typeof t), new V(t);\n    }\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class W {\n    constructor(t, e, n) {\n        this.h = t, this.l = e, this.m = n, this.type = \"FirstParty\", this.user = V.FIRST_PARTY, \n        this.g = new Map;\n    }\n    /**\n     * Gets an authorization token, using a provided factory function, or return\n     * null.\n     */    p() {\n        return this.m ? this.m() : null;\n    }\n    get headers() {\n        this.g.set(\"X-Goog-AuthUser\", this.h);\n        // Use array notation to prevent minification\n        const t = this.p();\n        return t && this.g.set(\"Authorization\", t), this.l && this.g.set(\"X-Goog-Iam-Authorization-Token\", this.l), \n        this.g;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class H {\n    constructor(t, e, n) {\n        this.h = t, this.l = e, this.m = n;\n    }\n    getToken() {\n        return Promise.resolve(new W(this.h, this.l, this.m));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(V.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass J {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\nclass Y {\n    constructor(t) {\n        this.I = t, this.forceRefresh = !1, this.appCheck = null, this.T = null;\n    }\n    start(t, e) {\n        const n = t => {\n            null != t.error && N(\"FirebaseAppCheckTokenProvider\", `Error getting App Check token; using placeholder token instead. Error: ${t.error.message}`);\n            const n = t.token !== this.T;\n            return this.T = t.token, N(\"FirebaseAppCheckTokenProvider\", `Received ${n ? \"new\" : \"existing\"} token.`), \n            n ? e(t.token) : Promise.resolve();\n        };\n        this.o = e => {\n            t.enqueueRetryable((() => n(e)));\n        };\n        const s = t => {\n            N(\"FirebaseAppCheckTokenProvider\", \"AppCheck detected\"), this.appCheck = t, this.appCheck.addTokenListener(this.o);\n        };\n        this.I.onInit((t => s(t))), \n        // Our users can initialize AppCheck after Firestore, so we give it\n        // a chance to register itself with the component framework.\n        setTimeout((() => {\n            if (!this.appCheck) {\n                const t = this.I.getImmediate({\n                    optional: !0\n                });\n                t ? s(t) : \n                // If AppCheck is still not available, proceed without it.\n                N(\"FirebaseAppCheckTokenProvider\", \"AppCheck not yet detected\");\n            }\n        }), 0);\n    }\n    getToken() {\n        const t = this.forceRefresh;\n        return this.forceRefresh = !1, this.appCheck ? this.appCheck.getToken(t).then((t => t ? (F(\"string\" == typeof t.token), \n        this.T = t.token, new J(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {\n        this.forceRefresh = !0;\n    }\n    shutdown() {\n        this.appCheck && this.appCheck.removeTokenListener(this.o);\n    }\n}\n\n/**\n * An AppCheck token provider that always yields an empty token.\n * @internal\n */ class X {\n    getToken() {\n        return Promise.resolve(new J(\"\"));\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction Z(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class tt {\n    static A() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const s = Z(40);\n            for (let i = 0; i < s.length; ++i) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && s[i] < e && (n += t.charAt(s[i] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction et(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function nt(t, e, n) {\n    return t.length === e.length && t.every(((t, s) => n(t, e[s])));\n}\n\n/**\n * Returns the immediate lexicographically-following string. This is useful to\n * construct an inclusive range for indexeddb iterators.\n */ function st(t) {\n    // Return the input string, with an additional NUL byte appended.\n    return t + \"\\0\";\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass it {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(q.INVALID_ARGUMENT, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(q.INVALID_ARGUMENT, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(q.INVALID_ARGUMENT, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(q.INVALID_ARGUMENT, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return it.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return it.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new it(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? et(this.nanoseconds, t.nanoseconds) : et(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class rt {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new rt(t);\n    }\n    static min() {\n        return new rt(new it(0, 0));\n    }\n    static max() {\n        return new rt(new it(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass ot {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && O(), void 0 === n ? n = t.length - e : n > t.length - e && O(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === ot.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof ot ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let s = 0; s < n; s++) {\n            const n = t.get(s), i = e.get(s);\n            if (n < i) return -1;\n            if (n > i) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class ut extends ot {\n    construct(t, e, n) {\n        return new ut(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(q.INVALID_ARGUMENT, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new ut(e);\n    }\n    static emptyPath() {\n        return new ut([]);\n    }\n}\n\nconst ct = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class at extends ot {\n    construct(t, e, n) {\n        return new at(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return ct.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        at.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new at([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", s = 0;\n        const i = () => {\n            if (0 === n.length) throw new U(q.INVALID_ARGUMENT, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let r = !1;\n        for (;s < t.length; ) {\n            const e = t[s];\n            if (\"\\\\\" === e) {\n                if (s + 1 === t.length) throw new U(q.INVALID_ARGUMENT, \"Path has trailing escape character: \" + t);\n                const e = t[s + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(q.INVALID_ARGUMENT, \"Path has invalid escape sequence: \" + t);\n                n += e, s += 2;\n            } else \"`\" === e ? (r = !r, s++) : \".\" !== e || r ? (n += e, s++) : (i(), s++);\n        }\n        if (i(), r) throw new U(q.INVALID_ARGUMENT, \"Unterminated ` in path: \" + t);\n        return new at(e);\n    }\n    static emptyPath() {\n        return new at([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class ht {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new ht(ut.fromString(t));\n    }\n    static fromName(t) {\n        return new ht(ut.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new ht(ut.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === ut.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return ut.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new ht(new ut(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The initial mutation batch id for each index. Gets updated during index\n * backfill.\n */\n/**\n * An index definition for field indexes in Firestore.\n *\n * Every index is associated with a collection. The definition contains a list\n * of fields and their index kind (which can be `ASCENDING`, `DESCENDING` or\n * `CONTAINS` for ArrayContains/ArrayContainsAny queries).\n *\n * Unlike the backend, the SDK does not differentiate between collection or\n * collection group-scoped indices. Every index can be used for both single\n * collection and collection group queries.\n */\nclass lt {\n    constructor(\n    /**\n     * The index ID. Returns -1 if the index ID is not available (e.g. the index\n     * has not yet been persisted).\n     */\n    t, \n    /** The collection ID this index applies to. */\n    e, \n    /** The field segments for this index. */\n    n, \n    /** Shows how up-to-date the index is for the current user. */\n    s) {\n        this.indexId = t, this.collectionGroup = e, this.fields = n, this.indexState = s;\n    }\n}\n\n/** An ID for an index that has not yet been added to persistence.  */\n/** Returns the ArrayContains/ArrayContainsAny segment for this index. */\nfunction ft(t) {\n    return t.fields.find((t => 2 /* IndexKind.CONTAINS */ === t.kind));\n}\n\n/** Returns all directional (ascending/descending) segments for this index. */ function dt(t) {\n    return t.fields.filter((t => 2 /* IndexKind.CONTAINS */ !== t.kind));\n}\n\n/**\n * Returns the order of the document key component for the given index.\n *\n * PORTING NOTE: This is only used in the Web IndexedDb implementation.\n */\n/**\n * Compares indexes by collection group and segments. Ignores update time and\n * index ID.\n */\nfunction wt(t, e) {\n    let n = et(t.collectionGroup, e.collectionGroup);\n    if (0 !== n) return n;\n    for (let s = 0; s < Math.min(t.fields.length, e.fields.length); ++s) if (n = mt(t.fields[s], e.fields[s]), \n    0 !== n) return n;\n    return et(t.fields.length, e.fields.length);\n}\n\n/** Returns a debug representation of the field index */ lt.UNKNOWN_ID = -1;\n\n/** An index component consisting of field path and index type.  */\nclass _t {\n    constructor(\n    /** The field path of the component. */\n    t, \n    /** The fields sorting order. */\n    e) {\n        this.fieldPath = t, this.kind = e;\n    }\n}\n\nfunction mt(t, e) {\n    const n = at.comparator(t.fieldPath, e.fieldPath);\n    return 0 !== n ? n : et(t.kind, e.kind);\n}\n\n/**\n * Stores the \"high water mark\" that indicates how updated the Index is for the\n * current user.\n */ class gt {\n    constructor(\n    /**\n     * Indicates when the index was last updated (relative to other indexes).\n     */\n    t, \n    /** The the latest indexed read time, document and batch id. */\n    e) {\n        this.sequenceNumber = t, this.offset = e;\n    }\n    /** The state of an index that has not yet been backfilled. */    static empty() {\n        return new gt(0, It.min());\n    }\n}\n\n/**\n * Creates an offset that matches all documents with a read time higher than\n * `readTime`.\n */ function yt(t, e) {\n    // We want to create an offset that matches all documents with a read time\n    // greater than the provided read time. To do so, we technically need to\n    // create an offset for `(readTime, MAX_DOCUMENT_KEY)`. While we could use\n    // Unicode codepoints to generate MAX_DOCUMENT_KEY, it is much easier to use\n    // `(readTime + 1, DocumentKey.empty())` since `> DocumentKey.empty()` matches\n    // all valid document IDs.\n    const n = t.toTimestamp().seconds, s = t.toTimestamp().nanoseconds + 1, i = rt.fromTimestamp(1e9 === s ? new it(n + 1, 0) : new it(n, s));\n    return new It(i, ht.empty(), e);\n}\n\n/** Creates a new offset based on the provided document. */ function pt(t) {\n    return new It(t.readTime, t.key, -1);\n}\n\n/**\n * Stores the latest read time, document and batch ID that were processed for an\n * index.\n */ class It {\n    constructor(\n    /**\n     * The latest read time version that has been indexed by Firestore for this\n     * field index.\n     */\n    t, \n    /**\n     * The key of the last document that was indexed for this query. Use\n     * `DocumentKey.empty()` if no document has been indexed.\n     */\n    e, \n    /*\n     * The largest mutation batch id that's been processed by Firestore.\n     */\n    n) {\n        this.readTime = t, this.documentKey = e, this.largestBatchId = n;\n    }\n    /** Returns an offset that sorts before all regular offsets. */    static min() {\n        return new It(rt.min(), ht.empty(), -1);\n    }\n    /** Returns an offset that sorts after all regular offsets. */    static max() {\n        return new It(rt.max(), ht.empty(), -1);\n    }\n}\n\nfunction Tt(t, e) {\n    let n = t.readTime.compareTo(e.readTime);\n    return 0 !== n ? n : (n = ht.comparator(t.documentKey, e.documentKey), 0 !== n ? n : et(t.largestBatchId, e.largestBatchId));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Et = \"The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.\";\n\n/**\n * A base class representing a persistence transaction, encapsulating both the\n * transaction's sequence numbers as well as a list of onCommitted listeners.\n *\n * When you call Persistence.runTransaction(), it will create a transaction and\n * pass it to your callback. You then pass it to any method that operates\n * on persistence.\n */ class At {\n    constructor() {\n        this.onCommittedListeners = [];\n    }\n    addOnCommittedListener(t) {\n        this.onCommittedListeners.push(t);\n    }\n    raiseOnCommittedEvent() {\n        this.onCommittedListeners.forEach((t => t()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Verifies the error thrown by a LocalStore operation. If a LocalStore\n * operation fails because the primary lease has been taken by another client,\n * we ignore the error (the persistence layer will immediately call\n * `applyPrimaryLease` to propagate the primary state change). All other errors\n * are re-thrown.\n *\n * @param err - An error returned by a LocalStore operation.\n * @returns A Promise that resolves after we recovered, or the original error.\n */ async function vt(t) {\n    if (t.code !== q.FAILED_PRECONDITION || t.message !== Et) throw t;\n    N(\"LocalStore\", \"Unexpectedly lost primary lease\");\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * PersistencePromise is essentially a re-implementation of Promise except\n * it has a .next() method instead of .then() and .next() and .catch() callbacks\n * are executed synchronously when a PersistencePromise resolves rather than\n * asynchronously (Promise implementations use setImmediate() or similar).\n *\n * This is necessary to interoperate with IndexedDB which will automatically\n * commit transactions if control is returned to the event loop without\n * synchronously initiating another operation on the transaction.\n *\n * NOTE: .then() and .catch() only allow a single consumer, unlike normal\n * Promises.\n */ class Rt {\n    constructor(t) {\n        // NOTE: next/catchCallback will always point to our own wrapper functions,\n        // not the user's raw next() or catch() callbacks.\n        this.nextCallback = null, this.catchCallback = null, \n        // When the operation resolves, we'll set result or error and mark isDone.\n        this.result = void 0, this.error = void 0, this.isDone = !1, \n        // Set to true when .then() or .catch() are called and prevents additional\n        // chaining.\n        this.callbackAttached = !1, t((t => {\n            this.isDone = !0, this.result = t, this.nextCallback && \n            // value should be defined unless T is Void, but we can't express\n            // that in the type system.\n            this.nextCallback(t);\n        }), (t => {\n            this.isDone = !0, this.error = t, this.catchCallback && this.catchCallback(t);\n        }));\n    }\n    catch(t) {\n        return this.next(void 0, t);\n    }\n    next(t, e) {\n        return this.callbackAttached && O(), this.callbackAttached = !0, this.isDone ? this.error ? this.wrapFailure(e, this.error) : this.wrapSuccess(t, this.result) : new Rt(((n, s) => {\n            this.nextCallback = e => {\n                this.wrapSuccess(t, e).next(n, s);\n            }, this.catchCallback = t => {\n                this.wrapFailure(e, t).next(n, s);\n            };\n        }));\n    }\n    toPromise() {\n        return new Promise(((t, e) => {\n            this.next(t, e);\n        }));\n    }\n    wrapUserFunction(t) {\n        try {\n            const e = t();\n            return e instanceof Rt ? e : Rt.resolve(e);\n        } catch (t) {\n            return Rt.reject(t);\n        }\n    }\n    wrapSuccess(t, e) {\n        return t ? this.wrapUserFunction((() => t(e))) : Rt.resolve(e);\n    }\n    wrapFailure(t, e) {\n        return t ? this.wrapUserFunction((() => t(e))) : Rt.reject(e);\n    }\n    static resolve(t) {\n        return new Rt(((e, n) => {\n            e(t);\n        }));\n    }\n    static reject(t) {\n        return new Rt(((e, n) => {\n            n(t);\n        }));\n    }\n    static waitFor(\n    // Accept all Promise types in waitFor().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t) {\n        return new Rt(((e, n) => {\n            let s = 0, i = 0, r = !1;\n            t.forEach((t => {\n                ++s, t.next((() => {\n                    ++i, r && i === s && e();\n                }), (t => n(t)));\n            })), r = !0, i === s && e();\n        }));\n    }\n    /**\n     * Given an array of predicate functions that asynchronously evaluate to a\n     * boolean, implements a short-circuiting `or` between the results. Predicates\n     * will be evaluated until one of them returns `true`, then stop. The final\n     * result will be whether any of them returned `true`.\n     */    static or(t) {\n        let e = Rt.resolve(!1);\n        for (const n of t) e = e.next((t => t ? Rt.resolve(t) : n()));\n        return e;\n    }\n    static forEach(t, e) {\n        const n = [];\n        return t.forEach(((t, s) => {\n            n.push(e.call(this, t, s));\n        })), this.waitFor(n);\n    }\n    /**\n     * Concurrently map all array elements through asynchronous function.\n     */    static mapArray(t, e) {\n        return new Rt(((n, s) => {\n            const i = t.length, r = new Array(i);\n            let o = 0;\n            for (let u = 0; u < i; u++) {\n                const c = u;\n                e(t[c]).next((t => {\n                    r[c] = t, ++o, o === i && n(r);\n                }), (t => s(t)));\n            }\n        }));\n    }\n    /**\n     * An alternative to recursive PersistencePromise calls, that avoids\n     * potential memory problems from unbounded chains of promises.\n     *\n     * The `action` will be called repeatedly while `condition` is true.\n     */    static doWhile(t, e) {\n        return new Rt(((n, s) => {\n            const i = () => {\n                !0 === t() ? e().next((() => {\n                    i();\n                }), s) : n();\n            };\n            i();\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// References to `window` are guarded by SimpleDb.isAvailable()\n/* eslint-disable no-restricted-globals */\n/**\n * Wraps an IDBTransaction and exposes a store() method to get a handle to a\n * specific object store.\n */\nclass Pt {\n    constructor(t, e) {\n        this.action = t, this.transaction = e, this.aborted = !1, \n        /**\n         * A `Promise` that resolves with the result of the IndexedDb transaction.\n         */\n        this.v = new K, this.transaction.oncomplete = () => {\n            this.v.resolve();\n        }, this.transaction.onabort = () => {\n            e.error ? this.v.reject(new St(t, e.error)) : this.v.resolve();\n        }, this.transaction.onerror = e => {\n            const n = kt(e.target.error);\n            this.v.reject(new St(t, n));\n        };\n    }\n    static open(t, e, n, s) {\n        try {\n            return new Pt(e, t.transaction(s, n));\n        } catch (t) {\n            throw new St(e, t);\n        }\n    }\n    get R() {\n        return this.v.promise;\n    }\n    abort(t) {\n        t && this.v.reject(t), this.aborted || (N(\"SimpleDb\", \"Aborting transaction:\", t ? t.message : \"Client-initiated abort\"), \n        this.aborted = !0, this.transaction.abort());\n    }\n    P() {\n        // If the browser supports V3 IndexedDB, we invoke commit() explicitly to\n        // speed up index DB processing if the event loop remains blocks.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const t = this.transaction;\n        this.aborted || \"function\" != typeof t.commit || t.commit();\n    }\n    /**\n     * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All\n     * operations performed on the SimpleDbStore happen within the context of this\n     * transaction and it cannot be used anymore once the transaction is\n     * completed.\n     *\n     * Note that we can't actually enforce that the KeyType and ValueType are\n     * correct, but they allow type safety through the rest of the consuming code.\n     */    store(t) {\n        const e = this.transaction.objectStore(t);\n        return new Ct(e);\n    }\n}\n\n/**\n * Provides a wrapper around IndexedDb with a simplified interface that uses\n * Promise-like return values to chain operations. Real promises cannot be used\n * since .then() continuations are executed asynchronously (e.g. via\n * .setImmediate), which would cause IndexedDB to end the transaction.\n * See PersistencePromise for more details.\n */ class bt {\n    /*\n     * Creates a new SimpleDb wrapper for IndexedDb database `name`.\n     *\n     * Note that `version` must not be a downgrade. IndexedDB does not support\n     * downgrading the schema version. We currently do not support any way to do\n     * versioning outside of IndexedDB's versioning mechanism, as only\n     * version-upgrade transactions are allowed to do things like create\n     * objectstores.\n     */\n    constructor(t, e, n) {\n        this.name = t, this.version = e, this.V = n;\n        // NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the\n        // bug we're checking for should exist in iOS >= 12.2 and < 13, but for\n        // whatever reason it's much harder to hit after 12.2 so we only proactively\n        // log on 12.2.\n        12.2 === bt.S(getUA()) && k(\"Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.\");\n    }\n    /** Deletes the specified database. */    static delete(t) {\n        return N(\"SimpleDb\", \"Removing database:\", t), xt(window.indexedDB.deleteDatabase(t)).toPromise();\n    }\n    /** Returns true if IndexedDB is available in the current environment. */    static D() {\n        if (!isIndexedDBAvailable()) return !1;\n        if (bt.C()) return !0;\n        // We extensively use indexed array values and compound keys,\n        // which IE and Edge do not support. However, they still have indexedDB\n        // defined on the window, so we need to check for them here and make sure\n        // to return that persistence is not enabled for those browsers.\n        // For tracking support of this feature, see here:\n        // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/\n        // Check the UA string to find out the browser.\n                const t = getUA(), e = bt.S(t), n = 0 < e && e < 10, s = bt.N(t), i = 0 < s && s < 4.5;\n        // IE 10\n        // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\n        // IE 11\n        // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\n        // Edge\n        // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,\n        // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\n        // iOS Safari: Disable for users running iOS version < 10.\n                return !(t.indexOf(\"MSIE \") > 0 || t.indexOf(\"Trident/\") > 0 || t.indexOf(\"Edge/\") > 0 || n || i);\n    }\n    /**\n     * Returns true if the backing IndexedDB store is the Node IndexedDBShim\n     * (see https://github.com/axemclion/IndexedDBShim).\n     */    static C() {\n        var t;\n        return \"undefined\" != typeof process && \"YES\" === (null === (t = process.env) || void 0 === t ? void 0 : t.k);\n    }\n    /** Helper to get a typed SimpleDbStore from a transaction. */    static M(t, e) {\n        return t.store(e);\n    }\n    // visible for testing\n    /** Parse User Agent to determine iOS version. Returns -1 if not found. */\n    static S(t) {\n        const e = t.match(/i(?:phone|pad|pod) os ([\\d_]+)/i), n = e ? e[1].split(\"_\").slice(0, 2).join(\".\") : \"-1\";\n        return Number(n);\n    }\n    // visible for testing\n    /** Parse User Agent to determine Android version. Returns -1 if not found. */\n    static N(t) {\n        const e = t.match(/Android ([\\d.]+)/i), n = e ? e[1].split(\".\").slice(0, 2).join(\".\") : \"-1\";\n        return Number(n);\n    }\n    /**\n     * Opens the specified database, creating or upgrading it if necessary.\n     */    async $(t) {\n        return this.db || (N(\"SimpleDb\", \"Opening database:\", this.name), this.db = await new Promise(((e, n) => {\n            // TODO(mikelehen): Investigate browser compatibility.\n            // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\n            // suggests IE9 and older WebKit browsers handle upgrade\n            // differently. They expect setVersion, as described here:\n            // https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion\n            const s = indexedDB.open(this.name, this.version);\n            s.onsuccess = t => {\n                const n = t.target.result;\n                e(n);\n            }, s.onblocked = () => {\n                n(new St(t, \"Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed.\"));\n            }, s.onerror = e => {\n                const s = e.target.error;\n                \"VersionError\" === s.name ? n(new U(q.FAILED_PRECONDITION, \"A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.\")) : \"InvalidStateError\" === s.name ? n(new U(q.FAILED_PRECONDITION, \"Unable to open an IndexedDB connection. This could be due to running in a private browsing session on a browser whose private browsing sessions do not support IndexedDB: \" + s)) : n(new St(t, s));\n            }, s.onupgradeneeded = t => {\n                N(\"SimpleDb\", 'Database \"' + this.name + '\" requires upgrade from version:', t.oldVersion);\n                const e = t.target.result;\n                this.V.O(e, s.transaction, t.oldVersion, this.version).next((() => {\n                    N(\"SimpleDb\", \"Database upgrade to version \" + this.version + \" complete\");\n                }));\n            };\n        }))), this.F && (this.db.onversionchange = t => this.F(t)), this.db;\n    }\n    B(t) {\n        this.F = t, this.db && (this.db.onversionchange = e => t(e));\n    }\n    async runTransaction(t, e, n, s) {\n        const i = \"readonly\" === e;\n        let r = 0;\n        for (;;) {\n            ++r;\n            try {\n                this.db = await this.$(t);\n                const e = Pt.open(this.db, t, i ? \"readonly\" : \"readwrite\", n), r = s(e).next((t => (e.P(), \n                t))).catch((t => (\n                // Abort the transaction if there was an error.\n                e.abort(t), Rt.reject(t)))).toPromise();\n                // As noted above, errors are propagated by aborting the transaction. So\n                // we swallow any error here to avoid the browser logging it as unhandled.\n                return r.catch((() => {})), \n                // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to\n                // fire), but still return the original transactionFnResult back to the\n                // caller.\n                await e.R, r;\n            } catch (t) {\n                const e = t, n = \"FirebaseError\" !== e.name && r < 3;\n                // TODO(schmidt-sebastian): We could probably be smarter about this and\n                // not retry exceptions that are likely unrecoverable (such as quota\n                // exceeded errors).\n                // Note: We cannot use an instanceof check for FirestoreException, since the\n                // exception is wrapped in a generic error by our async/await handling.\n                                if (N(\"SimpleDb\", \"Transaction failed with error:\", e.message, \"Retrying:\", n), \n                this.close(), !n) return Promise.reject(e);\n            }\n        }\n    }\n    close() {\n        this.db && this.db.close(), this.db = void 0;\n    }\n}\n\n/**\n * A controller for iterating over a key range or index. It allows an iterate\n * callback to delete the currently-referenced object, or jump to a new key\n * within the key range or index.\n */ class Vt {\n    constructor(t) {\n        this.L = t, this.q = !1, this.U = null;\n    }\n    get isDone() {\n        return this.q;\n    }\n    get K() {\n        return this.U;\n    }\n    set cursor(t) {\n        this.L = t;\n    }\n    /**\n     * This function can be called to stop iteration at any point.\n     */    done() {\n        this.q = !0;\n    }\n    /**\n     * This function can be called to skip to that next key, which could be\n     * an index or a primary key.\n     */    G(t) {\n        this.U = t;\n    }\n    /**\n     * Delete the current cursor value from the object store.\n     *\n     * NOTE: You CANNOT do this with a keysOnly query.\n     */    delete() {\n        return xt(this.L.delete());\n    }\n}\n\n/** An error that wraps exceptions that thrown during IndexedDB execution. */ class St extends U {\n    constructor(t, e) {\n        super(q.UNAVAILABLE, `IndexedDB transaction '${t}' failed: ${e}`), this.name = \"IndexedDbTransactionError\";\n    }\n}\n\n/** Verifies whether `e` is an IndexedDbTransactionError. */ function Dt(t) {\n    // Use name equality, as instanceof checks on errors don't work with errors\n    // that wrap other errors.\n    return \"IndexedDbTransactionError\" === t.name;\n}\n\n/**\n * A wrapper around an IDBObjectStore providing an API that:\n *\n * 1) Has generic KeyType / ValueType parameters to provide strongly-typed\n * methods for acting against the object store.\n * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every\n * method return a PersistencePromise instead.\n * 3) Provides a higher-level API to avoid needing to do excessive wrapping of\n * intermediate IndexedDB types (IDBCursorWithValue, etc.)\n */ class Ct {\n    constructor(t) {\n        this.store = t;\n    }\n    put(t, e) {\n        let n;\n        return void 0 !== e ? (N(\"SimpleDb\", \"PUT\", this.store.name, t, e), n = this.store.put(e, t)) : (N(\"SimpleDb\", \"PUT\", this.store.name, \"<auto-key>\", t), \n        n = this.store.put(t)), xt(n);\n    }\n    /**\n     * Adds a new value into an Object Store and returns the new key. Similar to\n     * IndexedDb's `add()`, this method will fail on primary key collisions.\n     *\n     * @param value - The object to write.\n     * @returns The key of the value to add.\n     */    add(t) {\n        N(\"SimpleDb\", \"ADD\", this.store.name, t, t);\n        return xt(this.store.add(t));\n    }\n    /**\n     * Gets the object with the specified key from the specified store, or null\n     * if no object exists with the specified key.\n     *\n     * @key The key of the object to get.\n     * @returns The object with the specified key or null if no object exists.\n     */    get(t) {\n        // We're doing an unsafe cast to ValueType.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return xt(this.store.get(t)).next((e => (\n        // Normalize nonexistence to null.\n        void 0 === e && (e = null), N(\"SimpleDb\", \"GET\", this.store.name, t, e), e)));\n    }\n    delete(t) {\n        N(\"SimpleDb\", \"DELETE\", this.store.name, t);\n        return xt(this.store.delete(t));\n    }\n    /**\n     * If we ever need more of the count variants, we can add overloads. For now,\n     * all we need is to count everything in a store.\n     *\n     * Returns the number of rows in the store.\n     */    count() {\n        N(\"SimpleDb\", \"COUNT\", this.store.name);\n        return xt(this.store.count());\n    }\n    j(t, e) {\n        const n = this.options(t, e);\n        // Use `getAll()` if the browser supports IndexedDB v3, as it is roughly\n        // 20% faster. Unfortunately, getAll() does not support custom indices.\n                if (n.index || \"function\" != typeof this.store.getAll) {\n            const t = this.cursor(n), e = [];\n            return this.W(t, ((t, n) => {\n                e.push(n);\n            })).next((() => e));\n        }\n        {\n            const t = this.store.getAll(n.range);\n            return new Rt(((e, n) => {\n                t.onerror = t => {\n                    n(t.target.error);\n                }, t.onsuccess = t => {\n                    e(t.target.result);\n                };\n            }));\n        }\n    }\n    /**\n     * Loads the first `count` elements from the provided index range. Loads all\n     * elements if no limit is provided.\n     */    H(t, e) {\n        const n = this.store.getAll(t, null === e ? void 0 : e);\n        return new Rt(((t, e) => {\n            n.onerror = t => {\n                e(t.target.error);\n            }, n.onsuccess = e => {\n                t(e.target.result);\n            };\n        }));\n    }\n    J(t, e) {\n        N(\"SimpleDb\", \"DELETE ALL\", this.store.name);\n        const n = this.options(t, e);\n        n.Y = !1;\n        const s = this.cursor(n);\n        return this.W(s, ((t, e, n) => n.delete()));\n    }\n    X(t, e) {\n        let n;\n        e ? n = t : (n = {}, e = t);\n        const s = this.cursor(n);\n        return this.W(s, e);\n    }\n    /**\n     * Iterates over a store, but waits for the given callback to complete for\n     * each entry before iterating the next entry. This allows the callback to do\n     * asynchronous work to determine if this iteration should continue.\n     *\n     * The provided callback should return `true` to continue iteration, and\n     * `false` otherwise.\n     */    Z(t) {\n        const e = this.cursor({});\n        return new Rt(((n, s) => {\n            e.onerror = t => {\n                const e = kt(t.target.error);\n                s(e);\n            }, e.onsuccess = e => {\n                const s = e.target.result;\n                s ? t(s.primaryKey, s.value).next((t => {\n                    t ? s.continue() : n();\n                })) : n();\n            };\n        }));\n    }\n    W(t, e) {\n        const n = [];\n        return new Rt(((s, i) => {\n            t.onerror = t => {\n                i(t.target.error);\n            }, t.onsuccess = t => {\n                const i = t.target.result;\n                if (!i) return void s();\n                const r = new Vt(i), o = e(i.primaryKey, i.value, r);\n                if (o instanceof Rt) {\n                    const t = o.catch((t => (r.done(), Rt.reject(t))));\n                    n.push(t);\n                }\n                r.isDone ? s() : null === r.K ? i.continue() : i.continue(r.K);\n            };\n        })).next((() => Rt.waitFor(n)));\n    }\n    options(t, e) {\n        let n;\n        return void 0 !== t && (\"string\" == typeof t ? n = t : e = t), {\n            index: n,\n            range: e\n        };\n    }\n    cursor(t) {\n        let e = \"next\";\n        if (t.reverse && (e = \"prev\"), t.index) {\n            const n = this.store.index(t.index);\n            return t.Y ? n.openKeyCursor(t.range, e) : n.openCursor(t.range, e);\n        }\n        return this.store.openCursor(t.range, e);\n    }\n}\n\n/**\n * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror\n * handlers to resolve / reject the PersistencePromise as appropriate.\n */ function xt(t) {\n    return new Rt(((e, n) => {\n        t.onsuccess = t => {\n            const n = t.target.result;\n            e(n);\n        }, t.onerror = t => {\n            const e = kt(t.target.error);\n            n(e);\n        };\n    }));\n}\n\n// Guard so we only report the error once.\nlet Nt = !1;\n\nfunction kt(t) {\n    const e = bt.S(getUA());\n    if (e >= 12.2 && e < 13) {\n        const e = \"An internal error was encountered in the Indexed Database server\";\n        if (t.message.indexOf(e) >= 0) {\n            // Wrap error in a more descriptive one.\n            const t = new U(\"internal\", `IOS_INDEXEDDB_BUG1: IndexedDb has thrown '${e}'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.`);\n            return Nt || (Nt = !0, \n            // Throw a global exception outside of this promise chain, for the user to\n            // potentially catch.\n            setTimeout((() => {\n                throw t;\n            }), 0)), t;\n        }\n    }\n    return t;\n}\n\n/** This class is responsible for the scheduling of Index Backfiller. */\nclass Mt {\n    constructor(t, e) {\n        this.asyncQueue = t, this.tt = e, this.task = null;\n    }\n    start() {\n        this.et(15e3);\n    }\n    stop() {\n        this.task && (this.task.cancel(), this.task = null);\n    }\n    get started() {\n        return null !== this.task;\n    }\n    et(t) {\n        N(\"IndexBackiller\", `Scheduled in ${t}ms`), this.task = this.asyncQueue.enqueueAfterDelay(\"index_backfill\" /* TimerId.IndexBackfill */ , t, (async () => {\n            this.task = null;\n            try {\n                N(\"IndexBackiller\", `Documents written: ${await this.tt.nt()}`);\n            } catch (t) {\n                Dt(t) ? N(\"IndexBackiller\", \"Ignoring IndexedDB error during index backfill: \", t) : await vt(t);\n            }\n            await this.et(6e4);\n        }));\n    }\n}\n\n/** Implements the steps for backfilling indexes. */ class $t {\n    constructor(\n    /**\n     * LocalStore provides access to IndexManager and LocalDocumentView.\n     * These properties will update when the user changes. Consequently,\n     * making a local copy of IndexManager and LocalDocumentView will require\n     * updates over time. The simpler solution is to rely on LocalStore to have\n     * an up-to-date references to IndexManager and LocalDocumentStore.\n     */\n    t, e) {\n        this.localStore = t, this.persistence = e;\n    }\n    async nt(t = 50) {\n        return this.persistence.runTransaction(\"Backfill Indexes\", \"readwrite-primary\", (e => this.st(e, t)));\n    }\n    /** Writes index entries until the cap is reached. Returns the number of documents processed. */    st(t, e) {\n        const n = new Set;\n        let s = e, i = !0;\n        return Rt.doWhile((() => !0 === i && s > 0), (() => this.localStore.indexManager.getNextCollectionGroupToUpdate(t).next((e => {\n            if (null !== e && !n.has(e)) return N(\"IndexBackiller\", `Processing collection: ${e}`), \n            this.it(t, e, s).next((t => {\n                s -= t, n.add(e);\n            }));\n            i = !1;\n        })))).next((() => e - s));\n    }\n    /**\n     * Writes entries for the provided collection group. Returns the number of documents processed.\n     */    it(t, e, n) {\n        // Use the earliest offset of all field indexes to query the local cache.\n        return this.localStore.indexManager.getMinOffsetFromCollectionGroup(t, e).next((s => this.localStore.localDocuments.getNextDocuments(t, e, s, n).next((n => {\n            const i = n.changes;\n            return this.localStore.indexManager.updateIndexEntries(t, i).next((() => this.rt(s, n))).next((n => (N(\"IndexBackiller\", `Updating offset: ${n}`), \n            this.localStore.indexManager.updateCollectionGroup(t, e, n)))).next((() => i.size));\n        }))));\n    }\n    /** Returns the next offset based on the provided documents. */    rt(t, e) {\n        let n = t;\n        return e.changes.forEach(((t, e) => {\n            const s = pt(e);\n            Tt(s, n) > 0 && (n = s);\n        })), new It(n.readTime, n.documentKey, Math.max(e.batchId, t.largestBatchId));\n    }\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * `ListenSequence` is a monotonic sequence. It is initialized with a minimum value to\n * exceed. All subsequent calls to next will return increasing values. If provided with a\n * `SequenceNumberSyncer`, it will additionally bump its next value when told of a new value, as\n * well as write out sequence numbers that it produces via `next()`.\n */ class Ot {\n    constructor(t, e) {\n        this.previousValue = t, e && (e.sequenceNumberHandler = t => this.ot(t), this.ut = t => e.writeSequenceNumber(t));\n    }\n    ot(t) {\n        return this.previousValue = Math.max(t, this.previousValue), this.previousValue;\n    }\n    next() {\n        const t = ++this.previousValue;\n        return this.ut && this.ut(t), t;\n    }\n}\n\nOt.ct = -1;\n\n/**\n * Returns whether a variable is either undefined or null.\n */\nfunction Ft(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function Bt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */ function Lt(t) {\n    return \"number\" == typeof t && Number.isInteger(t) && !Bt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Encodes a resource path into a IndexedDb-compatible string form.\n */\nfunction qt(t) {\n    let e = \"\";\n    for (let n = 0; n < t.length; n++) e.length > 0 && (e = Kt(e)), e = Ut(t.get(n), e);\n    return Kt(e);\n}\n\n/** Encodes a single segment of a resource path into the given result */ function Ut(t, e) {\n    let n = e;\n    const s = t.length;\n    for (let e = 0; e < s; e++) {\n        const s = t.charAt(e);\n        switch (s) {\n          case \"\\0\":\n            n += \"\u0001\u0010\";\n            break;\n\n          case \"\u0001\":\n            n += \"\u0001\u0011\";\n            break;\n\n          default:\n            n += s;\n        }\n    }\n    return n;\n}\n\n/** Encodes a path separator into the given result */ function Kt(t) {\n    return t + \"\u0001\u0001\";\n}\n\n/**\n * Decodes the given IndexedDb-compatible string form of a resource path into\n * a ResourcePath instance. Note that this method is not suitable for use with\n * decoding resource names from the server; those are One Platform format\n * strings.\n */ function Gt(t) {\n    // Event the empty path must encode as a path of at least length 2. A path\n    // with exactly 2 must be the empty path.\n    const e = t.length;\n    if (F(e >= 2), 2 === e) return F(\"\u0001\" === t.charAt(0) && \"\u0001\" === t.charAt(1)), ut.emptyPath();\n    // Escape characters cannot exist past the second-to-last position in the\n    // source value.\n        const __PRIVATE_lastReasonableEscapeIndex = e - 2, n = [];\n    let s = \"\";\n    for (let i = 0; i < e; ) {\n        // The last two characters of a valid encoded path must be a separator, so\n        // there must be an end to this segment.\n        const e = t.indexOf(\"\u0001\", i);\n        (e < 0 || e > __PRIVATE_lastReasonableEscapeIndex) && O();\n        switch (t.charAt(e + 1)) {\n          case \"\u0001\":\n            const r = t.substring(i, e);\n            let o;\n            0 === s.length ? \n            // Avoid copying for the common case of a segment that excludes \\0\n            // and \\001\n            o = r : (s += r, o = s, s = \"\"), n.push(o);\n            break;\n\n          case \"\u0010\":\n            s += t.substring(i, e), s += \"\\0\";\n            break;\n\n          case \"\u0011\":\n            // The escape character can be used in the output to encode itself.\n            s += t.substring(i, e + 1);\n            break;\n\n          default:\n            O();\n        }\n        i = e + 2;\n    }\n    return new ut(n);\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Qt = [ \"userId\", \"batchId\" ];\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Name of the IndexedDb object store.\n *\n * Note that the name 'owner' is chosen to ensure backwards compatibility with\n * older clients that only supported single locked access to the persistence\n * layer.\n */\n/**\n * Creates a [userId, encodedPath] key for use in the DbDocumentMutations\n * index to iterate over all at document mutations for a given path or lower.\n */\nfunction jt(t, e) {\n    return [ t, qt(e) ];\n}\n\n/**\n * Creates a full index key of [userId, encodedPath, batchId] for inserting\n * and deleting into the DbDocumentMutations index.\n */ function zt(t, e, n) {\n    return [ t, qt(e), n ];\n}\n\n/**\n * Because we store all the useful information for this store in the key,\n * there is no useful information to store as the value. The raw (unencoded)\n * path cannot be stored because IndexedDb doesn't store prototype\n * information.\n */ const Wt = {}, Ht = [ \"prefixPath\", \"collectionGroup\", \"readTime\", \"documentId\" ], Jt = [ \"prefixPath\", \"collectionGroup\", \"documentId\" ], Yt = [ \"collectionGroup\", \"readTime\", \"prefixPath\", \"documentId\" ], Xt = [ \"canonicalId\", \"targetId\" ], Zt = [ \"targetId\", \"path\" ], te = [ \"path\", \"targetId\" ], ee = [ \"collectionId\", \"parent\" ], ne = [ \"indexId\", \"uid\" ], se = [ \"uid\", \"sequenceNumber\" ], ie = [ \"indexId\", \"uid\", \"arrayValue\", \"directionalValue\", \"orderedDocumentKey\", \"documentKey\" ], re = [ \"indexId\", \"uid\", \"orderedDocumentKey\" ], oe = [ \"userId\", \"collectionPath\", \"documentId\" ], ue = [ \"userId\", \"collectionPath\", \"largestBatchId\" ], ce = [ \"userId\", \"collectionGroup\", \"largestBatchId\" ], ae = [ ...[ ...[ ...[ ...[ \"mutationQueues\", \"mutations\", \"documentMutations\", \"remoteDocuments\", \"targets\", \"owner\", \"targetGlobal\", \"targetDocuments\" ], \"clientMetadata\" ], \"remoteDocumentGlobal\" ], \"collectionParents\" ], \"bundles\", \"namedQueries\" ], he = [ ...ae, \"documentOverlays\" ], le = [ \"mutationQueues\", \"mutations\", \"documentMutations\", \"remoteDocumentsV14\", \"targets\", \"owner\", \"targetGlobal\", \"targetDocuments\", \"clientMetadata\", \"remoteDocumentGlobal\", \"collectionParents\", \"bundles\", \"namedQueries\", \"documentOverlays\" ], fe = le, de = [ ...fe, \"indexConfiguration\", \"indexState\", \"indexEntries\" ];\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass we extends At {\n    constructor(t, e) {\n        super(), this.ht = t, this.currentSequenceNumber = e;\n    }\n}\n\nfunction _e(t, e) {\n    const n = L(t);\n    return bt.M(n.ht, e);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function me(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction ge(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\nfunction ye(t) {\n    for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass pe {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || Te.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new pe(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, Te.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new pe(this.comparator, this.root.remove(t, this.comparator).copy(null, null, Te.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const s = this.comparator(t, n.key);\n            if (0 === s) return e + n.left.size;\n            s < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new Ie(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new Ie(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new Ie(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new Ie(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass Ie {\n    constructor(t, e, n, s) {\n        this.isReverse = s, this.nodeStack = [];\n        let i = 1;\n        for (;!t.isEmpty(); ) if (i = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && s && (i *= -1), i < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === i) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass Te {\n    constructor(t, e, n, s, i) {\n        this.key = t, this.value = e, this.color = null != n ? n : Te.RED, this.left = null != s ? s : Te.EMPTY, \n        this.right = null != i ? i : Te.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, s, i) {\n        return new Te(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != s ? s : this.left, null != i ? i : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let s = this;\n        const i = n(t, s.key);\n        return s = i < 0 ? s.copy(null, null, null, s.left.insert(t, e, n), null) : 0 === i ? s.copy(null, e, null, null, null) : s.copy(null, null, null, null, s.right.insert(t, e, n)), \n        s.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return Te.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, s = this;\n        if (e(t, s.key) < 0) s.left.isEmpty() || s.left.isRed() || s.left.left.isRed() || (s = s.moveRedLeft()), \n        s = s.copy(null, null, null, s.left.remove(t, e), null); else {\n            if (s.left.isRed() && (s = s.rotateRight()), s.right.isEmpty() || s.right.isRed() || s.right.left.isRed() || (s = s.moveRedRight()), \n            0 === e(t, s.key)) {\n                if (s.right.isEmpty()) return Te.EMPTY;\n                n = s.right.min(), s = s.copy(n.key, n.value, null, null, s.right.removeMin());\n            }\n            s = s.copy(null, null, null, null, s.right.remove(t, e));\n        }\n        return s.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, Te.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, Te.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw O();\n        if (this.right.isRed()) throw O();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw O();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nTe.EMPTY = null, Te.RED = !0, Te.BLACK = !1;\n\n// end LLRBEmptyNode\nTe.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw O();\n    }\n    get value() {\n        throw O();\n    }\n    get color() {\n        throw O();\n    }\n    get left() {\n        throw O();\n    }\n    get right() {\n        throw O();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, s, i) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new Te(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass Ee {\n    constructor(t) {\n        this.comparator = t, this.data = new pe(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const s = n.getNext();\n            if (this.comparator(s.key, t[1]) >= 0) return;\n            e(s.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new Ae(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new Ae(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof Ee)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, s = n.getNext().key;\n            if (0 !== this.comparator(t, s)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new Ee(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass Ae {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * Compares two sorted sets for equality using their natural ordering. The\n * method computes the intersection and invokes `onAdd` for every element that\n * is in `after` but not `before`. `onRemove` is invoked for every element in\n * `before` but missing from `after`.\n *\n * The method creates a copy of both `before` and `after` and runs in O(n log\n * n), where n is the size of the two lists.\n *\n * @param before - The elements that exist in the original set.\n * @param after - The elements to diff against the original set.\n * @param comparator - The comparator for the elements in before and after.\n * @param onAdd - A function to invoke for every element that is part of `\n * after` but not `before`.\n * @param onRemove - A function to invoke for every element that is part of\n * `before` but not `after`.\n */\n/**\n * Returns the next element from the iterator or `undefined` if none available.\n */\nfunction ve(t) {\n    return t.hasNext() ? t.getNext() : void 0;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class Re {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(at.comparator);\n    }\n    static empty() {\n        return new Re([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new Ee(at.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new Re(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return nt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An error encountered while decoding base64 string.\n */ class Pe extends Error {\n    constructor() {\n        super(...arguments), this.name = \"Base64DecodeError\";\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/** True if and only if the Base64 conversion functions are available. */\nfunction be() {\n    return \"undefined\" != typeof atob;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */ class Ve {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = function(t) {\n            try {\n                return atob(t);\n            } catch (t) {\n                // Check that `DOMException` is defined before using it to avoid\n                // \"ReferenceError: Property 'DOMException' doesn't exist\" in react-native.\n                // (https://github.com/firebase/firebase-js-sdk/issues/7115)\n                throw \"undefined\" != typeof DOMException && t instanceof DOMException ? new Pe(\"Invalid base64 string: \" + t) : t;\n            }\n        }\n        /** Converts a binary string to a Base64 encoded string. */ (t);\n        return new Ve(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new Ve(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return et(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nVe.EMPTY_BYTE_STRING = new Ve(\"\");\n\nconst Se = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function De(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (F(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Se.exec(t);\n        if (F(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const s = new Date(t);\n        return {\n            seconds: Math.floor(s.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Ce(t.seconds),\n        nanos: Ce(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Ce(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function xe(t) {\n    return \"string\" == typeof t ? Ve.fromBase64String(t) : Ve.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function Ne(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Creates a new ServerTimestamp proto value (using the internal format).\n */\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\nfunction ke(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return Ne(e) ? ke(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Me(t) {\n    const e = De(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new it(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class $e {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param longPollingOptions Options that configure long-polling.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, s, i, r, o, u, c) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = s, this.ssl = i, \n        this.forceLongPolling = r, this.autoDetectLongPolling = o, this.longPollingOptions = u, \n        this.useFetchStreams = c;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass Oe {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new Oe(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof Oe && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst Fe = {\n    mapValue: {\n        fields: {\n            __type__: {\n                stringValue: \"__max__\"\n            }\n        }\n    }\n}, Be = {\n    nullValue: \"NULL_VALUE\"\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction Le(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? Ne(t) ? 4 /* TypeOrder.ServerTimestampValue */ : en(t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : O();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function qe(t, e) {\n    if (t === e) return !0;\n    const n = Le(t);\n    if (n !== Le(e)) return !1;\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Me(t).isEqual(Me(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = De(t.timestampValue), s = De(e.timestampValue);\n            return n.seconds === s.seconds && n.nanos === s.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            return xe(t.bytesValue).isEqual(xe(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            return Ce(t.geoPointValue.latitude) === Ce(e.geoPointValue.latitude) && Ce(t.geoPointValue.longitude) === Ce(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Ce(t.integerValue) === Ce(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Ce(t.doubleValue), s = Ce(e.doubleValue);\n                return n === s ? Bt(n) === Bt(s) : isNaN(n) && isNaN(s);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return nt(t.arrayValue.values || [], e.arrayValue.values || [], qe);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, s = e.mapValue.fields || {};\n            if (me(n) !== me(s)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === s[t] || !qe(n[t], s[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return O();\n    }\n}\n\nfunction Ue(t, e) {\n    return void 0 !== (t.values || []).find((t => qe(t, e)));\n}\n\nfunction Ke(t, e) {\n    if (t === e) return 0;\n    const n = Le(t), s = Le(e);\n    if (n !== s) return et(n, s);\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return et(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            const n = Ce(t.integerValue || t.doubleValue), s = Ce(e.integerValue || e.doubleValue);\n            return n < s ? -1 : n > s ? 1 : n === s ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(s) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return Ge(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Ge(Me(t), Me(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return et(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            const n = xe(t), s = xe(e);\n            return n.compareTo(s);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), s = e.split(\"/\");\n            for (let t = 0; t < n.length && t < s.length; t++) {\n                const e = et(n[t], s[t]);\n                if (0 !== e) return e;\n            }\n            return et(n.length, s.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            const n = et(Ce(t.latitude), Ce(e.latitude));\n            if (0 !== n) return n;\n            return et(Ce(t.longitude), Ce(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], s = e.values || [];\n            for (let t = 0; t < n.length && t < s.length; ++t) {\n                const e = Ke(n[t], s[t]);\n                if (e) return e;\n            }\n            return et(n.length, s.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            if (t === Fe.mapValue && e === Fe.mapValue) return 0;\n            if (t === Fe.mapValue) return 1;\n            if (e === Fe.mapValue) return -1;\n            const n = t.fields || {}, s = Object.keys(n), i = e.fields || {}, r = Object.keys(i);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            s.sort(), r.sort();\n            for (let t = 0; t < s.length && t < r.length; ++t) {\n                const e = et(s[t], r[t]);\n                if (0 !== e) return e;\n                const o = Ke(n[s[t]], i[r[t]]);\n                if (0 !== o) return o;\n            }\n            return et(s.length, r.length);\n        }\n        /**\n * Generates the canonical ID for the provided field value (as used in Target\n * serialization).\n */ (t.mapValue, e.mapValue);\n\n      default:\n        throw O();\n    }\n}\n\nfunction Ge(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return et(t, e);\n    const n = De(t), s = De(e), i = et(n.seconds, s.seconds);\n    return 0 !== i ? i : et(n.nanos, s.nanos);\n}\n\nfunction Qe(t) {\n    return je(t);\n}\n\nfunction je(t) {\n    return \"nullValue\" in t ? \"null\" : \"booleanValue\" in t ? \"\" + t.booleanValue : \"integerValue\" in t ? \"\" + t.integerValue : \"doubleValue\" in t ? \"\" + t.doubleValue : \"timestampValue\" in t ? function(t) {\n        const e = De(t);\n        return `time(${e.seconds},${e.nanos})`;\n    }(t.timestampValue) : \"stringValue\" in t ? t.stringValue : \"bytesValue\" in t ? xe(t.bytesValue).toBase64() : \"referenceValue\" in t ? (n = t.referenceValue, \n    ht.fromName(n).toString()) : \"geoPointValue\" in t ? `geo(${(e = t.geoPointValue).latitude},${e.longitude})` : \"arrayValue\" in t ? function(t) {\n        let e = \"[\", n = !0;\n        for (const s of t.values || []) n ? n = !1 : e += \",\", e += je(s);\n        return e + \"]\";\n    }\n    /**\n * Returns an approximate (and wildly inaccurate) in-memory size for the field\n * value.\n *\n * The memory size takes into account only the actual user data as it resides\n * in memory and ignores object overhead.\n */ (t.arrayValue) : \"mapValue\" in t ? function(t) {\n        // Iteration order in JavaScript is not guaranteed. To ensure that we generate\n        // matching canonical IDs for identical maps, we need to sort the keys.\n        const e = Object.keys(t.fields || {}).sort();\n        let n = \"{\", s = !0;\n        for (const i of e) s ? s = !1 : n += \",\", n += `${i}:${je(t.fields[i])}`;\n        return n + \"}\";\n    }(t.mapValue) : O();\n    var e, n;\n}\n\nfunction ze(t) {\n    switch (Le(t)) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 1 /* TypeOrder.BooleanValue */ :\n        return 4;\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return 8;\n\n      case 3 /* TypeOrder.TimestampValue */ :\n      case 8 /* TypeOrder.GeoPointValue */ :\n        // GeoPoints are made up of two distinct numbers (latitude + longitude)\n        return 16;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        const e = ke(t);\n        return e ? 16 + ze(e) : 16;\n\n      case 5 /* TypeOrder.StringValue */ :\n        // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures:\n        // \"JavaScript's String type is [...] a set of elements of 16-bit unsigned\n        // integer values\"\n        return 2 * t.stringValue.length;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return xe(t.bytesValue).approximateByteSize();\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue.length;\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return (t.arrayValue.values || []).reduce(((t, e) => t + ze(e)), 0);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t) {\n            let e = 0;\n            return ge(t.fields, ((t, n) => {\n                e += t.length + ze(n);\n            })), e;\n        }(t.mapValue);\n\n      default:\n        throw O();\n    }\n}\n\n/** Returns a reference value for the provided database and key. */\nfunction We(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an IntegerValue . */ function He(t) {\n    return !!t && \"integerValue\" in t;\n}\n\n/** Returns true if `value` is a DoubleValue. */\n/** Returns true if `value` is an ArrayValue. */\nfunction Je(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Ye(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Xe(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Ze(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function tn(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return ge(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = tn(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = tn(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\n/** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */ function en(t) {\n    return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n}\n\n/** Returns the lowest value for the given value type (inclusive). */ function nn(t) {\n    return \"nullValue\" in t ? Be : \"booleanValue\" in t ? {\n        booleanValue: !1\n    } : \"integerValue\" in t || \"doubleValue\" in t ? {\n        doubleValue: NaN\n    } : \"timestampValue\" in t ? {\n        timestampValue: {\n            seconds: Number.MIN_SAFE_INTEGER\n        }\n    } : \"stringValue\" in t ? {\n        stringValue: \"\"\n    } : \"bytesValue\" in t ? {\n        bytesValue: \"\"\n    } : \"referenceValue\" in t ? We(Oe.empty(), ht.empty()) : \"geoPointValue\" in t ? {\n        geoPointValue: {\n            latitude: -90,\n            longitude: -180\n        }\n    } : \"arrayValue\" in t ? {\n        arrayValue: {}\n    } : \"mapValue\" in t ? {\n        mapValue: {}\n    } : O();\n}\n\n/** Returns the largest value for the given value type (exclusive). */ function sn(t) {\n    return \"nullValue\" in t ? {\n        booleanValue: !1\n    } : \"booleanValue\" in t ? {\n        doubleValue: NaN\n    } : \"integerValue\" in t || \"doubleValue\" in t ? {\n        timestampValue: {\n            seconds: Number.MIN_SAFE_INTEGER\n        }\n    } : \"timestampValue\" in t ? {\n        stringValue: \"\"\n    } : \"stringValue\" in t ? {\n        bytesValue: \"\"\n    } : \"bytesValue\" in t ? We(Oe.empty(), ht.empty()) : \"referenceValue\" in t ? {\n        geoPointValue: {\n            latitude: -90,\n            longitude: -180\n        }\n    } : \"geoPointValue\" in t ? {\n        arrayValue: {}\n    } : \"arrayValue\" in t ? {\n        mapValue: {}\n    } : \"mapValue\" in t ? Fe : O();\n}\n\nfunction rn(t, e) {\n    const n = Ke(t.value, e.value);\n    return 0 !== n ? n : t.inclusive && !e.inclusive ? -1 : !t.inclusive && e.inclusive ? 1 : 0;\n}\n\nfunction on(t, e) {\n    const n = Ke(t.value, e.value);\n    return 0 !== n ? n : t.inclusive && !e.inclusive ? 1 : !t.inclusive && e.inclusive ? -1 : 0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class un {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new un({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Ze(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = tn(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = at.emptyPath(), n = {}, s = [];\n        t.forEach(((t, i) => {\n            if (!e.isImmediateParentOf(i)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, s), n = {}, s = [], e = i.popLast();\n            }\n            t ? n[i.lastSegment()] = tn(t) : s.push(i.lastSegment());\n        }));\n        const i = this.getFieldsMap(e);\n        this.applyChanges(i, n, s);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Ze(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return qe(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let s = e.mapValue.fields[t.get(n)];\n            Ze(s) && s.mapValue.fields || (s = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = s), e = s;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        ge(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new un(tn(this.value));\n    }\n}\n\n/**\n * Returns a FieldMask built from all fields in a MapValue.\n */ function cn(t) {\n    const e = [];\n    return ge(t.fields, ((t, n) => {\n        const s = new at([ t ]);\n        if (Ze(n)) {\n            const t = cn(n.mapValue).fields;\n            if (0 === t.length) \n            // Preserve the empty map by adding it to the FieldMask.\n            e.push(s); else \n            // For nested and non-empty ObjectValues, add the FieldPath of the\n            // leaf nodes.\n            for (const n of t) e.push(s.child(n));\n        } else \n        // For nested and non-empty ObjectValues, add the FieldPath of the leaf\n        // nodes.\n        e.push(s);\n    })), new Re(e);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class an {\n    constructor(t, e, n, s, i, r, o) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = s, this.createTime = i, \n        this.data = r, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new an(t, 0 /* DocumentType.INVALID */ , \n        /* version */ rt.min(), \n        /* readTime */ rt.min(), \n        /* createTime */ rt.min(), un.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n, s) {\n        return new an(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ rt.min(), \n        /* createTime */ n, s, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new an(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ rt.min(), \n        /* createTime */ rt.min(), un.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new an(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ rt.min(), \n        /* createTime */ rt.min(), un.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(rt.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = un.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = un.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = rt.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof an && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new an(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * Compares the value for field `field` in the provided documents. Throws if\n * the field does not exist in both documents.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */\nclass hn {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction ln(t, e, n) {\n    let s = 0;\n    for (let i = 0; i < t.position.length; i++) {\n        const r = e[i], o = t.position[i];\n        if (r.field.isKeyField()) s = ht.comparator(ht.fromName(o.referenceValue), n.key); else {\n            s = Ke(o, n.data.field(r.field));\n        }\n        if (\"desc\" /* Direction.DESCENDING */ === r.dir && (s *= -1), 0 !== s) break;\n    }\n    return s;\n}\n\n/**\n * Returns true if a document sorts after a bound using the provided sort\n * order.\n */ function fn(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!qe(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class dn {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction wn(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class _n {}\n\nclass mn extends _n {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new Pn(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new Dn(t, n) : \"in\" /* Operator.IN */ === e ? new Cn(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new xn(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new Nn(t, n) : new mn(t, e, n);\n    }\n    static createKeyFieldInFilter(t, e, n) {\n        return \"in\" /* Operator.IN */ === e ? new bn(t, n) : new Vn(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(Ke(e, this.value)) : null !== e && Le(this.value) === Le(e) && this.matchesComparison(Ke(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return O();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass gn extends _n {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.lt = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new gn(t, e);\n    }\n    matches(t) {\n        return yn(this) ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.lt || (this.lt = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.lt;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.ft((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    ft(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction yn(t) {\n    return \"and\" /* CompositeOperator.AND */ === t.op;\n}\n\nfunction pn(t) {\n    return \"or\" /* CompositeOperator.OR */ === t.op;\n}\n\n/**\n * Returns true if this filter is a conjunction of field filters only. Returns false otherwise.\n */ function In(t) {\n    return Tn(t) && yn(t);\n}\n\n/**\n * Returns true if this filter does not contain any composite filters. Returns false otherwise.\n */ function Tn(t) {\n    for (const e of t.filters) if (e instanceof gn) return !1;\n    return !0;\n}\n\nfunction En(t) {\n    if (t instanceof mn) \n    // TODO(b/29183165): Technically, this won't be unique if two values have\n    // the same description, such as the int 3 and the string \"3\". So we should\n    // add the types in here somehow, too.\n    return t.field.canonicalString() + t.op.toString() + Qe(t.value);\n    if (In(t)) \n    // Older SDK versions use an implicit AND operation between their filters.\n    // In the new SDK versions, the developer may use an explicit AND filter.\n    // To stay consistent with the old usages, we add a special case to ensure\n    // the canonical ID for these two are the same. For example:\n    // `col.whereEquals(\"a\", 1).whereEquals(\"b\", 2)` should have the same\n    // canonical ID as `col.where(and(equals(\"a\",1), equals(\"b\",2)))`.\n    return t.filters.map((t => En(t))).join(\",\");\n    {\n        // filter instanceof CompositeFilter\n        const e = t.filters.map((t => En(t))).join(\",\");\n        return `${t.op}(${e})`;\n    }\n}\n\nfunction An(t, e) {\n    return t instanceof mn ? function(t, e) {\n        return e instanceof mn && t.op === e.op && t.field.isEqual(e.field) && qe(t.value, e.value);\n    }(t, e) : t instanceof gn ? function(t, e) {\n        if (e instanceof gn && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, n, s) => t && An(n, e.filters[s])), !0);\n        }\n        return !1;\n    }\n    /**\n * Returns a new composite filter that contains all filter from\n * `compositeFilter` plus all the given filters in `otherFilters`.\n */ (t, e) : void O();\n}\n\nfunction vn(t, e) {\n    const n = t.filters.concat(e);\n    return gn.create(n, t.op);\n}\n\n/** Returns a debug description for `filter`. */ function Rn(t) {\n    return t instanceof mn ? function(t) {\n        return `${t.field.canonicalString()} ${t.op} ${Qe(t.value)}`;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t) : t instanceof gn ? function(t) {\n        return t.op.toString() + \" {\" + t.getFilters().map(Rn).join(\" ,\") + \"}\";\n    }(t) : \"Filter\";\n}\n\nclass Pn extends mn {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = ht.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = ht.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class bn extends mn {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = Sn(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class Vn extends mn {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = Sn(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction Sn(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => ht.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class Dn extends mn {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Je(e) && Ue(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class Cn extends mn {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && Ue(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class xn extends mn {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (Ue(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !Ue(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class Nn extends mn {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Je(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => Ue(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass kn {\n    constructor(t, e = null, n = [], s = [], i = null, r = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = s, this.limit = i, \n        this.startAt = r, this.endAt = o, this.dt = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function Mn(t, e = null, n = [], s = [], i = null, r = null, o = null) {\n    return new kn(t, e, n, s, i, r, o);\n}\n\nfunction $n(t) {\n    const e = L(t);\n    if (null === e.dt) {\n        let t = e.path.canonicalString();\n        null !== e.collectionGroup && (t += \"|cg:\" + e.collectionGroup), t += \"|f:\", t += e.filters.map((t => En(t))).join(\",\"), \n        t += \"|ob:\", t += e.orderBy.map((t => function(t) {\n            // TODO(b/29183165): Make this collision robust.\n            return t.field.canonicalString() + t.dir;\n        }(t))).join(\",\"), Ft(e.limit) || (t += \"|l:\", t += e.limit), e.startAt && (t += \"|lb:\", \n        t += e.startAt.inclusive ? \"b:\" : \"a:\", t += e.startAt.position.map((t => Qe(t))).join(\",\")), \n        e.endAt && (t += \"|ub:\", t += e.endAt.inclusive ? \"a:\" : \"b:\", t += e.endAt.position.map((t => Qe(t))).join(\",\")), \n        e.dt = t;\n    }\n    return e.dt;\n}\n\nfunction On(t, e) {\n    if (t.limit !== e.limit) return !1;\n    if (t.orderBy.length !== e.orderBy.length) return !1;\n    for (let n = 0; n < t.orderBy.length; n++) if (!wn(t.orderBy[n], e.orderBy[n])) return !1;\n    if (t.filters.length !== e.filters.length) return !1;\n    for (let n = 0; n < t.filters.length; n++) if (!An(t.filters[n], e.filters[n])) return !1;\n    return t.collectionGroup === e.collectionGroup && (!!t.path.isEqual(e.path) && (!!fn(t.startAt, e.startAt) && fn(t.endAt, e.endAt)));\n}\n\nfunction Fn(t) {\n    return ht.isDocumentKey(t.path) && null === t.collectionGroup && 0 === t.filters.length;\n}\n\n/** Returns the field filters that target the given field path. */ function Bn(t, e) {\n    return t.filters.filter((t => t instanceof mn && t.field.isEqual(e)));\n}\n\n/**\n * Returns the values that are used in ARRAY_CONTAINS or ARRAY_CONTAINS_ANY\n * filters. Returns `null` if there are no such filters.\n */\n/**\n * Returns the value to use as the lower bound for ascending index segment at\n * the provided `fieldPath` (or the upper bound for an descending segment).\n */\nfunction Ln(t, e, n) {\n    let s = Be, i = !0;\n    // Process all filters to find a value for the current field segment\n    for (const n of Bn(t, e)) {\n        let t = Be, e = !0;\n        switch (n.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            t = nn(n.value);\n            break;\n\n          case \"==\" /* Operator.EQUAL */ :\n          case \"in\" /* Operator.IN */ :\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            t = n.value;\n            break;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            t = n.value, e = !1;\n            break;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n          case \"not-in\" /* Operator.NOT_IN */ :\n            t = Be;\n // Remaining filters cannot be used as lower bounds.\n                }\n        rn({\n            value: s,\n            inclusive: i\n        }, {\n            value: t,\n            inclusive: e\n        }) < 0 && (s = t, i = e);\n    }\n    // If there is an additional bound, compare the values against the existing\n    // range to see if we can narrow the scope.\n        if (null !== n) for (let r = 0; r < t.orderBy.length; ++r) {\n        if (t.orderBy[r].field.isEqual(e)) {\n            const t = n.position[r];\n            rn({\n                value: s,\n                inclusive: i\n            }, {\n                value: t,\n                inclusive: n.inclusive\n            }) < 0 && (s = t, i = n.inclusive);\n            break;\n        }\n    }\n    return {\n        value: s,\n        inclusive: i\n    };\n}\n\n/**\n * Returns the value to use as the upper bound for ascending index segment at\n * the provided `fieldPath` (or the lower bound for a descending segment).\n */ function qn(t, e, n) {\n    let s = Fe, i = !0;\n    // Process all filters to find a value for the current field segment\n    for (const n of Bn(t, e)) {\n        let t = Fe, e = !0;\n        switch (n.op) {\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n          case \">\" /* Operator.GREATER_THAN */ :\n            t = sn(n.value), e = !1;\n            break;\n\n          case \"==\" /* Operator.EQUAL */ :\n          case \"in\" /* Operator.IN */ :\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            t = n.value;\n            break;\n\n          case \"<\" /* Operator.LESS_THAN */ :\n            t = n.value, e = !1;\n            break;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n          case \"not-in\" /* Operator.NOT_IN */ :\n            t = Fe;\n // Remaining filters cannot be used as upper bounds.\n                }\n        on({\n            value: s,\n            inclusive: i\n        }, {\n            value: t,\n            inclusive: e\n        }) > 0 && (s = t, i = e);\n    }\n    // If there is an additional bound, compare the values against the existing\n    // range to see if we can narrow the scope.\n        if (null !== n) for (let r = 0; r < t.orderBy.length; ++r) {\n        if (t.orderBy[r].field.isEqual(e)) {\n            const t = n.position[r];\n            on({\n                value: s,\n                inclusive: i\n            }, {\n                value: t,\n                inclusive: n.inclusive\n            }) > 0 && (s = t, i = n.inclusive);\n            break;\n        }\n    }\n    return {\n        value: s,\n        inclusive: i\n    };\n}\n\n/** Returns the number of segments of a perfect index for this target. */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass Un {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], s = [], i = null, r = \"F\" /* LimitType.First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = s, \n        this.limit = i, this.limitType = r, this.startAt = o, this.endAt = u, this.wt = null, \n        // The corresponding `Target` of this `Query` instance.\n        this._t = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query instance with the options provided. */ function Kn(t, e, n, s, i, r, o, u) {\n    return new Un(t, e, n, s, i, r, o, u);\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function Gn(t) {\n    return new Un(t);\n}\n\n/**\n * Helper to convert a collection group query into a collection query at a\n * specific path. This is used when executing collection group queries, since\n * we have to split the query into a set of collection queries at multiple\n * paths.\n */\n/**\n * Returns true if this query does not specify any query constraints that\n * could remove results.\n */\nfunction Qn(t) {\n    return 0 === t.filters.length && null === t.limit && null == t.startAt && null == t.endAt && (0 === t.explicitOrderBy.length || 1 === t.explicitOrderBy.length && t.explicitOrderBy[0].field.isKeyField());\n}\n\nfunction jn(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction zn(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction Wn(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function Hn(t) {\n    const e = L(t);\n    if (null === e.wt) {\n        e.wt = [];\n        const t = zn(e), n = jn(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.wt.push(new dn(t)), e.wt.push(new dn(at.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.wt.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.wt.push(new dn(at.keyField(), t));\n            }\n        }\n    }\n    return e.wt;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Jn(t) {\n    const e = L(t);\n    if (!e._t) if (\"F\" /* LimitType.First */ === e.limitType) e._t = Mn(e.path, e.collectionGroup, Hn(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of Hn(e)) {\n            const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            t.push(new dn(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new hn(e.endAt.position, e.endAt.inclusive) : null, s = e.startAt ? new hn(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e._t = Mn(e.path, e.collectionGroup, t, e.filters, e.limit, n, s);\n    }\n    return e._t;\n}\n\nfunction Yn(t, e) {\n    e.getFirstInequalityField(), zn(t);\n    const n = t.filters.concat([ e ]);\n    return new Un(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction Xn(t, e, n) {\n    return new Un(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n}\n\nfunction Zn(t, e) {\n    return On(Jn(t), Jn(e)) && t.limitType === e.limitType;\n}\n\n// TODO(b/29183165): This is used to get a unique string from a query to, for\n// example, use as a dictionary key, but the implementation is subject to\n// collisions. Make it collision-free.\nfunction ts(t) {\n    return `${$n(Jn(t))}|lt:${t.limitType}`;\n}\n\nfunction es(t) {\n    return `Query(target=${function(t) {\n        let e = t.path.canonicalString();\n        return null !== t.collectionGroup && (e += \" collectionGroup=\" + t.collectionGroup), \n        t.filters.length > 0 && (e += `, filters: [${t.filters.map((t => Rn(t))).join(\", \")}]`), \n        Ft(t.limit) || (e += \", limit: \" + t.limit), t.orderBy.length > 0 && (e += `, orderBy: [${t.orderBy.map((t => function(t) {\n            return `${t.field.canonicalString()} (${t.dir})`;\n        }(t))).join(\", \")}]`), t.startAt && (e += \", startAt: \", e += t.startAt.inclusive ? \"b:\" : \"a:\", \n        e += t.startAt.position.map((t => Qe(t))).join(\",\")), t.endAt && (e += \", endAt: \", \n        e += t.endAt.inclusive ? \"a:\" : \"b:\", e += t.endAt.position.map((t => Qe(t))).join(\",\")), \n        `Target(${e})`;\n    }(Jn(t))}; limitType=${t.limitType})`;\n}\n\n/** Returns whether `doc` matches the constraints of `query`. */ function ns(t, e) {\n    return e.isFoundDocument() && function(t, e) {\n        const n = e.key.path;\n        return null !== t.collectionGroup ? e.key.hasCollectionId(t.collectionGroup) && t.path.isPrefixOf(n) : ht.isDocumentKey(t.path) ? t.path.isEqual(n) : t.path.isImmediateParentOf(n);\n    }\n    /**\n * A document must have a value for every ordering clause in order to show up\n * in the results.\n */ (t, e) && function(t, e) {\n        // We must use `queryOrderBy()` to get the list of all orderBys (both implicit and explicit).\n        // Note that for OR queries, orderBy applies to all disjunction terms and implicit orderBys must\n        // be taken into account. For example, the query \"a > 1 || b==1\" has an implicit \"orderBy a\" due\n        // to the inequality, and is evaluated as \"a > 1 orderBy a || b==1 orderBy a\".\n        // A document with content of {b:1} matches the filters, but does not match the orderBy because\n        // it's missing the field 'a'.\n        for (const n of Hn(t)) \n        // order by key always matches\n        if (!n.field.isKeyField() && null === e.data.field(n.field)) return !1;\n        return !0;\n    }(t, e) && function(t, e) {\n        for (const n of t.filters) if (!n.matches(e)) return !1;\n        return !0;\n    }\n    /** Makes sure a document is within the bounds, if provided. */ (t, e) && function(t, e) {\n        if (t.startAt && !\n        /**\n * Returns true if a document sorts before a bound using the provided sort\n * order.\n */\n        function(t, e, n) {\n            const s = ln(t, e, n);\n            return t.inclusive ? s <= 0 : s < 0;\n        }(t.startAt, Hn(t), e)) return !1;\n        if (t.endAt && !function(t, e, n) {\n            const s = ln(t, e, n);\n            return t.inclusive ? s >= 0 : s > 0;\n        }(t.endAt, Hn(t), e)) return !1;\n        return !0;\n    }\n    /**\n * Returns the collection group that this query targets.\n *\n * PORTING NOTE: This is only used in the Web SDK to facilitate multi-tab\n * synchronization for query results.\n */ (t, e);\n}\n\nfunction ss(t) {\n    return t.collectionGroup || (t.path.length % 2 == 1 ? t.path.lastSegment() : t.path.get(t.path.length - 2));\n}\n\n/**\n * Returns a new comparator function that can be used to compare two documents\n * based on the Query's ordering constraint.\n */ function is(t) {\n    return (e, n) => {\n        let s = !1;\n        for (const i of Hn(t)) {\n            const t = rs(i, e, n);\n            if (0 !== t) return t;\n            s = s || i.field.isKeyField();\n        }\n        return 0;\n    };\n}\n\nfunction rs(t, e, n) {\n    const s = t.field.isKeyField() ? ht.comparator(e.key, n.key) : function(t, e, n) {\n        const s = e.data.field(t), i = n.data.field(t);\n        return null !== s && null !== i ? Ke(s, i) : O();\n    }(t.field, e, n);\n    switch (t.dir) {\n      case \"asc\" /* Direction.ASCENDING */ :\n        return s;\n\n      case \"desc\" /* Direction.DESCENDING */ :\n        return -1 * s;\n\n      default:\n        return O();\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A map implementation that uses objects as keys. Objects must have an\n * associated equals function and must be immutable. Entries in the map are\n * stored together with the key being produced from the mapKeyFn. This map\n * automatically handles collisions of keys.\n */ class os {\n    constructor(t, e) {\n        this.mapKeyFn = t, this.equalsFn = e, \n        /**\n         * The inner map for a key/value pair. Due to the possibility of collisions we\n         * keep a list of entries that we do a linear search through to find an actual\n         * match. Note that collisions should be rare, so we still expect near\n         * constant time lookups in practice.\n         */\n        this.inner = {}, \n        /** The number of entries stored in the map */\n        this.innerSize = 0;\n    }\n    /** Get a value for this key, or undefined if it does not exist. */    get(t) {\n        const e = this.mapKeyFn(t), n = this.inner[e];\n        if (void 0 !== n) for (const [e, s] of n) if (this.equalsFn(e, t)) return s;\n    }\n    has(t) {\n        return void 0 !== this.get(t);\n    }\n    /** Put this key and value in the map. */    set(t, e) {\n        const n = this.mapKeyFn(t), s = this.inner[n];\n        if (void 0 === s) return this.inner[n] = [ [ t, e ] ], void this.innerSize++;\n        for (let n = 0; n < s.length; n++) if (this.equalsFn(s[n][0], t)) \n        // This is updating an existing entry and does not increase `innerSize`.\n        return void (s[n] = [ t, e ]);\n        s.push([ t, e ]), this.innerSize++;\n    }\n    /**\n     * Remove this key from the map. Returns a boolean if anything was deleted.\n     */    delete(t) {\n        const e = this.mapKeyFn(t), n = this.inner[e];\n        if (void 0 === n) return !1;\n        for (let s = 0; s < n.length; s++) if (this.equalsFn(n[s][0], t)) return 1 === n.length ? delete this.inner[e] : n.splice(s, 1), \n        this.innerSize--, !0;\n        return !1;\n    }\n    forEach(t) {\n        ge(this.inner, ((e, n) => {\n            for (const [e, s] of n) t(e, s);\n        }));\n    }\n    isEmpty() {\n        return ye(this.inner);\n    }\n    size() {\n        return this.innerSize;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const us = new pe(ht.comparator);\n\nfunction cs() {\n    return us;\n}\n\nconst as = new pe(ht.comparator);\n\nfunction hs(...t) {\n    let e = as;\n    for (const n of t) e = e.insert(n.key, n);\n    return e;\n}\n\nfunction ls(t) {\n    let e = as;\n    return t.forEach(((t, n) => e = e.insert(t, n.overlayedDocument))), e;\n}\n\nfunction fs() {\n    return ws();\n}\n\nfunction ds() {\n    return ws();\n}\n\nfunction ws() {\n    return new os((t => t.toString()), ((t, e) => t.isEqual(e)));\n}\n\nconst _s = new pe(ht.comparator);\n\nconst ms = new Ee(ht.comparator);\n\nfunction gs(...t) {\n    let e = ms;\n    for (const n of t) e = e.add(n);\n    return e;\n}\n\nconst ys = new Ee(et);\n\nfunction ps() {\n    return ys;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */ function Is(t, e) {\n    if (t.useProto3Json) {\n        if (isNaN(e)) return {\n            doubleValue: \"NaN\"\n        };\n        if (e === 1 / 0) return {\n            doubleValue: \"Infinity\"\n        };\n        if (e === -1 / 0) return {\n            doubleValue: \"-Infinity\"\n        };\n    }\n    return {\n        doubleValue: Bt(e) ? \"-0\" : e\n    };\n}\n\n/**\n * Returns an IntegerValue for `value`.\n */ function Ts(t) {\n    return {\n        integerValue: \"\" + t\n    };\n}\n\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */ function Es(t, e) {\n    return Lt(e) ? Ts(e) : Is(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class As {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/**\n * Computes the local transform result against the provided `previousValue`,\n * optionally using the provided localWriteTime.\n */ function vs(t, e, n) {\n    return t instanceof bs ? function(t, e) {\n        const n = {\n            fields: {\n                __type__: {\n                    stringValue: \"server_timestamp\"\n                },\n                __local_write_time__: {\n                    timestampValue: {\n                        seconds: t.seconds,\n                        nanos: t.nanoseconds\n                    }\n                }\n            }\n        };\n        // We should avoid storing deeply nested server timestamp map values\n        // because we never use the intermediate \"previous values\".\n        // For example:\n        // previous: 42L, add: t1, result: t1 -> 42L\n        // previous: t1,  add: t2, result: t2 -> 42L (NOT t2 -> t1 -> 42L)\n        // previous: t2,  add: t3, result: t3 -> 42L (NOT t3 -> t2 -> t1 -> 42L)\n        // `getPreviousValue` recursively traverses server timestamps to find the\n        // least recent Value.\n                return e && Ne(e) && (e = ke(e)), e && (n.fields.__previous_value__ = e), \n        {\n            mapValue: n\n        };\n    }(n, e) : t instanceof Vs ? Ss(t, e) : t instanceof Ds ? Cs(t, e) : function(t, e) {\n        // PORTING NOTE: Since JavaScript's integer arithmetic is limited to 53 bit\n        // precision and resolves overflows by reducing precision, we do not\n        // manually cap overflows at 2^63.\n        const n = Ps(t, e), s = Ns(n) + Ns(t.gt);\n        return He(n) && He(t.gt) ? Ts(s) : Is(t.serializer, s);\n    }(t, e);\n}\n\n/**\n * Computes a final transform result after the transform has been acknowledged\n * by the server, potentially using the server-provided transformResult.\n */ function Rs(t, e, n) {\n    // The server just sends null as the transform result for array operations,\n    // so we have to calculate a result the same as we do for local\n    // applications.\n    return t instanceof Vs ? Ss(t, e) : t instanceof Ds ? Cs(t, e) : n;\n}\n\n/**\n * If this transform operation is not idempotent, returns the base value to\n * persist for this transform. If a base value is returned, the transform\n * operation is always applied to this base value, even if document has\n * already been updated.\n *\n * Base values provide consistent behavior for non-idempotent transforms and\n * allow us to return the same latency-compensated value even if the backend\n * has already applied the transform operation. The base value is null for\n * idempotent transforms, as they can be re-played even if the backend has\n * already applied them.\n *\n * @returns a base value to store along with the mutation, or null for\n * idempotent transforms.\n */ function Ps(t, e) {\n    return t instanceof xs ? He(n = e) || function(t) {\n        return !!t && \"doubleValue\" in t;\n    }\n    /** Returns true if `value` is either an IntegerValue or a DoubleValue. */ (n) ? e : {\n        integerValue: 0\n    } : null;\n    var n;\n}\n\n/** Transforms a value into a server-generated timestamp. */\nclass bs extends As {}\n\n/** Transforms an array value via a union operation. */ class Vs extends As {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\nfunction Ss(t, e) {\n    const n = ks(e);\n    for (const e of t.elements) n.some((t => qe(t, e))) || n.push(e);\n    return {\n        arrayValue: {\n            values: n\n        }\n    };\n}\n\n/** Transforms an array value via a remove operation. */ class Ds extends As {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\nfunction Cs(t, e) {\n    let n = ks(e);\n    for (const e of t.elements) n = n.filter((t => !qe(t, e)));\n    return {\n        arrayValue: {\n            values: n\n        }\n    };\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class xs extends As {\n    constructor(t, e) {\n        super(), this.serializer = t, this.gt = e;\n    }\n}\n\nfunction Ns(t) {\n    return Ce(t.integerValue || t.doubleValue);\n}\n\nfunction ks(t) {\n    return Je(t) && t.arrayValue.values ? t.arrayValue.values.slice() : [];\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class Ms {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\nfunction $s(t, e) {\n    return t.field.isEqual(e.field) && function(t, e) {\n        return t instanceof Vs && e instanceof Vs || t instanceof Ds && e instanceof Ds ? nt(t.elements, e.elements, qe) : t instanceof xs && e instanceof xs ? qe(t.gt, e.gt) : t instanceof bs && e instanceof bs;\n    }(t.transform, e.transform);\n}\n\n/** The result of successfully applying a mutation to the backend. */\nclass Os {\n    constructor(\n    /**\n     * The version at which the mutation was committed:\n     *\n     * - For most operations, this is the updateTime in the WriteResult.\n     * - For deletes, the commitTime of the WriteResponse (because deletes are\n     *   not stored and have no updateTime).\n     *\n     * Note that these versions can be different: No-op writes will not change\n     * the updateTime even though the commitTime advances.\n     */\n    t, \n    /**\n     * The resulting fields returned from the backend after a mutation\n     * containing field transforms has been committed. Contains one FieldValue\n     * for each FieldTransform that was in the mutation.\n     *\n     * Will be empty if the mutation did not contain any field transforms.\n     */\n    e) {\n        this.version = t, this.transformResults = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Fs {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Fs;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Fs(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Fs(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/** Returns true if the preconditions is valid for the given document. */ function Bs(t, e) {\n    return void 0 !== t.updateTime ? e.isFoundDocument() && e.version.isEqual(t.updateTime) : void 0 === t.exists || t.exists === e.isFoundDocument();\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class Ls {}\n\n/**\n * A utility method to calculate a `Mutation` representing the overlay from the\n * final state of the document, and a `FieldMask` representing the fields that\n * are mutated by the local mutations.\n */ function qs(t, e) {\n    if (!t.hasLocalMutations || e && 0 === e.fields.length) return null;\n    // mask is null when sets or deletes are applied to the current document.\n        if (null === e) return t.isNoDocument() ? new Ys(t.key, Fs.none()) : new js(t.key, t.data, Fs.none());\n    {\n        const n = t.data, s = un.empty();\n        let i = new Ee(at.comparator);\n        for (let t of e.fields) if (!i.has(t)) {\n            let e = n.field(t);\n            // If we are deleting a nested field, we take the immediate parent as\n            // the mask used to construct the resulting mutation.\n            // Justification: Nested fields can create parent fields implicitly. If\n            // only a leaf entry is deleted in later mutations, the parent field\n            // should still remain, but we may have lost this information.\n            // Consider mutation (foo.bar 1), then mutation (foo.bar delete()).\n            // This leaves the final result (foo, {}). Despite the fact that `doc`\n            // has the correct result, `foo` is not in `mask`, and the resulting\n            // mutation would miss `foo`.\n                        null === e && t.length > 1 && (t = t.popLast(), e = n.field(t)), null === e ? s.delete(t) : s.set(t, e), \n            i = i.add(t);\n        }\n        return new zs(t.key, s, new Re(i.toArray()), Fs.none());\n    }\n}\n\n/**\n * Applies this mutation to the given document for the purposes of computing a\n * new remote document. If the input document doesn't match the expected state\n * (e.g. it is invalid or outdated), the document type may transition to\n * unknown.\n *\n * @param mutation - The mutation to apply.\n * @param document - The document to mutate. The input document can be an\n *     invalid document if the client has no knowledge of the pre-mutation state\n *     of the document.\n * @param mutationResult - The result of applying the mutation from the backend.\n */ function Us(t, e, n) {\n    t instanceof js ? function(t, e, n) {\n        // Unlike setMutationApplyToLocalView, if we're applying a mutation to a\n        // remote document the server has accepted the mutation so the precondition\n        // must have held.\n        const s = t.value.clone(), i = Hs(t.fieldTransforms, e, n.transformResults);\n        s.setAll(i), e.convertToFoundDocument(n.version, s).setHasCommittedMutations();\n    }(t, e, n) : t instanceof zs ? function(t, e, n) {\n        if (!Bs(t.precondition, e)) \n        // Since the mutation was not rejected, we know that the precondition\n        // matched on the backend. We therefore must not have the expected version\n        // of the document in our cache and convert to an UnknownDocument with a\n        // known updateTime.\n        return void e.convertToUnknownDocument(n.version);\n        const s = Hs(t.fieldTransforms, e, n.transformResults), i = e.data;\n        i.setAll(Ws(t)), i.setAll(s), e.convertToFoundDocument(n.version, i).setHasCommittedMutations();\n    }(t, e, n) : function(t, e, n) {\n        // Unlike applyToLocalView, if we're applying a mutation to a remote\n        // document the server has accepted the mutation so the precondition must\n        // have held.\n        e.convertToNoDocument(n.version).setHasCommittedMutations();\n    }(0, e, n);\n}\n\n/**\n * Applies this mutation to the given document for the purposes of computing\n * the new local view of a document. If the input document doesn't match the\n * expected state, the document is not modified.\n *\n * @param mutation - The mutation to apply.\n * @param document - The document to mutate. The input document can be an\n *     invalid document if the client has no knowledge of the pre-mutation state\n *     of the document.\n * @param previousMask - The fields that have been updated before applying this mutation.\n * @param localWriteTime - A timestamp indicating the local write time of the\n *     batch this mutation is a part of.\n * @returns A `FieldMask` representing the fields that are changed by applying this mutation.\n */ function Ks(t, e, n, s) {\n    return t instanceof js ? function(t, e, n, s) {\n        if (!Bs(t.precondition, e)) \n        // The mutation failed to apply (e.g. a document ID created with add()\n        // caused a name collision).\n        return n;\n        const i = t.value.clone(), r = Js(t.fieldTransforms, s, e);\n        return i.setAll(r), e.convertToFoundDocument(e.version, i).setHasLocalMutations(), \n        null;\n // SetMutation overwrites all fields.\n        }\n    /**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ (t, e, n, s) : t instanceof zs ? function(t, e, n, s) {\n        if (!Bs(t.precondition, e)) return n;\n        const i = Js(t.fieldTransforms, s, e), r = e.data;\n        if (r.setAll(Ws(t)), r.setAll(i), e.convertToFoundDocument(e.version, r).setHasLocalMutations(), \n        null === n) return null;\n        return n.unionWith(t.fieldMask.fields).unionWith(t.fieldTransforms.map((t => t.field)));\n    }\n    /**\n * Returns a FieldPath/Value map with the content of the PatchMutation.\n */ (t, e, n, s) : function(t, e, n) {\n        if (Bs(t.precondition, e)) return e.convertToNoDocument(e.version).setHasLocalMutations(), \n        null;\n        return n;\n    }\n    /**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ (t, e, n);\n}\n\n/**\n * If this mutation is not idempotent, returns the base value to persist with\n * this mutation. If a base value is returned, the mutation is always applied\n * to this base value, even if document has already been updated.\n *\n * The base value is a sparse object that consists of only the document\n * fields for which this mutation contains a non-idempotent transformation\n * (e.g. a numeric increment). The provided value guarantees consistent\n * behavior for non-idempotent transforms and allow us to return the same\n * latency-compensated value even if the backend has already applied the\n * mutation. The base value is null for idempotent mutations, as they can be\n * re-played even if the backend has already applied them.\n *\n * @returns a base value to store along with the mutation, or null for\n * idempotent mutations.\n */ function Gs(t, e) {\n    let n = null;\n    for (const s of t.fieldTransforms) {\n        const t = e.data.field(s.field), i = Ps(s.transform, t || null);\n        null != i && (null === n && (n = un.empty()), n.set(s.field, i));\n    }\n    return n || null;\n}\n\nfunction Qs(t, e) {\n    return t.type === e.type && (!!t.key.isEqual(e.key) && (!!t.precondition.isEqual(e.precondition) && (!!function(t, e) {\n        return void 0 === t && void 0 === e || !(!t || !e) && nt(t, e, ((t, e) => $s(t, e)));\n    }(t.fieldTransforms, e.fieldTransforms) && (0 /* MutationType.Set */ === t.type ? t.value.isEqual(e.value) : 1 /* MutationType.Patch */ !== t.type || t.data.isEqual(e.data) && t.fieldMask.isEqual(e.fieldMask)))));\n}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class js extends Ls {\n    constructor(t, e, n, s = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = s, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\nclass zs extends Ls {\n    constructor(t, e, n, s, i = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = s, \n        this.fieldTransforms = i, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\nfunction Ws(t) {\n    const e = new Map;\n    return t.fieldMask.fields.forEach((n => {\n        if (!n.isEmpty()) {\n            const s = t.data.field(n);\n            e.set(n, s);\n        }\n    })), e;\n}\n\n/**\n * Creates a list of \"transform results\" (a transform result is a field value\n * representing the result of applying a transform) for use after a mutation\n * containing transforms has been acknowledged by the server.\n *\n * @param fieldTransforms - The field transforms to apply the result to.\n * @param mutableDocument - The current state of the document after applying all\n * previous mutations.\n * @param serverTransformResults - The transform results received by the server.\n * @returns The transform results list.\n */ function Hs(t, e, n) {\n    const s = new Map;\n    F(t.length === n.length);\n    for (let i = 0; i < n.length; i++) {\n        const r = t[i], o = r.transform, u = e.data.field(r.field);\n        s.set(r.field, Rs(o, u, n[i]));\n    }\n    return s;\n}\n\n/**\n * Creates a list of \"transform results\" (a transform result is a field value\n * representing the result of applying a transform) for use when applying a\n * transform locally.\n *\n * @param fieldTransforms - The field transforms to apply the result to.\n * @param localWriteTime - The local time of the mutation (used to\n *     generate ServerTimestampValues).\n * @param mutableDocument - The document to apply transforms on.\n * @returns The transform results list.\n */ function Js(t, e, n) {\n    const s = new Map;\n    for (const i of t) {\n        const t = i.transform, r = n.data.field(i.field);\n        s.set(i.field, vs(t, r, e));\n    }\n    return s;\n}\n\n/** A mutation that deletes the document at the given key. */ class Ys extends Ls {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\nclass Xs extends Ls {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A batch of mutations that will be sent as one unit to the backend.\n */ class Zs {\n    /**\n     * @param batchId - The unique ID of this mutation batch.\n     * @param localWriteTime - The original write time of this mutation.\n     * @param baseMutations - Mutations that are used to populate the base\n     * values when this mutation is applied locally. This can be used to locally\n     * overwrite values that are persisted in the remote document cache. Base\n     * mutations are never sent to the backend.\n     * @param mutations - The user-provided mutations in this mutation batch.\n     * User-provided mutations are applied both locally and remotely on the\n     * backend.\n     */\n    constructor(t, e, n, s) {\n        this.batchId = t, this.localWriteTime = e, this.baseMutations = n, this.mutations = s;\n    }\n    /**\n     * Applies all the mutations in this MutationBatch to the specified document\n     * to compute the state of the remote document\n     *\n     * @param document - The document to apply mutations to.\n     * @param batchResult - The result of applying the MutationBatch to the\n     * backend.\n     */    applyToRemoteDocument(t, e) {\n        const n = e.mutationResults;\n        for (let e = 0; e < this.mutations.length; e++) {\n            const s = this.mutations[e];\n            if (s.key.isEqual(t.key)) {\n                Us(s, t, n[e]);\n            }\n        }\n    }\n    /**\n     * Computes the local view of a document given all the mutations in this\n     * batch.\n     *\n     * @param document - The document to apply mutations to.\n     * @param mutatedFields - Fields that have been updated before applying this mutation batch.\n     * @returns A `FieldMask` representing all the fields that are mutated.\n     */    applyToLocalView(t, e) {\n        // First, apply the base state. This allows us to apply non-idempotent\n        // transform against a consistent set of values.\n        for (const n of this.baseMutations) n.key.isEqual(t.key) && (e = Ks(n, t, e, this.localWriteTime));\n        // Second, apply all user-provided mutations.\n                for (const n of this.mutations) n.key.isEqual(t.key) && (e = Ks(n, t, e, this.localWriteTime));\n        return e;\n    }\n    /**\n     * Computes the local view for all provided documents given the mutations in\n     * this batch. Returns a `DocumentKey` to `Mutation` map which can be used to\n     * replace all the mutation applications.\n     */    applyToLocalDocumentSet(t, e) {\n        // TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations\n        // directly (as done in `applyToLocalView()`), we can reduce the complexity\n        // to O(n).\n        const n = ds();\n        return this.mutations.forEach((s => {\n            const i = t.get(s.key), r = i.overlayedDocument;\n            // TODO(mutabledocuments): This method should take a MutableDocumentMap\n            // and we should remove this cast.\n                        let o = this.applyToLocalView(r, i.mutatedFields);\n            // Set mutatedFields to null if the document is only from local mutations.\n            // This creates a Set or Delete mutation, instead of trying to create a\n            // patch mutation as the overlay.\n                        o = e.has(s.key) ? null : o;\n            const u = qs(r, o);\n            null !== u && n.set(s.key, u), r.isValidDocument() || r.convertToNoDocument(rt.min());\n        })), n;\n    }\n    keys() {\n        return this.mutations.reduce(((t, e) => t.add(e.key)), gs());\n    }\n    isEqual(t) {\n        return this.batchId === t.batchId && nt(this.mutations, t.mutations, ((t, e) => Qs(t, e))) && nt(this.baseMutations, t.baseMutations, ((t, e) => Qs(t, e)));\n    }\n}\n\n/** The result of applying a mutation batch to the backend. */ class ti {\n    constructor(t, e, n, \n    /**\n     * A pre-computed mapping from each mutated document to the resulting\n     * version.\n     */\n    s) {\n        this.batch = t, this.commitVersion = e, this.mutationResults = n, this.docVersions = s;\n    }\n    /**\n     * Creates a new MutationBatchResult for the given batch and results. There\n     * must be one result for each mutation in the batch. This static factory\n     * caches a document=&gt;version mapping (docVersions).\n     */    static from(t, e, n) {\n        F(t.mutations.length === n.length);\n        let s = _s;\n        const i = t.mutations;\n        for (let t = 0; t < i.length; t++) s = s.insert(i[t].key, n[t].version);\n        return new ti(t, e, n, s);\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Representation of an overlay computed by Firestore.\n *\n * Holds information about a mutation and the largest batch id in Firestore when\n * the mutation was created.\n */ class ei {\n    constructor(t, e) {\n        this.largestBatchId = t, this.mutation = e;\n    }\n    getKey() {\n        return this.mutation.key;\n    }\n    isEqual(t) {\n        return null !== t && this.mutation === t.mutation;\n    }\n    toString() {\n        return `Overlay{\\n      largestBatchId: ${this.largestBatchId},\\n      mutation: ${this.mutation.toString()}\\n    }`;\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Concrete implementation of the Aggregate type.\n */ class ni {\n    constructor(t, e, n) {\n        this.alias = t, this.yt = e, this.fieldPath = n;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class si {\n    constructor(t, e) {\n        this.count = t, this.unchangedNames = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */ var ii, ri;\n\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\nfunction oi(t) {\n    switch (t) {\n      default:\n        return O();\n\n      case q.CANCELLED:\n      case q.UNKNOWN:\n      case q.DEADLINE_EXCEEDED:\n      case q.RESOURCE_EXHAUSTED:\n      case q.INTERNAL:\n      case q.UNAVAILABLE:\n // Unauthenticated means something went wrong with our token and we need\n        // to retry with new credentials which will happen automatically.\n              case q.UNAUTHENTICATED:\n        return !1;\n\n      case q.INVALID_ARGUMENT:\n      case q.NOT_FOUND:\n      case q.ALREADY_EXISTS:\n      case q.PERMISSION_DENIED:\n      case q.FAILED_PRECONDITION:\n // Aborted might be retried in some scenarios, but that is dependant on\n        // the context and should handled individually by the calling code.\n        // See https://cloud.google.com/apis/design/errors.\n              case q.ABORTED:\n      case q.OUT_OF_RANGE:\n      case q.UNIMPLEMENTED:\n      case q.DATA_LOSS:\n        return !0;\n    }\n}\n\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a write operation.\n *\n * Write operations must be handled specially because as of b/119437764, ABORTED\n * errors on the write stream should be retried too (even though ABORTED errors\n * are not generally retryable).\n *\n * Note that during the initial handshake on the write stream an ABORTED error\n * signals that we should discard our stream token (i.e. it is permanent). This\n * means a handshake error should be classified with isPermanentError, above.\n */\n/**\n * Maps an error Code from GRPC status code number, like 0, 1, or 14. These\n * are not the same as HTTP status codes.\n *\n * @returns The Code equivalent to the given GRPC status code. Fails if there\n *     is no match.\n */\nfunction ui(t) {\n    if (void 0 === t) \n    // This shouldn't normally happen, but in certain error cases (like trying\n    // to send invalid proto messages) we may get an error with no GRPC code.\n    return k(\"GRPC error has no .code\"), q.UNKNOWN;\n    switch (t) {\n      case ii.OK:\n        return q.OK;\n\n      case ii.CANCELLED:\n        return q.CANCELLED;\n\n      case ii.UNKNOWN:\n        return q.UNKNOWN;\n\n      case ii.DEADLINE_EXCEEDED:\n        return q.DEADLINE_EXCEEDED;\n\n      case ii.RESOURCE_EXHAUSTED:\n        return q.RESOURCE_EXHAUSTED;\n\n      case ii.INTERNAL:\n        return q.INTERNAL;\n\n      case ii.UNAVAILABLE:\n        return q.UNAVAILABLE;\n\n      case ii.UNAUTHENTICATED:\n        return q.UNAUTHENTICATED;\n\n      case ii.INVALID_ARGUMENT:\n        return q.INVALID_ARGUMENT;\n\n      case ii.NOT_FOUND:\n        return q.NOT_FOUND;\n\n      case ii.ALREADY_EXISTS:\n        return q.ALREADY_EXISTS;\n\n      case ii.PERMISSION_DENIED:\n        return q.PERMISSION_DENIED;\n\n      case ii.FAILED_PRECONDITION:\n        return q.FAILED_PRECONDITION;\n\n      case ii.ABORTED:\n        return q.ABORTED;\n\n      case ii.OUT_OF_RANGE:\n        return q.OUT_OF_RANGE;\n\n      case ii.UNIMPLEMENTED:\n        return q.UNIMPLEMENTED;\n\n      case ii.DATA_LOSS:\n        return q.DATA_LOSS;\n\n      default:\n        return O();\n    }\n}\n\n/**\n * Converts an HTTP response's error status to the equivalent error code.\n *\n * @param status - An HTTP error response status (\"FAILED_PRECONDITION\",\n * \"UNKNOWN\", etc.)\n * @returns The equivalent Code. Non-matching responses are mapped to\n *     Code.UNKNOWN.\n */ (ri = ii || (ii = {}))[ri.OK = 0] = \"OK\", ri[ri.CANCELLED = 1] = \"CANCELLED\", \nri[ri.UNKNOWN = 2] = \"UNKNOWN\", ri[ri.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nri[ri.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", ri[ri.NOT_FOUND = 5] = \"NOT_FOUND\", \nri[ri.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", ri[ri.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nri[ri.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", ri[ri.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nri[ri.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", ri[ri.ABORTED = 10] = \"ABORTED\", \nri[ri.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", ri[ri.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nri[ri.INTERNAL = 13] = \"INTERNAL\", ri[ri.UNAVAILABLE = 14] = \"UNAVAILABLE\", ri[ri.DATA_LOSS = 15] = \"DATA_LOSS\";\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Manages \"testing hooks\", hooks into the internals of the SDK to verify\n * internal state and events during integration tests. Do not use this class\n * except for testing purposes.\n *\n * There are two ways to retrieve the global singleton instance of this class:\n * 1. The `instance` property, which returns null if the global singleton\n *      instance has not been created. Use this property if the caller should\n *      \"do nothing\" if there are no testing hooks registered, such as when\n *      delivering an event to notify registered callbacks.\n * 2. The `getOrCreateInstance()` method, which creates the global singleton\n *      instance if it has not been created. Use this method if the instance is\n *      needed to, for example, register a callback.\n *\n * @internal\n */\nclass ci {\n    constructor() {\n        this.onExistenceFilterMismatchCallbacks = new Map;\n    }\n    /**\n     * Returns the singleton instance of this class, or null if it has not been\n     * initialized.\n     */    static get instance() {\n        return ai;\n    }\n    /**\n     * Returns the singleton instance of this class, creating it if is has never\n     * been created before.\n     */    static getOrCreateInstance() {\n        return null === ai && (ai = new ci), ai;\n    }\n    /**\n     * Registers a callback to be notified when an existence filter mismatch\n     * occurs in the Watch listen stream.\n     *\n     * The relative order in which callbacks are notified is unspecified; do not\n     * rely on any particular ordering. If a given callback is registered multiple\n     * times then it will be notified multiple times, once per registration.\n     *\n     * @param callback the callback to invoke upon existence filter mismatch.\n     *\n     * @return a function that, when called, unregisters the given callback; only\n     * the first invocation of the returned function does anything; all subsequent\n     * invocations do nothing.\n     */    onExistenceFilterMismatch(t) {\n        const e = Symbol();\n        return this.onExistenceFilterMismatchCallbacks.set(e, t), () => this.onExistenceFilterMismatchCallbacks.delete(e);\n    }\n    /**\n     * Invokes all currently-registered `onExistenceFilterMismatch` callbacks.\n     * @param info Information about the existence filter mismatch.\n     */    notifyOnExistenceFilterMismatch(t) {\n        this.onExistenceFilterMismatchCallbacks.forEach((e => e(t)));\n    }\n}\n\n/** The global singleton instance of `TestingHooks`. */ let ai = null;\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An instance of the Platform's 'TextEncoder' implementation.\n */ function hi() {\n    return new TextEncoder;\n}\n\n/**\n * An instance of the Platform's 'TextDecoder' implementation.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst li = new Integer([ 4294967295, 4294967295 ], 0);\n\n// Hash a string using md5 hashing algorithm.\nfunction fi(t) {\n    const e = hi().encode(t), n = new Md5;\n    return n.update(e), new Uint8Array(n.digest());\n}\n\n// Interpret the 16 bytes array as two 64-bit unsigned integers, encoded using\n// 2’s complement using little endian.\nfunction di(t) {\n    const e = new DataView(t.buffer), n = e.getUint32(0, /* littleEndian= */ !0), s = e.getUint32(4, /* littleEndian= */ !0), i = e.getUint32(8, /* littleEndian= */ !0), r = e.getUint32(12, /* littleEndian= */ !0);\n    return [ new Integer([ n, s ], 0), new Integer([ i, r ], 0) ];\n}\n\nclass wi {\n    constructor(t, e, n) {\n        if (this.bitmap = t, this.padding = e, this.hashCount = n, e < 0 || e >= 8) throw new _i(`Invalid padding: ${e}`);\n        if (n < 0) throw new _i(`Invalid hash count: ${n}`);\n        if (t.length > 0 && 0 === this.hashCount) \n        // Only empty bloom filter can have 0 hash count.\n        throw new _i(`Invalid hash count: ${n}`);\n        if (0 === t.length && 0 !== e) \n        // Empty bloom filter should have 0 padding.\n        throw new _i(`Invalid padding when bitmap length is 0: ${e}`);\n        this.It = 8 * t.length - e, \n        // Set the bit count in Integer to avoid repetition in mightContain().\n        this.Tt = Integer.fromNumber(this.It);\n    }\n    // Calculate the ith hash value based on the hashed 64bit integers,\n    // and calculate its corresponding bit index in the bitmap to be checked.\n    Et(t, e, n) {\n        // Calculate hashed value h(i) = h1 + (i * h2).\n        let s = t.add(e.multiply(Integer.fromNumber(n)));\n        // Wrap if hash value overflow 64bit.\n                return 1 === s.compare(li) && (s = new Integer([ s.getBits(0), s.getBits(1) ], 0)), \n        s.modulo(this.Tt).toNumber();\n    }\n    // Return whether the bit on the given index in the bitmap is set to 1.\n    At(t) {\n        return 0 != (this.bitmap[Math.floor(t / 8)] & 1 << t % 8);\n    }\n    vt(t) {\n        // Empty bitmap should always return false on membership check.\n        if (0 === this.It) return !1;\n        const e = fi(t), [n, s] = di(e);\n        for (let t = 0; t < this.hashCount; t++) {\n            const e = this.Et(n, s, t);\n            if (!this.At(e)) return !1;\n        }\n        return !0;\n    }\n    /** Create bloom filter for testing purposes only. */    static create(t, e, n) {\n        const s = t % 8 == 0 ? 0 : 8 - t % 8, i = new Uint8Array(Math.ceil(t / 8)), r = new wi(i, s, e);\n        return n.forEach((t => r.insert(t))), r;\n    }\n    insert(t) {\n        if (0 === this.It) return;\n        const e = fi(t), [n, s] = di(e);\n        for (let t = 0; t < this.hashCount; t++) {\n            const e = this.Et(n, s, t);\n            this.Rt(e);\n        }\n    }\n    Rt(t) {\n        const e = Math.floor(t / 8), n = t % 8;\n        this.bitmap[e] |= 1 << n;\n    }\n}\n\nclass _i extends Error {\n    constructor() {\n        super(...arguments), this.name = \"BloomFilterError\";\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An event from the RemoteStore. It is split into targetChanges (changes to the\n * state or the set of documents in our watched targets) and documentUpdates\n * (changes to the actual documents).\n */ class mi {\n    constructor(\n    /**\n     * The snapshot version this event brings us up to, or MIN if not set.\n     */\n    t, \n    /**\n     * A map from target to changes to the target. See TargetChange.\n     */\n    e, \n    /**\n     * A map of targets that is known to be inconsistent, and the purpose for\n     * re-listening. Listens for these targets should be re-established without\n     * resume tokens.\n     */\n    n, \n    /**\n     * A set of which documents have changed or been deleted, along with the\n     * doc's new values (if not deleted).\n     */\n    s, \n    /**\n     * A set of which document updates are due only to limbo resolution targets.\n     */\n    i) {\n        this.snapshotVersion = t, this.targetChanges = e, this.targetMismatches = n, this.documentUpdates = s, \n        this.resolvedLimboDocuments = i;\n    }\n    /**\n     * HACK: Views require RemoteEvents in order to determine whether the view is\n     * CURRENT, but secondary tabs don't receive remote events. So this method is\n     * used to create a synthesized RemoteEvent that can be used to apply a\n     * CURRENT status change to a View, for queries executed in a different tab.\n     */\n    // PORTING NOTE: Multi-tab only\n    static createSynthesizedRemoteEventForCurrentChange(t, e, n) {\n        const s = new Map;\n        return s.set(t, gi.createSynthesizedTargetChangeForCurrentChange(t, e, n)), new mi(rt.min(), s, new pe(et), cs(), gs());\n    }\n}\n\n/**\n * A TargetChange specifies the set of changes for a specific target as part of\n * a RemoteEvent. These changes track which documents are added, modified or\n * removed, as well as the target's resume token and whether the target is\n * marked CURRENT.\n * The actual changes *to* documents are not part of the TargetChange since\n * documents may be part of multiple targets.\n */ class gi {\n    constructor(\n    /**\n     * An opaque, server-assigned token that allows watching a query to be resumed\n     * after disconnecting without retransmitting all the data that matches the\n     * query. The resume token essentially identifies a point in time from which\n     * the server should resume sending results.\n     */\n    t, \n    /**\n     * The \"current\" (synced) status of this target. Note that \"current\"\n     * has special meaning in the RPC protocol that implies that a target is\n     * both up-to-date and consistent with the rest of the watch stream.\n     */\n    e, \n    /**\n     * The set of documents that were newly assigned to this target as part of\n     * this remote event.\n     */\n    n, \n    /**\n     * The set of documents that were already assigned to this target but received\n     * an update during this remote event.\n     */\n    s, \n    /**\n     * The set of documents that were removed from this target as part of this\n     * remote event.\n     */\n    i) {\n        this.resumeToken = t, this.current = e, this.addedDocuments = n, this.modifiedDocuments = s, \n        this.removedDocuments = i;\n    }\n    /**\n     * This method is used to create a synthesized TargetChanges that can be used to\n     * apply a CURRENT status change to a View (for queries executed in a different\n     * tab) or for new queries (to raise snapshots with correct CURRENT status).\n     */    static createSynthesizedTargetChangeForCurrentChange(t, e, n) {\n        return new gi(n, e, gs(), gs(), gs());\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a changed document and a list of target ids to which this change\n * applies.\n *\n * If document has been deleted NoDocument will be provided.\n */ class yi {\n    constructor(\n    /** The new document applies to all of these targets. */\n    t, \n    /** The new document is removed from all of these targets. */\n    e, \n    /** The key of the document for this change. */\n    n, \n    /**\n     * The new document or NoDocument if it was deleted. Is null if the\n     * document went out of view without the server sending a new document.\n     */\n    s) {\n        this.Pt = t, this.removedTargetIds = e, this.key = n, this.bt = s;\n    }\n}\n\nclass pi {\n    constructor(t, e) {\n        this.targetId = t, this.Vt = e;\n    }\n}\n\nclass Ii {\n    constructor(\n    /** What kind of change occurred to the watch target. */\n    t, \n    /** The target IDs that were added/removed/set. */\n    e, \n    /**\n     * An opaque, server-assigned token that allows watching a target to be\n     * resumed after disconnecting without retransmitting all the data that\n     * matches the target. The resume token essentially identifies a point in\n     * time from which the server should resume sending results.\n     */\n    n = Ve.EMPTY_BYTE_STRING\n    /** An RPC error indicating why the watch failed. */ , s = null) {\n        this.state = t, this.targetIds = e, this.resumeToken = n, this.cause = s;\n    }\n}\n\n/** Tracks the internal state of a Watch target. */ class Ti {\n    constructor() {\n        /**\n         * The number of pending responses (adds or removes) that we are waiting on.\n         * We only consider targets active that have no pending responses.\n         */\n        this.St = 0, \n        /**\n         * Keeps track of the document changes since the last raised snapshot.\n         *\n         * These changes are continuously updated as we receive document updates and\n         * always reflect the current set of changes against the last issued snapshot.\n         */\n        this.Dt = vi(), \n        /** See public getters for explanations of these fields. */\n        this.Ct = Ve.EMPTY_BYTE_STRING, this.xt = !1, \n        /**\n         * Whether this target state should be included in the next snapshot. We\n         * initialize to true so that newly-added targets are included in the next\n         * RemoteEvent.\n         */\n        this.Nt = !0;\n    }\n    /**\n     * Whether this target has been marked 'current'.\n     *\n     * 'Current' has special meaning in the RPC protocol: It implies that the\n     * Watch backend has sent us all changes up to the point at which the target\n     * was added and that the target is consistent with the rest of the watch\n     * stream.\n     */    get current() {\n        return this.xt;\n    }\n    /** The last resume token sent to us for this target. */    get resumeToken() {\n        return this.Ct;\n    }\n    /** Whether this target has pending target adds or target removes. */    get kt() {\n        return 0 !== this.St;\n    }\n    /** Whether we have modified any state that should trigger a snapshot. */    get Mt() {\n        return this.Nt;\n    }\n    /**\n     * Applies the resume token to the TargetChange, but only when it has a new\n     * value. Empty resumeTokens are discarded.\n     */    $t(t) {\n        t.approximateByteSize() > 0 && (this.Nt = !0, this.Ct = t);\n    }\n    /**\n     * Creates a target change from the current set of changes.\n     *\n     * To reset the document changes after raising this snapshot, call\n     * `clearPendingChanges()`.\n     */    Ot() {\n        let t = gs(), e = gs(), n = gs();\n        return this.Dt.forEach(((s, i) => {\n            switch (i) {\n              case 0 /* ChangeType.Added */ :\n                t = t.add(s);\n                break;\n\n              case 2 /* ChangeType.Modified */ :\n                e = e.add(s);\n                break;\n\n              case 1 /* ChangeType.Removed */ :\n                n = n.add(s);\n                break;\n\n              default:\n                O();\n            }\n        })), new gi(this.Ct, this.xt, t, e, n);\n    }\n    /**\n     * Resets the document changes and sets `hasPendingChanges` to false.\n     */    Ft() {\n        this.Nt = !1, this.Dt = vi();\n    }\n    Bt(t, e) {\n        this.Nt = !0, this.Dt = this.Dt.insert(t, e);\n    }\n    Lt(t) {\n        this.Nt = !0, this.Dt = this.Dt.remove(t);\n    }\n    qt() {\n        this.St += 1;\n    }\n    Ut() {\n        this.St -= 1;\n    }\n    Kt() {\n        this.Nt = !0, this.xt = !0;\n    }\n}\n\n/**\n * A helper class to accumulate watch changes into a RemoteEvent.\n */\nclass Ei {\n    constructor(t) {\n        this.Gt = t, \n        /** The internal state of all tracked targets. */\n        this.Qt = new Map, \n        /** Keeps track of the documents to update since the last raised snapshot. */\n        this.jt = cs(), \n        /** A mapping of document keys to their set of target IDs. */\n        this.zt = Ai(), \n        /**\n         * A map of targets with existence filter mismatches. These targets are\n         * known to be inconsistent and their listens needs to be re-established by\n         * RemoteStore.\n         */\n        this.Wt = new pe(et);\n    }\n    /**\n     * Processes and adds the DocumentWatchChange to the current set of changes.\n     */    Ht(t) {\n        for (const e of t.Pt) t.bt && t.bt.isFoundDocument() ? this.Jt(e, t.bt) : this.Yt(e, t.key, t.bt);\n        for (const e of t.removedTargetIds) this.Yt(e, t.key, t.bt);\n    }\n    /** Processes and adds the WatchTargetChange to the current set of changes. */    Xt(t) {\n        this.forEachTarget(t, (e => {\n            const n = this.Zt(e);\n            switch (t.state) {\n              case 0 /* WatchTargetChangeState.NoChange */ :\n                this.te(e) && n.$t(t.resumeToken);\n                break;\n\n              case 1 /* WatchTargetChangeState.Added */ :\n                // We need to decrement the number of pending acks needed from watch\n                // for this targetId.\n                n.Ut(), n.kt || \n                // We have a freshly added target, so we need to reset any state\n                // that we had previously. This can happen e.g. when remove and add\n                // back a target for existence filter mismatches.\n                n.Ft(), n.$t(t.resumeToken);\n                break;\n\n              case 2 /* WatchTargetChangeState.Removed */ :\n                // We need to keep track of removed targets to we can post-filter and\n                // remove any target changes.\n                // We need to decrement the number of pending acks needed from watch\n                // for this targetId.\n                n.Ut(), n.kt || this.removeTarget(e);\n                break;\n\n              case 3 /* WatchTargetChangeState.Current */ :\n                this.te(e) && (n.Kt(), n.$t(t.resumeToken));\n                break;\n\n              case 4 /* WatchTargetChangeState.Reset */ :\n                this.te(e) && (\n                // Reset the target and synthesizes removes for all existing\n                // documents. The backend will re-add any documents that still\n                // match the target before it sends the next global snapshot.\n                this.ee(e), n.$t(t.resumeToken));\n                break;\n\n              default:\n                O();\n            }\n        }));\n    }\n    /**\n     * Iterates over all targetIds that the watch change applies to: either the\n     * targetIds explicitly listed in the change or the targetIds of all currently\n     * active targets.\n     */    forEachTarget(t, e) {\n        t.targetIds.length > 0 ? t.targetIds.forEach(e) : this.Qt.forEach(((t, n) => {\n            this.te(n) && e(n);\n        }));\n    }\n    /**\n     * Handles existence filters and synthesizes deletes for filter mismatches.\n     * Targets that are invalidated by filter mismatches are added to\n     * `pendingTargetResets`.\n     */    ne(t) {\n        var e;\n        const n = t.targetId, s = t.Vt.count, i = this.se(n);\n        if (i) {\n            const r = i.target;\n            if (Fn(r)) if (0 === s) {\n                // The existence filter told us the document does not exist. We deduce\n                // that this document does not exist and apply a deleted document to\n                // our updates. Without applying this deleted document there might be\n                // another query that will raise this document as part of a snapshot\n                // until it is resolved, essentially exposing inconsistency between\n                // queries.\n                const t = new ht(r.path);\n                this.Yt(n, t, an.newNoDocument(t, rt.min()));\n            } else F(1 === s); else {\n                const i = this.ie(n);\n                // Existence filter mismatch. Mark the documents as being in limbo, and\n                // raise a snapshot with `isFromCache:true`.\n                                if (i !== s) {\n                    // Apply bloom filter to identify and mark removed documents.\n                    const s = this.re(t, i);\n                    if (0 /* BloomFilterApplicationStatus.Success */ !== s) {\n                        // If bloom filter application fails, we reset the mapping and\n                        // trigger re-run of the query.\n                        this.ee(n);\n                        const t = 2 /* BloomFilterApplicationStatus.FalsePositive */ === s ? \"TargetPurposeExistenceFilterMismatchBloom\" /* TargetPurpose.ExistenceFilterMismatchBloom */ : \"TargetPurposeExistenceFilterMismatch\" /* TargetPurpose.ExistenceFilterMismatch */;\n                        this.Wt = this.Wt.insert(n, t);\n                    }\n                    null === (e = ci.instance) || void 0 === e || e.notifyOnExistenceFilterMismatch(function(t, e, n) {\n                        var s, i, r, o, u, c;\n                        const a = {\n                            localCacheCount: e,\n                            existenceFilterCount: n.count\n                        }, h = n.unchangedNames;\n                        h && (a.bloomFilter = {\n                            applied: 0 /* BloomFilterApplicationStatus.Success */ === t,\n                            hashCount: null !== (s = null == h ? void 0 : h.hashCount) && void 0 !== s ? s : 0,\n                            bitmapLength: null !== (o = null === (r = null === (i = null == h ? void 0 : h.bits) || void 0 === i ? void 0 : i.bitmap) || void 0 === r ? void 0 : r.length) && void 0 !== o ? o : 0,\n                            padding: null !== (c = null === (u = null == h ? void 0 : h.bits) || void 0 === u ? void 0 : u.padding) && void 0 !== c ? c : 0\n                        });\n                        return a;\n                    }\n                    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (s, i, t.Vt));\n                }\n            }\n        }\n    }\n    /**\n     * Apply bloom filter to remove the deleted documents, and return the\n     * application status.\n     */    re(t, e) {\n        const {unchangedNames: n, count: s} = t.Vt;\n        if (!n || !n.bits) return 1 /* BloomFilterApplicationStatus.Skipped */;\n        const {bits: {bitmap: i = \"\", padding: r = 0}, hashCount: o = 0} = n;\n        let u, c;\n        try {\n            u = xe(i).toUint8Array();\n        } catch (t) {\n            if (t instanceof Pe) return M(\"Decoding the base64 bloom filter in existence filter failed (\" + t.message + \"); ignoring the bloom filter and falling back to full re-query.\"), \n            1 /* BloomFilterApplicationStatus.Skipped */;\n            throw t;\n        }\n        try {\n            // BloomFilter throws error if the inputs are invalid.\n            c = new wi(u, r, o);\n        } catch (t) {\n            return M(t instanceof _i ? \"BloomFilter error: \" : \"Applying bloom filter failed: \", t), \n            1 /* BloomFilterApplicationStatus.Skipped */;\n        }\n        if (0 === c.It) return 1 /* BloomFilterApplicationStatus.Skipped */;\n        return s !== e - this.oe(t.targetId, c) ? 2 /* BloomFilterApplicationStatus.FalsePositive */ : 0 /* BloomFilterApplicationStatus.Success */;\n    }\n    /**\n     * Filter out removed documents based on bloom filter membership result and\n     * return number of documents removed.\n     */    oe(t, e) {\n        const n = this.Gt.getRemoteKeysForTarget(t);\n        let s = 0;\n        return n.forEach((n => {\n            const i = this.Gt.ue(), r = `projects/${i.projectId}/databases/${i.database}/documents/${n.path.canonicalString()}`;\n            e.vt(r) || (this.Yt(t, n, /*updatedDocument=*/ null), s++);\n        })), s;\n    }\n    /**\n     * Converts the currently accumulated state into a remote event at the\n     * provided snapshot version. Resets the accumulated changes before returning.\n     */    ce(t) {\n        const e = new Map;\n        this.Qt.forEach(((n, s) => {\n            const i = this.se(s);\n            if (i) {\n                if (n.current && Fn(i.target)) {\n                    // Document queries for document that don't exist can produce an empty\n                    // result set. To update our local cache, we synthesize a document\n                    // delete if we have not previously received the document. This\n                    // resolves the limbo state of the document, removing it from\n                    // limboDocumentRefs.\n                    // TODO(dimond): Ideally we would have an explicit lookup target\n                    // instead resulting in an explicit delete message and we could\n                    // remove this special logic.\n                    const e = new ht(i.target.path);\n                    null !== this.jt.get(e) || this.ae(s, e) || this.Yt(s, e, an.newNoDocument(e, t));\n                }\n                n.Mt && (e.set(s, n.Ot()), n.Ft());\n            }\n        }));\n        let n = gs();\n        // We extract the set of limbo-only document updates as the GC logic\n        // special-cases documents that do not appear in the target cache.\n        \n        // TODO(gsoltis): Expand on this comment once GC is available in the JS\n        // client.\n                this.zt.forEach(((t, e) => {\n            let s = !0;\n            e.forEachWhile((t => {\n                const e = this.se(t);\n                return !e || \"TargetPurposeLimboResolution\" /* TargetPurpose.LimboResolution */ === e.purpose || (s = !1, \n                !1);\n            })), s && (n = n.add(t));\n        })), this.jt.forEach(((e, n) => n.setReadTime(t)));\n        const s = new mi(t, e, this.Wt, this.jt, n);\n        return this.jt = cs(), this.zt = Ai(), this.Wt = new pe(et), s;\n    }\n    /**\n     * Adds the provided document to the internal list of document updates and\n     * its document key to the given target's mapping.\n     */\n    // Visible for testing.\n    Jt(t, e) {\n        if (!this.te(t)) return;\n        const n = this.ae(t, e.key) ? 2 /* ChangeType.Modified */ : 0 /* ChangeType.Added */;\n        this.Zt(t).Bt(e.key, n), this.jt = this.jt.insert(e.key, e), this.zt = this.zt.insert(e.key, this.he(e.key).add(t));\n    }\n    /**\n     * Removes the provided document from the target mapping. If the\n     * document no longer matches the target, but the document's state is still\n     * known (e.g. we know that the document was deleted or we received the change\n     * that caused the filter mismatch), the new document can be provided\n     * to update the remote document cache.\n     */\n    // Visible for testing.\n    Yt(t, e, n) {\n        if (!this.te(t)) return;\n        const s = this.Zt(t);\n        this.ae(t, e) ? s.Bt(e, 1 /* ChangeType.Removed */) : \n        // The document may have entered and left the target before we raised a\n        // snapshot, so we can just ignore the change.\n        s.Lt(e), this.zt = this.zt.insert(e, this.he(e).delete(t)), n && (this.jt = this.jt.insert(e, n));\n    }\n    removeTarget(t) {\n        this.Qt.delete(t);\n    }\n    /**\n     * Returns the current count of documents in the target. This includes both\n     * the number of documents that the LocalStore considers to be part of the\n     * target as well as any accumulated changes.\n     */    ie(t) {\n        const e = this.Zt(t).Ot();\n        return this.Gt.getRemoteKeysForTarget(t).size + e.addedDocuments.size - e.removedDocuments.size;\n    }\n    /**\n     * Increment the number of acks needed from watch before we can consider the\n     * server to be 'in-sync' with the client's active targets.\n     */    qt(t) {\n        this.Zt(t).qt();\n    }\n    Zt(t) {\n        let e = this.Qt.get(t);\n        return e || (e = new Ti, this.Qt.set(t, e)), e;\n    }\n    he(t) {\n        let e = this.zt.get(t);\n        return e || (e = new Ee(et), this.zt = this.zt.insert(t, e)), e;\n    }\n    /**\n     * Verifies that the user is still interested in this target (by calling\n     * `getTargetDataForTarget()`) and that we are not waiting for pending ADDs\n     * from watch.\n     */    te(t) {\n        const e = null !== this.se(t);\n        return e || N(\"WatchChangeAggregator\", \"Detected inactive target\", t), e;\n    }\n    /**\n     * Returns the TargetData for an active target (i.e. a target that the user\n     * is still interested in that has no outstanding target change requests).\n     */    se(t) {\n        const e = this.Qt.get(t);\n        return e && e.kt ? null : this.Gt.le(t);\n    }\n    /**\n     * Resets the state of a Watch target to its initial state (e.g. sets\n     * 'current' to false, clears the resume token and removes its target mapping\n     * from all documents).\n     */    ee(t) {\n        this.Qt.set(t, new Ti);\n        this.Gt.getRemoteKeysForTarget(t).forEach((e => {\n            this.Yt(t, e, /*updatedDocument=*/ null);\n        }));\n    }\n    /**\n     * Returns whether the LocalStore considers the document to be part of the\n     * specified target.\n     */    ae(t, e) {\n        return this.Gt.getRemoteKeysForTarget(t).has(e);\n    }\n}\n\nfunction Ai() {\n    return new pe(ht.comparator);\n}\n\nfunction vi() {\n    return new pe(ht.comparator);\n}\n\nconst Ri = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Pi = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), bi = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Vi {\n    constructor(t, e) {\n        this.databaseId = t, this.useProto3Json = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\nfunction Si(t, e) {\n    return t.useProto3Json || Ft(e) ? e : {\n        value: e\n    };\n}\n\n/**\n * Returns a number (or null) from a google.protobuf.Int32Value proto.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction Di(t, e) {\n    if (t.useProto3Json) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Ci(t, e) {\n    return t.useProto3Json ? e.toBase64() : e.toUint8Array();\n}\n\n/**\n * Returns a ByteString based on the proto string value.\n */ function xi(t, e) {\n    return Di(t, e.toTimestamp());\n}\n\nfunction Ni(t) {\n    return F(!!t), rt.fromTimestamp(function(t) {\n        const e = De(t);\n        return new it(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction ki(t, e) {\n    return function(t) {\n        return new ut([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Mi(t) {\n    const e = ut.fromString(t);\n    return F(ur(e)), e;\n}\n\nfunction $i(t, e) {\n    return ki(t.databaseId, e.path);\n}\n\nfunction Oi(t, e) {\n    const n = Mi(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(q.INVALID_ARGUMENT, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(q.INVALID_ARGUMENT, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new ht(qi(n));\n}\n\nfunction Fi(t, e) {\n    return ki(t.databaseId, e);\n}\n\nfunction Bi(t) {\n    const e = Mi(t);\n    // In v1beta1 queries for collections at the root did not have a trailing\n    // \"/documents\". In v1 all resource paths contain \"/documents\". Preserve the\n    // ability to read the v1beta1 form for compatibility with queries persisted\n    // in the local target cache.\n        return 4 === e.length ? ut.emptyPath() : qi(e);\n}\n\nfunction Li(t) {\n    return new ut([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction qi(t) {\n    return F(t.length > 4 && \"documents\" === t.get(4)), t.popFirst(5);\n}\n\n/** Creates a Document proto from key and fields (but no create/update time) */ function Ui(t, e, n) {\n    return {\n        name: $i(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction Ki(t, e, n) {\n    const s = Oi(t, e.name), i = Ni(e.updateTime), r = e.createTime ? Ni(e.createTime) : rt.min(), o = new un({\n        mapValue: {\n            fields: e.fields\n        }\n    }), u = an.newFoundDocument(s, i, r, o);\n    return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n}\n\nfunction Gi(t, e) {\n    return \"found\" in e ? function(t, e) {\n        F(!!e.found), e.found.name, e.found.updateTime;\n        const n = Oi(t, e.found.name), s = Ni(e.found.updateTime), i = e.found.createTime ? Ni(e.found.createTime) : rt.min(), r = new un({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return an.newFoundDocument(n, s, i, r);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        F(!!e.missing), F(!!e.readTime);\n        const n = Oi(t, e.missing), s = Ni(e.readTime);\n        return an.newNoDocument(n, s);\n    }(t, e) : O();\n}\n\nfunction Qi(t, e) {\n    let n;\n    if (\"targetChange\" in e) {\n        e.targetChange;\n        // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'\n        // if unset\n        const s = function(t) {\n            return \"NO_CHANGE\" === t ? 0 /* WatchTargetChangeState.NoChange */ : \"ADD\" === t ? 1 /* WatchTargetChangeState.Added */ : \"REMOVE\" === t ? 2 /* WatchTargetChangeState.Removed */ : \"CURRENT\" === t ? 3 /* WatchTargetChangeState.Current */ : \"RESET\" === t ? 4 /* WatchTargetChangeState.Reset */ : O();\n        }(e.targetChange.targetChangeType || \"NO_CHANGE\"), i = e.targetChange.targetIds || [], r = function(t, e) {\n            return t.useProto3Json ? (F(void 0 === e || \"string\" == typeof e), Ve.fromBase64String(e || \"\")) : (F(void 0 === e || e instanceof Uint8Array), \n            Ve.fromUint8Array(e || new Uint8Array));\n        }(t, e.targetChange.resumeToken), o = e.targetChange.cause, u = o && function(t) {\n            const e = void 0 === t.code ? q.UNKNOWN : ui(t.code);\n            return new U(e, t.message || \"\");\n        }(o);\n        n = new Ii(s, i, r, u || null);\n    } else if (\"documentChange\" in e) {\n        e.documentChange;\n        const s = e.documentChange;\n        s.document, s.document.name, s.document.updateTime;\n        const i = Oi(t, s.document.name), r = Ni(s.document.updateTime), o = s.document.createTime ? Ni(s.document.createTime) : rt.min(), u = new un({\n            mapValue: {\n                fields: s.document.fields\n            }\n        }), c = an.newFoundDocument(i, r, o, u), a = s.targetIds || [], h = s.removedTargetIds || [];\n        n = new yi(a, h, c.key, c);\n    } else if (\"documentDelete\" in e) {\n        e.documentDelete;\n        const s = e.documentDelete;\n        s.document;\n        const i = Oi(t, s.document), r = s.readTime ? Ni(s.readTime) : rt.min(), o = an.newNoDocument(i, r), u = s.removedTargetIds || [];\n        n = new yi([], u, o.key, o);\n    } else if (\"documentRemove\" in e) {\n        e.documentRemove;\n        const s = e.documentRemove;\n        s.document;\n        const i = Oi(t, s.document), r = s.removedTargetIds || [];\n        n = new yi([], r, i, null);\n    } else {\n        if (!(\"filter\" in e)) return O();\n        {\n            e.filter;\n            const t = e.filter;\n            t.targetId;\n            const {count: s = 0, unchangedNames: i} = t, r = new si(s, i), o = t.targetId;\n            n = new pi(o, r);\n        }\n    }\n    return n;\n}\n\nfunction ji(t, e) {\n    let n;\n    if (e instanceof js) n = {\n        update: Ui(t, e.key, e.value)\n    }; else if (e instanceof Ys) n = {\n        delete: $i(t, e.key)\n    }; else if (e instanceof zs) n = {\n        update: Ui(t, e.key, e.data),\n        updateMask: or(e.fieldMask)\n    }; else {\n        if (!(e instanceof Xs)) return O();\n        n = {\n            verify: $i(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof bs) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Vs) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ds) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof xs) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.gt\n        };\n        throw O();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: xi(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : O();\n    }(t, e.precondition)), n;\n}\n\nfunction zi(t, e) {\n    const n = e.currentDocument ? function(t) {\n        return void 0 !== t.updateTime ? Fs.updateTime(Ni(t.updateTime)) : void 0 !== t.exists ? Fs.exists(t.exists) : Fs.none();\n    }(e.currentDocument) : Fs.none(), s = e.updateTransforms ? e.updateTransforms.map((e => function(t, e) {\n        let n = null;\n        if (\"setToServerValue\" in e) F(\"REQUEST_TIME\" === e.setToServerValue), n = new bs; else if (\"appendMissingElements\" in e) {\n            const t = e.appendMissingElements.values || [];\n            n = new Vs(t);\n        } else if (\"removeAllFromArray\" in e) {\n            const t = e.removeAllFromArray.values || [];\n            n = new Ds(t);\n        } else \"increment\" in e ? n = new xs(t, e.increment) : O();\n        const s = at.fromServerFormat(e.fieldPath);\n        return new Ms(s, n);\n    }(t, e))) : [];\n    if (e.update) {\n        e.update.name;\n        const i = Oi(t, e.update.name), r = new un({\n            mapValue: {\n                fields: e.update.fields\n            }\n        });\n        if (e.updateMask) {\n            const t = function(t) {\n                const e = t.fieldPaths || [];\n                return new Re(e.map((t => at.fromServerFormat(t))));\n            }(e.updateMask);\n            return new zs(i, r, t, n, s);\n        }\n        return new js(i, r, n, s);\n    }\n    if (e.delete) {\n        const s = Oi(t, e.delete);\n        return new Ys(s, n);\n    }\n    if (e.verify) {\n        const s = Oi(t, e.verify);\n        return new Xs(s, n);\n    }\n    return O();\n}\n\nfunction Wi(t, e) {\n    return t && t.length > 0 ? (F(void 0 !== e), t.map((t => function(t, e) {\n        // NOTE: Deletes don't have an updateTime.\n        let n = t.updateTime ? Ni(t.updateTime) : Ni(e);\n        return n.isEqual(rt.min()) && (\n        // The Firestore Emulator currently returns an update time of 0 for\n        // deletes of non-existing documents (rather than null). This breaks the\n        // test \"get deleted doc while offline with source=cache\" as NoDocuments\n        // with version 0 are filtered by IndexedDb's RemoteDocumentCache.\n        // TODO(#2149): Remove this when Emulator is fixed\n        n = Ni(e)), new Os(n, t.transformResults || []);\n    }(t, e)))) : [];\n}\n\nfunction Hi(t, e) {\n    return {\n        documents: [ Fi(t, e.path) ]\n    };\n}\n\nfunction Ji(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, s = e.path;\n    null !== e.collectionGroup ? (n.parent = Fi(t, s), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Fi(t, s.popLast()), n.structuredQuery.from = [ {\n        collectionId: s.lastSegment()\n    } ]);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return rr(gn.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    i && (n.structuredQuery.where = i);\n    const r = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: sr(t.field),\n                direction: tr(t.dir)\n            };\n        }(t)));\n    }(e.orderBy);\n    r && (n.structuredQuery.orderBy = r);\n    const o = Si(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }(e.endAt)), n;\n}\n\nfunction Yi(t) {\n    let e = Bi(t.parent);\n    const n = t.structuredQuery, s = n.from ? n.from.length : 0;\n    let i = null;\n    if (s > 0) {\n        F(1 === s);\n        const t = n.from[0];\n        t.allDescendants ? i = t.collectionId : e = e.child(t.collectionId);\n    }\n    let r = [];\n    n.where && (r = function(t) {\n        const e = Zi(t);\n        if (e instanceof gn && In(e)) return e.getFilters();\n        return [ e ];\n    }(n.where));\n    let o = [];\n    n.orderBy && (o = n.orderBy.map((t => function(t) {\n        return new dn(ir(t.field), \n        // visible for testing\n        function(t) {\n            switch (t) {\n              case \"ASCENDING\":\n                return \"asc\" /* Direction.ASCENDING */;\n\n              case \"DESCENDING\":\n                return \"desc\" /* Direction.DESCENDING */;\n\n              default:\n                return;\n            }\n        }\n        // visible for testing\n        (t.direction));\n    }\n    // visible for testing\n    (t))));\n    let u = null;\n    n.limit && (u = function(t) {\n        let e;\n        return e = \"object\" == typeof t ? t.value : t, Ft(e) ? null : e;\n    }(n.limit));\n    let c = null;\n    n.startAt && (c = function(t) {\n        const e = !!t.before, n = t.values || [];\n        return new hn(n, e);\n    }(n.startAt));\n    let a = null;\n    return n.endAt && (a = function(t) {\n        const e = !t.before, n = t.values || [];\n        return new hn(n, e);\n    }\n    // visible for testing\n    (n.endAt)), Kn(e, i, o, r, u, \"F\" /* LimitType.First */ , c, a);\n}\n\nfunction Xi(t, e) {\n    const n = function(t) {\n        switch (t) {\n          case \"TargetPurposeListen\" /* TargetPurpose.Listen */ :\n            return null;\n\n          case \"TargetPurposeExistenceFilterMismatch\" /* TargetPurpose.ExistenceFilterMismatch */ :\n            return \"existence-filter-mismatch\";\n\n          case \"TargetPurposeExistenceFilterMismatchBloom\" /* TargetPurpose.ExistenceFilterMismatchBloom */ :\n            return \"existence-filter-mismatch-bloom\";\n\n          case \"TargetPurposeLimboResolution\" /* TargetPurpose.LimboResolution */ :\n            return \"limbo-document\";\n\n          default:\n            return O();\n        }\n    }(e.purpose);\n    return null == n ? null : {\n        \"goog-listen-tags\": n\n    };\n}\n\nfunction Zi(t) {\n    return void 0 !== t.unaryFilter ? function(t) {\n        switch (t.unaryFilter.op) {\n          case \"IS_NAN\":\n            const e = ir(t.unaryFilter.field);\n            return mn.create(e, \"==\" /* Operator.EQUAL */ , {\n                doubleValue: NaN\n            });\n\n          case \"IS_NULL\":\n            const n = ir(t.unaryFilter.field);\n            return mn.create(n, \"==\" /* Operator.EQUAL */ , {\n                nullValue: \"NULL_VALUE\"\n            });\n\n          case \"IS_NOT_NAN\":\n            const s = ir(t.unaryFilter.field);\n            return mn.create(s, \"!=\" /* Operator.NOT_EQUAL */ , {\n                doubleValue: NaN\n            });\n\n          case \"IS_NOT_NULL\":\n            const i = ir(t.unaryFilter.field);\n            return mn.create(i, \"!=\" /* Operator.NOT_EQUAL */ , {\n                nullValue: \"NULL_VALUE\"\n            });\n\n          default:\n            return O();\n        }\n    }(t) : void 0 !== t.fieldFilter ? function(t) {\n        return mn.create(ir(t.fieldFilter.field), function(t) {\n            switch (t) {\n              case \"EQUAL\":\n                return \"==\" /* Operator.EQUAL */;\n\n              case \"NOT_EQUAL\":\n                return \"!=\" /* Operator.NOT_EQUAL */;\n\n              case \"GREATER_THAN\":\n                return \">\" /* Operator.GREATER_THAN */;\n\n              case \"GREATER_THAN_OR_EQUAL\":\n                return \">=\" /* Operator.GREATER_THAN_OR_EQUAL */;\n\n              case \"LESS_THAN\":\n                return \"<\" /* Operator.LESS_THAN */;\n\n              case \"LESS_THAN_OR_EQUAL\":\n                return \"<=\" /* Operator.LESS_THAN_OR_EQUAL */;\n\n              case \"ARRAY_CONTAINS\":\n                return \"array-contains\" /* Operator.ARRAY_CONTAINS */;\n\n              case \"IN\":\n                return \"in\" /* Operator.IN */;\n\n              case \"NOT_IN\":\n                return \"not-in\" /* Operator.NOT_IN */;\n\n              case \"ARRAY_CONTAINS_ANY\":\n                return \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */;\n\n              default:\n                return O();\n            }\n        }(t.fieldFilter.op), t.fieldFilter.value);\n    }(t) : void 0 !== t.compositeFilter ? function(t) {\n        return gn.create(t.compositeFilter.filters.map((t => Zi(t))), function(t) {\n            switch (t) {\n              case \"AND\":\n                return \"and\" /* CompositeOperator.AND */;\n\n              case \"OR\":\n                return \"or\" /* CompositeOperator.OR */;\n\n              default:\n                return O();\n            }\n        }(t.compositeFilter.op));\n    }(t) : O();\n}\n\nfunction tr(t) {\n    return Ri[t];\n}\n\nfunction er(t) {\n    return Pi[t];\n}\n\nfunction nr(t) {\n    return bi[t];\n}\n\nfunction sr(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction ir(t) {\n    return at.fromServerFormat(t.fieldPath);\n}\n\nfunction rr(t) {\n    return t instanceof mn ? function(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (Xe(t.value)) return {\n                unaryFilter: {\n                    field: sr(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (Ye(t.value)) return {\n                unaryFilter: {\n                    field: sr(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (Xe(t.value)) return {\n                unaryFilter: {\n                    field: sr(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (Ye(t.value)) return {\n                unaryFilter: {\n                    field: sr(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: sr(t.field),\n                op: er(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof gn ? function(t) {\n        const e = t.getFilters().map((t => rr(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: nr(t.op),\n                filters: e\n            }\n        };\n    }(t) : O();\n}\n\nfunction or(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction ur(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable set of metadata that the local store tracks for each target.\n */ class cr {\n    constructor(\n    /** The target being listened to. */\n    t, \n    /**\n     * The target ID to which the target corresponds; Assigned by the\n     * LocalStore for user listens and by the SyncEngine for limbo watches.\n     */\n    e, \n    /** The purpose of the target. */\n    n, \n    /**\n     * The sequence number of the last transaction during which this target data\n     * was modified.\n     */\n    s, \n    /** The latest snapshot version seen for this target. */\n    i = rt.min()\n    /**\n     * The maximum snapshot version at which the associated view\n     * contained no limbo documents.\n     */ , r = rt.min()\n    /**\n     * An opaque, server-assigned token that allows watching a target to be\n     * resumed after disconnecting without retransmitting all the data that\n     * matches the target. The resume token essentially identifies a point in\n     * time from which the server should resume sending results.\n     */ , o = Ve.EMPTY_BYTE_STRING\n    /**\n     * The number of documents that last matched the query at the resume token or\n     * read time. Documents are counted only when making a listen request with\n     * resume token or read time, otherwise, keep it null.\n     */ , u = null) {\n        this.target = t, this.targetId = e, this.purpose = n, this.sequenceNumber = s, this.snapshotVersion = i, \n        this.lastLimboFreeSnapshotVersion = r, this.resumeToken = o, this.expectedCount = u;\n    }\n    /** Creates a new target data instance with an updated sequence number. */    withSequenceNumber(t) {\n        return new cr(this.target, this.targetId, this.purpose, t, this.snapshotVersion, this.lastLimboFreeSnapshotVersion, this.resumeToken, this.expectedCount);\n    }\n    /**\n     * Creates a new target data instance with an updated resume token and\n     * snapshot version.\n     */    withResumeToken(t, e) {\n        return new cr(this.target, this.targetId, this.purpose, this.sequenceNumber, e, this.lastLimboFreeSnapshotVersion, t, \n        /* expectedCount= */ null);\n    }\n    /**\n     * Creates a new target data instance with an updated expected count.\n     */    withExpectedCount(t) {\n        return new cr(this.target, this.targetId, this.purpose, this.sequenceNumber, this.snapshotVersion, this.lastLimboFreeSnapshotVersion, this.resumeToken, t);\n    }\n    /**\n     * Creates a new target data instance with an updated last limbo free\n     * snapshot version number.\n     */    withLastLimboFreeSnapshotVersion(t) {\n        return new cr(this.target, this.targetId, this.purpose, this.sequenceNumber, this.snapshotVersion, t, this.resumeToken, this.expectedCount);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Serializer for values stored in the LocalStore. */ class ar {\n    constructor(t) {\n        this.fe = t;\n    }\n}\n\n/** Decodes a remote document from storage locally to a Document. */ function hr(t, e) {\n    let n;\n    if (e.document) n = Ki(t.fe, e.document, !!e.hasCommittedMutations); else if (e.noDocument) {\n        const t = ht.fromSegments(e.noDocument.path), s = wr(e.noDocument.readTime);\n        n = an.newNoDocument(t, s), e.hasCommittedMutations && n.setHasCommittedMutations();\n    } else {\n        if (!e.unknownDocument) return O();\n        {\n            const t = ht.fromSegments(e.unknownDocument.path), s = wr(e.unknownDocument.version);\n            n = an.newUnknownDocument(t, s);\n        }\n    }\n    return e.readTime && n.setReadTime(function(t) {\n        const e = new it(t[0], t[1]);\n        return rt.fromTimestamp(e);\n    }(e.readTime)), n;\n}\n\n/** Encodes a document for storage locally. */ function lr(t, e) {\n    const n = e.key, s = {\n        prefixPath: n.getCollectionPath().popLast().toArray(),\n        collectionGroup: n.collectionGroup,\n        documentId: n.path.lastSegment(),\n        readTime: fr(e.readTime),\n        hasCommittedMutations: e.hasCommittedMutations\n    };\n    if (e.isFoundDocument()) s.document = function(t, e) {\n        return {\n            name: $i(t, e.key),\n            fields: e.data.value.mapValue.fields,\n            updateTime: Di(t, e.version.toTimestamp()),\n            createTime: Di(t, e.createTime.toTimestamp())\n        };\n    }(t.fe, e); else if (e.isNoDocument()) s.noDocument = {\n        path: n.path.toArray(),\n        readTime: dr(e.version)\n    }; else {\n        if (!e.isUnknownDocument()) return O();\n        s.unknownDocument = {\n            path: n.path.toArray(),\n            version: dr(e.version)\n        };\n    }\n    return s;\n}\n\nfunction fr(t) {\n    const e = t.toTimestamp();\n    return [ e.seconds, e.nanoseconds ];\n}\n\nfunction dr(t) {\n    const e = t.toTimestamp();\n    return {\n        seconds: e.seconds,\n        nanoseconds: e.nanoseconds\n    };\n}\n\nfunction wr(t) {\n    const e = new it(t.seconds, t.nanoseconds);\n    return rt.fromTimestamp(e);\n}\n\n/** Encodes a batch of mutations into a DbMutationBatch for local storage. */\n/** Decodes a DbMutationBatch into a MutationBatch */\nfunction _r(t, e) {\n    const n = (e.baseMutations || []).map((e => zi(t.fe, e)));\n    // Squash old transform mutations into existing patch or set mutations.\n    // The replacement of representing `transforms` with `update_transforms`\n    // on the SDK means that old `transform` mutations stored in IndexedDB need\n    // to be updated to `update_transforms`.\n    // TODO(b/174608374): Remove this code once we perform a schema migration.\n        for (let t = 0; t < e.mutations.length - 1; ++t) {\n        const n = e.mutations[t];\n        if (t + 1 < e.mutations.length && void 0 !== e.mutations[t + 1].transform) {\n            const s = e.mutations[t + 1];\n            n.updateTransforms = s.transform.fieldTransforms, e.mutations.splice(t + 1, 1), \n            ++t;\n        }\n    }\n    const s = e.mutations.map((e => zi(t.fe, e))), i = it.fromMillis(e.localWriteTimeMs);\n    return new Zs(e.batchId, i, n, s);\n}\n\n/** Decodes a DbTarget into TargetData */ function mr(t) {\n    const e = wr(t.readTime), n = void 0 !== t.lastLimboFreeSnapshotVersion ? wr(t.lastLimboFreeSnapshotVersion) : rt.min();\n    let s;\n    var i;\n    return void 0 !== t.query.documents ? (F(1 === (i = t.query).documents.length), \n    s = Jn(Gn(Bi(i.documents[0])))) : s = function(t) {\n        return Jn(Yi(t));\n    }(t.query), new cr(s, t.targetId, \"TargetPurposeListen\" /* TargetPurpose.Listen */ , t.lastListenSequenceNumber, e, n, Ve.fromBase64String(t.resumeToken));\n}\n\n/** Encodes TargetData into a DbTarget for storage locally. */ function gr(t, e) {\n    const n = dr(e.snapshotVersion), s = dr(e.lastLimboFreeSnapshotVersion);\n    let i;\n    i = Fn(e.target) ? Hi(t.fe, e.target) : Ji(t.fe, e.target);\n    // We can't store the resumeToken as a ByteString in IndexedDb, so we\n    // convert it to a base64 string for storage.\n        const r = e.resumeToken.toBase64();\n    // lastListenSequenceNumber is always 0 until we do real GC.\n        return {\n        targetId: e.targetId,\n        canonicalId: $n(e.target),\n        readTime: n,\n        resumeToken: r,\n        lastListenSequenceNumber: e.sequenceNumber,\n        lastLimboFreeSnapshotVersion: s,\n        query: i\n    };\n}\n\n/**\n * A helper function for figuring out what kind of query has been stored.\n */\n/**\n * Encodes a `BundledQuery` from bundle proto to a Query object.\n *\n * This reconstructs the original query used to build the bundle being loaded,\n * including features exists only in SDKs (for example: limit-to-last).\n */\nfunction yr(t) {\n    const e = Yi({\n        parent: t.parent,\n        structuredQuery: t.structuredQuery\n    });\n    return \"LAST\" === t.limitType ? Xn(e, e.limit, \"L\" /* LimitType.Last */) : e;\n}\n\n/** Encodes a NamedQuery proto object to a NamedQuery model object. */\n/** Encodes a DbDocumentOverlay object to an Overlay model object. */\nfunction pr(t, e) {\n    return new ei(e.largestBatchId, zi(t.fe, e.overlayMutation));\n}\n\n/** Decodes an Overlay model object into a DbDocumentOverlay object. */\n/**\n * Returns the DbDocumentOverlayKey corresponding to the given user and\n * document key.\n */\nfunction Ir(t, e) {\n    const n = e.path.lastSegment();\n    return [ t, qt(e.path.popLast()), n ];\n}\n\nfunction Tr(t, e, n, s) {\n    return {\n        indexId: t,\n        uid: e.uid || \"\",\n        sequenceNumber: n,\n        readTime: dr(s.readTime),\n        documentKey: qt(s.documentKey.path),\n        largestBatchId: s.largestBatchId\n    };\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Er {\n    getBundleMetadata(t, e) {\n        return Ar(t).get(e).next((t => {\n            if (t) return {\n                id: (e = t).bundleId,\n                createTime: wr(e.createTime),\n                version: e.version\n            };\n            /** Encodes a DbBundle to a BundleMetadata object. */\n            var e;\n            /** Encodes a BundleMetadata to a DbBundle. */        }));\n    }\n    saveBundleMetadata(t, e) {\n        return Ar(t).put({\n            bundleId: (n = e).id,\n            createTime: dr(Ni(n.createTime)),\n            version: n.version\n        });\n        var n;\n        /** Encodes a DbNamedQuery to a NamedQuery. */    }\n    getNamedQuery(t, e) {\n        return vr(t).get(e).next((t => {\n            if (t) return {\n                name: (e = t).name,\n                query: yr(e.bundledQuery),\n                readTime: wr(e.readTime)\n            };\n            var e;\n            /** Encodes a NamedQuery from a bundle proto to a DbNamedQuery. */        }));\n    }\n    saveNamedQuery(t, e) {\n        return vr(t).put(function(t) {\n            return {\n                name: t.name,\n                readTime: dr(Ni(t.readTime)),\n                bundledQuery: t.bundledQuery\n            };\n        }(e));\n    }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the bundles object store.\n */ function Ar(t) {\n    return _e(t, \"bundles\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the namedQueries object store.\n */ function vr(t) {\n    return _e(t, \"namedQueries\");\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Implementation of DocumentOverlayCache using IndexedDb.\n */ class Rr {\n    /**\n     * @param serializer - The document serializer.\n     * @param userId - The userId for which we are accessing overlays.\n     */\n    constructor(t, e) {\n        this.serializer = t, this.userId = e;\n    }\n    static de(t, e) {\n        const n = e.uid || \"\";\n        return new Rr(t, n);\n    }\n    getOverlay(t, e) {\n        return Pr(t).get(Ir(this.userId, e)).next((t => t ? pr(this.serializer, t) : null));\n    }\n    getOverlays(t, e) {\n        const n = fs();\n        return Rt.forEach(e, (e => this.getOverlay(t, e).next((t => {\n            null !== t && n.set(e, t);\n        })))).next((() => n));\n    }\n    saveOverlays(t, e, n) {\n        const s = [];\n        return n.forEach(((n, i) => {\n            const r = new ei(e, i);\n            s.push(this.we(t, r));\n        })), Rt.waitFor(s);\n    }\n    removeOverlaysForBatchId(t, e, n) {\n        const s = new Set;\n        // Get the set of unique collection paths.\n                e.forEach((t => s.add(qt(t.getCollectionPath()))));\n        const i = [];\n        return s.forEach((e => {\n            const s = IDBKeyRange.bound([ this.userId, e, n ], [ this.userId, e, n + 1 ], \n            /*lowerOpen=*/ !1, \n            /*upperOpen=*/ !0);\n            i.push(Pr(t).J(\"collectionPathOverlayIndex\", s));\n        })), Rt.waitFor(i);\n    }\n    getOverlaysForCollection(t, e, n) {\n        const s = fs(), i = qt(e), r = IDBKeyRange.bound([ this.userId, i, n ], [ this.userId, i, Number.POSITIVE_INFINITY ], \n        /*lowerOpen=*/ !0);\n        return Pr(t).j(\"collectionPathOverlayIndex\", r).next((t => {\n            for (const e of t) {\n                const t = pr(this.serializer, e);\n                s.set(t.getKey(), t);\n            }\n            return s;\n        }));\n    }\n    getOverlaysForCollectionGroup(t, e, n, s) {\n        const i = fs();\n        let r;\n        // We want batch IDs larger than `sinceBatchId`, and so the lower bound\n        // is not inclusive.\n                const o = IDBKeyRange.bound([ this.userId, e, n ], [ this.userId, e, Number.POSITIVE_INFINITY ], \n        /*lowerOpen=*/ !0);\n        return Pr(t).X({\n            index: \"collectionGroupOverlayIndex\",\n            range: o\n        }, ((t, e, n) => {\n            // We do not want to return partial batch overlays, even if the size\n            // of the result set exceeds the given `count` argument. Therefore, we\n            // continue to aggregate results even after the result size exceeds\n            // `count` if there are more overlays from the `currentBatchId`.\n            const o = pr(this.serializer, e);\n            i.size() < s || o.largestBatchId === r ? (i.set(o.getKey(), o), r = o.largestBatchId) : n.done();\n        })).next((() => i));\n    }\n    we(t, e) {\n        return Pr(t).put(function(t, e, n) {\n            const [s, i, r] = Ir(e, n.mutation.key);\n            return {\n                userId: e,\n                collectionPath: i,\n                documentId: r,\n                collectionGroup: n.mutation.key.getCollectionGroup(),\n                largestBatchId: n.largestBatchId,\n                overlayMutation: ji(t.fe, n.mutation)\n            };\n        }(this.serializer, this.userId, e));\n    }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the document overlay object store.\n */ function Pr(t) {\n    return _e(t, \"documentOverlays\");\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Note: This code is copied from the backend. Code that is not used by\n// Firestore was removed.\n/** Firestore index value writer.  */\nclass br {\n    constructor() {}\n    // The write methods below short-circuit writing terminators for values\n    // containing a (terminating) truncated value.\n    // As an example, consider the resulting encoding for:\n    // [\"bar\", [2, \"foo\"]] -> (STRING, \"bar\", TERM, ARRAY, NUMBER, 2, STRING, \"foo\", TERM, TERM, TERM)\n    // [\"bar\", [2, truncated(\"foo\")]] -> (STRING, \"bar\", TERM, ARRAY, NUMBER, 2, STRING, \"foo\", TRUNC)\n    // [\"bar\", truncated([\"foo\"])] -> (STRING, \"bar\", TERM, ARRAY. STRING, \"foo\", TERM, TRUNC)\n    /** Writes an index value.  */\n    _e(t, e) {\n        this.me(t, e), \n        // Write separator to split index values\n        // (see go/firestore-storage-format#encodings).\n        e.ge();\n    }\n    me(t, e) {\n        if (\"nullValue\" in t) this.ye(e, 5); else if (\"booleanValue\" in t) this.ye(e, 10), \n        e.pe(t.booleanValue ? 1 : 0); else if (\"integerValue\" in t) this.ye(e, 15), e.pe(Ce(t.integerValue)); else if (\"doubleValue\" in t) {\n            const n = Ce(t.doubleValue);\n            isNaN(n) ? this.ye(e, 13) : (this.ye(e, 15), Bt(n) ? \n            // -0.0, 0 and 0.0 are all considered the same\n            e.pe(0) : e.pe(n));\n        } else if (\"timestampValue\" in t) {\n            const n = t.timestampValue;\n            this.ye(e, 20), \"string\" == typeof n ? e.Ie(n) : (e.Ie(`${n.seconds || \"\"}`), e.pe(n.nanos || 0));\n        } else if (\"stringValue\" in t) this.Te(t.stringValue, e), this.Ee(e); else if (\"bytesValue\" in t) this.ye(e, 30), \n        e.Ae(xe(t.bytesValue)), this.Ee(e); else if (\"referenceValue\" in t) this.ve(t.referenceValue, e); else if (\"geoPointValue\" in t) {\n            const n = t.geoPointValue;\n            this.ye(e, 45), e.pe(n.latitude || 0), e.pe(n.longitude || 0);\n        } else \"mapValue\" in t ? en(t) ? this.ye(e, Number.MAX_SAFE_INTEGER) : (this.Re(t.mapValue, e), \n        this.Ee(e)) : \"arrayValue\" in t ? (this.Pe(t.arrayValue, e), this.Ee(e)) : O();\n    }\n    Te(t, e) {\n        this.ye(e, 25), this.be(t, e);\n    }\n    be(t, e) {\n        e.Ie(t);\n    }\n    Re(t, e) {\n        const n = t.fields || {};\n        this.ye(e, 55);\n        for (const t of Object.keys(n)) this.Te(t, e), this.me(n[t], e);\n    }\n    Pe(t, e) {\n        const n = t.values || [];\n        this.ye(e, 50);\n        for (const t of n) this.me(t, e);\n    }\n    ve(t, e) {\n        this.ye(e, 37);\n        ht.fromName(t).path.forEach((t => {\n            this.ye(e, 60), this.be(t, e);\n        }));\n    }\n    ye(t, e) {\n        t.pe(e);\n    }\n    Ee(t) {\n        // While the SDK does not implement truncation, the truncation marker is\n        // used to terminate all variable length values (which are strings, bytes,\n        // references, arrays and maps).\n        t.pe(2);\n    }\n}\n\nbr.Ve = new br;\n\n/**\n * Counts the number of zeros in a byte.\n *\n * Visible for testing.\n */\nfunction Vr(t) {\n    if (0 === t) return 8;\n    let e = 0;\n    return t >> 4 == 0 && (\n    // Test if the first four bits are zero.\n    e += 4, t <<= 4), t >> 6 == 0 && (\n    // Test if the first two (or next two) bits are zero.\n    e += 2, t <<= 2), t >> 7 == 0 && (\n    // Test if the remaining bit is zero.\n    e += 1), e;\n}\n\n/** Counts the number of leading zeros in the given byte array. */\n/**\n * Returns the number of bytes required to store \"value\". Leading zero bytes\n * are skipped.\n */\nfunction Sr(t) {\n    // This is just the number of bytes for the unsigned representation of the number.\n    const e = 64 - function(t) {\n        let e = 0;\n        for (let n = 0; n < 8; ++n) {\n            const s = Vr(255 & t[n]);\n            if (e += s, 8 !== s) break;\n        }\n        return e;\n    }(t);\n    return Math.ceil(e / 8);\n}\n\n/**\n * OrderedCodeWriter is a minimal-allocation implementation of the writing\n * behavior defined by the backend.\n *\n * The code is ported from its Java counterpart.\n */ class Dr {\n    constructor() {\n        this.buffer = new Uint8Array(1024), this.position = 0;\n    }\n    Se(t) {\n        const e = t[Symbol.iterator]();\n        let n = e.next();\n        for (;!n.done; ) this.De(n.value), n = e.next();\n        this.Ce();\n    }\n    xe(t) {\n        const e = t[Symbol.iterator]();\n        let n = e.next();\n        for (;!n.done; ) this.Ne(n.value), n = e.next();\n        this.ke();\n    }\n    /** Writes utf8 bytes into this byte sequence, ascending. */    Me(t) {\n        for (const e of t) {\n            const t = e.charCodeAt(0);\n            if (t < 128) this.De(t); else if (t < 2048) this.De(960 | t >>> 6), this.De(128 | 63 & t); else if (e < \"\\ud800\" || \"\\udbff\" < e) this.De(480 | t >>> 12), \n            this.De(128 | 63 & t >>> 6), this.De(128 | 63 & t); else {\n                const t = e.codePointAt(0);\n                this.De(240 | t >>> 18), this.De(128 | 63 & t >>> 12), this.De(128 | 63 & t >>> 6), \n                this.De(128 | 63 & t);\n            }\n        }\n        this.Ce();\n    }\n    /** Writes utf8 bytes into this byte sequence, descending */    $e(t) {\n        for (const e of t) {\n            const t = e.charCodeAt(0);\n            if (t < 128) this.Ne(t); else if (t < 2048) this.Ne(960 | t >>> 6), this.Ne(128 | 63 & t); else if (e < \"\\ud800\" || \"\\udbff\" < e) this.Ne(480 | t >>> 12), \n            this.Ne(128 | 63 & t >>> 6), this.Ne(128 | 63 & t); else {\n                const t = e.codePointAt(0);\n                this.Ne(240 | t >>> 18), this.Ne(128 | 63 & t >>> 12), this.Ne(128 | 63 & t >>> 6), \n                this.Ne(128 | 63 & t);\n            }\n        }\n        this.ke();\n    }\n    Oe(t) {\n        // Values are encoded with a single byte length prefix, followed by the\n        // actual value in big-endian format with leading 0 bytes dropped.\n        const e = this.Fe(t), n = Sr(e);\n        this.Be(1 + n), this.buffer[this.position++] = 255 & n;\n        // Write the length\n        for (let t = e.length - n; t < e.length; ++t) this.buffer[this.position++] = 255 & e[t];\n    }\n    Le(t) {\n        // Values are encoded with a single byte length prefix, followed by the\n        // inverted value in big-endian format with leading 0 bytes dropped.\n        const e = this.Fe(t), n = Sr(e);\n        this.Be(1 + n), this.buffer[this.position++] = ~(255 & n);\n        // Write the length\n        for (let t = e.length - n; t < e.length; ++t) this.buffer[this.position++] = ~(255 & e[t]);\n    }\n    /**\n     * Writes the \"infinity\" byte sequence that sorts after all other byte\n     * sequences written in ascending order.\n     */    qe() {\n        this.Ue(255), this.Ue(255);\n    }\n    /**\n     * Writes the \"infinity\" byte sequence that sorts before all other byte\n     * sequences written in descending order.\n     */    Ke() {\n        this.Ge(255), this.Ge(255);\n    }\n    /**\n     * Resets the buffer such that it is the same as when it was newly\n     * constructed.\n     */    reset() {\n        this.position = 0;\n    }\n    seed(t) {\n        this.Be(t.length), this.buffer.set(t, this.position), this.position += t.length;\n    }\n    /** Makes a copy of the encoded bytes in this buffer.  */    Qe() {\n        return this.buffer.slice(0, this.position);\n    }\n    /**\n     * Encodes `val` into an encoding so that the order matches the IEEE 754\n     * floating-point comparison results with the following exceptions:\n     *   -0.0 < 0.0\n     *   all non-NaN < NaN\n     *   NaN = NaN\n     */    Fe(t) {\n        const e = \n        /** Converts a JavaScript number to a byte array (using big endian encoding). */\n        function(t) {\n            const e = new DataView(new ArrayBuffer(8));\n            return e.setFloat64(0, t, /* littleEndian= */ !1), new Uint8Array(e.buffer);\n        }(t), n = 0 != (128 & e[0]);\n        // Check if the first bit is set. We use a bit mask since value[0] is\n        // encoded as a number from 0 to 255.\n                // Revert the two complement to get natural ordering\n        e[0] ^= n ? 255 : 128;\n        for (let t = 1; t < e.length; ++t) e[t] ^= n ? 255 : 0;\n        return e;\n    }\n    /** Writes a single byte ascending to the buffer. */    De(t) {\n        const e = 255 & t;\n        0 === e ? (this.Ue(0), this.Ue(255)) : 255 === e ? (this.Ue(255), this.Ue(0)) : this.Ue(e);\n    }\n    /** Writes a single byte descending to the buffer.  */    Ne(t) {\n        const e = 255 & t;\n        0 === e ? (this.Ge(0), this.Ge(255)) : 255 === e ? (this.Ge(255), this.Ge(0)) : this.Ge(t);\n    }\n    Ce() {\n        this.Ue(0), this.Ue(1);\n    }\n    ke() {\n        this.Ge(0), this.Ge(1);\n    }\n    Ue(t) {\n        this.Be(1), this.buffer[this.position++] = t;\n    }\n    Ge(t) {\n        this.Be(1), this.buffer[this.position++] = ~t;\n    }\n    Be(t) {\n        const e = t + this.position;\n        if (e <= this.buffer.length) return;\n        // Try doubling.\n                let n = 2 * this.buffer.length;\n        // Still not big enough? Just allocate the right size.\n                n < e && (n = e);\n        // Create the new buffer.\n                const s = new Uint8Array(n);\n        s.set(this.buffer), // copy old data\n        this.buffer = s;\n    }\n}\n\nclass Cr {\n    constructor(t) {\n        this.je = t;\n    }\n    Ae(t) {\n        this.je.Se(t);\n    }\n    Ie(t) {\n        this.je.Me(t);\n    }\n    pe(t) {\n        this.je.Oe(t);\n    }\n    ge() {\n        this.je.qe();\n    }\n}\n\nclass xr {\n    constructor(t) {\n        this.je = t;\n    }\n    Ae(t) {\n        this.je.xe(t);\n    }\n    Ie(t) {\n        this.je.$e(t);\n    }\n    pe(t) {\n        this.je.Le(t);\n    }\n    ge() {\n        this.je.Ke();\n    }\n}\n\n/**\n * Implements `DirectionalIndexByteEncoder` using `OrderedCodeWriter` for the\n * actual encoding.\n */ class Nr {\n    constructor() {\n        this.je = new Dr, this.ze = new Cr(this.je), this.We = new xr(this.je);\n    }\n    seed(t) {\n        this.je.seed(t);\n    }\n    He(t) {\n        return 0 /* IndexKind.ASCENDING */ === t ? this.ze : this.We;\n    }\n    Qe() {\n        return this.je.Qe();\n    }\n    reset() {\n        this.je.reset();\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Represents an index entry saved by the SDK in persisted storage. */ class kr {\n    constructor(t, e, n, s) {\n        this.indexId = t, this.documentKey = e, this.arrayValue = n, this.directionalValue = s;\n    }\n    /**\n     * Returns an IndexEntry entry that sorts immediately after the current\n     * directional value.\n     */    Je() {\n        const t = this.directionalValue.length, e = 0 === t || 255 === this.directionalValue[t - 1] ? t + 1 : t, n = new Uint8Array(e);\n        return n.set(this.directionalValue, 0), e !== t ? n.set([ 0 ], this.directionalValue.length) : ++n[n.length - 1], \n        new kr(this.indexId, this.documentKey, this.arrayValue, n);\n    }\n}\n\nfunction Mr(t, e) {\n    let n = t.indexId - e.indexId;\n    return 0 !== n ? n : (n = $r(t.arrayValue, e.arrayValue), 0 !== n ? n : (n = $r(t.directionalValue, e.directionalValue), \n    0 !== n ? n : ht.comparator(t.documentKey, e.documentKey)));\n}\n\nfunction $r(t, e) {\n    for (let n = 0; n < t.length && n < e.length; ++n) {\n        const s = t[n] - e[n];\n        if (0 !== s) return s;\n    }\n    return t.length - e.length;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A light query planner for Firestore.\n *\n * This class matches a `FieldIndex` against a Firestore Query `Target`. It\n * determines whether a given index can be used to serve the specified target.\n *\n * The following table showcases some possible index configurations:\n *\n * Query                                               | Index\n * -----------------------------------------------------------------------------\n * where('a', '==', 'a').where('b', '==', 'b')         | a ASC, b DESC\n * where('a', '==', 'a').where('b', '==', 'b')         | a ASC\n * where('a', '==', 'a').where('b', '==', 'b')         | b DESC\n * where('a', '>=', 'a').orderBy('a')                  | a ASC\n * where('a', '>=', 'a').orderBy('a', 'desc')          | a DESC\n * where('a', '>=', 'a').orderBy('a').orderBy('b')     | a ASC, b ASC\n * where('a', '>=', 'a').orderBy('a').orderBy('b')     | a ASC\n * where('a', 'array-contains', 'a').orderBy('b')      | a CONTAINS, b ASCENDING\n * where('a', 'array-contains', 'a').orderBy('b')      | a CONTAINS\n */ class Or {\n    constructor(t) {\n        this.collectionId = null != t.collectionGroup ? t.collectionGroup : t.path.lastSegment(), \n        this.Ye = t.orderBy, this.Xe = [];\n        for (const e of t.filters) {\n            const t = e;\n            t.isInequality() ? this.Ze = t : this.Xe.push(t);\n        }\n    }\n    /**\n     * Returns whether the index can be used to serve the TargetIndexMatcher's\n     * target.\n     *\n     * An index is considered capable of serving the target when:\n     * - The target uses all index segments for its filters and orderBy clauses.\n     *   The target can have additional filter and orderBy clauses, but not\n     *   fewer.\n     * - If an ArrayContains/ArrayContainsAnyfilter is used, the index must also\n     *   have a corresponding `CONTAINS` segment.\n     * - All directional index segments can be mapped to the target as a series of\n     *   equality filters, a single inequality filter and a series of orderBy\n     *   clauses.\n     * - The segments that represent the equality filters may appear out of order.\n     * - The optional segment for the inequality filter must appear after all\n     *   equality segments.\n     * - The segments that represent that orderBy clause of the target must appear\n     *   in order after all equality and inequality segments. Single orderBy\n     *   clauses cannot be skipped, but a continuous orderBy suffix may be\n     *   omitted.\n     */    tn(t) {\n        F(t.collectionGroup === this.collectionId);\n        // If there is an array element, find a matching filter.\n        const e = ft(t);\n        if (void 0 !== e && !this.en(e)) return !1;\n        const n = dt(t);\n        let s = new Set, i = 0, r = 0;\n        // Process all equalities first. Equalities can appear out of order.\n        for (;i < n.length && this.en(n[i]); ++i) s = s.add(n[i].fieldPath.canonicalString());\n        // If we already have processed all segments, all segments are used to serve\n        // the equality filters and we do not need to map any segments to the\n        // target's inequality and orderBy clauses.\n                if (i === n.length) return !0;\n        if (void 0 !== this.Ze) {\n            // If there is an inequality filter and the field was not in one of the\n            // equality filters above, the next segment must match both the filter\n            // and the first orderBy clause.\n            if (!s.has(this.Ze.field.canonicalString())) {\n                const t = n[i];\n                if (!this.nn(this.Ze, t) || !this.sn(this.Ye[r++], t)) return !1;\n            }\n            ++i;\n        }\n        // All remaining segments need to represent the prefix of the target's\n        // orderBy.\n                for (;i < n.length; ++i) {\n            const t = n[i];\n            if (r >= this.Ye.length || !this.sn(this.Ye[r++], t)) return !1;\n        }\n        return !0;\n    }\n    en(t) {\n        for (const e of this.Xe) if (this.nn(e, t)) return !0;\n        return !1;\n    }\n    nn(t, e) {\n        if (void 0 === t || !t.field.isEqual(e.fieldPath)) return !1;\n        const n = \"array-contains\" /* Operator.ARRAY_CONTAINS */ === t.op || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === t.op;\n        return 2 /* IndexKind.CONTAINS */ === e.kind === n;\n    }\n    sn(t, e) {\n        return !!t.field.isEqual(e.fieldPath) && (0 /* IndexKind.ASCENDING */ === e.kind && \"asc\" /* Direction.ASCENDING */ === t.dir || 1 /* IndexKind.DESCENDING */ === e.kind && \"desc\" /* Direction.DESCENDING */ === t.dir);\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides utility functions that help with boolean logic transformations needed for handling\n * complex filters used in queries.\n */\n/**\n * The `in` filter is only a syntactic sugar over a disjunction of equalities. For instance: `a in\n * [1,2,3]` is in fact `a==1 || a==2 || a==3`. This method expands any `in` filter in the given\n * input into a disjunction of equality filters and returns the expanded filter.\n */ function Fr(t) {\n    var e, n;\n    if (F(t instanceof mn || t instanceof gn), t instanceof mn) {\n        if (t instanceof Cn) {\n            const s = (null === (n = null === (e = t.value.arrayValue) || void 0 === e ? void 0 : e.values) || void 0 === n ? void 0 : n.map((e => mn.create(t.field, \"==\" /* Operator.EQUAL */ , e)))) || [];\n            return gn.create(s, \"or\" /* CompositeOperator.OR */);\n        }\n        // We have reached other kinds of field filters.\n        return t;\n    }\n    // We have a composite filter.\n        const s = t.filters.map((t => Fr(t)));\n    return gn.create(s, t.op);\n}\n\n/**\n * Given a composite filter, returns the list of terms in its disjunctive normal form.\n *\n * <p>Each element in the return value is one term of the resulting DNF. For instance: For the\n * input: (A || B) && C, the DNF form is: (A && C) || (B && C), and the return value is a list\n * with two elements: a composite filter that performs (A && C), and a composite filter that\n * performs (B && C).\n *\n * @param filter the composite filter to calculate DNF transform for.\n * @return the terms in the DNF transform.\n */ function Br(t) {\n    if (0 === t.getFilters().length) return [];\n    const e = Kr(Fr(t));\n    return F(Ur(e)), Lr(e) || qr(e) ? [ e ] : e.getFilters();\n}\n\n/** Returns true if the given filter is a single field filter. e.g. (a == 10). */ function Lr(t) {\n    return t instanceof mn;\n}\n\n/**\n * Returns true if the given filter is the conjunction of one or more field filters. e.g. (a == 10\n * && b == 20)\n */ function qr(t) {\n    return t instanceof gn && In(t);\n}\n\n/**\n * Returns whether or not the given filter is in disjunctive normal form (DNF).\n *\n * <p>In boolean logic, a disjunctive normal form (DNF) is a canonical normal form of a logical\n * formula consisting of a disjunction of conjunctions; it can also be described as an OR of ANDs.\n *\n * <p>For more info, visit: https://en.wikipedia.org/wiki/Disjunctive_normal_form\n */ function Ur(t) {\n    return Lr(t) || qr(t) || \n    /**\n * Returns true if the given filter is the disjunction of one or more \"flat conjunctions\" and\n * field filters. e.g. (a == 10) || (b==20 && c==30)\n */\n    function(t) {\n        if (t instanceof gn && pn(t)) {\n            for (const e of t.getFilters()) if (!Lr(e) && !qr(e)) return !1;\n            return !0;\n        }\n        return !1;\n    }(t);\n}\n\nfunction Kr(t) {\n    if (F(t instanceof mn || t instanceof gn), t instanceof mn) return t;\n    if (1 === t.filters.length) return Kr(t.filters[0]);\n    // Compute DNF for each of the subfilters first\n        const e = t.filters.map((t => Kr(t)));\n    let n = gn.create(e, t.op);\n    return n = jr(n), Ur(n) ? n : (F(n instanceof gn), F(yn(n)), F(n.filters.length > 1), \n    n.filters.reduce(((t, e) => Gr(t, e))));\n}\n\nfunction Gr(t, e) {\n    let n;\n    return F(t instanceof mn || t instanceof gn), F(e instanceof mn || e instanceof gn), \n    // FieldFilter FieldFilter\n    n = t instanceof mn ? e instanceof mn ? function(t, e) {\n        // Conjunction distribution for two field filters is the conjunction of them.\n        return gn.create([ t, e ], \"and\" /* CompositeOperator.AND */);\n    }(t, e) : Qr(t, e) : e instanceof mn ? Qr(e, t) : function(t, e) {\n        // There are four cases:\n        // (A & B) & (C & D) --> (A & B & C & D)\n        // (A & B) & (C | D) --> (A & B & C) | (A & B & D)\n        // (A | B) & (C & D) --> (C & D & A) | (C & D & B)\n        // (A | B) & (C | D) --> (A & C) | (A & D) | (B & C) | (B & D)\n        // Case 1 is a merge.\n        if (F(t.filters.length > 0 && e.filters.length > 0), yn(t) && yn(e)) return vn(t, e.getFilters());\n        // Case 2,3,4 all have at least one side (lhs or rhs) that is a disjunction. In all three cases\n        // we should take each element of the disjunction and distribute it over the other side, and\n        // return the disjunction of the distribution results.\n                const n = pn(t) ? t : e, s = pn(t) ? e : t, i = n.filters.map((t => Gr(t, s)));\n        return gn.create(i, \"or\" /* CompositeOperator.OR */);\n    }(t, e), jr(n);\n}\n\nfunction Qr(t, e) {\n    // There are two cases:\n    // A & (B & C) --> (A & B & C)\n    // A & (B | C) --> (A & B) | (A & C)\n    if (yn(e)) \n    // Case 1\n    return vn(e, t.getFilters());\n    {\n        // Case 2\n        const n = e.filters.map((e => Gr(t, e)));\n        return gn.create(n, \"or\" /* CompositeOperator.OR */);\n    }\n}\n\n/**\n * Applies the associativity property to the given filter and returns the resulting filter.\n *\n * <ul>\n *   <li>A | (B | C) == (A | B) | C == (A | B | C)\n *   <li>A & (B & C) == (A & B) & C == (A & B & C)\n * </ul>\n *\n * <p>For more info, visit: https://en.wikipedia.org/wiki/Associative_property#Propositional_logic\n */ function jr(t) {\n    if (F(t instanceof mn || t instanceof gn), t instanceof mn) return t;\n    const e = t.getFilters();\n    // If the composite filter only contains 1 filter, apply associativity to it.\n        if (1 === e.length) return jr(e[0]);\n    // Associativity applied to a flat composite filter results is itself.\n        if (Tn(t)) return t;\n    // First apply associativity to all subfilters. This will in turn recursively apply\n    // associativity to all nested composite filters and field filters.\n        const n = e.map((t => jr(t))), s = [];\n    // For composite subfilters that perform the same kind of logical operation as `compositeFilter`\n    // take out their filters and add them to `compositeFilter`. For example:\n    // compositeFilter = (A | (B | C | D))\n    // compositeSubfilter = (B | C | D)\n    // Result: (A | B | C | D)\n    // Note that the `compositeSubfilter` has been eliminated, and its filters (B, C, D) have been\n    // added to the top-level \"compositeFilter\".\n        return n.forEach((e => {\n        e instanceof mn ? s.push(e) : e instanceof gn && (e.op === t.op ? \n        // compositeFilter: (A | (B | C))\n        // compositeSubfilter: (B | C)\n        // Result: (A | B | C)\n        s.push(...e.filters) : \n        // compositeFilter: (A | (B & C))\n        // compositeSubfilter: (B & C)\n        // Result: (A | (B & C))\n        s.push(e));\n    })), 1 === s.length ? s[0] : gn.create(s, t.op);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An in-memory implementation of IndexManager.\n */ class zr {\n    constructor() {\n        this.rn = new Wr;\n    }\n    addToCollectionParentIndex(t, e) {\n        return this.rn.add(e), Rt.resolve();\n    }\n    getCollectionParents(t, e) {\n        return Rt.resolve(this.rn.getEntries(e));\n    }\n    addFieldIndex(t, e) {\n        // Field indices are not supported with memory persistence.\n        return Rt.resolve();\n    }\n    deleteFieldIndex(t, e) {\n        // Field indices are not supported with memory persistence.\n        return Rt.resolve();\n    }\n    getDocumentsMatchingTarget(t, e) {\n        // Field indices are not supported with memory persistence.\n        return Rt.resolve(null);\n    }\n    getIndexType(t, e) {\n        // Field indices are not supported with memory persistence.\n        return Rt.resolve(0 /* IndexType.NONE */);\n    }\n    getFieldIndexes(t, e) {\n        // Field indices are not supported with memory persistence.\n        return Rt.resolve([]);\n    }\n    getNextCollectionGroupToUpdate(t) {\n        // Field indices are not supported with memory persistence.\n        return Rt.resolve(null);\n    }\n    getMinOffset(t, e) {\n        return Rt.resolve(It.min());\n    }\n    getMinOffsetFromCollectionGroup(t, e) {\n        return Rt.resolve(It.min());\n    }\n    updateCollectionGroup(t, e, n) {\n        // Field indices are not supported with memory persistence.\n        return Rt.resolve();\n    }\n    updateIndexEntries(t, e) {\n        // Field indices are not supported with memory persistence.\n        return Rt.resolve();\n    }\n}\n\n/**\n * Internal implementation of the collection-parent index exposed by MemoryIndexManager.\n * Also used for in-memory caching by IndexedDbIndexManager and initial index population\n * in indexeddb_schema.ts\n */ class Wr {\n    constructor() {\n        this.index = {};\n    }\n    // Returns false if the entry already existed.\n    add(t) {\n        const e = t.lastSegment(), n = t.popLast(), s = this.index[e] || new Ee(ut.comparator), i = !s.has(n);\n        return this.index[e] = s.add(n), i;\n    }\n    has(t) {\n        const e = t.lastSegment(), n = t.popLast(), s = this.index[e];\n        return s && s.has(n);\n    }\n    getEntries(t) {\n        return (this.index[t] || new Ee(ut.comparator)).toArray();\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Hr = new Uint8Array(0);\n\n/**\n * A persisted implementation of IndexManager.\n *\n * PORTING NOTE: Unlike iOS and Android, the Web SDK does not memoize index\n * data as it supports multi-tab access.\n */\nclass Jr {\n    constructor(t, e) {\n        this.user = t, this.databaseId = e, \n        /**\n         * An in-memory copy of the index entries we've already written since the SDK\n         * launched. Used to avoid re-writing the same entry repeatedly.\n         *\n         * This is *NOT* a complete cache of what's in persistence and so can never be\n         * used to satisfy reads.\n         */\n        this.on = new Wr, \n        /**\n         * Maps from a target to its equivalent list of sub-targets. Each sub-target\n         * contains only one term from the target's disjunctive normal form (DNF).\n         */\n        this.un = new os((t => $n(t)), ((t, e) => On(t, e))), this.uid = t.uid || \"\";\n    }\n    /**\n     * Adds a new entry to the collection parent index.\n     *\n     * Repeated calls for the same collectionPath should be avoided within a\n     * transaction as IndexedDbIndexManager only caches writes once a transaction\n     * has been committed.\n     */    addToCollectionParentIndex(t, e) {\n        if (!this.on.has(e)) {\n            const n = e.lastSegment(), s = e.popLast();\n            t.addOnCommittedListener((() => {\n                // Add the collection to the in memory cache only if the transaction was\n                // successfully committed.\n                this.on.add(e);\n            }));\n            const i = {\n                collectionId: n,\n                parent: qt(s)\n            };\n            return Yr(t).put(i);\n        }\n        return Rt.resolve();\n    }\n    getCollectionParents(t, e) {\n        const n = [], s = IDBKeyRange.bound([ e, \"\" ], [ st(e), \"\" ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0);\n        return Yr(t).j(s).next((t => {\n            for (const s of t) {\n                // This collectionId guard shouldn't be necessary (and isn't as long\n                // as we're running in a real browser), but there's a bug in\n                // indexeddbshim that breaks our range in our tests running in node:\n                // https://github.com/axemclion/IndexedDBShim/issues/334\n                if (s.collectionId !== e) break;\n                n.push(Gt(s.parent));\n            }\n            return n;\n        }));\n    }\n    addFieldIndex(t, e) {\n        // TODO(indexing): Verify that the auto-incrementing index ID works in\n        // Safari & Firefox.\n        const n = Zr(t), s = function(t) {\n            return {\n                indexId: t.indexId,\n                collectionGroup: t.collectionGroup,\n                fields: t.fields.map((t => [ t.fieldPath.canonicalString(), t.kind ]))\n            };\n        }(e);\n        delete s.indexId;\n        // `indexId` is auto-populated by IndexedDb\n        const i = n.add(s);\n        if (e.indexState) {\n            const n = to(t);\n            return i.next((t => {\n                n.put(Tr(t, this.user, e.indexState.sequenceNumber, e.indexState.offset));\n            }));\n        }\n        return i.next();\n    }\n    deleteFieldIndex(t, e) {\n        const n = Zr(t), s = to(t), i = Xr(t);\n        return n.delete(e.indexId).next((() => s.delete(IDBKeyRange.bound([ e.indexId ], [ e.indexId + 1 ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0)))).next((() => i.delete(IDBKeyRange.bound([ e.indexId ], [ e.indexId + 1 ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0))));\n    }\n    getDocumentsMatchingTarget(t, e) {\n        const n = Xr(t);\n        let s = !0;\n        const i = new Map;\n        return Rt.forEach(this.cn(e), (e => this.an(t, e).next((t => {\n            s && (s = !!t), i.set(e, t);\n        })))).next((() => {\n            if (s) {\n                let t = gs();\n                const s = [];\n                return Rt.forEach(i, ((i, r) => {\n                    var o;\n                    N(\"IndexedDbIndexManager\", `Using index ${o = i, `id=${o.indexId}|cg=${o.collectionGroup}|f=${o.fields.map((t => `${t.fieldPath}:${t.kind}`)).join(\",\")}`} to execute ${$n(e)}`);\n                    const u = function(t, e) {\n                        const n = ft(e);\n                        if (void 0 === n) return null;\n                        for (const e of Bn(t, n.fieldPath)) switch (e.op) {\n                          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n                            return e.value.arrayValue.values || [];\n\n                          case \"array-contains\" /* Operator.ARRAY_CONTAINS */ :\n                            return [ e.value ];\n                            // Remaining filters are not array filters.\n                                                }\n                        return null;\n                    }\n                    /**\n * Returns the list of values that are used in != or NOT_IN filters. Returns\n * `null` if there are no such filters.\n */ (r, i), c = function(t, e) {\n                        const n = new Map;\n                        for (const s of dt(e)) for (const e of Bn(t, s.fieldPath)) switch (e.op) {\n                          case \"==\" /* Operator.EQUAL */ :\n                          case \"in\" /* Operator.IN */ :\n                            // Encode equality prefix, which is encoded in the index value before\n                            // the inequality (e.g. `a == 'a' && b != 'b'` is encoded to\n                            // `value != 'ab'`).\n                            n.set(s.fieldPath.canonicalString(), e.value);\n                            break;\n\n                          case \"not-in\" /* Operator.NOT_IN */ :\n                          case \"!=\" /* Operator.NOT_EQUAL */ :\n                            // NotIn/NotEqual is always a suffix. There cannot be any remaining\n                            // segments and hence we can return early here.\n                            return n.set(s.fieldPath.canonicalString(), e.value), Array.from(n.values());\n                            // Remaining filters cannot be used as notIn bounds.\n                                                }\n                        return null;\n                    }\n                    /**\n * Returns a lower bound of field values that can be used as a starting point to\n * scan the index defined by `fieldIndex`. Returns `MIN_VALUE` if no lower bound\n * exists.\n */ (r, i), a = function(t, e) {\n                        const n = [];\n                        let s = !0;\n                        // For each segment, retrieve a lower bound if there is a suitable filter or\n                        // startAt.\n                                                for (const i of dt(e)) {\n                            const e = 0 /* IndexKind.ASCENDING */ === i.kind ? Ln(t, i.fieldPath, t.startAt) : qn(t, i.fieldPath, t.startAt);\n                            n.push(e.value), s && (s = e.inclusive);\n                        }\n                        return new hn(n, s);\n                    }\n                    /**\n * Returns an upper bound of field values that can be used as an ending point\n * when scanning the index defined by `fieldIndex`. Returns `MAX_VALUE` if no\n * upper bound exists.\n */ (r, i), h = function(t, e) {\n                        const n = [];\n                        let s = !0;\n                        // For each segment, retrieve an upper bound if there is a suitable filter or\n                        // endAt.\n                                                for (const i of dt(e)) {\n                            const e = 0 /* IndexKind.ASCENDING */ === i.kind ? qn(t, i.fieldPath, t.endAt) : Ln(t, i.fieldPath, t.endAt);\n                            n.push(e.value), s && (s = e.inclusive);\n                        }\n                        return new hn(n, s);\n                    }(r, i), l = this.hn(i, r, a), f = this.hn(i, r, h), d = this.ln(i, r, c), w = this.fn(i.indexId, u, l, a.inclusive, f, h.inclusive, d);\n                    return Rt.forEach(w, (i => n.H(i, e.limit).next((e => {\n                        e.forEach((e => {\n                            const n = ht.fromSegments(e.documentKey);\n                            t.has(n) || (t = t.add(n), s.push(n));\n                        }));\n                    }))));\n                })).next((() => s));\n            }\n            return Rt.resolve(null);\n        }));\n    }\n    cn(t) {\n        let e = this.un.get(t);\n        if (e) return e;\n        if (0 === t.filters.length) e = [ t ]; else {\n            e = Br(gn.create(t.filters, \"and\" /* CompositeOperator.AND */)).map((e => Mn(t.path, t.collectionGroup, t.orderBy, e.getFilters(), t.limit, t.startAt, t.endAt)));\n        }\n        return this.un.set(t, e), e;\n    }\n    /**\n     * Constructs a key range query on `DbIndexEntryStore` that unions all\n     * bounds.\n     */    fn(t, e, n, s, i, r, o) {\n        // The number of total index scans we union together. This is similar to a\n        // distributed normal form, but adapted for array values. We create a single\n        // index range per value in an ARRAY_CONTAINS or ARRAY_CONTAINS_ANY filter\n        // combined with the values from the query bounds.\n        const u = (null != e ? e.length : 1) * Math.max(n.length, i.length), c = u / (null != e ? e.length : 1), a = [];\n        for (let h = 0; h < u; ++h) {\n            const u = e ? this.dn(e[h / c]) : Hr, l = this.wn(t, u, n[h % c], s), f = this._n(t, u, i[h % c], r), d = o.map((e => this.wn(t, u, e, \n            /* inclusive= */ !0)));\n            a.push(...this.createRange(l, f, d));\n        }\n        return a;\n    }\n    /** Generates the lower bound for `arrayValue` and `directionalValue`. */    wn(t, e, n, s) {\n        const i = new kr(t, ht.empty(), e, n);\n        return s ? i : i.Je();\n    }\n    /** Generates the upper bound for `arrayValue` and `directionalValue`. */    _n(t, e, n, s) {\n        const i = new kr(t, ht.empty(), e, n);\n        return s ? i.Je() : i;\n    }\n    an(t, e) {\n        const n = new Or(e), s = null != e.collectionGroup ? e.collectionGroup : e.path.lastSegment();\n        return this.getFieldIndexes(t, s).next((t => {\n            // Return the index with the most number of segments.\n            let e = null;\n            for (const s of t) {\n                n.tn(s) && (!e || s.fields.length > e.fields.length) && (e = s);\n            }\n            return e;\n        }));\n    }\n    getIndexType(t, e) {\n        let n = 2 /* IndexType.FULL */;\n        const s = this.cn(e);\n        return Rt.forEach(s, (e => this.an(t, e).next((t => {\n            t ? 0 /* IndexType.NONE */ !== n && t.fields.length < function(t) {\n                let e = new Ee(at.comparator), n = !1;\n                for (const s of t.filters) for (const t of s.getFlattenedFilters()) \n                // __name__ is not an explicit segment of any index, so we don't need to\n                // count it.\n                t.field.isKeyField() || (\n                // ARRAY_CONTAINS or ARRAY_CONTAINS_ANY filters must be counted separately.\n                // For instance, it is possible to have an index for \"a ARRAY a ASC\". Even\n                // though these are on the same field, they should be counted as two\n                // separate segments in an index.\n                \"array-contains\" /* Operator.ARRAY_CONTAINS */ === t.op || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === t.op ? n = !0 : e = e.add(t.field));\n                for (const n of t.orderBy) \n                // __name__ is not an explicit segment of any index, so we don't need to\n                // count it.\n                n.field.isKeyField() || (e = e.add(n.field));\n                return e.size + (n ? 1 : 0);\n            }(e) && (n = 1 /* IndexType.PARTIAL */) : n = 0 /* IndexType.NONE */;\n        })))).next((() => \n        // OR queries have more than one sub-target (one sub-target per DNF term). We currently consider\n        // OR queries that have a `limit` to have a partial index. For such queries we perform sorting\n        // and apply the limit in memory as a post-processing step.\n        function(t) {\n            return null !== t.limit;\n        }(e) && s.length > 1 && 2 /* IndexType.FULL */ === n ? 1 /* IndexType.PARTIAL */ : n));\n    }\n    /**\n     * Returns the byte encoded form of the directional values in the field index.\n     * Returns `null` if the document does not have all fields specified in the\n     * index.\n     */    mn(t, e) {\n        const n = new Nr;\n        for (const s of dt(t)) {\n            const t = e.data.field(s.fieldPath);\n            if (null == t) return null;\n            const i = n.He(s.kind);\n            br.Ve._e(t, i);\n        }\n        return n.Qe();\n    }\n    /** Encodes a single value to the ascending index format. */    dn(t) {\n        const e = new Nr;\n        return br.Ve._e(t, e.He(0 /* IndexKind.ASCENDING */)), e.Qe();\n    }\n    /**\n     * Returns an encoded form of the document key that sorts based on the key\n     * ordering of the field index.\n     */    gn(t, e) {\n        const n = new Nr;\n        return br.Ve._e(We(this.databaseId, e), n.He(function(t) {\n            const e = dt(t);\n            return 0 === e.length ? 0 /* IndexKind.ASCENDING */ : e[e.length - 1].kind;\n        }(t))), n.Qe();\n    }\n    /**\n     * Encodes the given field values according to the specification in `target`.\n     * For IN queries, a list of possible values is returned.\n     */    ln(t, e, n) {\n        if (null === n) return [];\n        let s = [];\n        s.push(new Nr);\n        let i = 0;\n        for (const r of dt(t)) {\n            const t = n[i++];\n            for (const n of s) if (this.yn(e, r.fieldPath) && Je(t)) s = this.pn(s, r, t); else {\n                const e = n.He(r.kind);\n                br.Ve._e(t, e);\n            }\n        }\n        return this.In(s);\n    }\n    /**\n     * Encodes the given bounds according to the specification in `target`. For IN\n     * queries, a list of possible values is returned.\n     */    hn(t, e, n) {\n        return this.ln(t, e, n.position);\n    }\n    /** Returns the byte representation for the provided encoders. */    In(t) {\n        const e = [];\n        for (let n = 0; n < t.length; ++n) e[n] = t[n].Qe();\n        return e;\n    }\n    /**\n     * Creates a separate encoder for each element of an array.\n     *\n     * The method appends each value to all existing encoders (e.g. filter(\"a\",\n     * \"==\", \"a1\").filter(\"b\", \"in\", [\"b1\", \"b2\"]) becomes [\"a1,b1\", \"a1,b2\"]). A\n     * list of new encoders is returned.\n     */    pn(t, e, n) {\n        const s = [ ...t ], i = [];\n        for (const t of n.arrayValue.values || []) for (const n of s) {\n            const s = new Nr;\n            s.seed(n.Qe()), br.Ve._e(t, s.He(e.kind)), i.push(s);\n        }\n        return i;\n    }\n    yn(t, e) {\n        return !!t.filters.find((t => t instanceof mn && t.field.isEqual(e) && (\"in\" /* Operator.IN */ === t.op || \"not-in\" /* Operator.NOT_IN */ === t.op)));\n    }\n    getFieldIndexes(t, e) {\n        const n = Zr(t), s = to(t);\n        return (e ? n.j(\"collectionGroupIndex\", IDBKeyRange.bound(e, e)) : n.j()).next((t => {\n            const e = [];\n            return Rt.forEach(t, (t => s.get([ t.indexId, this.uid ]).next((n => {\n                e.push(function(t, e) {\n                    const n = e ? new gt(e.sequenceNumber, new It(wr(e.readTime), new ht(Gt(e.documentKey)), e.largestBatchId)) : gt.empty(), s = t.fields.map((([t, e]) => new _t(at.fromServerFormat(t), e)));\n                    return new lt(t.indexId, t.collectionGroup, s, n);\n                }(t, n));\n            })))).next((() => e));\n        }));\n    }\n    getNextCollectionGroupToUpdate(t) {\n        return this.getFieldIndexes(t).next((t => 0 === t.length ? null : (t.sort(((t, e) => {\n            const n = t.indexState.sequenceNumber - e.indexState.sequenceNumber;\n            return 0 !== n ? n : et(t.collectionGroup, e.collectionGroup);\n        })), t[0].collectionGroup)));\n    }\n    updateCollectionGroup(t, e, n) {\n        const s = Zr(t), i = to(t);\n        return this.Tn(t).next((t => s.j(\"collectionGroupIndex\", IDBKeyRange.bound(e, e)).next((e => Rt.forEach(e, (e => i.put(Tr(e.indexId, this.user, t, n))))))));\n    }\n    updateIndexEntries(t, e) {\n        // Porting Note: `getFieldIndexes()` on Web does not cache index lookups as\n        // it could be used across different IndexedDB transactions. As any cached\n        // data might be invalidated by other multi-tab clients, we can only trust\n        // data within a single IndexedDB transaction. We therefore add a cache\n        // here.\n        const n = new Map;\n        return Rt.forEach(e, ((e, s) => {\n            const i = n.get(e.collectionGroup);\n            return (i ? Rt.resolve(i) : this.getFieldIndexes(t, e.collectionGroup)).next((i => (n.set(e.collectionGroup, i), \n            Rt.forEach(i, (n => this.En(t, e, n).next((e => {\n                const i = this.An(s, n);\n                return e.isEqual(i) ? Rt.resolve() : this.vn(t, s, n, e, i);\n            })))))));\n        }));\n    }\n    Rn(t, e, n, s) {\n        return Xr(t).put({\n            indexId: s.indexId,\n            uid: this.uid,\n            arrayValue: s.arrayValue,\n            directionalValue: s.directionalValue,\n            orderedDocumentKey: this.gn(n, e.key),\n            documentKey: e.key.path.toArray()\n        });\n    }\n    Pn(t, e, n, s) {\n        return Xr(t).delete([ s.indexId, this.uid, s.arrayValue, s.directionalValue, this.gn(n, e.key), e.key.path.toArray() ]);\n    }\n    En(t, e, n) {\n        const s = Xr(t);\n        let i = new Ee(Mr);\n        return s.X({\n            index: \"documentKeyIndex\",\n            range: IDBKeyRange.only([ n.indexId, this.uid, this.gn(n, e) ])\n        }, ((t, s) => {\n            i = i.add(new kr(n.indexId, e, s.arrayValue, s.directionalValue));\n        })).next((() => i));\n    }\n    /** Creates the index entries for the given document. */    An(t, e) {\n        let n = new Ee(Mr);\n        const s = this.mn(e, t);\n        if (null == s) return n;\n        const i = ft(e);\n        if (null != i) {\n            const r = t.data.field(i.fieldPath);\n            if (Je(r)) for (const i of r.arrayValue.values || []) n = n.add(new kr(e.indexId, t.key, this.dn(i), s));\n        } else n = n.add(new kr(e.indexId, t.key, Hr, s));\n        return n;\n    }\n    /**\n     * Updates the index entries for the provided document by deleting entries\n     * that are no longer referenced in `newEntries` and adding all newly added\n     * entries.\n     */    vn(t, e, n, s, i) {\n        N(\"IndexedDbIndexManager\", \"Updating index entries for document '%s'\", e.key);\n        const r = [];\n        return function(t, e, n, s, i) {\n            const r = t.getIterator(), o = e.getIterator();\n            let u = ve(r), c = ve(o);\n            // Walk through the two sets at the same time, using the ordering defined by\n            // `comparator`.\n            for (;u || c; ) {\n                let t = !1, e = !1;\n                if (u && c) {\n                    const s = n(u, c);\n                    s < 0 ? \n                    // The element was removed if the next element in our ordered\n                    // walkthrough is only in `before`.\n                    e = !0 : s > 0 && (\n                    // The element was added if the next element in our ordered walkthrough\n                    // is only in `after`.\n                    t = !0);\n                } else null != u ? e = !0 : t = !0;\n                t ? (s(c), c = ve(o)) : e ? (i(u), u = ve(r)) : (u = ve(r), c = ve(o));\n            }\n        }(s, i, Mr, (\n        /* onAdd= */ s => {\n            r.push(this.Rn(t, e, n, s));\n        }), (\n        /* onRemove= */ s => {\n            r.push(this.Pn(t, e, n, s));\n        })), Rt.waitFor(r);\n    }\n    Tn(t) {\n        let e = 1;\n        return to(t).X({\n            index: \"sequenceNumberIndex\",\n            reverse: !0,\n            range: IDBKeyRange.upperBound([ this.uid, Number.MAX_SAFE_INTEGER ])\n        }, ((t, n, s) => {\n            s.done(), e = n.sequenceNumber + 1;\n        })).next((() => e));\n    }\n    /**\n     * Returns a new set of IDB ranges that splits the existing range and excludes\n     * any values that match the `notInValue` from these ranges. As an example,\n     * '[foo > 2 && foo != 3]` becomes  `[foo > 2 && < 3, foo > 3]`.\n     */    createRange(t, e, n) {\n        // The notIn values need to be sorted and unique so that we can return a\n        // sorted set of non-overlapping ranges.\n        n = n.sort(((t, e) => Mr(t, e))).filter(((t, e, n) => !e || 0 !== Mr(t, n[e - 1])));\n        const s = [];\n        s.push(t);\n        for (const i of n) {\n            const n = Mr(i, t), r = Mr(i, e);\n            if (0 === n) \n            // `notInValue` is the lower bound. We therefore need to raise the bound\n            // to the next value.\n            s[0] = t.Je(); else if (n > 0 && r < 0) \n            // `notInValue` is in the middle of the range\n            s.push(i), s.push(i.Je()); else if (r > 0) \n            // `notInValue` (and all following values) are out of the range\n            break;\n        }\n        s.push(e);\n        const i = [];\n        for (let t = 0; t < s.length; t += 2) {\n            // If we encounter two bounds that will create an unmatchable key range,\n            // then we return an empty set of key ranges.\n            if (this.bn(s[t], s[t + 1])) return [];\n            const e = [ s[t].indexId, this.uid, s[t].arrayValue, s[t].directionalValue, Hr, [] ], n = [ s[t + 1].indexId, this.uid, s[t + 1].arrayValue, s[t + 1].directionalValue, Hr, [] ];\n            i.push(IDBKeyRange.bound(e, n));\n        }\n        return i;\n    }\n    bn(t, e) {\n        // If lower bound is greater than the upper bound, then the key\n        // range can never be matched.\n        return Mr(t, e) > 0;\n    }\n    getMinOffsetFromCollectionGroup(t, e) {\n        return this.getFieldIndexes(t, e).next(eo);\n    }\n    getMinOffset(t, e) {\n        return Rt.mapArray(this.cn(e), (e => this.an(t, e).next((t => t || O())))).next(eo);\n    }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the collectionParents\n * document store.\n */ function Yr(t) {\n    return _e(t, \"collectionParents\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the index entry object store.\n */ function Xr(t) {\n    return _e(t, \"indexEntries\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the index configuration object store.\n */ function Zr(t) {\n    return _e(t, \"indexConfiguration\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the index state object store.\n */ function to(t) {\n    return _e(t, \"indexState\");\n}\n\nfunction eo(t) {\n    F(0 !== t.length);\n    let e = t[0].indexState.offset, n = e.largestBatchId;\n    for (let s = 1; s < t.length; s++) {\n        const i = t[s].indexState.offset;\n        Tt(i, e) < 0 && (e = i), n < i.largestBatchId && (n = i.largestBatchId);\n    }\n    return new It(e.readTime, e.documentKey, n);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const no = {\n    didRun: !1,\n    sequenceNumbersCollected: 0,\n    targetsRemoved: 0,\n    documentsRemoved: 0\n};\n\nclass so {\n    constructor(\n    // When we attempt to collect, we will only do so if the cache size is greater than this\n    // threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.\n    t, \n    // The percentage of sequence numbers that we will attempt to collect\n    e, \n    // A cap on the total number of sequence numbers that will be collected. This prevents\n    // us from collecting a huge number of sequence numbers if the cache has grown very large.\n    n) {\n        this.cacheSizeCollectionThreshold = t, this.percentileToCollect = e, this.maximumSequenceNumbersToCollect = n;\n    }\n    static withCacheSize(t) {\n        return new so(t, so.DEFAULT_COLLECTION_PERCENTILE, so.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Delete a mutation batch and the associated document mutations.\n * @returns A PersistencePromise of the document mutations that were removed.\n */\nfunction io(t, e, n) {\n    const s = t.store(\"mutations\"), i = t.store(\"documentMutations\"), r = [], o = IDBKeyRange.only(n.batchId);\n    let u = 0;\n    const c = s.X({\n        range: o\n    }, ((t, e, n) => (u++, n.delete())));\n    r.push(c.next((() => {\n        F(1 === u);\n    })));\n    const a = [];\n    for (const t of n.mutations) {\n        const s = zt(e, t.key.path, n.batchId);\n        r.push(i.delete(s)), a.push(t.key);\n    }\n    return Rt.waitFor(r).next((() => a));\n}\n\n/**\n * Returns an approximate size for the given document.\n */ function ro(t) {\n    if (!t) return 0;\n    let e;\n    if (t.document) e = t.document; else if (t.unknownDocument) e = t.unknownDocument; else {\n        if (!t.noDocument) throw O();\n        e = t.noDocument;\n    }\n    return JSON.stringify(e).length;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A mutation queue for a specific user, backed by IndexedDB. */ so.DEFAULT_COLLECTION_PERCENTILE = 10, \nso.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT = 1e3, so.DEFAULT = new so(41943040, so.DEFAULT_COLLECTION_PERCENTILE, so.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT), \nso.DISABLED = new so(-1, 0, 0);\n\nclass oo {\n    constructor(\n    /**\n     * The normalized userId (e.g. null UID => \"\" userId) used to store /\n     * retrieve mutations.\n     */\n    t, e, n, s) {\n        this.userId = t, this.serializer = e, this.indexManager = n, this.referenceDelegate = s, \n        /**\n         * Caches the document keys for pending mutation batches. If the mutation\n         * has been removed from IndexedDb, the cached value may continue to\n         * be used to retrieve the batch's document keys. To remove a cached value\n         * locally, `removeCachedMutationKeys()` should be invoked either directly\n         * or through `removeMutationBatches()`.\n         *\n         * With multi-tab, when the primary client acknowledges or rejects a mutation,\n         * this cache is used by secondary clients to invalidate the local\n         * view of the documents that were previously affected by the mutation.\n         */\n        // PORTING NOTE: Multi-tab only.\n        this.Vn = {};\n    }\n    /**\n     * Creates a new mutation queue for the given user.\n     * @param user - The user for which to create a mutation queue.\n     * @param serializer - The serializer to use when persisting to IndexedDb.\n     */    static de(t, e, n, s) {\n        // TODO(mcg): Figure out what constraints there are on userIDs\n        // In particular, are there any reserved characters? are empty ids allowed?\n        // For the moment store these together in the same mutations table assuming\n        // that empty userIDs aren't allowed.\n        F(\"\" !== t.uid);\n        const i = t.isAuthenticated() ? t.uid : \"\";\n        return new oo(i, e, n, s);\n    }\n    checkEmpty(t) {\n        let e = !0;\n        const n = IDBKeyRange.bound([ this.userId, Number.NEGATIVE_INFINITY ], [ this.userId, Number.POSITIVE_INFINITY ]);\n        return co(t).X({\n            index: \"userMutationsIndex\",\n            range: n\n        }, ((t, n, s) => {\n            e = !1, s.done();\n        })).next((() => e));\n    }\n    addMutationBatch(t, e, n, s) {\n        const i = ao(t), r = co(t);\n        // The IndexedDb implementation in Chrome (and Firefox) does not handle\n        // compound indices that include auto-generated keys correctly. To ensure\n        // that the index entry is added correctly in all browsers, we perform two\n        // writes: The first write is used to retrieve the next auto-generated Batch\n        // ID, and the second write populates the index and stores the actual\n        // mutation batch.\n        // See: https://bugs.chromium.org/p/chromium/issues/detail?id=701972\n        // We write an empty object to obtain key\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return r.add({}).next((o => {\n            F(\"number\" == typeof o);\n            const u = new Zs(o, e, n, s), c = function(t, e, n) {\n                const s = n.baseMutations.map((e => ji(t.fe, e))), i = n.mutations.map((e => ji(t.fe, e)));\n                return {\n                    userId: e,\n                    batchId: n.batchId,\n                    localWriteTimeMs: n.localWriteTime.toMillis(),\n                    baseMutations: s,\n                    mutations: i\n                };\n            }(this.serializer, this.userId, u), a = [];\n            let h = new Ee(((t, e) => et(t.canonicalString(), e.canonicalString())));\n            for (const t of s) {\n                const e = zt(this.userId, t.key.path, o);\n                h = h.add(t.key.path.popLast()), a.push(r.put(c)), a.push(i.put(e, Wt));\n            }\n            return h.forEach((e => {\n                a.push(this.indexManager.addToCollectionParentIndex(t, e));\n            })), t.addOnCommittedListener((() => {\n                this.Vn[o] = u.keys();\n            })), Rt.waitFor(a).next((() => u));\n        }));\n    }\n    lookupMutationBatch(t, e) {\n        return co(t).get(e).next((t => t ? (F(t.userId === this.userId), _r(this.serializer, t)) : null));\n    }\n    /**\n     * Returns the document keys for the mutation batch with the given batchId.\n     * For primary clients, this method returns `null` after\n     * `removeMutationBatches()` has been called. Secondary clients return a\n     * cached result until `removeCachedMutationKeys()` is invoked.\n     */\n    // PORTING NOTE: Multi-tab only.\n    Sn(t, e) {\n        return this.Vn[e] ? Rt.resolve(this.Vn[e]) : this.lookupMutationBatch(t, e).next((t => {\n            if (t) {\n                const n = t.keys();\n                return this.Vn[e] = n, n;\n            }\n            return null;\n        }));\n    }\n    getNextMutationBatchAfterBatchId(t, e) {\n        const n = e + 1, s = IDBKeyRange.lowerBound([ this.userId, n ]);\n        let i = null;\n        return co(t).X({\n            index: \"userMutationsIndex\",\n            range: s\n        }, ((t, e, s) => {\n            e.userId === this.userId && (F(e.batchId >= n), i = _r(this.serializer, e)), s.done();\n        })).next((() => i));\n    }\n    getHighestUnacknowledgedBatchId(t) {\n        const e = IDBKeyRange.upperBound([ this.userId, Number.POSITIVE_INFINITY ]);\n        let n = -1;\n        return co(t).X({\n            index: \"userMutationsIndex\",\n            range: e,\n            reverse: !0\n        }, ((t, e, s) => {\n            n = e.batchId, s.done();\n        })).next((() => n));\n    }\n    getAllMutationBatches(t) {\n        const e = IDBKeyRange.bound([ this.userId, -1 ], [ this.userId, Number.POSITIVE_INFINITY ]);\n        return co(t).j(\"userMutationsIndex\", e).next((t => t.map((t => _r(this.serializer, t)))));\n    }\n    getAllMutationBatchesAffectingDocumentKey(t, e) {\n        // Scan the document-mutation index starting with a prefix starting with\n        // the given documentKey.\n        const n = jt(this.userId, e.path), s = IDBKeyRange.lowerBound(n), i = [];\n        return ao(t).X({\n            range: s\n        }, ((n, s, r) => {\n            const [o, u, c] = n, a = Gt(u);\n            // Only consider rows matching exactly the specific key of\n            // interest. Note that because we order by path first, and we\n            // order terminators before path separators, we'll encounter all\n            // the index rows for documentKey contiguously. In particular, all\n            // the rows for documentKey will occur before any rows for\n            // documents nested in a subcollection beneath documentKey so we\n            // can stop as soon as we hit any such row.\n                        if (o === this.userId && e.path.isEqual(a)) \n            // Look up the mutation batch in the store.\n            return co(t).get(c).next((t => {\n                if (!t) throw O();\n                F(t.userId === this.userId), i.push(_r(this.serializer, t));\n            }));\n            r.done();\n        })).next((() => i));\n    }\n    getAllMutationBatchesAffectingDocumentKeys(t, e) {\n        let n = new Ee(et);\n        const s = [];\n        return e.forEach((e => {\n            const i = jt(this.userId, e.path), r = IDBKeyRange.lowerBound(i), o = ao(t).X({\n                range: r\n            }, ((t, s, i) => {\n                const [r, o, u] = t, c = Gt(o);\n                // Only consider rows matching exactly the specific key of\n                // interest. Note that because we order by path first, and we\n                // order terminators before path separators, we'll encounter all\n                // the index rows for documentKey contiguously. In particular, all\n                // the rows for documentKey will occur before any rows for\n                // documents nested in a subcollection beneath documentKey so we\n                // can stop as soon as we hit any such row.\n                                r === this.userId && e.path.isEqual(c) ? n = n.add(u) : i.done();\n            }));\n            s.push(o);\n        })), Rt.waitFor(s).next((() => this.Dn(t, n)));\n    }\n    getAllMutationBatchesAffectingQuery(t, e) {\n        const n = e.path, s = n.length + 1, i = jt(this.userId, n), r = IDBKeyRange.lowerBound(i);\n        // Collect up unique batchIDs encountered during a scan of the index. Use a\n        // SortedSet to accumulate batch IDs so they can be traversed in order in a\n        // scan of the main table.\n        let o = new Ee(et);\n        return ao(t).X({\n            range: r\n        }, ((t, e, i) => {\n            const [r, u, c] = t, a = Gt(u);\n            r === this.userId && n.isPrefixOf(a) ? \n            // Rows with document keys more than one segment longer than the\n            // query path can't be matches. For example, a query on 'rooms'\n            // can't match the document /rooms/abc/messages/xyx.\n            // TODO(mcg): we'll need a different scanner when we implement\n            // ancestor queries.\n            a.length === s && (o = o.add(c)) : i.done();\n        })).next((() => this.Dn(t, o)));\n    }\n    Dn(t, e) {\n        const n = [], s = [];\n        // TODO(rockwood): Implement this using iterate.\n        return e.forEach((e => {\n            s.push(co(t).get(e).next((t => {\n                if (null === t) throw O();\n                F(t.userId === this.userId), n.push(_r(this.serializer, t));\n            })));\n        })), Rt.waitFor(s).next((() => n));\n    }\n    removeMutationBatch(t, e) {\n        return io(t.ht, this.userId, e).next((n => (t.addOnCommittedListener((() => {\n            this.Cn(e.batchId);\n        })), Rt.forEach(n, (e => this.referenceDelegate.markPotentiallyOrphaned(t, e))))));\n    }\n    /**\n     * Clears the cached keys for a mutation batch. This method should be\n     * called by secondary clients after they process mutation updates.\n     *\n     * Note that this method does not have to be called from primary clients as\n     * the corresponding cache entries are cleared when an acknowledged or\n     * rejected batch is removed from the mutation queue.\n     */\n    // PORTING NOTE: Multi-tab only\n    Cn(t) {\n        delete this.Vn[t];\n    }\n    performConsistencyCheck(t) {\n        return this.checkEmpty(t).next((e => {\n            if (!e) return Rt.resolve();\n            // Verify that there are no entries in the documentMutations index if\n            // the queue is empty.\n                        const n = IDBKeyRange.lowerBound([ this.userId ]);\n            const s = [];\n            return ao(t).X({\n                range: n\n            }, ((t, e, n) => {\n                if (t[0] === this.userId) {\n                    const e = Gt(t[1]);\n                    s.push(e);\n                } else n.done();\n            })).next((() => {\n                F(0 === s.length);\n            }));\n        }));\n    }\n    containsKey(t, e) {\n        return uo(t, this.userId, e);\n    }\n    // PORTING NOTE: Multi-tab only (state is held in memory in other clients).\n    /** Returns the mutation queue's metadata from IndexedDb. */\n    xn(t) {\n        return ho(t).get(this.userId).next((t => t || {\n            userId: this.userId,\n            lastAcknowledgedBatchId: -1,\n            lastStreamToken: \"\"\n        }));\n    }\n}\n\n/**\n * @returns true if the mutation queue for the given user contains a pending\n *         mutation for the given key.\n */ function uo(t, e, n) {\n    const s = jt(e, n.path), i = s[1], r = IDBKeyRange.lowerBound(s);\n    let o = !1;\n    return ao(t).X({\n        range: r,\n        Y: !0\n    }, ((t, n, s) => {\n        const [r, u, /*batchID*/ c] = t;\n        r === e && u === i && (o = !0), s.done();\n    })).next((() => o));\n}\n\n/** Returns true if any mutation queue contains the given document. */\n/**\n * Helper to get a typed SimpleDbStore for the mutations object store.\n */\nfunction co(t) {\n    return _e(t, \"mutations\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\n */ function ao(t) {\n    return _e(t, \"documentMutations\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\n */ function ho(t) {\n    return _e(t, \"mutationQueues\");\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Offset to ensure non-overlapping target ids. */\n/**\n * Generates monotonically increasing target IDs for sending targets to the\n * watch stream.\n *\n * The client constructs two generators, one for the target cache, and one for\n * for the sync engine (to generate limbo documents targets). These\n * generators produce non-overlapping IDs (by using even and odd IDs\n * respectively).\n *\n * By separating the target ID space, the query cache can generate target IDs\n * that persist across client restarts, while sync engine can independently\n * generate in-memory target IDs that are transient and can be reused after a\n * restart.\n */\nclass lo {\n    constructor(t) {\n        this.Nn = t;\n    }\n    next() {\n        return this.Nn += 2, this.Nn;\n    }\n    static kn() {\n        // The target cache generator must return '2' in its first call to `next()`\n        // as there is no differentiation in the protocol layer between an unset\n        // number and the number '0'. If we were to sent a target with target ID\n        // '0', the backend would consider it unset and replace it with its own ID.\n        return new lo(0);\n    }\n    static Mn() {\n        // Sync engine assigns target IDs for limbo document detection.\n        return new lo(-1);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class fo {\n    constructor(t, e) {\n        this.referenceDelegate = t, this.serializer = e;\n    }\n    // PORTING NOTE: We don't cache global metadata for the target cache, since\n    // some of it (in particular `highestTargetId`) can be modified by secondary\n    // tabs. We could perhaps be more granular (and e.g. still cache\n    // `lastRemoteSnapshotVersion` in memory) but for simplicity we currently go\n    // to IndexedDb whenever we need to read metadata. We can revisit if it turns\n    // out to have a meaningful performance impact.\n    allocateTargetId(t) {\n        return this.$n(t).next((e => {\n            const n = new lo(e.highestTargetId);\n            return e.highestTargetId = n.next(), this.On(t, e).next((() => e.highestTargetId));\n        }));\n    }\n    getLastRemoteSnapshotVersion(t) {\n        return this.$n(t).next((t => rt.fromTimestamp(new it(t.lastRemoteSnapshotVersion.seconds, t.lastRemoteSnapshotVersion.nanoseconds))));\n    }\n    getHighestSequenceNumber(t) {\n        return this.$n(t).next((t => t.highestListenSequenceNumber));\n    }\n    setTargetsMetadata(t, e, n) {\n        return this.$n(t).next((s => (s.highestListenSequenceNumber = e, n && (s.lastRemoteSnapshotVersion = n.toTimestamp()), \n        e > s.highestListenSequenceNumber && (s.highestListenSequenceNumber = e), this.On(t, s))));\n    }\n    addTargetData(t, e) {\n        return this.Fn(t, e).next((() => this.$n(t).next((n => (n.targetCount += 1, this.Bn(e, n), \n        this.On(t, n))))));\n    }\n    updateTargetData(t, e) {\n        return this.Fn(t, e);\n    }\n    removeTargetData(t, e) {\n        return this.removeMatchingKeysForTargetId(t, e.targetId).next((() => wo(t).delete(e.targetId))).next((() => this.$n(t))).next((e => (F(e.targetCount > 0), \n        e.targetCount -= 1, this.On(t, e))));\n    }\n    /**\n     * Drops any targets with sequence number less than or equal to the upper bound, excepting those\n     * present in `activeTargetIds`. Document associations for the removed targets are also removed.\n     * Returns the number of targets removed.\n     */    removeTargets(t, e, n) {\n        let s = 0;\n        const i = [];\n        return wo(t).X(((r, o) => {\n            const u = mr(o);\n            u.sequenceNumber <= e && null === n.get(u.targetId) && (s++, i.push(this.removeTargetData(t, u)));\n        })).next((() => Rt.waitFor(i))).next((() => s));\n    }\n    /**\n     * Call provided function with each `TargetData` that we have cached.\n     */    forEachTarget(t, e) {\n        return wo(t).X(((t, n) => {\n            const s = mr(n);\n            e(s);\n        }));\n    }\n    $n(t) {\n        return _o(t).get(\"targetGlobalKey\").next((t => (F(null !== t), t)));\n    }\n    On(t, e) {\n        return _o(t).put(\"targetGlobalKey\", e);\n    }\n    Fn(t, e) {\n        return wo(t).put(gr(this.serializer, e));\n    }\n    /**\n     * In-place updates the provided metadata to account for values in the given\n     * TargetData. Saving is done separately. Returns true if there were any\n     * changes to the metadata.\n     */    Bn(t, e) {\n        let n = !1;\n        return t.targetId > e.highestTargetId && (e.highestTargetId = t.targetId, n = !0), \n        t.sequenceNumber > e.highestListenSequenceNumber && (e.highestListenSequenceNumber = t.sequenceNumber, \n        n = !0), n;\n    }\n    getTargetCount(t) {\n        return this.$n(t).next((t => t.targetCount));\n    }\n    getTargetData(t, e) {\n        // Iterating by the canonicalId may yield more than one result because\n        // canonicalId values are not required to be unique per target. This query\n        // depends on the queryTargets index to be efficient.\n        const n = $n(e), s = IDBKeyRange.bound([ n, Number.NEGATIVE_INFINITY ], [ n, Number.POSITIVE_INFINITY ]);\n        let i = null;\n        return wo(t).X({\n            range: s,\n            index: \"queryTargetsIndex\"\n        }, ((t, n, s) => {\n            const r = mr(n);\n            // After finding a potential match, check that the target is\n            // actually equal to the requested target.\n                        On(e, r.target) && (i = r, s.done());\n        })).next((() => i));\n    }\n    addMatchingKeys(t, e, n) {\n        // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n        // IndexedDb.\n        const s = [], i = mo(t);\n        return e.forEach((e => {\n            const r = qt(e.path);\n            s.push(i.put({\n                targetId: n,\n                path: r\n            })), s.push(this.referenceDelegate.addReference(t, n, e));\n        })), Rt.waitFor(s);\n    }\n    removeMatchingKeys(t, e, n) {\n        // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n        // IndexedDb.\n        const s = mo(t);\n        return Rt.forEach(e, (e => {\n            const i = qt(e.path);\n            return Rt.waitFor([ s.delete([ n, i ]), this.referenceDelegate.removeReference(t, n, e) ]);\n        }));\n    }\n    removeMatchingKeysForTargetId(t, e) {\n        const n = mo(t), s = IDBKeyRange.bound([ e ], [ e + 1 ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0);\n        return n.delete(s);\n    }\n    getMatchingKeysForTargetId(t, e) {\n        const n = IDBKeyRange.bound([ e ], [ e + 1 ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0), s = mo(t);\n        let i = gs();\n        return s.X({\n            range: n,\n            Y: !0\n        }, ((t, e, n) => {\n            const s = Gt(t[1]), r = new ht(s);\n            i = i.add(r);\n        })).next((() => i));\n    }\n    containsKey(t, e) {\n        const n = qt(e.path), s = IDBKeyRange.bound([ n ], [ st(n) ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0);\n        let i = 0;\n        return mo(t).X({\n            index: \"documentTargetsIndex\",\n            Y: !0,\n            range: s\n        }, (([t, e], n, s) => {\n            // Having a sentinel row for a document does not count as containing that document;\n            // For the target cache, containing the document means the document is part of some\n            // target.\n            0 !== t && (i++, s.done());\n        })).next((() => i > 0));\n    }\n    /**\n     * Looks up a TargetData entry by target ID.\n     *\n     * @param targetId - The target ID of the TargetData entry to look up.\n     * @returns The cached TargetData entry, or null if the cache has no entry for\n     * the target.\n     */\n    // PORTING NOTE: Multi-tab only.\n    le(t, e) {\n        return wo(t).get(e).next((t => t ? mr(t) : null));\n    }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the queries object store.\n */ function wo(t) {\n    return _e(t, \"targets\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the target globals object store.\n */ function _o(t) {\n    return _e(t, \"targetGlobal\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the document target object store.\n */ function mo(t) {\n    return _e(t, \"targetDocuments\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function go([t, e], [n, s]) {\n    const i = et(t, n);\n    return 0 === i ? et(e, s) : i;\n}\n\n/**\n * Used to calculate the nth sequence number. Keeps a rolling buffer of the\n * lowest n values passed to `addElement`, and finally reports the largest of\n * them in `maxValue`.\n */ class yo {\n    constructor(t) {\n        this.Ln = t, this.buffer = new Ee(go), this.qn = 0;\n    }\n    Un() {\n        return ++this.qn;\n    }\n    Kn(t) {\n        const e = [ t, this.Un() ];\n        if (this.buffer.size < this.Ln) this.buffer = this.buffer.add(e); else {\n            const t = this.buffer.last();\n            go(e, t) < 0 && (this.buffer = this.buffer.delete(t).add(e));\n        }\n    }\n    get maxValue() {\n        // Guaranteed to be non-empty. If we decide we are not collecting any\n        // sequence numbers, nthSequenceNumber below short-circuits. If we have\n        // decided that we are collecting n sequence numbers, it's because n is some\n        // percentage of the existing sequence numbers. That means we should never\n        // be in a situation where we are collecting sequence numbers but don't\n        // actually have any.\n        return this.buffer.last()[0];\n    }\n}\n\n/**\n * This class is responsible for the scheduling of LRU garbage collection. It handles checking\n * whether or not GC is enabled, as well as which delay to use before the next run.\n */ class po {\n    constructor(t, e, n) {\n        this.garbageCollector = t, this.asyncQueue = e, this.localStore = n, this.Gn = null;\n    }\n    start() {\n        -1 !== this.garbageCollector.params.cacheSizeCollectionThreshold && this.Qn(6e4);\n    }\n    stop() {\n        this.Gn && (this.Gn.cancel(), this.Gn = null);\n    }\n    get started() {\n        return null !== this.Gn;\n    }\n    Qn(t) {\n        N(\"LruGarbageCollector\", `Garbage collection scheduled in ${t}ms`), this.Gn = this.asyncQueue.enqueueAfterDelay(\"lru_garbage_collection\" /* TimerId.LruGarbageCollection */ , t, (async () => {\n            this.Gn = null;\n            try {\n                await this.localStore.collectGarbage(this.garbageCollector);\n            } catch (t) {\n                Dt(t) ? N(\"LruGarbageCollector\", \"Ignoring IndexedDB error during garbage collection: \", t) : await vt(t);\n            }\n            await this.Qn(3e5);\n        }));\n    }\n}\n\n/**\n * Implements the steps for LRU garbage collection.\n */ class Io {\n    constructor(t, e) {\n        this.jn = t, this.params = e;\n    }\n    calculateTargetCount(t, e) {\n        return this.jn.zn(t).next((t => Math.floor(e / 100 * t)));\n    }\n    nthSequenceNumber(t, e) {\n        if (0 === e) return Rt.resolve(Ot.ct);\n        const n = new yo(e);\n        return this.jn.forEachTarget(t, (t => n.Kn(t.sequenceNumber))).next((() => this.jn.Wn(t, (t => n.Kn(t))))).next((() => n.maxValue));\n    }\n    removeTargets(t, e, n) {\n        return this.jn.removeTargets(t, e, n);\n    }\n    removeOrphanedDocuments(t, e) {\n        return this.jn.removeOrphanedDocuments(t, e);\n    }\n    collect(t, e) {\n        return -1 === this.params.cacheSizeCollectionThreshold ? (N(\"LruGarbageCollector\", \"Garbage collection skipped; disabled\"), \n        Rt.resolve(no)) : this.getCacheSize(t).next((n => n < this.params.cacheSizeCollectionThreshold ? (N(\"LruGarbageCollector\", `Garbage collection skipped; Cache size ${n} is lower than threshold ${this.params.cacheSizeCollectionThreshold}`), \n        no) : this.Hn(t, e)));\n    }\n    getCacheSize(t) {\n        return this.jn.getCacheSize(t);\n    }\n    Hn(t, e) {\n        let n, s, i, r, o, c, a;\n        const h = Date.now();\n        return this.calculateTargetCount(t, this.params.percentileToCollect).next((e => (\n        // Cap at the configured max\n        e > this.params.maximumSequenceNumbersToCollect ? (N(\"LruGarbageCollector\", `Capping sequence numbers to collect down to the maximum of ${this.params.maximumSequenceNumbersToCollect} from ${e}`), \n        s = this.params.maximumSequenceNumbersToCollect) : s = e, r = Date.now(), this.nthSequenceNumber(t, s)))).next((s => (n = s, \n        o = Date.now(), this.removeTargets(t, n, e)))).next((e => (i = e, c = Date.now(), \n        this.removeOrphanedDocuments(t, n)))).next((t => {\n            if (a = Date.now(), C() <= LogLevel.DEBUG) {\n                N(\"LruGarbageCollector\", `LRU Garbage Collection\\n\\tCounted targets in ${r - h}ms\\n\\tDetermined least recently used ${s} in ` + (o - r) + \"ms\\n\" + `\\tRemoved ${i} targets in ` + (c - o) + \"ms\\n\" + `\\tRemoved ${t} documents in ` + (a - c) + \"ms\\n\" + `Total Duration: ${a - h}ms`);\n            }\n            return Rt.resolve({\n                didRun: !0,\n                sequenceNumbersCollected: s,\n                targetsRemoved: i,\n                documentsRemoved: t\n            });\n        }));\n    }\n}\n\nfunction To(t, e) {\n    return new Io(t, e);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Provides LRU functionality for IndexedDB persistence. */ class Eo {\n    constructor(t, e) {\n        this.db = t, this.garbageCollector = To(this, e);\n    }\n    zn(t) {\n        const e = this.Jn(t);\n        return this.db.getTargetCache().getTargetCount(t).next((t => e.next((e => t + e))));\n    }\n    Jn(t) {\n        let e = 0;\n        return this.Wn(t, (t => {\n            e++;\n        })).next((() => e));\n    }\n    forEachTarget(t, e) {\n        return this.db.getTargetCache().forEachTarget(t, e);\n    }\n    Wn(t, e) {\n        return this.Yn(t, ((t, n) => e(n)));\n    }\n    addReference(t, e, n) {\n        return Ao(t, n);\n    }\n    removeReference(t, e, n) {\n        return Ao(t, n);\n    }\n    removeTargets(t, e, n) {\n        return this.db.getTargetCache().removeTargets(t, e, n);\n    }\n    markPotentiallyOrphaned(t, e) {\n        return Ao(t, e);\n    }\n    /**\n     * Returns true if anything would prevent this document from being garbage\n     * collected, given that the document in question is not present in any\n     * targets and has a sequence number less than or equal to the upper bound for\n     * the collection run.\n     */    Xn(t, e) {\n        return function(t, e) {\n            let n = !1;\n            return ho(t).Z((s => uo(t, s, e).next((t => (t && (n = !0), Rt.resolve(!t)))))).next((() => n));\n        }(t, e);\n    }\n    removeOrphanedDocuments(t, e) {\n        const n = this.db.getRemoteDocumentCache().newChangeBuffer(), s = [];\n        let i = 0;\n        return this.Yn(t, ((r, o) => {\n            if (o <= e) {\n                const e = this.Xn(t, r).next((e => {\n                    if (!e) \n                    // Our size accounting requires us to read all documents before\n                    // removing them.\n                    return i++, n.getEntry(t, r).next((() => (n.removeEntry(r, rt.min()), mo(t).delete([ 0, qt(r.path) ]))));\n                }));\n                s.push(e);\n            }\n        })).next((() => Rt.waitFor(s))).next((() => n.apply(t))).next((() => i));\n    }\n    removeTarget(t, e) {\n        const n = e.withSequenceNumber(t.currentSequenceNumber);\n        return this.db.getTargetCache().updateTargetData(t, n);\n    }\n    updateLimboDocument(t, e) {\n        return Ao(t, e);\n    }\n    /**\n     * Call provided function for each document in the cache that is 'orphaned'. Orphaned\n     * means not a part of any target, so the only entry in the target-document index for\n     * that document will be the sentinel row (targetId 0), which will also have the sequence\n     * number for the last time the document was accessed.\n     */    Yn(t, e) {\n        const n = mo(t);\n        let s, i = Ot.ct;\n        return n.X({\n            index: \"documentTargetsIndex\"\n        }, (([t, n], {path: r, sequenceNumber: o}) => {\n            0 === t ? (\n            // if nextToReport is valid, report it, this is a new key so the\n            // last one must not be a member of any targets.\n            i !== Ot.ct && e(new ht(Gt(s)), i), \n            // set nextToReport to be this sequence number. It's the next one we\n            // might report, if we don't find any targets for this document.\n            // Note that the sequence number must be defined when the targetId\n            // is 0.\n            i = o, s = r) : \n            // set nextToReport to be invalid, we know we don't need to report\n            // this one since we found a target for it.\n            i = Ot.ct;\n        })).next((() => {\n            // Since we report sequence numbers after getting to the next key, we\n            // need to check if the last key we iterated over was an orphaned\n            // document and report it.\n            i !== Ot.ct && e(new ht(Gt(s)), i);\n        }));\n    }\n    getCacheSize(t) {\n        return this.db.getRemoteDocumentCache().getSize(t);\n    }\n}\n\nfunction Ao(t, e) {\n    return mo(t).put(\n    /**\n * @returns A value suitable for writing a sentinel row in the target-document\n * store.\n */\n    function(t, e) {\n        return {\n            targetId: 0,\n            path: qt(t.path),\n            sequenceNumber: e\n        };\n    }(e, t.currentSequenceNumber));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An in-memory buffer of entries to be written to a RemoteDocumentCache.\n * It can be used to batch up a set of changes to be written to the cache, but\n * additionally supports reading entries back with the `getEntry()` method,\n * falling back to the underlying RemoteDocumentCache if no entry is\n * buffered.\n *\n * Entries added to the cache *must* be read first. This is to facilitate\n * calculating the size delta of the pending changes.\n *\n * PORTING NOTE: This class was implemented then removed from other platforms.\n * If byte-counting ends up being needed on the other platforms, consider\n * porting this class as part of that implementation work.\n */ class vo {\n    constructor() {\n        // A mapping of document key to the new cache entry that should be written.\n        this.changes = new os((t => t.toString()), ((t, e) => t.isEqual(e))), this.changesApplied = !1;\n    }\n    /**\n     * Buffers a `RemoteDocumentCache.addEntry()` call.\n     *\n     * You can only modify documents that have already been retrieved via\n     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\n     */    addEntry(t) {\n        this.assertNotApplied(), this.changes.set(t.key, t);\n    }\n    /**\n     * Buffers a `RemoteDocumentCache.removeEntry()` call.\n     *\n     * You can only remove documents that have already been retrieved via\n     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\n     */    removeEntry(t, e) {\n        this.assertNotApplied(), this.changes.set(t, an.newInvalidDocument(t).setReadTime(e));\n    }\n    /**\n     * Looks up an entry in the cache. The buffered changes will first be checked,\n     * and if no buffered change applies, this will forward to\n     * `RemoteDocumentCache.getEntry()`.\n     *\n     * @param transaction - The transaction in which to perform any persistence\n     *     operations.\n     * @param documentKey - The key of the entry to look up.\n     * @returns The cached document or an invalid document if we have nothing\n     * cached.\n     */    getEntry(t, e) {\n        this.assertNotApplied();\n        const n = this.changes.get(e);\n        return void 0 !== n ? Rt.resolve(n) : this.getFromCache(t, e);\n    }\n    /**\n     * Looks up several entries in the cache, forwarding to\n     * `RemoteDocumentCache.getEntry()`.\n     *\n     * @param transaction - The transaction in which to perform any persistence\n     *     operations.\n     * @param documentKeys - The keys of the entries to look up.\n     * @returns A map of cached documents, indexed by key. If an entry cannot be\n     *     found, the corresponding key will be mapped to an invalid document.\n     */    getEntries(t, e) {\n        return this.getAllFromCache(t, e);\n    }\n    /**\n     * Applies buffered changes to the underlying RemoteDocumentCache, using\n     * the provided transaction.\n     */    apply(t) {\n        return this.assertNotApplied(), this.changesApplied = !0, this.applyChanges(t);\n    }\n    /** Helper to assert this.changes is not null  */    assertNotApplied() {}\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The RemoteDocumentCache for IndexedDb. To construct, invoke\n * `newIndexedDbRemoteDocumentCache()`.\n */ class Ro {\n    constructor(t) {\n        this.serializer = t;\n    }\n    setIndexManager(t) {\n        this.indexManager = t;\n    }\n    /**\n     * Adds the supplied entries to the cache.\n     *\n     * All calls of `addEntry` are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.\n     */    addEntry(t, e, n) {\n        return So(t).put(n);\n    }\n    /**\n     * Removes a document from the cache.\n     *\n     * All calls of `removeEntry`  are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.\n     */    removeEntry(t, e, n) {\n        return So(t).delete(\n        /**\n * Returns a key that can be used for document lookups via the primary key of\n * the DbRemoteDocument object store.\n */\n        function(t, e) {\n            const n = t.path.toArray();\n            return [ \n            /* prefix path */ n.slice(0, n.length - 2), \n            /* collection id */ n[n.length - 2], fr(e), \n            /* document id */ n[n.length - 1] ];\n        }\n        /**\n * Returns a key that can be used for document lookups on the\n * `DbRemoteDocumentDocumentCollectionGroupIndex` index.\n */ (e, n));\n    }\n    /**\n     * Updates the current cache size.\n     *\n     * Callers to `addEntry()` and `removeEntry()` *must* call this afterwards to update the\n     * cache's metadata.\n     */    updateMetadata(t, e) {\n        return this.getMetadata(t).next((n => (n.byteSize += e, this.Zn(t, n))));\n    }\n    getEntry(t, e) {\n        let n = an.newInvalidDocument(e);\n        return So(t).X({\n            index: \"documentKeyIndex\",\n            range: IDBKeyRange.only(Do(e))\n        }, ((t, s) => {\n            n = this.ts(e, s);\n        })).next((() => n));\n    }\n    /**\n     * Looks up an entry in the cache.\n     *\n     * @param documentKey - The key of the entry to look up.\n     * @returns The cached document entry and its size.\n     */    es(t, e) {\n        let n = {\n            size: 0,\n            document: an.newInvalidDocument(e)\n        };\n        return So(t).X({\n            index: \"documentKeyIndex\",\n            range: IDBKeyRange.only(Do(e))\n        }, ((t, s) => {\n            n = {\n                document: this.ts(e, s),\n                size: ro(s)\n            };\n        })).next((() => n));\n    }\n    getEntries(t, e) {\n        let n = cs();\n        return this.ns(t, e, ((t, e) => {\n            const s = this.ts(t, e);\n            n = n.insert(t, s);\n        })).next((() => n));\n    }\n    /**\n     * Looks up several entries in the cache.\n     *\n     * @param documentKeys - The set of keys entries to look up.\n     * @returns A map of documents indexed by key and a map of sizes indexed by\n     *     key (zero if the document does not exist).\n     */    ss(t, e) {\n        let n = cs(), s = new pe(ht.comparator);\n        return this.ns(t, e, ((t, e) => {\n            const i = this.ts(t, e);\n            n = n.insert(t, i), s = s.insert(t, ro(e));\n        })).next((() => ({\n            documents: n,\n            rs: s\n        })));\n    }\n    ns(t, e, n) {\n        if (e.isEmpty()) return Rt.resolve();\n        let s = new Ee(xo);\n        e.forEach((t => s = s.add(t)));\n        const i = IDBKeyRange.bound(Do(s.first()), Do(s.last())), r = s.getIterator();\n        let o = r.getNext();\n        return So(t).X({\n            index: \"documentKeyIndex\",\n            range: i\n        }, ((t, e, s) => {\n            const i = ht.fromSegments([ ...e.prefixPath, e.collectionGroup, e.documentId ]);\n            // Go through keys not found in cache.\n                        for (;o && xo(o, i) < 0; ) n(o, null), o = r.getNext();\n            o && o.isEqual(i) && (\n            // Key found in cache.\n            n(o, e), o = r.hasNext() ? r.getNext() : null), \n            // Skip to the next key (if there is one).\n            o ? s.G(Do(o)) : s.done();\n        })).next((() => {\n            // The rest of the keys are not in the cache. One case where `iterate`\n            // above won't go through them is when the cache is empty.\n            for (;o; ) n(o, null), o = r.hasNext() ? r.getNext() : null;\n        }));\n    }\n    getDocumentsMatchingQuery(t, e, n, s) {\n        const i = e.path, r = [ i.popLast().toArray(), i.lastSegment(), fr(n.readTime), n.documentKey.path.isEmpty() ? \"\" : n.documentKey.path.lastSegment() ], o = [ i.popLast().toArray(), i.lastSegment(), [ Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER ], \"\" ];\n        return So(t).j(IDBKeyRange.bound(r, o, !0)).next((t => {\n            let n = cs();\n            for (const i of t) {\n                const t = this.ts(ht.fromSegments(i.prefixPath.concat(i.collectionGroup, i.documentId)), i);\n                t.isFoundDocument() && (ns(e, t) || s.has(t.key)) && (\n                // Either the document matches the given query, or it is mutated.\n                n = n.insert(t.key, t));\n            }\n            return n;\n        }));\n    }\n    getAllFromCollectionGroup(t, e, n, s) {\n        let i = cs();\n        const r = Co(e, n), o = Co(e, It.max());\n        return So(t).X({\n            index: \"collectionGroupIndex\",\n            range: IDBKeyRange.bound(r, o, !0)\n        }, ((t, e, n) => {\n            const r = this.ts(ht.fromSegments(e.prefixPath.concat(e.collectionGroup, e.documentId)), e);\n            i = i.insert(r.key, r), i.size === s && n.done();\n        })).next((() => i));\n    }\n    newChangeBuffer(t) {\n        return new bo(this, !!t && t.trackRemovals);\n    }\n    getSize(t) {\n        return this.getMetadata(t).next((t => t.byteSize));\n    }\n    getMetadata(t) {\n        return Vo(t).get(\"remoteDocumentGlobalKey\").next((t => (F(!!t), t)));\n    }\n    Zn(t, e) {\n        return Vo(t).put(\"remoteDocumentGlobalKey\", e);\n    }\n    /**\n     * Decodes `dbRemoteDoc` and returns the document (or an invalid document if\n     * the document corresponds to the format used for sentinel deletes).\n     */    ts(t, e) {\n        if (e) {\n            const t = hr(this.serializer, e);\n            // Whether the document is a sentinel removal and should only be used in the\n            // `getNewDocumentChanges()`\n                        if (!(t.isNoDocument() && t.version.isEqual(rt.min()))) return t;\n        }\n        return an.newInvalidDocument(t);\n    }\n}\n\n/** Creates a new IndexedDbRemoteDocumentCache. */ function Po(t) {\n    return new Ro(t);\n}\n\n/**\n * Handles the details of adding and updating documents in the IndexedDbRemoteDocumentCache.\n *\n * Unlike the MemoryRemoteDocumentChangeBuffer, the IndexedDb implementation computes the size\n * delta for all submitted changes. This avoids having to re-read all documents from IndexedDb\n * when we apply the changes.\n */ class bo extends vo {\n    /**\n     * @param documentCache - The IndexedDbRemoteDocumentCache to apply the changes to.\n     * @param trackRemovals - Whether to create sentinel deletes that can be tracked by\n     * `getNewDocumentChanges()`.\n     */\n    constructor(t, e) {\n        super(), this.os = t, this.trackRemovals = e, \n        // A map of document sizes and read times prior to applying the changes in\n        // this buffer.\n        this.us = new os((t => t.toString()), ((t, e) => t.isEqual(e)));\n    }\n    applyChanges(t) {\n        const e = [];\n        let n = 0, s = new Ee(((t, e) => et(t.canonicalString(), e.canonicalString())));\n        return this.changes.forEach(((i, r) => {\n            const o = this.us.get(i);\n            if (e.push(this.os.removeEntry(t, i, o.readTime)), r.isValidDocument()) {\n                const u = lr(this.os.serializer, r);\n                s = s.add(i.path.popLast());\n                const c = ro(u);\n                n += c - o.size, e.push(this.os.addEntry(t, i, u));\n            } else if (n -= o.size, this.trackRemovals) {\n                // In order to track removals, we store a \"sentinel delete\" in the\n                // RemoteDocumentCache. This entry is represented by a NoDocument\n                // with a version of 0 and ignored by `maybeDecodeDocument()` but\n                // preserved in `getNewDocumentChanges()`.\n                const n = lr(this.os.serializer, r.convertToNoDocument(rt.min()));\n                e.push(this.os.addEntry(t, i, n));\n            }\n        })), s.forEach((n => {\n            e.push(this.os.indexManager.addToCollectionParentIndex(t, n));\n        })), e.push(this.os.updateMetadata(t, n)), Rt.waitFor(e);\n    }\n    getFromCache(t, e) {\n        // Record the size of everything we load from the cache so we can compute a delta later.\n        return this.os.es(t, e).next((t => (this.us.set(e, {\n            size: t.size,\n            readTime: t.document.readTime\n        }), t.document)));\n    }\n    getAllFromCache(t, e) {\n        // Record the size of everything we load from the cache so we can compute\n        // a delta later.\n        return this.os.ss(t, e).next((({documents: t, rs: e}) => (\n        // Note: `getAllFromCache` returns two maps instead of a single map from\n        // keys to `DocumentSizeEntry`s. This is to allow returning the\n        // `MutableDocumentMap` directly, without a conversion.\n        e.forEach(((e, n) => {\n            this.us.set(e, {\n                size: n,\n                readTime: t.get(e).readTime\n            });\n        })), t)));\n    }\n}\n\nfunction Vo(t) {\n    return _e(t, \"remoteDocumentGlobal\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the remoteDocuments object store.\n */ function So(t) {\n    return _e(t, \"remoteDocumentsV14\");\n}\n\n/**\n * Returns a key that can be used for document lookups on the\n * `DbRemoteDocumentDocumentKeyIndex` index.\n */ function Do(t) {\n    const e = t.path.toArray();\n    return [ \n    /* prefix path */ e.slice(0, e.length - 2), \n    /* collection id */ e[e.length - 2], \n    /* document id */ e[e.length - 1] ];\n}\n\nfunction Co(t, e) {\n    const n = e.documentKey.path.toArray();\n    return [ \n    /* collection id */ t, fr(e.readTime), \n    /* prefix path */ n.slice(0, n.length - 2), \n    /* document id */ n.length > 0 ? n[n.length - 1] : \"\" ];\n}\n\n/**\n * Comparator that compares document keys according to the primary key sorting\n * used by the `DbRemoteDocumentDocument` store (by prefix path, collection id\n * and then document ID).\n *\n * Visible for testing.\n */ function xo(t, e) {\n    const n = t.path.toArray(), s = e.path.toArray();\n    // The ordering is based on https://chromium.googlesource.com/chromium/blink/+/fe5c21fef94dae71c1c3344775b8d8a7f7e6d9ec/Source/modules/indexeddb/IDBKey.cpp#74\n    let i = 0;\n    for (let t = 0; t < n.length - 2 && t < s.length - 2; ++t) if (i = et(n[t], s[t]), \n    i) return i;\n    return i = et(n.length, s.length), i || (i = et(n[n.length - 2], s[s.length - 2]), \n    i || et(n[n.length - 1], s[s.length - 1]));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Schema Version for the Web client:\n * 1.  Initial version including Mutation Queue, Query Cache, and Remote\n *     Document Cache\n * 2.  Used to ensure a targetGlobal object exists and add targetCount to it. No\n *     longer required because migration 3 unconditionally clears it.\n * 3.  Dropped and re-created Query Cache to deal with cache corruption related\n *     to limbo resolution. Addresses\n *     https://github.com/firebase/firebase-ios-sdk/issues/1548\n * 4.  Multi-Tab Support.\n * 5.  Removal of held write acks.\n * 6.  Create document global for tracking document cache size.\n * 7.  Ensure every cached document has a sentinel row with a sequence number.\n * 8.  Add collection-parent index for Collection Group queries.\n * 9.  Change RemoteDocumentChanges store to be keyed by readTime rather than\n *     an auto-incrementing ID. This is required for Index-Free queries.\n * 10. Rewrite the canonical IDs to the explicit Protobuf-based format.\n * 11. Add bundles and named_queries for bundle support.\n * 12. Add document overlays.\n * 13. Rewrite the keys of the remote document cache to allow for efficient\n *     document lookup via `getAll()`.\n * 14. Add overlays.\n * 15. Add indexing support.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a local view (overlay) of a document, and the fields that are\n * locally mutated.\n */\nclass No {\n    constructor(t, \n    /**\n     * The fields that are locally mutated by patch mutations.\n     *\n     * If the overlayed\tdocument is from set or delete mutations, this is `null`.\n     * If there is no overlay (mutation) for the document, this is an empty `FieldMask`.\n     */\n    e) {\n        this.overlayedDocument = t, this.mutatedFields = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A readonly view of the local state of all documents we're tracking (i.e. we\n * have a cached version in remoteDocumentCache or local mutations for the\n * document). The view is computed by applying the mutations in the\n * MutationQueue to the RemoteDocumentCache.\n */ class ko {\n    constructor(t, e, n, s) {\n        this.remoteDocumentCache = t, this.mutationQueue = e, this.documentOverlayCache = n, \n        this.indexManager = s;\n    }\n    /**\n     * Get the local view of the document identified by `key`.\n     *\n     * @returns Local view of the document or null if we don't have any cached\n     * state for it.\n     */    getDocument(t, e) {\n        let n = null;\n        return this.documentOverlayCache.getOverlay(t, e).next((s => (n = s, this.remoteDocumentCache.getEntry(t, e)))).next((t => (null !== n && Ks(n.mutation, t, Re.empty(), it.now()), \n        t)));\n    }\n    /**\n     * Gets the local view of the documents identified by `keys`.\n     *\n     * If we don't have cached state for a document in `keys`, a NoDocument will\n     * be stored for that key in the resulting set.\n     */    getDocuments(t, e) {\n        return this.remoteDocumentCache.getEntries(t, e).next((e => this.getLocalViewOfDocuments(t, e, gs()).next((() => e))));\n    }\n    /**\n     * Similar to `getDocuments`, but creates the local view from the given\n     * `baseDocs` without retrieving documents from the local store.\n     *\n     * @param transaction - The transaction this operation is scoped to.\n     * @param docs - The documents to apply local mutations to get the local views.\n     * @param existenceStateChanged - The set of document keys whose existence state\n     *   is changed. This is useful to determine if some documents overlay needs\n     *   to be recalculated.\n     */    getLocalViewOfDocuments(t, e, n = gs()) {\n        const s = fs();\n        return this.populateOverlays(t, s, e).next((() => this.computeViews(t, e, s, n).next((t => {\n            let e = hs();\n            return t.forEach(((t, n) => {\n                e = e.insert(t, n.overlayedDocument);\n            })), e;\n        }))));\n    }\n    /**\n     * Gets the overlayed documents for the given document map, which will include\n     * the local view of those documents and a `FieldMask` indicating which fields\n     * are mutated locally, `null` if overlay is a Set or Delete mutation.\n     */    getOverlayedDocuments(t, e) {\n        const n = fs();\n        return this.populateOverlays(t, n, e).next((() => this.computeViews(t, e, n, gs())));\n    }\n    /**\n     * Fetches the overlays for {@code docs} and adds them to provided overlay map\n     * if the map does not already contain an entry for the given document key.\n     */    populateOverlays(t, e, n) {\n        const s = [];\n        return n.forEach((t => {\n            e.has(t) || s.push(t);\n        })), this.documentOverlayCache.getOverlays(t, s).next((t => {\n            t.forEach(((t, n) => {\n                e.set(t, n);\n            }));\n        }));\n    }\n    /**\n     * Computes the local view for the given documents.\n     *\n     * @param docs - The documents to compute views for. It also has the base\n     *   version of the documents.\n     * @param overlays - The overlays that need to be applied to the given base\n     *   version of the documents.\n     * @param existenceStateChanged - A set of documents whose existence states\n     *   might have changed. This is used to determine if we need to re-calculate\n     *   overlays from mutation queues.\n     * @return A map represents the local documents view.\n     */    computeViews(t, e, n, s) {\n        let i = cs();\n        const r = ws(), o = ws();\n        return e.forEach(((t, e) => {\n            const o = n.get(e.key);\n            // Recalculate an overlay if the document's existence state changed due to\n            // a remote event *and* the overlay is a PatchMutation. This is because\n            // document existence state can change if some patch mutation's\n            // preconditions are met.\n            // NOTE: we recalculate when `overlay` is undefined as well, because there\n            // might be a patch mutation whose precondition does not match before the\n            // change (hence overlay is undefined), but would now match.\n                        s.has(e.key) && (void 0 === o || o.mutation instanceof zs) ? i = i.insert(e.key, e) : void 0 !== o ? (r.set(e.key, o.mutation.getFieldMask()), \n            Ks(o.mutation, e, o.mutation.getFieldMask(), it.now())) : \n            // no overlay exists\n            // Using EMPTY to indicate there is no overlay for the document.\n            r.set(e.key, Re.empty());\n        })), this.recalculateAndSaveOverlays(t, i).next((t => (t.forEach(((t, e) => r.set(t, e))), \n        e.forEach(((t, e) => {\n            var n;\n            return o.set(t, new No(e, null !== (n = r.get(t)) && void 0 !== n ? n : null));\n        })), o)));\n    }\n    recalculateAndSaveOverlays(t, e) {\n        const n = ws();\n        // A reverse lookup map from batch id to the documents within that batch.\n                let s = new pe(((t, e) => t - e)), i = gs();\n        return this.mutationQueue.getAllMutationBatchesAffectingDocumentKeys(t, e).next((t => {\n            for (const i of t) i.keys().forEach((t => {\n                const r = e.get(t);\n                if (null === r) return;\n                let o = n.get(t) || Re.empty();\n                o = i.applyToLocalView(r, o), n.set(t, o);\n                const u = (s.get(i.batchId) || gs()).add(t);\n                s = s.insert(i.batchId, u);\n            }));\n        })).next((() => {\n            const r = [], o = s.getReverseIterator();\n            // Iterate in descending order of batch IDs, and skip documents that are\n            // already saved.\n                        for (;o.hasNext(); ) {\n                const s = o.getNext(), u = s.key, c = s.value, a = ds();\n                c.forEach((t => {\n                    if (!i.has(t)) {\n                        const s = qs(e.get(t), n.get(t));\n                        null !== s && a.set(t, s), i = i.add(t);\n                    }\n                })), r.push(this.documentOverlayCache.saveOverlays(t, u, a));\n            }\n            return Rt.waitFor(r);\n        })).next((() => n));\n    }\n    /**\n     * Recalculates overlays by reading the documents from remote document cache\n     * first, and saves them after they are calculated.\n     */    recalculateAndSaveOverlaysForDocumentKeys(t, e) {\n        return this.remoteDocumentCache.getEntries(t, e).next((e => this.recalculateAndSaveOverlays(t, e)));\n    }\n    /**\n     * Performs a query against the local view of all documents.\n     *\n     * @param transaction - The persistence transaction.\n     * @param query - The query to match documents against.\n     * @param offset - Read time and key to start scanning by (exclusive).\n     */    getDocumentsMatchingQuery(t, e, n) {\n        /**\n * Returns whether the query matches a single document by path (rather than a\n * collection).\n */\n        return function(t) {\n            return ht.isDocumentKey(t.path) && null === t.collectionGroup && 0 === t.filters.length;\n        }(e) ? this.getDocumentsMatchingDocumentQuery(t, e.path) : Wn(e) ? this.getDocumentsMatchingCollectionGroupQuery(t, e, n) : this.getDocumentsMatchingCollectionQuery(t, e, n);\n    }\n    /**\n     * Given a collection group, returns the next documents that follow the provided offset, along\n     * with an updated batch ID.\n     *\n     * <p>The documents returned by this method are ordered by remote version from the provided\n     * offset. If there are no more remote documents after the provided offset, documents with\n     * mutations in order of batch id from the offset are returned. Since all documents in a batch are\n     * returned together, the total number of documents returned can exceed {@code count}.\n     *\n     * @param transaction\n     * @param collectionGroup The collection group for the documents.\n     * @param offset The offset to index into.\n     * @param count The number of documents to return\n     * @return A LocalWriteResult with the documents that follow the provided offset and the last processed batch id.\n     */    getNextDocuments(t, e, n, s) {\n        return this.remoteDocumentCache.getAllFromCollectionGroup(t, e, n, s).next((i => {\n            const r = s - i.size > 0 ? this.documentOverlayCache.getOverlaysForCollectionGroup(t, e, n.largestBatchId, s - i.size) : Rt.resolve(fs());\n            // The callsite will use the largest batch ID together with the latest read time to create\n            // a new index offset. Since we only process batch IDs if all remote documents have been read,\n            // no overlay will increase the overall read time. This is why we only need to special case\n            // the batch id.\n                        let o = -1, u = i;\n            return r.next((e => Rt.forEach(e, ((e, n) => (o < n.largestBatchId && (o = n.largestBatchId), \n            i.get(e) ? Rt.resolve() : this.remoteDocumentCache.getEntry(t, e).next((t => {\n                u = u.insert(e, t);\n            }))))).next((() => this.populateOverlays(t, e, i))).next((() => this.computeViews(t, u, e, gs()))).next((t => ({\n                batchId: o,\n                changes: ls(t)\n            })))));\n        }));\n    }\n    getDocumentsMatchingDocumentQuery(t, e) {\n        // Just do a simple document lookup.\n        return this.getDocument(t, new ht(e)).next((t => {\n            let e = hs();\n            return t.isFoundDocument() && (e = e.insert(t.key, t)), e;\n        }));\n    }\n    getDocumentsMatchingCollectionGroupQuery(t, e, n) {\n        const s = e.collectionGroup;\n        let i = hs();\n        return this.indexManager.getCollectionParents(t, s).next((r => Rt.forEach(r, (r => {\n            const o = function(t, e) {\n                return new Un(e, \n                /*collectionGroup=*/ null, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n            }(e, r.child(s));\n            return this.getDocumentsMatchingCollectionQuery(t, o, n).next((t => {\n                t.forEach(((t, e) => {\n                    i = i.insert(t, e);\n                }));\n            }));\n        })).next((() => i))));\n    }\n    getDocumentsMatchingCollectionQuery(t, e, n) {\n        // Query the remote documents and overlay mutations.\n        let s;\n        return this.documentOverlayCache.getOverlaysForCollection(t, e.path, n.largestBatchId).next((i => (s = i, \n        this.remoteDocumentCache.getDocumentsMatchingQuery(t, e, n, s)))).next((t => {\n            // As documents might match the query because of their overlay we need to\n            // include documents for all overlays in the initial document set.\n            s.forEach(((e, n) => {\n                const s = n.getKey();\n                null === t.get(s) && (t = t.insert(s, an.newInvalidDocument(s)));\n            }));\n            // Apply the overlays and match against the query.\n            let n = hs();\n            return t.forEach(((t, i) => {\n                const r = s.get(t);\n                void 0 !== r && Ks(r.mutation, i, Re.empty(), it.now()), \n                // Finally, insert the documents that still match the query\n                ns(e, i) && (n = n.insert(t, i));\n            })), n;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Mo {\n    constructor(t) {\n        this.serializer = t, this.cs = new Map, this.hs = new Map;\n    }\n    getBundleMetadata(t, e) {\n        return Rt.resolve(this.cs.get(e));\n    }\n    saveBundleMetadata(t, e) {\n        /** Decodes a BundleMetadata proto into a BundleMetadata object. */\n        var n;\n        return this.cs.set(e.id, {\n            id: (n = e).id,\n            version: n.version,\n            createTime: Ni(n.createTime)\n        }), Rt.resolve();\n    }\n    getNamedQuery(t, e) {\n        return Rt.resolve(this.hs.get(e));\n    }\n    saveNamedQuery(t, e) {\n        return this.hs.set(e.name, function(t) {\n            return {\n                name: t.name,\n                query: yr(t.bundledQuery),\n                readTime: Ni(t.readTime)\n            };\n        }(e)), Rt.resolve();\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An in-memory implementation of DocumentOverlayCache.\n */ class $o {\n    constructor() {\n        // A map sorted by DocumentKey, whose value is a pair of the largest batch id\n        // for the overlay and the overlay itself.\n        this.overlays = new pe(ht.comparator), this.ls = new Map;\n    }\n    getOverlay(t, e) {\n        return Rt.resolve(this.overlays.get(e));\n    }\n    getOverlays(t, e) {\n        const n = fs();\n        return Rt.forEach(e, (e => this.getOverlay(t, e).next((t => {\n            null !== t && n.set(e, t);\n        })))).next((() => n));\n    }\n    saveOverlays(t, e, n) {\n        return n.forEach(((n, s) => {\n            this.we(t, e, s);\n        })), Rt.resolve();\n    }\n    removeOverlaysForBatchId(t, e, n) {\n        const s = this.ls.get(n);\n        return void 0 !== s && (s.forEach((t => this.overlays = this.overlays.remove(t))), \n        this.ls.delete(n)), Rt.resolve();\n    }\n    getOverlaysForCollection(t, e, n) {\n        const s = fs(), i = e.length + 1, r = new ht(e.child(\"\")), o = this.overlays.getIteratorFrom(r);\n        for (;o.hasNext(); ) {\n            const t = o.getNext().value, r = t.getKey();\n            if (!e.isPrefixOf(r.path)) break;\n            // Documents from sub-collections\n                        r.path.length === i && (t.largestBatchId > n && s.set(t.getKey(), t));\n        }\n        return Rt.resolve(s);\n    }\n    getOverlaysForCollectionGroup(t, e, n, s) {\n        let i = new pe(((t, e) => t - e));\n        const r = this.overlays.getIterator();\n        for (;r.hasNext(); ) {\n            const t = r.getNext().value;\n            if (t.getKey().getCollectionGroup() === e && t.largestBatchId > n) {\n                let e = i.get(t.largestBatchId);\n                null === e && (e = fs(), i = i.insert(t.largestBatchId, e)), e.set(t.getKey(), t);\n            }\n        }\n        const o = fs(), u = i.getIterator();\n        for (;u.hasNext(); ) {\n            if (u.getNext().value.forEach(((t, e) => o.set(t, e))), o.size() >= s) break;\n        }\n        return Rt.resolve(o);\n    }\n    we(t, e, n) {\n        // Remove the association of the overlay to its batch id.\n        const s = this.overlays.get(n.key);\n        if (null !== s) {\n            const t = this.ls.get(s.largestBatchId).delete(n.key);\n            this.ls.set(s.largestBatchId, t);\n        }\n        this.overlays = this.overlays.insert(n.key, new ei(e, n));\n        // Create the association of this overlay to the given largestBatchId.\n        let i = this.ls.get(e);\n        void 0 === i && (i = gs(), this.ls.set(e, i)), this.ls.set(e, i.add(n.key));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A collection of references to a document from some kind of numbered entity\n * (either a target ID or batch ID). As references are added to or removed from\n * the set corresponding events are emitted to a registered garbage collector.\n *\n * Each reference is represented by a DocumentReference object. Each of them\n * contains enough information to uniquely identify the reference. They are all\n * stored primarily in a set sorted by key. A document is considered garbage if\n * there's no references in that set (this can be efficiently checked thanks to\n * sorting by key).\n *\n * ReferenceSet also keeps a secondary set that contains references sorted by\n * IDs. This one is used to efficiently implement removal of all references by\n * some target ID.\n */ class Oo {\n    constructor() {\n        // A set of outstanding references to a document sorted by key.\n        this.fs = new Ee(Fo.ds), \n        // A set of outstanding references to a document sorted by target id.\n        this.ws = new Ee(Fo._s);\n    }\n    /** Returns true if the reference set contains no references. */    isEmpty() {\n        return this.fs.isEmpty();\n    }\n    /** Adds a reference to the given document key for the given ID. */    addReference(t, e) {\n        const n = new Fo(t, e);\n        this.fs = this.fs.add(n), this.ws = this.ws.add(n);\n    }\n    /** Add references to the given document keys for the given ID. */    gs(t, e) {\n        t.forEach((t => this.addReference(t, e)));\n    }\n    /**\n     * Removes a reference to the given document key for the given\n     * ID.\n     */    removeReference(t, e) {\n        this.ys(new Fo(t, e));\n    }\n    ps(t, e) {\n        t.forEach((t => this.removeReference(t, e)));\n    }\n    /**\n     * Clears all references with a given ID. Calls removeRef() for each key\n     * removed.\n     */    Is(t) {\n        const e = new ht(new ut([])), n = new Fo(e, t), s = new Fo(e, t + 1), i = [];\n        return this.ws.forEachInRange([ n, s ], (t => {\n            this.ys(t), i.push(t.key);\n        })), i;\n    }\n    Ts() {\n        this.fs.forEach((t => this.ys(t)));\n    }\n    ys(t) {\n        this.fs = this.fs.delete(t), this.ws = this.ws.delete(t);\n    }\n    Es(t) {\n        const e = new ht(new ut([])), n = new Fo(e, t), s = new Fo(e, t + 1);\n        let i = gs();\n        return this.ws.forEachInRange([ n, s ], (t => {\n            i = i.add(t.key);\n        })), i;\n    }\n    containsKey(t) {\n        const e = new Fo(t, 0), n = this.fs.firstAfterOrEqual(e);\n        return null !== n && t.isEqual(n.key);\n    }\n}\n\nclass Fo {\n    constructor(t, e) {\n        this.key = t, this.As = e;\n    }\n    /** Compare by key then by ID */    static ds(t, e) {\n        return ht.comparator(t.key, e.key) || et(t.As, e.As);\n    }\n    /** Compare by ID then by key */    static _s(t, e) {\n        return et(t.As, e.As) || ht.comparator(t.key, e.key);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Bo {\n    constructor(t, e) {\n        this.indexManager = t, this.referenceDelegate = e, \n        /**\n         * The set of all mutations that have been sent but not yet been applied to\n         * the backend.\n         */\n        this.mutationQueue = [], \n        /** Next value to use when assigning sequential IDs to each mutation batch. */\n        this.vs = 1, \n        /** An ordered mapping between documents and the mutations batch IDs. */\n        this.Rs = new Ee(Fo.ds);\n    }\n    checkEmpty(t) {\n        return Rt.resolve(0 === this.mutationQueue.length);\n    }\n    addMutationBatch(t, e, n, s) {\n        const i = this.vs;\n        this.vs++, this.mutationQueue.length > 0 && this.mutationQueue[this.mutationQueue.length - 1];\n        const r = new Zs(i, e, n, s);\n        this.mutationQueue.push(r);\n        // Track references by document key and index collection parents.\n        for (const e of s) this.Rs = this.Rs.add(new Fo(e.key, i)), this.indexManager.addToCollectionParentIndex(t, e.key.path.popLast());\n        return Rt.resolve(r);\n    }\n    lookupMutationBatch(t, e) {\n        return Rt.resolve(this.Ps(e));\n    }\n    getNextMutationBatchAfterBatchId(t, e) {\n        const n = e + 1, s = this.bs(n), i = s < 0 ? 0 : s;\n        // The requested batchId may still be out of range so normalize it to the\n        // start of the queue.\n                return Rt.resolve(this.mutationQueue.length > i ? this.mutationQueue[i] : null);\n    }\n    getHighestUnacknowledgedBatchId() {\n        return Rt.resolve(0 === this.mutationQueue.length ? -1 : this.vs - 1);\n    }\n    getAllMutationBatches(t) {\n        return Rt.resolve(this.mutationQueue.slice());\n    }\n    getAllMutationBatchesAffectingDocumentKey(t, e) {\n        const n = new Fo(e, 0), s = new Fo(e, Number.POSITIVE_INFINITY), i = [];\n        return this.Rs.forEachInRange([ n, s ], (t => {\n            const e = this.Ps(t.As);\n            i.push(e);\n        })), Rt.resolve(i);\n    }\n    getAllMutationBatchesAffectingDocumentKeys(t, e) {\n        let n = new Ee(et);\n        return e.forEach((t => {\n            const e = new Fo(t, 0), s = new Fo(t, Number.POSITIVE_INFINITY);\n            this.Rs.forEachInRange([ e, s ], (t => {\n                n = n.add(t.As);\n            }));\n        })), Rt.resolve(this.Vs(n));\n    }\n    getAllMutationBatchesAffectingQuery(t, e) {\n        // Use the query path as a prefix for testing if a document matches the\n        // query.\n        const n = e.path, s = n.length + 1;\n        // Construct a document reference for actually scanning the index. Unlike\n        // the prefix the document key in this reference must have an even number of\n        // segments. The empty segment can be used a suffix of the query path\n        // because it precedes all other segments in an ordered traversal.\n        let i = n;\n        ht.isDocumentKey(i) || (i = i.child(\"\"));\n        const r = new Fo(new ht(i), 0);\n        // Find unique batchIDs referenced by all documents potentially matching the\n        // query.\n                let o = new Ee(et);\n        return this.Rs.forEachWhile((t => {\n            const e = t.key.path;\n            return !!n.isPrefixOf(e) && (\n            // Rows with document keys more than one segment longer than the query\n            // path can't be matches. For example, a query on 'rooms' can't match\n            // the document /rooms/abc/messages/xyx.\n            // TODO(mcg): we'll need a different scanner when we implement\n            // ancestor queries.\n            e.length === s && (o = o.add(t.As)), !0);\n        }), r), Rt.resolve(this.Vs(o));\n    }\n    Vs(t) {\n        // Construct an array of matching batches, sorted by batchID to ensure that\n        // multiple mutations affecting the same document key are applied in order.\n        const e = [];\n        return t.forEach((t => {\n            const n = this.Ps(t);\n            null !== n && e.push(n);\n        })), e;\n    }\n    removeMutationBatch(t, e) {\n        F(0 === this.Ss(e.batchId, \"removed\")), this.mutationQueue.shift();\n        let n = this.Rs;\n        return Rt.forEach(e.mutations, (s => {\n            const i = new Fo(s.key, e.batchId);\n            return n = n.delete(i), this.referenceDelegate.markPotentiallyOrphaned(t, s.key);\n        })).next((() => {\n            this.Rs = n;\n        }));\n    }\n    Cn(t) {\n        // No-op since the memory mutation queue does not maintain a separate cache.\n    }\n    containsKey(t, e) {\n        const n = new Fo(e, 0), s = this.Rs.firstAfterOrEqual(n);\n        return Rt.resolve(e.isEqual(s && s.key));\n    }\n    performConsistencyCheck(t) {\n        return this.mutationQueue.length, Rt.resolve();\n    }\n    /**\n     * Finds the index of the given batchId in the mutation queue and asserts that\n     * the resulting index is within the bounds of the queue.\n     *\n     * @param batchId - The batchId to search for\n     * @param action - A description of what the caller is doing, phrased in passive\n     * form (e.g. \"acknowledged\" in a routine that acknowledges batches).\n     */    Ss(t, e) {\n        return this.bs(t);\n    }\n    /**\n     * Finds the index of the given batchId in the mutation queue. This operation\n     * is O(1).\n     *\n     * @returns The computed index of the batch with the given batchId, based on\n     * the state of the queue. Note this index can be negative if the requested\n     * batchId has already been remvoed from the queue or past the end of the\n     * queue if the batchId is larger than the last added batch.\n     */    bs(t) {\n        if (0 === this.mutationQueue.length) \n        // As an index this is past the end of the queue\n        return 0;\n        // Examine the front of the queue to figure out the difference between the\n        // batchId and indexes in the array. Note that since the queue is ordered\n        // by batchId, if the first batch has a larger batchId then the requested\n        // batchId doesn't exist in the queue.\n                return t - this.mutationQueue[0].batchId;\n    }\n    /**\n     * A version of lookupMutationBatch that doesn't return a promise, this makes\n     * other functions that uses this code easier to read and more efficent.\n     */    Ps(t) {\n        const e = this.bs(t);\n        if (e < 0 || e >= this.mutationQueue.length) return null;\n        return this.mutationQueue[e];\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The memory-only RemoteDocumentCache for IndexedDb. To construct, invoke\n * `newMemoryRemoteDocumentCache()`.\n */\nclass Lo {\n    /**\n     * @param sizer - Used to assess the size of a document. For eager GC, this is\n     * expected to just return 0 to avoid unnecessarily doing the work of\n     * calculating the size.\n     */\n    constructor(t) {\n        this.Ds = t, \n        /** Underlying cache of documents and their read times. */\n        this.docs = new pe(ht.comparator), \n        /** Size of all cached documents. */\n        this.size = 0;\n    }\n    setIndexManager(t) {\n        this.indexManager = t;\n    }\n    /**\n     * Adds the supplied entry to the cache and updates the cache size as appropriate.\n     *\n     * All calls of `addEntry`  are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()`.\n     */    addEntry(t, e) {\n        const n = e.key, s = this.docs.get(n), i = s ? s.size : 0, r = this.Ds(e);\n        return this.docs = this.docs.insert(n, {\n            document: e.mutableCopy(),\n            size: r\n        }), this.size += r - i, this.indexManager.addToCollectionParentIndex(t, n.path.popLast());\n    }\n    /**\n     * Removes the specified entry from the cache and updates the cache size as appropriate.\n     *\n     * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()`.\n     */    removeEntry(t) {\n        const e = this.docs.get(t);\n        e && (this.docs = this.docs.remove(t), this.size -= e.size);\n    }\n    getEntry(t, e) {\n        const n = this.docs.get(e);\n        return Rt.resolve(n ? n.document.mutableCopy() : an.newInvalidDocument(e));\n    }\n    getEntries(t, e) {\n        let n = cs();\n        return e.forEach((t => {\n            const e = this.docs.get(t);\n            n = n.insert(t, e ? e.document.mutableCopy() : an.newInvalidDocument(t));\n        })), Rt.resolve(n);\n    }\n    getDocumentsMatchingQuery(t, e, n, s) {\n        let i = cs();\n        // Documents are ordered by key, so we can use a prefix scan to narrow down\n        // the documents we need to match the query against.\n                const r = e.path, o = new ht(r.child(\"\")), u = this.docs.getIteratorFrom(o);\n        for (;u.hasNext(); ) {\n            const {key: t, value: {document: o}} = u.getNext();\n            if (!r.isPrefixOf(t.path)) break;\n            t.path.length > r.length + 1 || (Tt(pt(o), n) <= 0 || (s.has(o.key) || ns(e, o)) && (i = i.insert(o.key, o.mutableCopy())));\n        }\n        return Rt.resolve(i);\n    }\n    getAllFromCollectionGroup(t, e, n, s) {\n        // This method should only be called from the IndexBackfiller if persistence\n        // is enabled.\n        O();\n    }\n    Cs(t, e) {\n        return Rt.forEach(this.docs, (t => e(t)));\n    }\n    newChangeBuffer(t) {\n        // `trackRemovals` is ignores since the MemoryRemoteDocumentCache keeps\n        // a separate changelog and does not need special handling for removals.\n        return new qo(this);\n    }\n    getSize(t) {\n        return Rt.resolve(this.size);\n    }\n}\n\n/**\n * Creates a new memory-only RemoteDocumentCache.\n *\n * @param sizer - Used to assess the size of a document. For eager GC, this is\n * expected to just return 0 to avoid unnecessarily doing the work of\n * calculating the size.\n */\n/**\n * Handles the details of adding and updating documents in the MemoryRemoteDocumentCache.\n */\nclass qo extends vo {\n    constructor(t) {\n        super(), this.os = t;\n    }\n    applyChanges(t) {\n        const e = [];\n        return this.changes.forEach(((n, s) => {\n            s.isValidDocument() ? e.push(this.os.addEntry(t, s)) : this.os.removeEntry(n);\n        })), Rt.waitFor(e);\n    }\n    getFromCache(t, e) {\n        return this.os.getEntry(t, e);\n    }\n    getAllFromCache(t, e) {\n        return this.os.getEntries(t, e);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Uo {\n    constructor(t) {\n        this.persistence = t, \n        /**\n         * Maps a target to the data about that target\n         */\n        this.xs = new os((t => $n(t)), On), \n        /** The last received snapshot version. */\n        this.lastRemoteSnapshotVersion = rt.min(), \n        /** The highest numbered target ID encountered. */\n        this.highestTargetId = 0, \n        /** The highest sequence number encountered. */\n        this.Ns = 0, \n        /**\n         * A ordered bidirectional mapping between documents and the remote target\n         * IDs.\n         */\n        this.ks = new Oo, this.targetCount = 0, this.Ms = lo.kn();\n    }\n    forEachTarget(t, e) {\n        return this.xs.forEach(((t, n) => e(n))), Rt.resolve();\n    }\n    getLastRemoteSnapshotVersion(t) {\n        return Rt.resolve(this.lastRemoteSnapshotVersion);\n    }\n    getHighestSequenceNumber(t) {\n        return Rt.resolve(this.Ns);\n    }\n    allocateTargetId(t) {\n        return this.highestTargetId = this.Ms.next(), Rt.resolve(this.highestTargetId);\n    }\n    setTargetsMetadata(t, e, n) {\n        return n && (this.lastRemoteSnapshotVersion = n), e > this.Ns && (this.Ns = e), \n        Rt.resolve();\n    }\n    Fn(t) {\n        this.xs.set(t.target, t);\n        const e = t.targetId;\n        e > this.highestTargetId && (this.Ms = new lo(e), this.highestTargetId = e), t.sequenceNumber > this.Ns && (this.Ns = t.sequenceNumber);\n    }\n    addTargetData(t, e) {\n        return this.Fn(e), this.targetCount += 1, Rt.resolve();\n    }\n    updateTargetData(t, e) {\n        return this.Fn(e), Rt.resolve();\n    }\n    removeTargetData(t, e) {\n        return this.xs.delete(e.target), this.ks.Is(e.targetId), this.targetCount -= 1, \n        Rt.resolve();\n    }\n    removeTargets(t, e, n) {\n        let s = 0;\n        const i = [];\n        return this.xs.forEach(((r, o) => {\n            o.sequenceNumber <= e && null === n.get(o.targetId) && (this.xs.delete(r), i.push(this.removeMatchingKeysForTargetId(t, o.targetId)), \n            s++);\n        })), Rt.waitFor(i).next((() => s));\n    }\n    getTargetCount(t) {\n        return Rt.resolve(this.targetCount);\n    }\n    getTargetData(t, e) {\n        const n = this.xs.get(e) || null;\n        return Rt.resolve(n);\n    }\n    addMatchingKeys(t, e, n) {\n        return this.ks.gs(e, n), Rt.resolve();\n    }\n    removeMatchingKeys(t, e, n) {\n        this.ks.ps(e, n);\n        const s = this.persistence.referenceDelegate, i = [];\n        return s && e.forEach((e => {\n            i.push(s.markPotentiallyOrphaned(t, e));\n        })), Rt.waitFor(i);\n    }\n    removeMatchingKeysForTargetId(t, e) {\n        return this.ks.Is(e), Rt.resolve();\n    }\n    getMatchingKeysForTargetId(t, e) {\n        const n = this.ks.Es(e);\n        return Rt.resolve(n);\n    }\n    containsKey(t, e) {\n        return Rt.resolve(this.ks.containsKey(e));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A memory-backed instance of Persistence. Data is stored only in RAM and\n * not persisted across sessions.\n */\nclass Ko {\n    /**\n     * The constructor accepts a factory for creating a reference delegate. This\n     * allows both the delegate and this instance to have strong references to\n     * each other without having nullable fields that would then need to be\n     * checked or asserted on every access.\n     */\n    constructor(t, e) {\n        this.$s = {}, this.overlays = {}, this.Os = new Ot(0), this.Fs = !1, this.Fs = !0, \n        this.referenceDelegate = t(this), this.Bs = new Uo(this);\n        this.indexManager = new zr, this.remoteDocumentCache = function(t) {\n            return new Lo(t);\n        }((t => this.referenceDelegate.Ls(t))), this.serializer = new ar(e), this.qs = new Mo(this.serializer);\n    }\n    start() {\n        return Promise.resolve();\n    }\n    shutdown() {\n        // No durable state to ensure is closed on shutdown.\n        return this.Fs = !1, Promise.resolve();\n    }\n    get started() {\n        return this.Fs;\n    }\n    setDatabaseDeletedListener() {\n        // No op.\n    }\n    setNetworkEnabled() {\n        // No op.\n    }\n    getIndexManager(t) {\n        // We do not currently support indices for memory persistence, so we can\n        // return the same shared instance of the memory index manager.\n        return this.indexManager;\n    }\n    getDocumentOverlayCache(t) {\n        let e = this.overlays[t.toKey()];\n        return e || (e = new $o, this.overlays[t.toKey()] = e), e;\n    }\n    getMutationQueue(t, e) {\n        let n = this.$s[t.toKey()];\n        return n || (n = new Bo(e, this.referenceDelegate), this.$s[t.toKey()] = n), n;\n    }\n    getTargetCache() {\n        return this.Bs;\n    }\n    getRemoteDocumentCache() {\n        return this.remoteDocumentCache;\n    }\n    getBundleCache() {\n        return this.qs;\n    }\n    runTransaction(t, e, n) {\n        N(\"MemoryPersistence\", \"Starting transaction:\", t);\n        const s = new Go(this.Os.next());\n        return this.referenceDelegate.Us(), n(s).next((t => this.referenceDelegate.Ks(s).next((() => t)))).toPromise().then((t => (s.raiseOnCommittedEvent(), \n        t)));\n    }\n    Gs(t, e) {\n        return Rt.or(Object.values(this.$s).map((n => () => n.containsKey(t, e))));\n    }\n}\n\n/**\n * Memory persistence is not actually transactional, but future implementations\n * may have transaction-scoped state.\n */ class Go extends At {\n    constructor(t) {\n        super(), this.currentSequenceNumber = t;\n    }\n}\n\nclass Qo {\n    constructor(t) {\n        this.persistence = t, \n        /** Tracks all documents that are active in Query views. */\n        this.Qs = new Oo, \n        /** The list of documents that are potentially GCed after each transaction. */\n        this.js = null;\n    }\n    static zs(t) {\n        return new Qo(t);\n    }\n    get Ws() {\n        if (this.js) return this.js;\n        throw O();\n    }\n    addReference(t, e, n) {\n        return this.Qs.addReference(n, e), this.Ws.delete(n.toString()), Rt.resolve();\n    }\n    removeReference(t, e, n) {\n        return this.Qs.removeReference(n, e), this.Ws.add(n.toString()), Rt.resolve();\n    }\n    markPotentiallyOrphaned(t, e) {\n        return this.Ws.add(e.toString()), Rt.resolve();\n    }\n    removeTarget(t, e) {\n        this.Qs.Is(e.targetId).forEach((t => this.Ws.add(t.toString())));\n        const n = this.persistence.getTargetCache();\n        return n.getMatchingKeysForTargetId(t, e.targetId).next((t => {\n            t.forEach((t => this.Ws.add(t.toString())));\n        })).next((() => n.removeTargetData(t, e)));\n    }\n    Us() {\n        this.js = new Set;\n    }\n    Ks(t) {\n        // Remove newly orphaned documents.\n        const e = this.persistence.getRemoteDocumentCache().newChangeBuffer();\n        return Rt.forEach(this.Ws, (n => {\n            const s = ht.fromPath(n);\n            return this.Hs(t, s).next((t => {\n                t || e.removeEntry(s, rt.min());\n            }));\n        })).next((() => (this.js = null, e.apply(t))));\n    }\n    updateLimboDocument(t, e) {\n        return this.Hs(t, e).next((t => {\n            t ? this.Ws.delete(e.toString()) : this.Ws.add(e.toString());\n        }));\n    }\n    Ls(t) {\n        // For eager GC, we don't care about the document size, there are no size thresholds.\n        return 0;\n    }\n    Hs(t, e) {\n        return Rt.or([ () => Rt.resolve(this.Qs.containsKey(e)), () => this.persistence.getTargetCache().containsKey(t, e), () => this.persistence.Gs(t, e) ]);\n    }\n}\n\nclass jo {\n    constructor(t, e) {\n        this.persistence = t, this.Js = new os((t => qt(t.path)), ((t, e) => t.isEqual(e))), \n        this.garbageCollector = To(this, e);\n    }\n    static zs(t, e) {\n        return new jo(t, e);\n    }\n    // No-ops, present so memory persistence doesn't have to care which delegate\n    // it has.\n    Us() {}\n    Ks(t) {\n        return Rt.resolve();\n    }\n    forEachTarget(t, e) {\n        return this.persistence.getTargetCache().forEachTarget(t, e);\n    }\n    zn(t) {\n        const e = this.Jn(t);\n        return this.persistence.getTargetCache().getTargetCount(t).next((t => e.next((e => t + e))));\n    }\n    Jn(t) {\n        let e = 0;\n        return this.Wn(t, (t => {\n            e++;\n        })).next((() => e));\n    }\n    Wn(t, e) {\n        return Rt.forEach(this.Js, ((n, s) => this.Xn(t, n, s).next((t => t ? Rt.resolve() : e(s)))));\n    }\n    removeTargets(t, e, n) {\n        return this.persistence.getTargetCache().removeTargets(t, e, n);\n    }\n    removeOrphanedDocuments(t, e) {\n        let n = 0;\n        const s = this.persistence.getRemoteDocumentCache(), i = s.newChangeBuffer();\n        return s.Cs(t, (s => this.Xn(t, s, e).next((t => {\n            t || (n++, i.removeEntry(s, rt.min()));\n        })))).next((() => i.apply(t))).next((() => n));\n    }\n    markPotentiallyOrphaned(t, e) {\n        return this.Js.set(e, t.currentSequenceNumber), Rt.resolve();\n    }\n    removeTarget(t, e) {\n        const n = e.withSequenceNumber(t.currentSequenceNumber);\n        return this.persistence.getTargetCache().updateTargetData(t, n);\n    }\n    addReference(t, e, n) {\n        return this.Js.set(n, t.currentSequenceNumber), Rt.resolve();\n    }\n    removeReference(t, e, n) {\n        return this.Js.set(n, t.currentSequenceNumber), Rt.resolve();\n    }\n    updateLimboDocument(t, e) {\n        return this.Js.set(e, t.currentSequenceNumber), Rt.resolve();\n    }\n    Ls(t) {\n        let e = t.key.toString().length;\n        return t.isFoundDocument() && (e += ze(t.data.value)), e;\n    }\n    Xn(t, e, n) {\n        return Rt.or([ () => this.persistence.Gs(t, e), () => this.persistence.getTargetCache().containsKey(t, e), () => {\n            const t = this.Js.get(e);\n            return Rt.resolve(void 0 !== t && t > n);\n        } ]);\n    }\n    getCacheSize(t) {\n        return this.persistence.getRemoteDocumentCache().getSize(t);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Performs database creation and schema upgrades. */ class zo {\n    constructor(t) {\n        this.serializer = t;\n    }\n    /**\n     * Performs database creation and schema upgrades.\n     *\n     * Note that in production, this method is only ever used to upgrade the schema\n     * to SCHEMA_VERSION. Different values of toVersion are only used for testing\n     * and local feature development.\n     */    O(t, e, n, s) {\n        const i = new Pt(\"createOrUpgrade\", e);\n        n < 1 && s >= 1 && (function(t) {\n            t.createObjectStore(\"owner\");\n        }(t), function(t) {\n            t.createObjectStore(\"mutationQueues\", {\n                keyPath: \"userId\"\n            });\n            t.createObjectStore(\"mutations\", {\n                keyPath: \"batchId\",\n                autoIncrement: !0\n            }).createIndex(\"userMutationsIndex\", Qt, {\n                unique: !0\n            }), t.createObjectStore(\"documentMutations\");\n        }\n        /**\n * Upgrade function to migrate the 'mutations' store from V1 to V3. Loads\n * and rewrites all data.\n */ (t), Wo(t), function(t) {\n            t.createObjectStore(\"remoteDocuments\");\n        }(t));\n        // Migration 2 to populate the targetGlobal object no longer needed since\n        // migration 3 unconditionally clears it.\n                let r = Rt.resolve();\n        return n < 3 && s >= 3 && (\n        // Brand new clients don't need to drop and recreate--only clients that\n        // potentially have corrupt data.\n        0 !== n && (!function(t) {\n            t.deleteObjectStore(\"targetDocuments\"), t.deleteObjectStore(\"targets\"), t.deleteObjectStore(\"targetGlobal\");\n        }(t), Wo(t)), r = r.next((() => \n        /**\n * Creates the target global singleton row.\n *\n * @param txn - The version upgrade transaction for indexeddb\n */\n        function(t) {\n            const e = t.store(\"targetGlobal\"), n = {\n                highestTargetId: 0,\n                highestListenSequenceNumber: 0,\n                lastRemoteSnapshotVersion: rt.min().toTimestamp(),\n                targetCount: 0\n            };\n            return e.put(\"targetGlobalKey\", n);\n        }(i)))), n < 4 && s >= 4 && (0 !== n && (\n        // Schema version 3 uses auto-generated keys to generate globally unique\n        // mutation batch IDs (this was previously ensured internally by the\n        // client). To migrate to the new schema, we have to read all mutations\n        // and write them back out. We preserve the existing batch IDs to guarantee\n        // consistency with other object stores. Any further mutation batch IDs will\n        // be auto-generated.\n        r = r.next((() => function(t, e) {\n            return e.store(\"mutations\").j().next((n => {\n                t.deleteObjectStore(\"mutations\");\n                t.createObjectStore(\"mutations\", {\n                    keyPath: \"batchId\",\n                    autoIncrement: !0\n                }).createIndex(\"userMutationsIndex\", Qt, {\n                    unique: !0\n                });\n                const s = e.store(\"mutations\"), i = n.map((t => s.put(t)));\n                return Rt.waitFor(i);\n            }));\n        }(t, i)))), r = r.next((() => {\n            !function(t) {\n                t.createObjectStore(\"clientMetadata\", {\n                    keyPath: \"clientId\"\n                });\n            }(t);\n        }))), n < 5 && s >= 5 && (r = r.next((() => this.Ys(i)))), n < 6 && s >= 6 && (r = r.next((() => (function(t) {\n            t.createObjectStore(\"remoteDocumentGlobal\");\n        }(t), this.Xs(i))))), n < 7 && s >= 7 && (r = r.next((() => this.Zs(i)))), n < 8 && s >= 8 && (r = r.next((() => this.ti(t, i)))), \n        n < 9 && s >= 9 && (r = r.next((() => {\n            // Multi-Tab used to manage its own changelog, but this has been moved\n            // to the DbRemoteDocument object store itself. Since the previous change\n            // log only contained transient data, we can drop its object store.\n            !function(t) {\n                t.objectStoreNames.contains(\"remoteDocumentChanges\") && t.deleteObjectStore(\"remoteDocumentChanges\");\n            }(t);\n            // Note: Schema version 9 used to create a read time index for the\n            // RemoteDocumentCache. This is now done with schema version 13.\n                }))), n < 10 && s >= 10 && (r = r.next((() => this.ei(i)))), n < 11 && s >= 11 && (r = r.next((() => {\n            !function(t) {\n                t.createObjectStore(\"bundles\", {\n                    keyPath: \"bundleId\"\n                });\n            }(t), function(t) {\n                t.createObjectStore(\"namedQueries\", {\n                    keyPath: \"name\"\n                });\n            }(t);\n        }))), n < 12 && s >= 12 && (r = r.next((() => {\n            !function(t) {\n                const e = t.createObjectStore(\"documentOverlays\", {\n                    keyPath: oe\n                });\n                e.createIndex(\"collectionPathOverlayIndex\", ue, {\n                    unique: !1\n                }), e.createIndex(\"collectionGroupOverlayIndex\", ce, {\n                    unique: !1\n                });\n            }(t);\n        }))), n < 13 && s >= 13 && (r = r.next((() => function(t) {\n            const e = t.createObjectStore(\"remoteDocumentsV14\", {\n                keyPath: Ht\n            });\n            e.createIndex(\"documentKeyIndex\", Jt), e.createIndex(\"collectionGroupIndex\", Yt);\n        }(t))).next((() => this.ni(t, i))).next((() => t.deleteObjectStore(\"remoteDocuments\")))), \n        n < 14 && s >= 14 && (r = r.next((() => this.si(t, i)))), n < 15 && s >= 15 && (r = r.next((() => function(t) {\n            t.createObjectStore(\"indexConfiguration\", {\n                keyPath: \"indexId\",\n                autoIncrement: !0\n            }).createIndex(\"collectionGroupIndex\", \"collectionGroup\", {\n                unique: !1\n            });\n            t.createObjectStore(\"indexState\", {\n                keyPath: ne\n            }).createIndex(\"sequenceNumberIndex\", se, {\n                unique: !1\n            });\n            t.createObjectStore(\"indexEntries\", {\n                keyPath: ie\n            }).createIndex(\"documentKeyIndex\", re, {\n                unique: !1\n            });\n        }(t)))), r;\n    }\n    Xs(t) {\n        let e = 0;\n        return t.store(\"remoteDocuments\").X(((t, n) => {\n            e += ro(n);\n        })).next((() => {\n            const n = {\n                byteSize: e\n            };\n            return t.store(\"remoteDocumentGlobal\").put(\"remoteDocumentGlobalKey\", n);\n        }));\n    }\n    Ys(t) {\n        const e = t.store(\"mutationQueues\"), n = t.store(\"mutations\");\n        return e.j().next((e => Rt.forEach(e, (e => {\n            const s = IDBKeyRange.bound([ e.userId, -1 ], [ e.userId, e.lastAcknowledgedBatchId ]);\n            return n.j(\"userMutationsIndex\", s).next((n => Rt.forEach(n, (n => {\n                F(n.userId === e.userId);\n                const s = _r(this.serializer, n);\n                return io(t, e.userId, s).next((() => {}));\n            }))));\n        }))));\n    }\n    /**\n     * Ensures that every document in the remote document cache has a corresponding sentinel row\n     * with a sequence number. Missing rows are given the most recently used sequence number.\n     */    Zs(t) {\n        const e = t.store(\"targetDocuments\"), n = t.store(\"remoteDocuments\");\n        return t.store(\"targetGlobal\").get(\"targetGlobalKey\").next((t => {\n            const s = [];\n            return n.X(((n, i) => {\n                const r = new ut(n), o = function(t) {\n                    return [ 0, qt(t) ];\n                }(r);\n                s.push(e.get(o).next((n => n ? Rt.resolve() : (n => e.put({\n                    targetId: 0,\n                    path: qt(n),\n                    sequenceNumber: t.highestListenSequenceNumber\n                }))(r))));\n            })).next((() => Rt.waitFor(s)));\n        }));\n    }\n    ti(t, e) {\n        // Create the index.\n        t.createObjectStore(\"collectionParents\", {\n            keyPath: ee\n        });\n        const n = e.store(\"collectionParents\"), s = new Wr, i = t => {\n            if (s.add(t)) {\n                const e = t.lastSegment(), s = t.popLast();\n                return n.put({\n                    collectionId: e,\n                    parent: qt(s)\n                });\n            }\n        };\n        // Helper to add an index entry iff we haven't already written it.\n                // Index existing remote documents.\n        return e.store(\"remoteDocuments\").X({\n            Y: !0\n        }, ((t, e) => {\n            const n = new ut(t);\n            return i(n.popLast());\n        })).next((() => e.store(\"documentMutations\").X({\n            Y: !0\n        }, (([t, e, n], s) => {\n            const r = Gt(e);\n            return i(r.popLast());\n        }))));\n    }\n    ei(t) {\n        const e = t.store(\"targets\");\n        return e.X(((t, n) => {\n            const s = mr(n), i = gr(this.serializer, s);\n            return e.put(i);\n        }));\n    }\n    ni(t, e) {\n        const n = e.store(\"remoteDocuments\"), s = [];\n        return n.X(((t, n) => {\n            const i = e.store(\"remoteDocumentsV14\"), r = (o = n, o.document ? new ht(ut.fromString(o.document.name).popFirst(5)) : o.noDocument ? ht.fromSegments(o.noDocument.path) : o.unknownDocument ? ht.fromSegments(o.unknownDocument.path) : O()).path.toArray();\n            var o;\n            /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */            const u = {\n                prefixPath: r.slice(0, r.length - 2),\n                collectionGroup: r[r.length - 2],\n                documentId: r[r.length - 1],\n                readTime: n.readTime || [ 0, 0 ],\n                unknownDocument: n.unknownDocument,\n                noDocument: n.noDocument,\n                document: n.document,\n                hasCommittedMutations: !!n.hasCommittedMutations\n            };\n            s.push(i.put(u));\n        })).next((() => Rt.waitFor(s)));\n    }\n    si(t, e) {\n        const n = e.store(\"mutations\"), s = Po(this.serializer), i = new Ko(Qo.zs, this.serializer.fe);\n        return n.j().next((t => {\n            const n = new Map;\n            return t.forEach((t => {\n                var e;\n                let s = null !== (e = n.get(t.userId)) && void 0 !== e ? e : gs();\n                _r(this.serializer, t).keys().forEach((t => s = s.add(t))), n.set(t.userId, s);\n            })), Rt.forEach(n, ((t, n) => {\n                const r = new V(n), o = Rr.de(this.serializer, r), u = i.getIndexManager(r), c = oo.de(r, this.serializer, u, i.referenceDelegate);\n                return new ko(s, c, o, u).recalculateAndSaveOverlaysForDocumentKeys(new we(e, Ot.ct), t).next();\n            }));\n        }));\n    }\n}\n\nfunction Wo(t) {\n    t.createObjectStore(\"targetDocuments\", {\n        keyPath: Zt\n    }).createIndex(\"documentTargetsIndex\", te, {\n        unique: !0\n    });\n    // NOTE: This is unique only because the TargetId is the suffix.\n    t.createObjectStore(\"targets\", {\n        keyPath: \"targetId\"\n    }).createIndex(\"queryTargetsIndex\", Xt, {\n        unique: !0\n    }), t.createObjectStore(\"targetGlobal\");\n}\n\nconst Ho = \"Failed to obtain exclusive access to the persistence layer. To allow shared access, multi-tab synchronization has to be enabled in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.\";\n\n/**\n * Oldest acceptable age in milliseconds for client metadata before the client\n * is considered inactive and its associated data is garbage collected.\n */\n/**\n * An IndexedDB-backed instance of Persistence. Data is stored persistently\n * across sessions.\n *\n * On Web only, the Firestore SDKs support shared access to its persistence\n * layer. This allows multiple browser tabs to read and write to IndexedDb and\n * to synchronize state even without network connectivity. Shared access is\n * currently optional and not enabled unless all clients invoke\n * `enablePersistence()` with `{synchronizeTabs:true}`.\n *\n * In multi-tab mode, if multiple clients are active at the same time, the SDK\n * will designate one client as the “primary client”. An effort is made to pick\n * a visible, network-connected and active client, and this client is\n * responsible for letting other clients know about its presence. The primary\n * client writes a unique client-generated identifier (the client ID) to\n * IndexedDb’s “owner” store every 4 seconds. If the primary client fails to\n * update this entry, another client can acquire the lease and take over as\n * primary.\n *\n * Some persistence operations in the SDK are designated as primary-client only\n * operations. This includes the acknowledgment of mutations and all updates of\n * remote documents. The effects of these operations are written to persistence\n * and then broadcast to other tabs via LocalStorage (see\n * `WebStorageSharedClientState`), which then refresh their state from\n * persistence.\n *\n * Similarly, the primary client listens to notifications sent by secondary\n * clients to discover persistence changes written by secondary clients, such as\n * the addition of new mutations and query targets.\n *\n * If multi-tab is not enabled and another tab already obtained the primary\n * lease, IndexedDbPersistence enters a failed state and all subsequent\n * operations will automatically fail.\n *\n * Additionally, there is an optimization so that when a tab is closed, the\n * primary lease is released immediately (this is especially important to make\n * sure that a refreshed tab is able to immediately re-acquire the primary\n * lease). Unfortunately, IndexedDB cannot be reliably used in window.unload\n * since it is an asynchronous API. So in addition to attempting to give up the\n * lease, the leaseholder writes its client ID to a \"zombiedClient\" entry in\n * LocalStorage which acts as an indicator that another tab should go ahead and\n * take the primary lease immediately regardless of the current lease timestamp.\n *\n * TODO(b/114226234): Remove `synchronizeTabs` section when multi-tab is no\n * longer optional.\n */\nclass Jo {\n    constructor(\n    /**\n     * Whether to synchronize the in-memory state of multiple tabs and share\n     * access to local persistence.\n     */\n    t, e, n, s, i, r, o, u, c, \n    /**\n     * If set to true, forcefully obtains database access. Existing tabs will\n     * no longer be able to access IndexedDB.\n     */\n    a, h = 15) {\n        if (this.allowTabSynchronization = t, this.persistenceKey = e, this.clientId = n, \n        this.ii = i, this.window = r, this.document = o, this.ri = c, this.oi = a, this.ui = h, \n        this.Os = null, this.Fs = !1, this.isPrimary = !1, this.networkEnabled = !0, \n        /** Our window.unload handler, if registered. */\n        this.ci = null, this.inForeground = !1, \n        /** Our 'visibilitychange' listener if registered. */\n        this.ai = null, \n        /** The client metadata refresh task. */\n        this.hi = null, \n        /** The last time we garbage collected the client metadata object store. */\n        this.li = Number.NEGATIVE_INFINITY, \n        /** A listener to notify on primary state changes. */\n        this.fi = t => Promise.resolve(), !Jo.D()) throw new U(q.UNIMPLEMENTED, \"This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.\");\n        this.referenceDelegate = new Eo(this, s), this.di = e + \"main\", this.serializer = new ar(u), \n        this.wi = new bt(this.di, this.ui, new zo(this.serializer)), this.Bs = new fo(this.referenceDelegate, this.serializer), \n        this.remoteDocumentCache = Po(this.serializer), this.qs = new Er, this.window && this.window.localStorage ? this._i = this.window.localStorage : (this._i = null, \n        !1 === a && k(\"IndexedDbPersistence\", \"LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page.\"));\n    }\n    /**\n     * Attempt to start IndexedDb persistence.\n     *\n     * @returns Whether persistence was enabled.\n     */    start() {\n        // NOTE: This is expected to fail sometimes (in the case of another tab\n        // already having the persistence lock), so it's the first thing we should\n        // do.\n        return this.mi().then((() => {\n            if (!this.isPrimary && !this.allowTabSynchronization) \n            // Fail `start()` if `synchronizeTabs` is disabled and we cannot\n            // obtain the primary lease.\n            throw new U(q.FAILED_PRECONDITION, Ho);\n            return this.gi(), this.yi(), this.pi(), this.runTransaction(\"getHighestListenSequenceNumber\", \"readonly\", (t => this.Bs.getHighestSequenceNumber(t)));\n        })).then((t => {\n            this.Os = new Ot(t, this.ri);\n        })).then((() => {\n            this.Fs = !0;\n        })).catch((t => (this.wi && this.wi.close(), Promise.reject(t))));\n    }\n    /**\n     * Registers a listener that gets called when the primary state of the\n     * instance changes. Upon registering, this listener is invoked immediately\n     * with the current primary state.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */    Ii(t) {\n        return this.fi = async e => {\n            if (this.started) return t(e);\n        }, t(this.isPrimary);\n    }\n    /**\n     * Registers a listener that gets called when the database receives a\n     * version change event indicating that it has deleted.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */    setDatabaseDeletedListener(t) {\n        this.wi.B((async e => {\n            // Check if an attempt is made to delete IndexedDB.\n            null === e.newVersion && await t();\n        }));\n    }\n    /**\n     * Adjusts the current network state in the client's metadata, potentially\n     * affecting the primary lease.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */    setNetworkEnabled(t) {\n        this.networkEnabled !== t && (this.networkEnabled = t, \n        // Schedule a primary lease refresh for immediate execution. The eventual\n        // lease update will be propagated via `primaryStateListener`.\n        this.ii.enqueueAndForget((async () => {\n            this.started && await this.mi();\n        })));\n    }\n    /**\n     * Updates the client metadata in IndexedDb and attempts to either obtain or\n     * extend the primary lease for the local client. Asynchronously notifies the\n     * primary state listener if the client either newly obtained or released its\n     * primary lease.\n     */    mi() {\n        return this.runTransaction(\"updateClientMetadataAndTryBecomePrimary\", \"readwrite\", (t => Xo(t).put({\n            clientId: this.clientId,\n            updateTimeMs: Date.now(),\n            networkEnabled: this.networkEnabled,\n            inForeground: this.inForeground\n        }).next((() => {\n            if (this.isPrimary) return this.Ti(t).next((t => {\n                t || (this.isPrimary = !1, this.ii.enqueueRetryable((() => this.fi(!1))));\n            }));\n        })).next((() => this.Ei(t))).next((e => this.isPrimary && !e ? this.Ai(t).next((() => !1)) : !!e && this.vi(t).next((() => !0)))))).catch((t => {\n            if (Dt(t)) \n            // Proceed with the existing state. Any subsequent access to\n            // IndexedDB will verify the lease.\n            return N(\"IndexedDbPersistence\", \"Failed to extend owner lease: \", t), this.isPrimary;\n            if (!this.allowTabSynchronization) throw t;\n            return N(\"IndexedDbPersistence\", \"Releasing owner lease after error during lease refresh\", t), \n            /* isPrimary= */ !1;\n        })).then((t => {\n            this.isPrimary !== t && this.ii.enqueueRetryable((() => this.fi(t))), this.isPrimary = t;\n        }));\n    }\n    Ti(t) {\n        return Yo(t).get(\"owner\").next((t => Rt.resolve(this.Ri(t))));\n    }\n    Pi(t) {\n        return Xo(t).delete(this.clientId);\n    }\n    /**\n     * If the garbage collection threshold has passed, prunes the\n     * RemoteDocumentChanges and the ClientMetadata store based on the last update\n     * time of all clients.\n     */    async bi() {\n        if (this.isPrimary && !this.Vi(this.li, 18e5)) {\n            this.li = Date.now();\n            const t = await this.runTransaction(\"maybeGarbageCollectMultiClientState\", \"readwrite-primary\", (t => {\n                const e = _e(t, \"clientMetadata\");\n                return e.j().next((t => {\n                    const n = this.Si(t, 18e5), s = t.filter((t => -1 === n.indexOf(t)));\n                    // Delete metadata for clients that are no longer considered active.\n                    return Rt.forEach(s, (t => e.delete(t.clientId))).next((() => s));\n                }));\n            })).catch((() => []));\n            // Delete potential leftover entries that may continue to mark the\n            // inactive clients as zombied in LocalStorage.\n            // Ideally we'd delete the IndexedDb and LocalStorage zombie entries for\n            // the client atomically, but we can't. So we opt to delete the IndexedDb\n            // entries first to avoid potentially reviving a zombied client.\n                        if (this._i) for (const e of t) this._i.removeItem(this.Di(e.clientId));\n        }\n    }\n    /**\n     * Schedules a recurring timer to update the client metadata and to either\n     * extend or acquire the primary lease if the client is eligible.\n     */    pi() {\n        this.hi = this.ii.enqueueAfterDelay(\"client_metadata_refresh\" /* TimerId.ClientMetadataRefresh */ , 4e3, (() => this.mi().then((() => this.bi())).then((() => this.pi()))));\n    }\n    /** Checks whether `client` is the local client. */    Ri(t) {\n        return !!t && t.ownerId === this.clientId;\n    }\n    /**\n     * Evaluate the state of all active clients and determine whether the local\n     * client is or can act as the holder of the primary lease. Returns whether\n     * the client is eligible for the lease, but does not actually acquire it.\n     * May return 'false' even if there is no active leaseholder and another\n     * (foreground) client should become leaseholder instead.\n     */    Ei(t) {\n        if (this.oi) return Rt.resolve(!0);\n        return Yo(t).get(\"owner\").next((e => {\n            // A client is eligible for the primary lease if:\n            // - its network is enabled and the client's tab is in the foreground.\n            // - its network is enabled and no other client's tab is in the\n            //   foreground.\n            // - every clients network is disabled and the client's tab is in the\n            //   foreground.\n            // - every clients network is disabled and no other client's tab is in\n            //   the foreground.\n            // - the `forceOwningTab` setting was passed in.\n            if (null !== e && this.Vi(e.leaseTimestampMs, 5e3) && !this.Ci(e.ownerId)) {\n                if (this.Ri(e) && this.networkEnabled) return !0;\n                if (!this.Ri(e)) {\n                    if (!e.allowTabSynchronization) \n                    // Fail the `canActAsPrimary` check if the current leaseholder has\n                    // not opted into multi-tab synchronization. If this happens at\n                    // client startup, we reject the Promise returned by\n                    // `enablePersistence()` and the user can continue to use Firestore\n                    // with in-memory persistence.\n                    // If this fails during a lease refresh, we will instead block the\n                    // AsyncQueue from executing further operations. Note that this is\n                    // acceptable since mixing & matching different `synchronizeTabs`\n                    // settings is not supported.\n                    // TODO(b/114226234): Remove this check when `synchronizeTabs` can\n                    // no longer be turned off.\n                    throw new U(q.FAILED_PRECONDITION, Ho);\n                    return !1;\n                }\n            }\n            return !(!this.networkEnabled || !this.inForeground) || Xo(t).j().next((t => void 0 === this.Si(t, 5e3).find((t => {\n                if (this.clientId !== t.clientId) {\n                    const e = !this.networkEnabled && t.networkEnabled, n = !this.inForeground && t.inForeground, s = this.networkEnabled === t.networkEnabled;\n                    if (e || n && s) return !0;\n                }\n                return !1;\n            }))));\n        })).next((t => (this.isPrimary !== t && N(\"IndexedDbPersistence\", `Client ${t ? \"is\" : \"is not\"} eligible for a primary lease.`), \n        t)));\n    }\n    async shutdown() {\n        // The shutdown() operations are idempotent and can be called even when\n        // start() aborted (e.g. because it couldn't acquire the persistence lease).\n        this.Fs = !1, this.xi(), this.hi && (this.hi.cancel(), this.hi = null), this.Ni(), \n        this.ki(), \n        // Use `SimpleDb.runTransaction` directly to avoid failing if another tab\n        // has obtained the primary lease.\n        await this.wi.runTransaction(\"shutdown\", \"readwrite\", [ \"owner\", \"clientMetadata\" ], (t => {\n            const e = new we(t, Ot.ct);\n            return this.Ai(e).next((() => this.Pi(e)));\n        })), this.wi.close(), \n        // Remove the entry marking the client as zombied from LocalStorage since\n        // we successfully deleted its metadata from IndexedDb.\n        this.Mi();\n    }\n    /**\n     * Returns clients that are not zombied and have an updateTime within the\n     * provided threshold.\n     */    Si(t, e) {\n        return t.filter((t => this.Vi(t.updateTimeMs, e) && !this.Ci(t.clientId)));\n    }\n    /**\n     * Returns the IDs of the clients that are currently active. If multi-tab\n     * is not supported, returns an array that only contains the local client's\n     * ID.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */    $i() {\n        return this.runTransaction(\"getActiveClients\", \"readonly\", (t => Xo(t).j().next((t => this.Si(t, 18e5).map((t => t.clientId))))));\n    }\n    get started() {\n        return this.Fs;\n    }\n    getMutationQueue(t, e) {\n        return oo.de(t, this.serializer, e, this.referenceDelegate);\n    }\n    getTargetCache() {\n        return this.Bs;\n    }\n    getRemoteDocumentCache() {\n        return this.remoteDocumentCache;\n    }\n    getIndexManager(t) {\n        return new Jr(t, this.serializer.fe.databaseId);\n    }\n    getDocumentOverlayCache(t) {\n        return Rr.de(this.serializer, t);\n    }\n    getBundleCache() {\n        return this.qs;\n    }\n    runTransaction(t, e, n) {\n        N(\"IndexedDbPersistence\", \"Starting transaction:\", t);\n        const s = \"readonly\" === e ? \"readonly\" : \"readwrite\", i = 15 === (r = this.ui) ? de : 14 === r ? fe : 13 === r ? le : 12 === r ? he : 11 === r ? ae : void O();\n        /** Returns the object stores for the provided schema. */\n        var r;\n        let o;\n        // Do all transactions as readwrite against all object stores, since we\n        // are the only reader/writer.\n                return this.wi.runTransaction(t, s, i, (s => (o = new we(s, this.Os ? this.Os.next() : Ot.ct), \n        \"readwrite-primary\" === e ? this.Ti(o).next((t => !!t || this.Ei(o))).next((e => {\n            if (!e) throw k(`Failed to obtain primary lease for action '${t}'.`), this.isPrimary = !1, \n            this.ii.enqueueRetryable((() => this.fi(!1))), new U(q.FAILED_PRECONDITION, Et);\n            return n(o);\n        })).next((t => this.vi(o).next((() => t)))) : this.Oi(o).next((() => n(o)))))).then((t => (o.raiseOnCommittedEvent(), \n        t)));\n    }\n    /**\n     * Verifies that the current tab is the primary leaseholder or alternatively\n     * that the leaseholder has opted into multi-tab synchronization.\n     */\n    // TODO(b/114226234): Remove this check when `synchronizeTabs` can no longer\n    // be turned off.\n    Oi(t) {\n        return Yo(t).get(\"owner\").next((t => {\n            if (null !== t && this.Vi(t.leaseTimestampMs, 5e3) && !this.Ci(t.ownerId) && !this.Ri(t) && !(this.oi || this.allowTabSynchronization && t.allowTabSynchronization)) throw new U(q.FAILED_PRECONDITION, Ho);\n        }));\n    }\n    /**\n     * Obtains or extends the new primary lease for the local client. This\n     * method does not verify that the client is eligible for this lease.\n     */    vi(t) {\n        const e = {\n            ownerId: this.clientId,\n            allowTabSynchronization: this.allowTabSynchronization,\n            leaseTimestampMs: Date.now()\n        };\n        return Yo(t).put(\"owner\", e);\n    }\n    static D() {\n        return bt.D();\n    }\n    /** Checks the primary lease and removes it if we are the current primary. */    Ai(t) {\n        const e = Yo(t);\n        return e.get(\"owner\").next((t => this.Ri(t) ? (N(\"IndexedDbPersistence\", \"Releasing primary lease.\"), \n        e.delete(\"owner\")) : Rt.resolve()));\n    }\n    /** Verifies that `updateTimeMs` is within `maxAgeMs`. */    Vi(t, e) {\n        const n = Date.now();\n        return !(t < n - e) && (!(t > n) || (k(`Detected an update time that is in the future: ${t} > ${n}`), \n        !1));\n    }\n    gi() {\n        null !== this.document && \"function\" == typeof this.document.addEventListener && (this.ai = () => {\n            this.ii.enqueueAndForget((() => (this.inForeground = \"visible\" === this.document.visibilityState, \n            this.mi())));\n        }, this.document.addEventListener(\"visibilitychange\", this.ai), this.inForeground = \"visible\" === this.document.visibilityState);\n    }\n    Ni() {\n        this.ai && (this.document.removeEventListener(\"visibilitychange\", this.ai), this.ai = null);\n    }\n    /**\n     * Attaches a window.unload handler that will synchronously write our\n     * clientId to a \"zombie client id\" location in LocalStorage. This can be used\n     * by tabs trying to acquire the primary lease to determine that the lease\n     * is no longer valid even if the timestamp is recent. This is particularly\n     * important for the refresh case (so the tab correctly re-acquires the\n     * primary lease). LocalStorage is used for this rather than IndexedDb because\n     * it is a synchronous API and so can be used reliably from  an unload\n     * handler.\n     */    yi() {\n        var t;\n        \"function\" == typeof (null === (t = this.window) || void 0 === t ? void 0 : t.addEventListener) && (this.ci = () => {\n            // Note: In theory, this should be scheduled on the AsyncQueue since it\n            // accesses internal state. We execute this code directly during shutdown\n            // to make sure it gets a chance to run.\n            this.xi();\n            const t = /(?:Version|Mobile)\\/1[456]/;\n            isSafari() && (navigator.appVersion.match(t) || navigator.userAgent.match(t)) && \n            // On Safari 14, 15, and 16, we do not run any cleanup actions as it might\n            // trigger a bug that prevents Safari from re-opening IndexedDB during\n            // the next page load.\n            // See https://bugs.webkit.org/show_bug.cgi?id=226547\n            this.ii.enterRestrictedMode(/* purgeExistingTasks= */ !0), this.ii.enqueueAndForget((() => this.shutdown()));\n        }, this.window.addEventListener(\"pagehide\", this.ci));\n    }\n    ki() {\n        this.ci && (this.window.removeEventListener(\"pagehide\", this.ci), this.ci = null);\n    }\n    /**\n     * Returns whether a client is \"zombied\" based on its LocalStorage entry.\n     * Clients become zombied when their tab closes without running all of the\n     * cleanup logic in `shutdown()`.\n     */    Ci(t) {\n        var e;\n        try {\n            const n = null !== (null === (e = this._i) || void 0 === e ? void 0 : e.getItem(this.Di(t)));\n            return N(\"IndexedDbPersistence\", `Client '${t}' ${n ? \"is\" : \"is not\"} zombied in LocalStorage`), \n            n;\n        } catch (t) {\n            // Gracefully handle if LocalStorage isn't working.\n            return k(\"IndexedDbPersistence\", \"Failed to get zombied client id.\", t), !1;\n        }\n    }\n    /**\n     * Record client as zombied (a client that had its tab closed). Zombied\n     * clients are ignored during primary tab selection.\n     */    xi() {\n        if (this._i) try {\n            this._i.setItem(this.Di(this.clientId), String(Date.now()));\n        } catch (t) {\n            // Gracefully handle if LocalStorage isn't available / working.\n            k(\"Failed to set zombie client id.\", t);\n        }\n    }\n    /** Removes the zombied client entry if it exists. */    Mi() {\n        if (this._i) try {\n            this._i.removeItem(this.Di(this.clientId));\n        } catch (t) {\n            // Ignore\n        }\n    }\n    Di(t) {\n        return `firestore_zombie_${this.persistenceKey}_${t}`;\n    }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the primary client object store.\n */ function Yo(t) {\n    return _e(t, \"owner\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the client metadata object store.\n */ function Xo(t) {\n    return _e(t, \"clientMetadata\");\n}\n\n/**\n * Generates a string used as a prefix when storing data in IndexedDB and\n * LocalStorage.\n */ function Zo(t, e) {\n    // Use two different prefix formats:\n    //   * firestore / persistenceKey / projectID . databaseID / ...\n    //   * firestore / persistenceKey / projectID / ...\n    // projectIDs are DNS-compatible names and cannot contain dots\n    // so there's no danger of collisions.\n    let n = t.projectId;\n    return t.isDefaultDatabase || (n += \".\" + t.database), \"firestore/\" + e + \"/\" + n + \"/\";\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A set of changes to what documents are currently in view and out of view for\n * a given query. These changes are sent to the LocalStore by the View (via\n * the SyncEngine) and are used to pin / unpin documents as appropriate.\n */\nclass tu {\n    constructor(t, e, n, s) {\n        this.targetId = t, this.fromCache = e, this.Fi = n, this.Bi = s;\n    }\n    static Li(t, e) {\n        let n = gs(), s = gs();\n        for (const t of e.docChanges) switch (t.type) {\n          case 0 /* ChangeType.Added */ :\n            n = n.add(t.doc.key);\n            break;\n\n          case 1 /* ChangeType.Removed */ :\n            s = s.add(t.doc.key);\n // do nothing\n                }\n        return new tu(t, e.fromCache, n, s);\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Firestore query engine.\n *\n * Firestore queries can be executed in three modes. The Query Engine determines\n * what mode to use based on what data is persisted. The mode only determines\n * the runtime complexity of the query - the result set is equivalent across all\n * implementations.\n *\n * The Query engine will use indexed-based execution if a user has configured\n * any index that can be used to execute query (via `setIndexConfiguration()`).\n * Otherwise, the engine will try to optimize the query by re-using a previously\n * persisted query result. If that is not possible, the query will be executed\n * via a full collection scan.\n *\n * Index-based execution is the default when available. The query engine\n * supports partial indexed execution and merges the result from the index\n * lookup with documents that have not yet been indexed. The index evaluation\n * matches the backend's format and as such, the SDK can use indexing for all\n * queries that the backend supports.\n *\n * If no index exists, the query engine tries to take advantage of the target\n * document mapping in the TargetCache. These mappings exists for all queries\n * that have been synced with the backend at least once and allow the query\n * engine to only read documents that previously matched a query plus any\n * documents that were edited after the query was last listened to.\n *\n * There are some cases when this optimization is not guaranteed to produce\n * the same results as full collection scans. In these cases, query\n * processing falls back to full scans. These cases are:\n *\n * - Limit queries where a document that matched the query previously no longer\n *   matches the query.\n *\n * - Limit queries where a document edit may cause the document to sort below\n *   another document that is in the local cache.\n *\n * - Queries that have never been CURRENT or free of limbo documents.\n */ class eu {\n    constructor() {\n        this.qi = !1;\n    }\n    /** Sets the document view to query against. */    initialize(t, e) {\n        this.Ui = t, this.indexManager = e, this.qi = !0;\n    }\n    /** Returns all local documents matching the specified query. */    getDocumentsMatchingQuery(t, e, n, s) {\n        return this.Ki(t, e).next((i => i || this.Gi(t, e, s, n))).next((n => n || this.Qi(t, e)));\n    }\n    /**\n     * Performs an indexed query that evaluates the query based on a collection's\n     * persisted index values. Returns `null` if an index is not available.\n     */    Ki(t, e) {\n        if (Qn(e)) \n        // Queries that match all documents don't benefit from using\n        // key-based lookups. It is more efficient to scan all documents in a\n        // collection, rather than to perform individual lookups.\n        return Rt.resolve(null);\n        let n = Jn(e);\n        return this.indexManager.getIndexType(t, n).next((s => 0 /* IndexType.NONE */ === s ? null : (null !== e.limit && 1 /* IndexType.PARTIAL */ === s && (\n        // We cannot apply a limit for targets that are served using a partial\n        // index. If a partial index will be used to serve the target, the\n        // query may return a superset of documents that match the target\n        // (e.g. if the index doesn't include all the target's filters), or\n        // may return the correct set of documents in the wrong order (e.g. if\n        // the index doesn't include a segment for one of the orderBys).\n        // Therefore, a limit should not be applied in such cases.\n        e = Xn(e, null, \"F\" /* LimitType.First */), n = Jn(e)), this.indexManager.getDocumentsMatchingTarget(t, n).next((s => {\n            const i = gs(...s);\n            return this.Ui.getDocuments(t, i).next((s => this.indexManager.getMinOffset(t, n).next((n => {\n                const r = this.ji(e, s);\n                return this.zi(e, r, i, n.readTime) ? this.Ki(t, Xn(e, null, \"F\" /* LimitType.First */)) : this.Wi(t, r, e, n);\n            }))));\n        })))));\n    }\n    /**\n     * Performs a query based on the target's persisted query mapping. Returns\n     * `null` if the mapping is not available or cannot be used.\n     */    Gi(t, e, n, s) {\n        return Qn(e) || s.isEqual(rt.min()) ? this.Qi(t, e) : this.Ui.getDocuments(t, n).next((i => {\n            const r = this.ji(e, i);\n            return this.zi(e, r, n, s) ? this.Qi(t, e) : (C() <= LogLevel.DEBUG && N(\"QueryEngine\", \"Re-using previous result from %s to execute query: %s\", s.toString(), es(e)), \n            this.Wi(t, r, e, yt(s, -1)));\n        }));\n        // Queries that have never seen a snapshot without limbo free documents\n        // should also be run as a full collection scan.\n        }\n    /** Applies the query filter and sorting to the provided documents.  */    ji(t, e) {\n        // Sort the documents and re-apply the query filter since previously\n        // matching documents do not necessarily still match the query.\n        let n = new Ee(is(t));\n        return e.forEach(((e, s) => {\n            ns(t, s) && (n = n.add(s));\n        })), n;\n    }\n    /**\n     * Determines if a limit query needs to be refilled from cache, making it\n     * ineligible for index-free execution.\n     *\n     * @param query - The query.\n     * @param sortedPreviousResults - The documents that matched the query when it\n     * was last synchronized, sorted by the query's comparator.\n     * @param remoteKeys - The document keys that matched the query at the last\n     * snapshot.\n     * @param limboFreeSnapshotVersion - The version of the snapshot when the\n     * query was last synchronized.\n     */    zi(t, e, n, s) {\n        if (null === t.limit) \n        // Queries without limits do not need to be refilled.\n        return !1;\n        if (n.size !== e.size) \n        // The query needs to be refilled if a previously matching document no\n        // longer matches.\n        return !0;\n        // Limit queries are not eligible for index-free query execution if there is\n        // a potential that an older document from cache now sorts before a document\n        // that was previously part of the limit. This, however, can only happen if\n        // the document at the edge of the limit goes out of limit.\n        // If a document that is not the limit boundary sorts differently,\n        // the boundary of the limit itself did not change and documents from cache\n        // will continue to be \"rejected\" by this boundary. Therefore, we can ignore\n        // any modifications that don't affect the last document.\n                const i = \"F\" /* LimitType.First */ === t.limitType ? e.last() : e.first();\n        return !!i && (i.hasPendingWrites || i.version.compareTo(s) > 0);\n    }\n    Qi(t, e) {\n        return C() <= LogLevel.DEBUG && N(\"QueryEngine\", \"Using full collection scan to execute query:\", es(e)), \n        this.Ui.getDocumentsMatchingQuery(t, e, It.min());\n    }\n    /**\n     * Combines the results from an indexed execution with the remaining documents\n     * that have not yet been indexed.\n     */    Wi(t, e, n, s) {\n        // Retrieve all results for documents that were updated since the offset.\n        return this.Ui.getDocumentsMatchingQuery(t, n, s).next((t => (\n        // Merge with existing results\n        e.forEach((e => {\n            t = t.insert(e.key, e);\n        })), t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Implements `LocalStore` interface.\n *\n * Note: some field defined in this class might have public access level, but\n * the class is not exported so they are only accessible from this module.\n * This is useful to implement optional features (like bundles) in free\n * functions, such that they are tree-shakeable.\n */\nclass nu {\n    constructor(\n    /** Manages our in-memory or durable persistence. */\n    t, e, n, s) {\n        this.persistence = t, this.Hi = e, this.serializer = s, \n        /**\n         * Maps a targetID to data about its target.\n         *\n         * PORTING NOTE: We are using an immutable data structure on Web to make re-runs\n         * of `applyRemoteEvent()` idempotent.\n         */\n        this.Ji = new pe(et), \n        /** Maps a target to its targetID. */\n        // TODO(wuandy): Evaluate if TargetId can be part of Target.\n        this.Yi = new os((t => $n(t)), On), \n        /**\n         * A per collection group index of the last read time processed by\n         * `getNewDocumentChanges()`.\n         *\n         * PORTING NOTE: This is only used for multi-tab synchronization.\n         */\n        this.Xi = new Map, this.Zi = t.getRemoteDocumentCache(), this.Bs = t.getTargetCache(), \n        this.qs = t.getBundleCache(), this.tr(n);\n    }\n    tr(t) {\n        // TODO(indexing): Add spec tests that test these components change after a\n        // user change\n        this.documentOverlayCache = this.persistence.getDocumentOverlayCache(t), this.indexManager = this.persistence.getIndexManager(t), \n        this.mutationQueue = this.persistence.getMutationQueue(t, this.indexManager), this.localDocuments = new ko(this.Zi, this.mutationQueue, this.documentOverlayCache, this.indexManager), \n        this.Zi.setIndexManager(this.indexManager), this.Hi.initialize(this.localDocuments, this.indexManager);\n    }\n    collectGarbage(t) {\n        return this.persistence.runTransaction(\"Collect garbage\", \"readwrite-primary\", (e => t.collect(e, this.Ji)));\n    }\n}\n\nfunction su(\n/** Manages our in-memory or durable persistence. */\nt, e, n, s) {\n    return new nu(t, e, n, s);\n}\n\n/**\n * Tells the LocalStore that the currently authenticated user has changed.\n *\n * In response the local store switches the mutation queue to the new user and\n * returns any resulting document changes.\n */\n// PORTING NOTE: Android and iOS only return the documents affected by the\n// change.\nasync function iu(t, e) {\n    const n = L(t);\n    return await n.persistence.runTransaction(\"Handle user change\", \"readonly\", (t => {\n        // Swap out the mutation queue, grabbing the pending mutation batches\n        // before and after.\n        let s;\n        return n.mutationQueue.getAllMutationBatches(t).next((i => (s = i, n.tr(e), n.mutationQueue.getAllMutationBatches(t)))).next((e => {\n            const i = [], r = [];\n            // Union the old/new changed keys.\n            let o = gs();\n            for (const t of s) {\n                i.push(t.batchId);\n                for (const e of t.mutations) o = o.add(e.key);\n            }\n            for (const t of e) {\n                r.push(t.batchId);\n                for (const e of t.mutations) o = o.add(e.key);\n            }\n            // Return the set of all (potentially) changed documents and the list\n            // of mutation batch IDs that were affected by change.\n                        return n.localDocuments.getDocuments(t, o).next((t => ({\n                er: t,\n                removedBatchIds: i,\n                addedBatchIds: r\n            })));\n        }));\n    }));\n}\n\n/* Accepts locally generated Mutations and commit them to storage. */\n/**\n * Acknowledges the given batch.\n *\n * On the happy path when a batch is acknowledged, the local store will\n *\n *  + remove the batch from the mutation queue;\n *  + apply the changes to the remote document cache;\n *  + recalculate the latency compensated view implied by those changes (there\n *    may be mutations in the queue that affect the documents but haven't been\n *    acknowledged yet); and\n *  + give the changed documents back the sync engine\n *\n * @returns The resulting (modified) documents.\n */\nfunction ru(t, e) {\n    const n = L(t);\n    return n.persistence.runTransaction(\"Acknowledge batch\", \"readwrite-primary\", (t => {\n        const s = e.batch.keys(), i = n.Zi.newChangeBuffer({\n            trackRemovals: !0\n        });\n        return function(t, e, n, s) {\n            const i = n.batch, r = i.keys();\n            let o = Rt.resolve();\n            return r.forEach((t => {\n                o = o.next((() => s.getEntry(e, t))).next((e => {\n                    const r = n.docVersions.get(t);\n                    F(null !== r), e.version.compareTo(r) < 0 && (i.applyToRemoteDocument(e, n), e.isValidDocument() && (\n                    // We use the commitVersion as the readTime rather than the\n                    // document's updateTime since the updateTime is not advanced\n                    // for updates that do not modify the underlying document.\n                    e.setReadTime(n.commitVersion), s.addEntry(e)));\n                }));\n            })), o.next((() => t.mutationQueue.removeMutationBatch(e, i)));\n        }\n        /** Returns the local view of the documents affected by a mutation batch. */\n        // PORTING NOTE: Multi-Tab only.\n        (n, t, e, i).next((() => i.apply(t))).next((() => n.mutationQueue.performConsistencyCheck(t))).next((() => n.documentOverlayCache.removeOverlaysForBatchId(t, s, e.batch.batchId))).next((() => n.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(t, function(t) {\n            let e = gs();\n            for (let n = 0; n < t.mutationResults.length; ++n) {\n                t.mutationResults[n].transformResults.length > 0 && (e = e.add(t.batch.mutations[n].key));\n            }\n            return e;\n        }\n        /**\n * Removes mutations from the MutationQueue for the specified batch;\n * LocalDocuments will be recalculated.\n *\n * @returns The resulting modified documents.\n */ (e)))).next((() => n.localDocuments.getDocuments(t, s)));\n    }));\n}\n\n/**\n * Returns the last consistent snapshot processed (used by the RemoteStore to\n * determine whether to buffer incoming snapshots from the backend).\n */\nfunction ou(t) {\n    const e = L(t);\n    return e.persistence.runTransaction(\"Get last remote snapshot version\", \"readonly\", (t => e.Bs.getLastRemoteSnapshotVersion(t)));\n}\n\n/**\n * Updates the \"ground-state\" (remote) documents. We assume that the remote\n * event reflects any write batches that have been acknowledged or rejected\n * (i.e. we do not re-apply local mutations to updates from this event).\n *\n * LocalDocuments are re-calculated if there are remaining mutations in the\n * queue.\n */ function uu(t, e) {\n    const n = L(t), s = e.snapshotVersion;\n    let i = n.Ji;\n    return n.persistence.runTransaction(\"Apply remote event\", \"readwrite-primary\", (t => {\n        const r = n.Zi.newChangeBuffer({\n            trackRemovals: !0\n        });\n        // Reset newTargetDataByTargetMap in case this transaction gets re-run.\n                i = n.Ji;\n        const o = [];\n        e.targetChanges.forEach(((r, u) => {\n            const c = i.get(u);\n            if (!c) return;\n            // Only update the remote keys if the target is still active. This\n            // ensures that we can persist the updated target data along with\n            // the updated assignment.\n                        o.push(n.Bs.removeMatchingKeys(t, r.removedDocuments, u).next((() => n.Bs.addMatchingKeys(t, r.addedDocuments, u))));\n            let a = c.withSequenceNumber(t.currentSequenceNumber);\n            null !== e.targetMismatches.get(u) ? a = a.withResumeToken(Ve.EMPTY_BYTE_STRING, rt.min()).withLastLimboFreeSnapshotVersion(rt.min()) : r.resumeToken.approximateByteSize() > 0 && (a = a.withResumeToken(r.resumeToken, s)), \n            i = i.insert(u, a), \n            // Update the target data if there are target changes (or if\n            // sufficient time has passed since the last update).\n            /**\n * Returns true if the newTargetData should be persisted during an update of\n * an active target. TargetData should always be persisted when a target is\n * being released and should not call this function.\n *\n * While the target is active, TargetData updates can be omitted when nothing\n * about the target has changed except metadata like the resume token or\n * snapshot version. Occasionally it's worth the extra write to prevent these\n * values from getting too stale after a crash, but this doesn't have to be\n * too frequent.\n */\n            function(t, e, n) {\n                // Always persist target data if we don't already have a resume token.\n                if (0 === t.resumeToken.approximateByteSize()) return !0;\n                // Don't allow resume token changes to be buffered indefinitely. This\n                // allows us to be reasonably up-to-date after a crash and avoids needing\n                // to loop over all active queries on shutdown. Especially in the browser\n                // we may not get time to do anything interesting while the current tab is\n                // closing.\n                                if (e.snapshotVersion.toMicroseconds() - t.snapshotVersion.toMicroseconds() >= 3e8) return !0;\n                // Otherwise if the only thing that has changed about a target is its resume\n                // token it's not worth persisting. Note that the RemoteStore keeps an\n                // in-memory view of the currently active targets which includes the current\n                // resume token, so stream failure or user changes will still use an\n                // up-to-date resume token regardless of what we do here.\n                                return n.addedDocuments.size + n.modifiedDocuments.size + n.removedDocuments.size > 0;\n            }\n            /**\n * Notifies local store of the changed views to locally pin documents.\n */ (c, a, r) && o.push(n.Bs.updateTargetData(t, a));\n        }));\n        let u = cs(), c = gs();\n        // HACK: The only reason we allow a null snapshot version is so that we\n        // can synthesize remote events when we get permission denied errors while\n        // trying to resolve the state of a locally cached document that is in\n        // limbo.\n        if (e.documentUpdates.forEach((s => {\n            e.resolvedLimboDocuments.has(s) && o.push(n.persistence.referenceDelegate.updateLimboDocument(t, s));\n        })), \n        // Each loop iteration only affects its \"own\" doc, so it's safe to get all\n        // the remote documents in advance in a single call.\n        o.push(cu(t, r, e.documentUpdates).next((t => {\n            u = t.nr, c = t.sr;\n        }))), !s.isEqual(rt.min())) {\n            const e = n.Bs.getLastRemoteSnapshotVersion(t).next((e => n.Bs.setTargetsMetadata(t, t.currentSequenceNumber, s)));\n            o.push(e);\n        }\n        return Rt.waitFor(o).next((() => r.apply(t))).next((() => n.localDocuments.getLocalViewOfDocuments(t, u, c))).next((() => u));\n    })).then((t => (n.Ji = i, t)));\n}\n\n/**\n * Populates document change buffer with documents from backend or a bundle.\n * Returns the document changes resulting from applying those documents, and\n * also a set of documents whose existence state are changed as a result.\n *\n * @param txn - Transaction to use to read existing documents from storage.\n * @param documentBuffer - Document buffer to collect the resulted changes to be\n *        applied to storage.\n * @param documents - Documents to be applied.\n */ function cu(t, e, n) {\n    let s = gs(), i = gs();\n    return n.forEach((t => s = s.add(t))), e.getEntries(t, s).next((t => {\n        let s = cs();\n        return n.forEach(((n, r) => {\n            const o = t.get(n);\n            // Check if see if there is a existence state change for this document.\n                        r.isFoundDocument() !== o.isFoundDocument() && (i = i.add(n)), \n            // Note: The order of the steps below is important, since we want\n            // to ensure that rejected limbo resolutions (which fabricate\n            // NoDocuments with SnapshotVersion.min()) never add documents to\n            // cache.\n            r.isNoDocument() && r.version.isEqual(rt.min()) ? (\n            // NoDocuments with SnapshotVersion.min() are used in manufactured\n            // events. We remove these documents from cache since we lost\n            // access.\n            e.removeEntry(n, r.readTime), s = s.insert(n, r)) : !o.isValidDocument() || r.version.compareTo(o.version) > 0 || 0 === r.version.compareTo(o.version) && o.hasPendingWrites ? (e.addEntry(r), \n            s = s.insert(n, r)) : N(\"LocalStore\", \"Ignoring outdated watch update for \", n, \". Current version:\", o.version, \" Watch version:\", r.version);\n        })), {\n            nr: s,\n            sr: i\n        };\n    }));\n}\n\n/**\n * Gets the mutation batch after the passed in batchId in the mutation queue\n * or null if empty.\n * @param afterBatchId - If provided, the batch to search after.\n * @returns The next mutation or null if there wasn't one.\n */\nfunction au(t, e) {\n    const n = L(t);\n    return n.persistence.runTransaction(\"Get next mutation batch\", \"readonly\", (t => (void 0 === e && (e = -1), \n    n.mutationQueue.getNextMutationBatchAfterBatchId(t, e))));\n}\n\n/**\n * Reads the current value of a Document with a given key or null if not\n * found - used for testing.\n */\n/**\n * Assigns the given target an internal ID so that its results can be pinned so\n * they don't get GC'd. A target must be allocated in the local store before\n * the store can be used to manage its view.\n *\n * Allocating an already allocated `Target` will return the existing `TargetData`\n * for that `Target`.\n */\nfunction hu(t, e) {\n    const n = L(t);\n    return n.persistence.runTransaction(\"Allocate target\", \"readwrite\", (t => {\n        let s;\n        return n.Bs.getTargetData(t, e).next((i => i ? (\n        // This target has been listened to previously, so reuse the\n        // previous targetID.\n        // TODO(mcg): freshen last accessed date?\n        s = i, Rt.resolve(s)) : n.Bs.allocateTargetId(t).next((i => (s = new cr(e, i, \"TargetPurposeListen\" /* TargetPurpose.Listen */ , t.currentSequenceNumber), \n        n.Bs.addTargetData(t, s).next((() => s)))))));\n    })).then((t => {\n        // If Multi-Tab is enabled, the existing target data may be newer than\n        // the in-memory data\n        const s = n.Ji.get(t.targetId);\n        return (null === s || t.snapshotVersion.compareTo(s.snapshotVersion) > 0) && (n.Ji = n.Ji.insert(t.targetId, t), \n        n.Yi.set(e, t.targetId)), t;\n    }));\n}\n\n/**\n * Returns the TargetData as seen by the LocalStore, including updates that may\n * have not yet been persisted to the TargetCache.\n */\n// Visible for testing.\n/**\n * Unpins all the documents associated with the given target. If\n * `keepPersistedTargetData` is set to false and Eager GC enabled, the method\n * directly removes the associated target data from the target cache.\n *\n * Releasing a non-existing `Target` is a no-op.\n */\n// PORTING NOTE: `keepPersistedTargetData` is multi-tab only.\nasync function lu(t, e, n) {\n    const s = L(t), i = s.Ji.get(e), r = n ? \"readwrite\" : \"readwrite-primary\";\n    try {\n        n || await s.persistence.runTransaction(\"Release target\", r, (t => s.persistence.referenceDelegate.removeTarget(t, i)));\n    } catch (t) {\n        if (!Dt(t)) throw t;\n        // All `releaseTarget` does is record the final metadata state for the\n        // target, but we've been recording this periodically during target\n        // activity. If we lose this write this could cause a very slight\n        // difference in the order of target deletion during GC, but we\n        // don't define exact LRU semantics so this is acceptable.\n        N(\"LocalStore\", `Failed to update sequence numbers for target ${e}: ${t}`);\n    }\n    s.Ji = s.Ji.remove(e), s.Yi.delete(i.target);\n}\n\n/**\n * Runs the specified query against the local store and returns the results,\n * potentially taking advantage of query data from previous executions (such\n * as the set of remote keys).\n *\n * @param usePreviousResults - Whether results from previous executions can\n * be used to optimize this query execution.\n */ function fu(t, e, n) {\n    const s = L(t);\n    let i = rt.min(), r = gs();\n    return s.persistence.runTransaction(\"Execute query\", \"readonly\", (t => function(t, e, n) {\n        const s = L(t), i = s.Yi.get(n);\n        return void 0 !== i ? Rt.resolve(s.Ji.get(i)) : s.Bs.getTargetData(e, n);\n    }(s, t, Jn(e)).next((e => {\n        if (e) return i = e.lastLimboFreeSnapshotVersion, s.Bs.getMatchingKeysForTargetId(t, e.targetId).next((t => {\n            r = t;\n        }));\n    })).next((() => s.Hi.getDocumentsMatchingQuery(t, e, n ? i : rt.min(), n ? r : gs()))).next((t => (_u(s, ss(e), t), \n    {\n        documents: t,\n        ir: r\n    })))));\n}\n\n// PORTING NOTE: Multi-Tab only.\nfunction du(t, e) {\n    const n = L(t), s = L(n.Bs), i = n.Ji.get(e);\n    return i ? Promise.resolve(i.target) : n.persistence.runTransaction(\"Get target data\", \"readonly\", (t => s.le(t, e).next((t => t ? t.target : null))));\n}\n\n/**\n * Returns the set of documents that have been updated since the last call.\n * If this is the first call, returns the set of changes since client\n * initialization. Further invocations will return document that have changed\n * since the prior call.\n */\n// PORTING NOTE: Multi-Tab only.\nfunction wu(t, e) {\n    const n = L(t), s = n.Xi.get(e) || rt.min();\n    // Get the current maximum read time for the collection. This should always\n    // exist, but to reduce the chance for regressions we default to\n    // SnapshotVersion.Min()\n    // TODO(indexing): Consider removing the default value.\n        return n.persistence.runTransaction(\"Get new document changes\", \"readonly\", (t => n.Zi.getAllFromCollectionGroup(t, e, yt(s, -1), \n    /* limit= */ Number.MAX_SAFE_INTEGER))).then((t => (_u(n, e, t), t)));\n}\n\n/** Sets the collection group's maximum read time from the given documents. */\n// PORTING NOTE: Multi-Tab only.\nfunction _u(t, e, n) {\n    let s = t.Xi.get(e) || rt.min();\n    n.forEach(((t, e) => {\n        e.readTime.compareTo(s) > 0 && (s = e.readTime);\n    })), t.Xi.set(e, s);\n}\n\n/**\n * Creates a new target using the given bundle name, which will be used to\n * hold the keys of all documents from the bundle in query-document mappings.\n * This ensures that the loaded documents do not get garbage collected\n * right away.\n */\n/**\n * Applies the documents from a bundle to the \"ground-state\" (remote)\n * documents.\n *\n * LocalDocuments are re-calculated if there are remaining mutations in the\n * queue.\n */\nasync function mu(t, e, n, s) {\n    const i = L(t);\n    let r = gs(), o = cs();\n    for (const t of n) {\n        const n = e.rr(t.metadata.name);\n        t.document && (r = r.add(n));\n        const s = e.ur(t);\n        s.setReadTime(e.cr(t.metadata.readTime)), o = o.insert(n, s);\n    }\n    const u = i.Zi.newChangeBuffer({\n        trackRemovals: !0\n    }), c = await hu(i, function(t) {\n        // It is OK that the path used for the query is not valid, because this will\n        // not be read and queried.\n        return Jn(Gn(ut.fromString(`__bundle__/docs/${t}`)));\n    }(s));\n    // Allocates a target to hold all document keys from the bundle, such that\n    // they will not get garbage collected right away.\n        return i.persistence.runTransaction(\"Apply bundle documents\", \"readwrite\", (t => cu(t, u, o).next((e => (u.apply(t), \n    e))).next((e => i.Bs.removeMatchingKeysForTargetId(t, c.targetId).next((() => i.Bs.addMatchingKeys(t, r, c.targetId))).next((() => i.localDocuments.getLocalViewOfDocuments(t, e.nr, e.sr))).next((() => e.nr))))));\n}\n\n/**\n * Returns a promise of a boolean to indicate if the given bundle has already\n * been loaded and the create time is newer than the current loading bundle.\n */\n/**\n * Saves the given `NamedQuery` to local persistence.\n */\nasync function gu(t, e, n = gs()) {\n    // Allocate a target for the named query such that it can be resumed\n    // from associated read time if users use it to listen.\n    // NOTE: this also means if no corresponding target exists, the new target\n    // will remain active and will not get collected, unless users happen to\n    // unlisten the query somehow.\n    const s = await hu(t, Jn(yr(e.bundledQuery))), i = L(t);\n    return i.persistence.runTransaction(\"Save named query\", \"readwrite\", (t => {\n        const r = Ni(e.readTime);\n        // Simply save the query itself if it is older than what the SDK already\n        // has.\n                if (s.snapshotVersion.compareTo(r) >= 0) return i.qs.saveNamedQuery(t, e);\n        // Update existing target data because the query from the bundle is newer.\n                const o = s.withResumeToken(Ve.EMPTY_BYTE_STRING, r);\n        return i.Ji = i.Ji.insert(o.targetId, o), i.Bs.updateTargetData(t, o).next((() => i.Bs.removeMatchingKeysForTargetId(t, s.targetId))).next((() => i.Bs.addMatchingKeys(t, n, s.targetId))).next((() => i.qs.saveNamedQuery(t, e)));\n    }));\n}\n\n/** Assembles the key for a client state in WebStorage */\nfunction yu(t, e) {\n    return `firestore_clients_${t}_${e}`;\n}\n\n// The format of the WebStorage key that stores the mutation state is:\n//     firestore_mutations_<persistence_prefix>_<batch_id>\n//     (for unauthenticated users)\n// or: firestore_mutations_<persistence_prefix>_<batch_id>_<user_uid>\n\n// 'user_uid' is last to avoid needing to escape '_' characters that it might\n// contain.\n/** Assembles the key for a mutation batch in WebStorage */\nfunction pu(t, e, n) {\n    let s = `firestore_mutations_${t}_${n}`;\n    return e.isAuthenticated() && (s += `_${e.uid}`), s;\n}\n\n// The format of the WebStorage key that stores a query target's metadata is:\n//     firestore_targets_<persistence_prefix>_<target_id>\n/** Assembles the key for a query state in WebStorage */\nfunction Iu(t, e) {\n    return `firestore_targets_${t}_${e}`;\n}\n\n// The WebStorage prefix that stores the primary tab's online state. The\n// format of the key is:\n//     firestore_online_state_<persistence_prefix>\n/**\n * Holds the state of a mutation batch, including its user ID, batch ID and\n * whether the batch is 'pending', 'acknowledged' or 'rejected'.\n */\n// Visible for testing\nclass Tu {\n    constructor(t, e, n, s) {\n        this.user = t, this.batchId = e, this.state = n, this.error = s;\n    }\n    /**\n     * Parses a MutationMetadata from its JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */    static ar(t, e, n) {\n        const s = JSON.parse(n);\n        let i, r = \"object\" == typeof s && -1 !== [ \"pending\", \"acknowledged\", \"rejected\" ].indexOf(s.state) && (void 0 === s.error || \"object\" == typeof s.error);\n        return r && s.error && (r = \"string\" == typeof s.error.message && \"string\" == typeof s.error.code, \n        r && (i = new U(s.error.code, s.error.message))), r ? new Tu(t, e, s.state, i) : (k(\"SharedClientState\", `Failed to parse mutation state for ID '${e}': ${n}`), \n        null);\n    }\n    hr() {\n        const t = {\n            state: this.state,\n            updateTimeMs: Date.now()\n        };\n        return this.error && (t.error = {\n            code: this.error.code,\n            message: this.error.message\n        }), JSON.stringify(t);\n    }\n}\n\n/**\n * Holds the state of a query target, including its target ID and whether the\n * target is 'not-current', 'current' or 'rejected'.\n */\n// Visible for testing\nclass Eu {\n    constructor(t, e, n) {\n        this.targetId = t, this.state = e, this.error = n;\n    }\n    /**\n     * Parses a QueryTargetMetadata from its JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */    static ar(t, e) {\n        const n = JSON.parse(e);\n        let s, i = \"object\" == typeof n && -1 !== [ \"not-current\", \"current\", \"rejected\" ].indexOf(n.state) && (void 0 === n.error || \"object\" == typeof n.error);\n        return i && n.error && (i = \"string\" == typeof n.error.message && \"string\" == typeof n.error.code, \n        i && (s = new U(n.error.code, n.error.message))), i ? new Eu(t, n.state, s) : (k(\"SharedClientState\", `Failed to parse target state for ID '${t}': ${e}`), \n        null);\n    }\n    hr() {\n        const t = {\n            state: this.state,\n            updateTimeMs: Date.now()\n        };\n        return this.error && (t.error = {\n            code: this.error.code,\n            message: this.error.message\n        }), JSON.stringify(t);\n    }\n}\n\n/**\n * This class represents the immutable ClientState for a client read from\n * WebStorage, containing the list of active query targets.\n */ class Au {\n    constructor(t, e) {\n        this.clientId = t, this.activeTargetIds = e;\n    }\n    /**\n     * Parses a RemoteClientState from the JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */    static ar(t, e) {\n        const n = JSON.parse(e);\n        let s = \"object\" == typeof n && n.activeTargetIds instanceof Array, i = ps();\n        for (let t = 0; s && t < n.activeTargetIds.length; ++t) s = Lt(n.activeTargetIds[t]), \n        i = i.add(n.activeTargetIds[t]);\n        return s ? new Au(t, i) : (k(\"SharedClientState\", `Failed to parse client data for instance '${t}': ${e}`), \n        null);\n    }\n}\n\n/**\n * This class represents the online state for all clients participating in\n * multi-tab. The online state is only written to by the primary client, and\n * used in secondary clients to update their query views.\n */ class vu {\n    constructor(t, e) {\n        this.clientId = t, this.onlineState = e;\n    }\n    /**\n     * Parses a SharedOnlineState from its JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */    static ar(t) {\n        const e = JSON.parse(t);\n        return \"object\" == typeof e && -1 !== [ \"Unknown\", \"Online\", \"Offline\" ].indexOf(e.onlineState) && \"string\" == typeof e.clientId ? new vu(e.clientId, e.onlineState) : (k(\"SharedClientState\", `Failed to parse online state: ${t}`), \n        null);\n    }\n}\n\n/**\n * Metadata state of the local client. Unlike `RemoteClientState`, this class is\n * mutable and keeps track of all pending mutations, which allows us to\n * update the range of pending mutation batch IDs as new mutations are added or\n * removed.\n *\n * The data in `LocalClientState` is not read from WebStorage and instead\n * updated via its instance methods. The updated state can be serialized via\n * `toWebStorageJSON()`.\n */\n// Visible for testing.\nclass Ru {\n    constructor() {\n        this.activeTargetIds = ps();\n    }\n    lr(t) {\n        this.activeTargetIds = this.activeTargetIds.add(t);\n    }\n    dr(t) {\n        this.activeTargetIds = this.activeTargetIds.delete(t);\n    }\n    /**\n     * Converts this entry into a JSON-encoded format we can use for WebStorage.\n     * Does not encode `clientId` as it is part of the key in WebStorage.\n     */    hr() {\n        const t = {\n            activeTargetIds: this.activeTargetIds.toArray(),\n            updateTimeMs: Date.now()\n        };\n        return JSON.stringify(t);\n    }\n}\n\n/**\n * `WebStorageSharedClientState` uses WebStorage (window.localStorage) as the\n * backing store for the SharedClientState. It keeps track of all active\n * clients and supports modifications of the local client's data.\n */ class Pu {\n    constructor(t, e, n, s, i) {\n        this.window = t, this.ii = e, this.persistenceKey = n, this.wr = s, this.syncEngine = null, \n        this.onlineStateHandler = null, this.sequenceNumberHandler = null, this._r = this.mr.bind(this), \n        this.gr = new pe(et), this.started = !1, \n        /**\n         * Captures WebStorage events that occur before `start()` is called. These\n         * events are replayed once `WebStorageSharedClientState` is started.\n         */\n        this.yr = [];\n        // Escape the special characters mentioned here:\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n        const r = n.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n        this.storage = this.window.localStorage, this.currentUser = i, this.pr = yu(this.persistenceKey, this.wr), \n        this.Ir = \n        /** Assembles the key for the current sequence number. */\n        function(t) {\n            return `firestore_sequence_number_${t}`;\n        }\n        /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (this.persistenceKey), this.gr = this.gr.insert(this.wr, new Ru), this.Tr = new RegExp(`^firestore_clients_${r}_([^_]*)$`), \n        this.Er = new RegExp(`^firestore_mutations_${r}_(\\\\d+)(?:_(.*))?$`), this.Ar = new RegExp(`^firestore_targets_${r}_(\\\\d+)$`), \n        this.vr = \n        /** Assembles the key for the online state of the primary tab. */\n        function(t) {\n            return `firestore_online_state_${t}`;\n        }\n        // The WebStorage prefix that plays as a event to indicate the remote documents\n        // might have changed due to some secondary tabs loading a bundle.\n        // format of the key is:\n        //     firestore_bundle_loaded_v2_<persistenceKey>\n        // The version ending with \"v2\" stores the list of modified collection groups.\n        (this.persistenceKey), this.Rr = function(t) {\n            return `firestore_bundle_loaded_v2_${t}`;\n        }\n        // The WebStorage key prefix for the key that stores the last sequence number allocated. The key\n        // looks like 'firestore_sequence_number_<persistence_prefix>'.\n        (this.persistenceKey), \n        // Rather than adding the storage observer during start(), we add the\n        // storage observer during initialization. This ensures that we collect\n        // events before other components populate their initial state (during their\n        // respective start() calls). Otherwise, we might for example miss a\n        // mutation that is added after LocalStore's start() processed the existing\n        // mutations but before we observe WebStorage events.\n        this.window.addEventListener(\"storage\", this._r);\n    }\n    /** Returns 'true' if WebStorage is available in the current environment. */    static D(t) {\n        return !(!t || !t.localStorage);\n    }\n    async start() {\n        // Retrieve the list of existing clients to backfill the data in\n        // SharedClientState.\n        const t = await this.syncEngine.$i();\n        for (const e of t) {\n            if (e === this.wr) continue;\n            const t = this.getItem(yu(this.persistenceKey, e));\n            if (t) {\n                const n = Au.ar(e, t);\n                n && (this.gr = this.gr.insert(n.clientId, n));\n            }\n        }\n        this.Pr();\n        // Check if there is an existing online state and call the callback handler\n        // if applicable.\n        const e = this.storage.getItem(this.vr);\n        if (e) {\n            const t = this.br(e);\n            t && this.Vr(t);\n        }\n        for (const t of this.yr) this.mr(t);\n        this.yr = [], \n        // Register a window unload hook to remove the client metadata entry from\n        // WebStorage even if `shutdown()` was not called.\n        this.window.addEventListener(\"pagehide\", (() => this.shutdown())), this.started = !0;\n    }\n    writeSequenceNumber(t) {\n        this.setItem(this.Ir, JSON.stringify(t));\n    }\n    getAllActiveQueryTargets() {\n        return this.Sr(this.gr);\n    }\n    isActiveQueryTarget(t) {\n        let e = !1;\n        return this.gr.forEach(((n, s) => {\n            s.activeTargetIds.has(t) && (e = !0);\n        })), e;\n    }\n    addPendingMutation(t) {\n        this.Dr(t, \"pending\");\n    }\n    updateMutationState(t, e, n) {\n        this.Dr(t, e, n), \n        // Once a final mutation result is observed by other clients, they no longer\n        // access the mutation's metadata entry. Since WebStorage replays events\n        // in order, it is safe to delete the entry right after updating it.\n        this.Cr(t);\n    }\n    addLocalQueryTarget(t) {\n        let e = \"not-current\";\n        // Lookup an existing query state if the target ID was already registered\n        // by another tab\n                if (this.isActiveQueryTarget(t)) {\n            const n = this.storage.getItem(Iu(this.persistenceKey, t));\n            if (n) {\n                const s = Eu.ar(t, n);\n                s && (e = s.state);\n            }\n        }\n        return this.Nr.lr(t), this.Pr(), e;\n    }\n    removeLocalQueryTarget(t) {\n        this.Nr.dr(t), this.Pr();\n    }\n    isLocalQueryTarget(t) {\n        return this.Nr.activeTargetIds.has(t);\n    }\n    clearQueryState(t) {\n        this.removeItem(Iu(this.persistenceKey, t));\n    }\n    updateQueryState(t, e, n) {\n        this.kr(t, e, n);\n    }\n    handleUserChange(t, e, n) {\n        e.forEach((t => {\n            this.Cr(t);\n        })), this.currentUser = t, n.forEach((t => {\n            this.addPendingMutation(t);\n        }));\n    }\n    setOnlineState(t) {\n        this.Mr(t);\n    }\n    notifyBundleLoaded(t) {\n        this.$r(t);\n    }\n    shutdown() {\n        this.started && (this.window.removeEventListener(\"storage\", this._r), this.removeItem(this.pr), \n        this.started = !1);\n    }\n    getItem(t) {\n        const e = this.storage.getItem(t);\n        return N(\"SharedClientState\", \"READ\", t, e), e;\n    }\n    setItem(t, e) {\n        N(\"SharedClientState\", \"SET\", t, e), this.storage.setItem(t, e);\n    }\n    removeItem(t) {\n        N(\"SharedClientState\", \"REMOVE\", t), this.storage.removeItem(t);\n    }\n    mr(t) {\n        // Note: The function is typed to take Event to be interface-compatible with\n        // `Window.addEventListener`.\n        const e = t;\n        if (e.storageArea === this.storage) {\n            if (N(\"SharedClientState\", \"EVENT\", e.key, e.newValue), e.key === this.pr) return void k(\"Received WebStorage notification for local change. Another client might have garbage-collected our state\");\n            this.ii.enqueueRetryable((async () => {\n                if (this.started) {\n                    if (null !== e.key) if (this.Tr.test(e.key)) {\n                        if (null == e.newValue) {\n                            const t = this.Or(e.key);\n                            return this.Fr(t, null);\n                        }\n                        {\n                            const t = this.Br(e.key, e.newValue);\n                            if (t) return this.Fr(t.clientId, t);\n                        }\n                    } else if (this.Er.test(e.key)) {\n                        if (null !== e.newValue) {\n                            const t = this.Lr(e.key, e.newValue);\n                            if (t) return this.qr(t);\n                        }\n                    } else if (this.Ar.test(e.key)) {\n                        if (null !== e.newValue) {\n                            const t = this.Ur(e.key, e.newValue);\n                            if (t) return this.Kr(t);\n                        }\n                    } else if (e.key === this.vr) {\n                        if (null !== e.newValue) {\n                            const t = this.br(e.newValue);\n                            if (t) return this.Vr(t);\n                        }\n                    } else if (e.key === this.Ir) {\n                        const t = function(t) {\n                            let e = Ot.ct;\n                            if (null != t) try {\n                                const n = JSON.parse(t);\n                                F(\"number\" == typeof n), e = n;\n                            } catch (t) {\n                                k(\"SharedClientState\", \"Failed to read sequence number from WebStorage\", t);\n                            }\n                            return e;\n                        }\n                        /**\n * `MemorySharedClientState` is a simple implementation of SharedClientState for\n * clients using memory persistence. The state in this class remains fully\n * isolated and no synchronization is performed.\n */ (e.newValue);\n                        t !== Ot.ct && this.sequenceNumberHandler(t);\n                    } else if (e.key === this.Rr) {\n                        const t = this.Gr(e.newValue);\n                        await Promise.all(t.map((t => this.syncEngine.Qr(t))));\n                    }\n                } else this.yr.push(e);\n            }));\n        }\n    }\n    get Nr() {\n        return this.gr.get(this.wr);\n    }\n    Pr() {\n        this.setItem(this.pr, this.Nr.hr());\n    }\n    Dr(t, e, n) {\n        const s = new Tu(this.currentUser, t, e, n), i = pu(this.persistenceKey, this.currentUser, t);\n        this.setItem(i, s.hr());\n    }\n    Cr(t) {\n        const e = pu(this.persistenceKey, this.currentUser, t);\n        this.removeItem(e);\n    }\n    Mr(t) {\n        const e = {\n            clientId: this.wr,\n            onlineState: t\n        };\n        this.storage.setItem(this.vr, JSON.stringify(e));\n    }\n    kr(t, e, n) {\n        const s = Iu(this.persistenceKey, t), i = new Eu(t, e, n);\n        this.setItem(s, i.hr());\n    }\n    $r(t) {\n        const e = JSON.stringify(Array.from(t));\n        this.setItem(this.Rr, e);\n    }\n    /**\n     * Parses a client state key in WebStorage. Returns null if the key does not\n     * match the expected key format.\n     */    Or(t) {\n        const e = this.Tr.exec(t);\n        return e ? e[1] : null;\n    }\n    /**\n     * Parses a client state in WebStorage. Returns 'null' if the value could not\n     * be parsed.\n     */    Br(t, e) {\n        const n = this.Or(t);\n        return Au.ar(n, e);\n    }\n    /**\n     * Parses a mutation batch state in WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */    Lr(t, e) {\n        const n = this.Er.exec(t), s = Number(n[1]), i = void 0 !== n[2] ? n[2] : null;\n        return Tu.ar(new V(i), s, e);\n    }\n    /**\n     * Parses a query target state from WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */    Ur(t, e) {\n        const n = this.Ar.exec(t), s = Number(n[1]);\n        return Eu.ar(s, e);\n    }\n    /**\n     * Parses an online state from WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */    br(t) {\n        return vu.ar(t);\n    }\n    Gr(t) {\n        return JSON.parse(t);\n    }\n    async qr(t) {\n        if (t.user.uid === this.currentUser.uid) return this.syncEngine.jr(t.batchId, t.state, t.error);\n        N(\"SharedClientState\", `Ignoring mutation for non-active user ${t.user.uid}`);\n    }\n    Kr(t) {\n        return this.syncEngine.zr(t.targetId, t.state, t.error);\n    }\n    Fr(t, e) {\n        const n = e ? this.gr.insert(t, e) : this.gr.remove(t), s = this.Sr(this.gr), i = this.Sr(n), r = [], o = [];\n        return i.forEach((t => {\n            s.has(t) || r.push(t);\n        })), s.forEach((t => {\n            i.has(t) || o.push(t);\n        })), this.syncEngine.Wr(r, o).then((() => {\n            this.gr = n;\n        }));\n    }\n    Vr(t) {\n        // We check whether the client that wrote this online state is still active\n        // by comparing its client ID to the list of clients kept active in\n        // IndexedDb. If a client does not update their IndexedDb client state\n        // within 5 seconds, it is considered inactive and we don't emit an online\n        // state event.\n        this.gr.get(t.clientId) && this.onlineStateHandler(t.onlineState);\n    }\n    Sr(t) {\n        let e = ps();\n        return t.forEach(((t, n) => {\n            e = e.unionWith(n.activeTargetIds);\n        })), e;\n    }\n}\n\nclass bu {\n    constructor() {\n        this.Hr = new Ru, this.Jr = {}, this.onlineStateHandler = null, this.sequenceNumberHandler = null;\n    }\n    addPendingMutation(t) {\n        // No op.\n    }\n    updateMutationState(t, e, n) {\n        // No op.\n    }\n    addLocalQueryTarget(t) {\n        return this.Hr.lr(t), this.Jr[t] || \"not-current\";\n    }\n    updateQueryState(t, e, n) {\n        this.Jr[t] = e;\n    }\n    removeLocalQueryTarget(t) {\n        this.Hr.dr(t);\n    }\n    isLocalQueryTarget(t) {\n        return this.Hr.activeTargetIds.has(t);\n    }\n    clearQueryState(t) {\n        delete this.Jr[t];\n    }\n    getAllActiveQueryTargets() {\n        return this.Hr.activeTargetIds;\n    }\n    isActiveQueryTarget(t) {\n        return this.Hr.activeTargetIds.has(t);\n    }\n    start() {\n        return this.Hr = new Ru, Promise.resolve();\n    }\n    handleUserChange(t, e, n) {\n        // No op.\n    }\n    setOnlineState(t) {\n        // No op.\n    }\n    shutdown() {}\n    writeSequenceNumber(t) {}\n    notifyBundleLoaded(t) {\n        // No op.\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Vu {\n    Yr(t) {\n        // No-op.\n    }\n    shutdown() {\n        // No-op.\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// References to `window` are guarded by BrowserConnectivityMonitor.isAvailable()\n/* eslint-disable no-restricted-globals */\n/**\n * Browser implementation of ConnectivityMonitor.\n */\nclass Su {\n    constructor() {\n        this.Xr = () => this.Zr(), this.eo = () => this.no(), this.so = [], this.io();\n    }\n    Yr(t) {\n        this.so.push(t);\n    }\n    shutdown() {\n        window.removeEventListener(\"online\", this.Xr), window.removeEventListener(\"offline\", this.eo);\n    }\n    io() {\n        window.addEventListener(\"online\", this.Xr), window.addEventListener(\"offline\", this.eo);\n    }\n    Zr() {\n        N(\"ConnectivityMonitor\", \"Network connectivity changed: AVAILABLE\");\n        for (const t of this.so) t(0 /* NetworkStatus.AVAILABLE */);\n    }\n    no() {\n        N(\"ConnectivityMonitor\", \"Network connectivity changed: UNAVAILABLE\");\n        for (const t of this.so) t(1 /* NetworkStatus.UNAVAILABLE */);\n    }\n    // TODO(chenbrian): Consider passing in window either into this component or\n    // here for testing via FakeWindow.\n    /** Checks that all used attributes of window are available. */\n    static D() {\n        return \"undefined\" != typeof window && void 0 !== window.addEventListener && void 0 !== window.removeEventListener;\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The value returned from the most recent invocation of\n * `generateUniqueDebugId()`, or null if it has never been invoked.\n */ let Du = null;\n\n/**\n * Generates and returns an initial value for `lastUniqueDebugId`.\n *\n * The returned value is randomly selected from a range of integers that are\n * represented as 8 hexadecimal digits. This means that (within reason) any\n * numbers generated by incrementing the returned number by 1 will also be\n * represented by 8 hexadecimal digits. This leads to all \"IDs\" having the same\n * length when converted to a hexadecimal string, making reading logs containing\n * these IDs easier to follow. And since the return value is randomly selected\n * it will help to differentiate between logs from different executions.\n */\n/**\n * Generates and returns a unique ID as a hexadecimal string.\n *\n * The returned ID is intended to be used in debug logging messages to help\n * correlate log messages that may be spatially separated in the logs, but\n * logically related. For example, a network connection could include the same\n * \"debug ID\" string in all of its log messages to help trace a specific\n * connection over time.\n *\n * @return the 10-character generated ID (e.g. \"0xa1b2c3d4\").\n */\nfunction Cu() {\n    return null === Du ? Du = 268435456 + Math.round(2147483648 * Math.random()) : Du++, \n    \"0x\" + Du.toString(16);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const xu = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a simple helper class that implements the Stream interface to\n * bridge to other implementations that are streams but do not implement the\n * interface. The stream callbacks are invoked with the callOn... methods.\n */\nclass Nu {\n    constructor(t) {\n        this.ro = t.ro, this.oo = t.oo;\n    }\n    uo(t) {\n        this.co = t;\n    }\n    ao(t) {\n        this.ho = t;\n    }\n    onMessage(t) {\n        this.lo = t;\n    }\n    close() {\n        this.oo();\n    }\n    send(t) {\n        this.ro(t);\n    }\n    fo() {\n        this.co();\n    }\n    wo(t) {\n        this.ho(t);\n    }\n    _o(t) {\n        this.lo(t);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const ku = \"WebChannelConnection\";\n\nclass Mu extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.mo = e + \"://\" + t.host, this.yo = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get po() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    Io(t, e, n, s, i) {\n        const r = Cu(), o = this.To(t, e);\n        N(\"RestConnection\", `Sending RPC '${t}' ${r}:`, o, n);\n        const u = {};\n        return this.Eo(u, s, i), this.Ao(t, o, u, n).then((e => (N(\"RestConnection\", `Received RPC '${t}' ${r}: `, e), \n        e)), (e => {\n            throw M(\"RestConnection\", `RPC '${t}' ${r} failed with error: `, e, \"url: \", o, \"request:\", n), \n            e;\n        }));\n    }\n    vo(t, e, n, s, i, r) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.Io(t, e, n, s, i);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    Eo(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + S, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    To(t, e) {\n        const n = xu[t];\n        return `${this.mo}/v1/${e}:${n}`;\n    }\n} {\n    constructor(t) {\n        super(t), this.forceLongPolling = t.forceLongPolling, this.autoDetectLongPolling = t.autoDetectLongPolling, \n        this.useFetchStreams = t.useFetchStreams, this.longPollingOptions = t.longPollingOptions;\n    }\n    Ao(t, e, n, s) {\n        const i = Cu();\n        return new Promise(((r, o) => {\n            const u = new XhrIo;\n            u.setWithCredentials(!0), u.listenOnce(EventType.COMPLETE, (() => {\n                try {\n                    switch (u.getLastErrorCode()) {\n                      case ErrorCode.NO_ERROR:\n                        const e = u.getResponseJson();\n                        N(ku, `XHR for RPC '${t}' ${i} received:`, JSON.stringify(e)), r(e);\n                        break;\n\n                      case ErrorCode.TIMEOUT:\n                        N(ku, `RPC '${t}' ${i} timed out`), o(new U(q.DEADLINE_EXCEEDED, \"Request time out\"));\n                        break;\n\n                      case ErrorCode.HTTP_ERROR:\n                        const n = u.getStatus();\n                        if (N(ku, `RPC '${t}' ${i} failed with status:`, n, \"response text:\", u.getResponseText()), \n                        n > 0) {\n                            let t = u.getResponseJson();\n                            Array.isArray(t) && (t = t[0]);\n                            const e = null == t ? void 0 : t.error;\n                            if (e && e.status && e.message) {\n                                const t = function(t) {\n                                    const e = t.toLowerCase().replace(/_/g, \"-\");\n                                    return Object.values(q).indexOf(e) >= 0 ? e : q.UNKNOWN;\n                                }(e.status);\n                                o(new U(t, e.message));\n                            } else o(new U(q.UNKNOWN, \"Server responded with status \" + u.getStatus()));\n                        } else \n                        // If we received an HTTP_ERROR but there's no status code,\n                        // it's most probably a connection issue\n                        o(new U(q.UNAVAILABLE, \"Connection failed.\"));\n                        break;\n\n                      default:\n                        O();\n                    }\n                } finally {\n                    N(ku, `RPC '${t}' ${i} completed.`);\n                }\n            }));\n            const c = JSON.stringify(s);\n            N(ku, `RPC '${t}' ${i} sending request:`, s), u.send(e, \"POST\", c, n, 15);\n        }));\n    }\n    Ro(t, e, n) {\n        const s = Cu(), i = [ this.mo, \"/\", \"google.firestore.v1.Firestore\", \"/\", t, \"/channel\" ], r = createWebChannelTransport(), o = getStatEventTarget(), u = {\n            // Required for backend stickiness, routing behavior is based on this\n            // parameter.\n            httpSessionIdParam: \"gsessionid\",\n            initMessageHeaders: {},\n            messageUrlParams: {\n                // This param is used to improve routing and project isolation by the\n                // backend and must be included in every request.\n                database: `projects/${this.databaseId.projectId}/databases/${this.databaseId.database}`\n            },\n            sendRawJson: !0,\n            supportsCrossDomainXhr: !0,\n            internalChannelParams: {\n                // Override the default timeout (randomized between 10-20 seconds) since\n                // a large write batch on a slow internet connection may take a long\n                // time to send to the backend. Rather than have WebChannel impose a\n                // tight timeout which could lead to infinite timeouts and retries, we\n                // set it very large (5-10 minutes) and rely on the browser's builtin\n                // timeouts to kick in if the request isn't working.\n                forwardChannelRequestTimeoutMs: 6e5\n            },\n            forceLongPolling: this.forceLongPolling,\n            detectBufferingProxy: this.autoDetectLongPolling\n        }, c = this.longPollingOptions.timeoutSeconds;\n        void 0 !== c && (u.longPollingTimeout = Math.round(1e3 * c)), this.useFetchStreams && (u.xmlHttpFactory = new FetchXmlHttpFactory({})), \n        this.Eo(u.initMessageHeaders, e, n), \n        // Sending the custom headers we just added to request.initMessageHeaders\n        // (Authorization, etc.) will trigger the browser to make a CORS preflight\n        // request because the XHR will no longer meet the criteria for a \"simple\"\n        // CORS request:\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests\n        // Therefore to avoid the CORS preflight request (an extra network\n        // roundtrip), we use the encodeInitMessageHeaders option to specify that\n        // the headers should instead be encoded in the request's POST payload,\n        // which is recognized by the webchannel backend.\n        u.encodeInitMessageHeaders = !0;\n        const a = i.join(\"\");\n        N(ku, `Creating RPC '${t}' stream ${s}: ${a}`, u);\n        const h = r.createWebChannel(a, u);\n        // WebChannel supports sending the first message with the handshake - saving\n        // a network round trip. However, it will have to call send in the same\n        // JS event loop as open. In order to enforce this, we delay actually\n        // opening the WebChannel until send is called. Whether we have called\n        // open is tracked with this variable.\n                let l = !1, f = !1;\n        // A flag to determine whether the stream was closed (by us or through an\n        // error/close event) to avoid delivering multiple close events or sending\n        // on a closed stream\n                const d = new Nu({\n            ro: e => {\n                f ? N(ku, `Not sending because RPC '${t}' stream ${s} is closed:`, e) : (l || (N(ku, `Opening RPC '${t}' stream ${s} transport.`), \n                h.open(), l = !0), N(ku, `RPC '${t}' stream ${s} sending:`, e), h.send(e));\n            },\n            oo: () => h.close()\n        }), w = (t, e, n) => {\n            // TODO(dimond): closure typing seems broken because WebChannel does\n            // not implement goog.events.Listenable\n            t.listen(e, (t => {\n                try {\n                    n(t);\n                } catch (t) {\n                    setTimeout((() => {\n                        throw t;\n                    }), 0);\n                }\n            }));\n        };\n        // Closure events are guarded and exceptions are swallowed, so catch any\n        // exception and rethrow using a setTimeout so they become visible again.\n        // Note that eventually this function could go away if we are confident\n        // enough the code is exception free.\n                return w(h, WebChannel.EventType.OPEN, (() => {\n            f || N(ku, `RPC '${t}' stream ${s} transport opened.`);\n        })), w(h, WebChannel.EventType.CLOSE, (() => {\n            f || (f = !0, N(ku, `RPC '${t}' stream ${s} transport closed`), d.wo());\n        })), w(h, WebChannel.EventType.ERROR, (e => {\n            f || (f = !0, M(ku, `RPC '${t}' stream ${s} transport errored:`, e), d.wo(new U(q.UNAVAILABLE, \"The operation could not be completed\")));\n        })), w(h, WebChannel.EventType.MESSAGE, (e => {\n            var n;\n            if (!f) {\n                const i = e.data[0];\n                F(!!i);\n                // TODO(b/35143891): There is a bug in One Platform that caused errors\n                // (and only errors) to be wrapped in an extra array. To be forward\n                // compatible with the bug we need to check either condition. The latter\n                // can be removed once the fix has been rolled out.\n                // Use any because msgData.error is not typed.\n                const r = i, o = r.error || (null === (n = r[0]) || void 0 === n ? void 0 : n.error);\n                if (o) {\n                    N(ku, `RPC '${t}' stream ${s} received error:`, o);\n                    // error.status will be a string like 'OK' or 'NOT_FOUND'.\n                    const e = o.status;\n                    let n = \n                    /**\n * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.\n *\n * @returns The Code equivalent to the given status string or undefined if\n *     there is no match.\n */\n                    function(t) {\n                        // lookup by string\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        const e = ii[t];\n                        if (void 0 !== e) return ui(e);\n                    }(e), i = o.message;\n                    void 0 === n && (n = q.INTERNAL, i = \"Unknown error status: \" + e + \" with message \" + o.message), \n                    // Mark closed so no further events are propagated\n                    f = !0, d.wo(new U(n, i)), h.close();\n                } else N(ku, `RPC '${t}' stream ${s} received:`, i), d._o(i);\n            }\n        })), w(o, Event.STAT_EVENT, (e => {\n            e.stat === Stat.PROXY ? N(ku, `RPC '${t}' stream ${s} detected buffering proxy`) : e.stat === Stat.NOPROXY && N(ku, `RPC '${t}' stream ${s} detected no buffering proxy`);\n        })), setTimeout((() => {\n            // Technically we could/should wait for the WebChannel opened event,\n            // but because we want to send the first message with the WebChannel\n            // handshake we pretend the channel opened here (asynchronously), and\n            // then delay the actual open until the first message is sent.\n            d.fo();\n        }), 0), d;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the WebChannelConnection for the browser. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'window' implementation or null if not available. */\nfunction $u() {\n    // `window` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof window ? window : null;\n}\n\n/** The Platform's 'document' implementation or null if not available. */ function Ou() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Fu(t) {\n    return new Vi(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass Bu {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , s = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , i = 6e4) {\n        this.ii = t, this.timerId = e, this.Po = n, this.bo = s, this.Vo = i, this.So = 0, \n        this.Do = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.Co = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.So = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    xo() {\n        this.So = this.Vo;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    No(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.So + this.ko()), n = Math.max(0, Date.now() - this.Co), s = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                s > 0 && N(\"ExponentialBackoff\", `Backing off for ${s} ms (base delay: ${this.So} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.Do = this.ii.enqueueAfterDelay(this.timerId, s, (() => (this.Co = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.So *= this.bo, this.So < this.Po && (this.So = this.Po), this.So > this.Vo && (this.So = this.Vo);\n    }\n    Mo() {\n        null !== this.Do && (this.Do.skipDelay(), this.Do = null);\n    }\n    cancel() {\n        null !== this.Do && (this.Do.cancel(), this.Do = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    ko() {\n        return (Math.random() - .5) * this.So;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A PersistentStream is an abstract base class that represents a streaming RPC\n * to the Firestore backend. It's built on top of the connections own support\n * for streaming RPCs, and adds several critical features for our clients:\n *\n *   - Exponential backoff on failure\n *   - Authentication via CredentialsProvider\n *   - Dispatching all callbacks into the shared worker queue\n *   - Closing idle streams after 60 seconds of inactivity\n *\n * Subclasses of PersistentStream implement serialization of models to and\n * from the JSON representation of the protocol buffers for a specific\n * streaming RPC.\n *\n * ## Starting and Stopping\n *\n * Streaming RPCs are stateful and need to be start()ed before messages can\n * be sent and received. The PersistentStream will call the onOpen() function\n * of the listener once the stream is ready to accept requests.\n *\n * Should a start() fail, PersistentStream will call the registered onClose()\n * listener with a FirestoreError indicating what went wrong.\n *\n * A PersistentStream can be started and stopped repeatedly.\n *\n * Generic types:\n *  SendType: The type of the outgoing message of the underlying\n *    connection stream\n *  ReceiveType: The type of the incoming message of the underlying\n *    connection stream\n *  ListenerType: The type of the listener that will be used for callbacks\n */\nclass Lu {\n    constructor(t, e, n, s, i, r, o, u) {\n        this.ii = t, this.$o = n, this.Oo = s, this.connection = i, this.authCredentialsProvider = r, \n        this.appCheckCredentialsProvider = o, this.listener = u, this.state = 0 /* PersistentStreamState.Initial */ , \n        /**\n         * A close count that's incremented every time the stream is closed; used by\n         * getCloseGuardedDispatcher() to invalidate callbacks that happen after\n         * close.\n         */\n        this.Fo = 0, this.Bo = null, this.Lo = null, this.stream = null, this.qo = new Bu(t, e);\n    }\n    /**\n     * Returns true if start() has been called and no error has occurred. True\n     * indicates the stream is open or in the process of opening (which\n     * encompasses respecting backoff, getting auth tokens, and starting the\n     * actual RPC). Use isOpen() to determine if the stream is open and ready for\n     * outbound requests.\n     */    Uo() {\n        return 1 /* PersistentStreamState.Starting */ === this.state || 5 /* PersistentStreamState.Backoff */ === this.state || this.Ko();\n    }\n    /**\n     * Returns true if the underlying RPC is open (the onOpen() listener has been\n     * called) and the stream is ready for outbound requests.\n     */    Ko() {\n        return 2 /* PersistentStreamState.Open */ === this.state || 3 /* PersistentStreamState.Healthy */ === this.state;\n    }\n    /**\n     * Starts the RPC. Only allowed if isStarted() returns false. The stream is\n     * not immediately ready for use: onOpen() will be invoked when the RPC is\n     * ready for outbound requests, at which point isOpen() will return true.\n     *\n     * When start returns, isStarted() will return true.\n     */    start() {\n        4 /* PersistentStreamState.Error */ !== this.state ? this.auth() : this.Go();\n    }\n    /**\n     * Stops the RPC. This call is idempotent and allowed regardless of the\n     * current isStarted() state.\n     *\n     * When stop returns, isStarted() and isOpen() will both return false.\n     */    async stop() {\n        this.Uo() && await this.close(0 /* PersistentStreamState.Initial */);\n    }\n    /**\n     * After an error the stream will usually back off on the next attempt to\n     * start it. If the error warrants an immediate restart of the stream, the\n     * sender can use this to indicate that the receiver should not back off.\n     *\n     * Each error will call the onClose() listener. That function can decide to\n     * inhibit backoff if required.\n     */    Qo() {\n        this.state = 0 /* PersistentStreamState.Initial */ , this.qo.reset();\n    }\n    /**\n     * Marks this stream as idle. If no further actions are performed on the\n     * stream for one minute, the stream will automatically close itself and\n     * notify the stream's onClose() handler with Status.OK. The stream will then\n     * be in a !isStarted() state, requiring the caller to start the stream again\n     * before further use.\n     *\n     * Only streams that are in state 'Open' can be marked idle, as all other\n     * states imply pending network operations.\n     */    jo() {\n        // Starts the idle time if we are in state 'Open' and are not yet already\n        // running a timer (in which case the previous idle timeout still applies).\n        this.Ko() && null === this.Bo && (this.Bo = this.ii.enqueueAfterDelay(this.$o, 6e4, (() => this.zo())));\n    }\n    /** Sends a message to the underlying stream. */    Wo(t) {\n        this.Ho(), this.stream.send(t);\n    }\n    /** Called by the idle timer when the stream should close due to inactivity. */    async zo() {\n        if (this.Ko()) \n        // When timing out an idle stream there's no reason to force the stream into backoff when\n        // it restarts so set the stream state to Initial instead of Error.\n        return this.close(0 /* PersistentStreamState.Initial */);\n    }\n    /** Marks the stream as active again. */    Ho() {\n        this.Bo && (this.Bo.cancel(), this.Bo = null);\n    }\n    /** Cancels the health check delayed operation. */    Jo() {\n        this.Lo && (this.Lo.cancel(), this.Lo = null);\n    }\n    /**\n     * Closes the stream and cleans up as necessary:\n     *\n     * * closes the underlying GRPC stream;\n     * * calls the onClose handler with the given 'error';\n     * * sets internal stream state to 'finalState';\n     * * adjusts the backoff timer based on the error\n     *\n     * A new stream can be opened by calling start().\n     *\n     * @param finalState - the intended state of the stream after closing.\n     * @param error - the error the connection was closed with.\n     */    async close(t, e) {\n        // Cancel any outstanding timers (they're guaranteed not to execute).\n        this.Ho(), this.Jo(), this.qo.cancel(), \n        // Invalidates any stream-related callbacks (e.g. from auth or the\n        // underlying stream), guaranteeing they won't execute.\n        this.Fo++, 4 /* PersistentStreamState.Error */ !== t ? \n        // If this is an intentional close ensure we don't delay our next connection attempt.\n        this.qo.reset() : e && e.code === q.RESOURCE_EXHAUSTED ? (\n        // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)\n        k(e.toString()), k(\"Using maximum backoff delay to prevent overloading the backend.\"), \n        this.qo.xo()) : e && e.code === q.UNAUTHENTICATED && 3 /* PersistentStreamState.Healthy */ !== this.state && (\n        // \"unauthenticated\" error means the token was rejected. This should rarely\n        // happen since both Auth and AppCheck ensure a sufficient TTL when we\n        // request a token. If a user manually resets their system clock this can\n        // fail, however. In this case, we should get a Code.UNAUTHENTICATED error\n        // before we received the first message and we need to invalidate the token\n        // to ensure that we fetch a new token.\n        this.authCredentialsProvider.invalidateToken(), this.appCheckCredentialsProvider.invalidateToken()), \n        // Clean up the underlying stream because we are no longer interested in events.\n        null !== this.stream && (this.Yo(), this.stream.close(), this.stream = null), \n        // This state must be assigned before calling onClose() to allow the callback to\n        // inhibit backoff or otherwise manipulate the state in its non-started state.\n        this.state = t, \n        // Notify the listener that the stream closed.\n        await this.listener.ao(e);\n    }\n    /**\n     * Can be overridden to perform additional cleanup before the stream is closed.\n     * Calling super.tearDown() is not required.\n     */    Yo() {}\n    auth() {\n        this.state = 1 /* PersistentStreamState.Starting */;\n        const t = this.Xo(this.Fo), e = this.Fo;\n        // TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.\n                Promise.all([ this.authCredentialsProvider.getToken(), this.appCheckCredentialsProvider.getToken() ]).then((([t, n]) => {\n            // Stream can be stopped while waiting for authentication.\n            // TODO(mikelehen): We really should just use dispatchIfNotClosed\n            // and let this dispatch onto the queue, but that opened a spec test can\n            // of worms that I don't want to deal with in this PR.\n            this.Fo === e && \n            // Normally we'd have to schedule the callback on the AsyncQueue.\n            // However, the following calls are safe to be called outside the\n            // AsyncQueue since they don't chain asynchronous calls\n            this.Zo(t, n);\n        }), (e => {\n            t((() => {\n                const t = new U(q.UNKNOWN, \"Fetching auth token failed: \" + e.message);\n                return this.tu(t);\n            }));\n        }));\n    }\n    Zo(t, e) {\n        const n = this.Xo(this.Fo);\n        this.stream = this.eu(t, e), this.stream.uo((() => {\n            n((() => (this.state = 2 /* PersistentStreamState.Open */ , this.Lo = this.ii.enqueueAfterDelay(this.Oo, 1e4, (() => (this.Ko() && (this.state = 3 /* PersistentStreamState.Healthy */), \n            Promise.resolve()))), this.listener.uo())));\n        })), this.stream.ao((t => {\n            n((() => this.tu(t)));\n        })), this.stream.onMessage((t => {\n            n((() => this.onMessage(t)));\n        }));\n    }\n    Go() {\n        this.state = 5 /* PersistentStreamState.Backoff */ , this.qo.No((async () => {\n            this.state = 0 /* PersistentStreamState.Initial */ , this.start();\n        }));\n    }\n    // Visible for tests\n    tu(t) {\n        // In theory the stream could close cleanly, however, in our current model\n        // we never expect this to happen because if we stop a stream ourselves,\n        // this callback will never be called. To prevent cases where we retry\n        // without a backoff accidentally, we set the stream to error in all cases.\n        return N(\"PersistentStream\", `close with error: ${t}`), this.stream = null, this.close(4 /* PersistentStreamState.Error */ , t);\n    }\n    /**\n     * Returns a \"dispatcher\" function that dispatches operations onto the\n     * AsyncQueue but only runs them if closeCount remains unchanged. This allows\n     * us to turn auth / stream callbacks into no-ops if the stream is closed /\n     * re-opened, etc.\n     */    Xo(t) {\n        return e => {\n            this.ii.enqueueAndForget((() => this.Fo === t ? e() : (N(\"PersistentStream\", \"stream callback skipped by getCloseGuardedDispatcher.\"), \n            Promise.resolve())));\n        };\n    }\n}\n\n/**\n * A PersistentStream that implements the Listen RPC.\n *\n * Once the Listen stream has called the onOpen() listener, any number of\n * listen() and unlisten() calls can be made to control what changes will be\n * sent from the server for ListenResponses.\n */ class qu extends Lu {\n    constructor(t, e, n, s, i, r) {\n        super(t, \"listen_stream_connection_backoff\" /* TimerId.ListenStreamConnectionBackoff */ , \"listen_stream_idle\" /* TimerId.ListenStreamIdle */ , \"health_check_timeout\" /* TimerId.HealthCheckTimeout */ , e, n, s, r), \n        this.serializer = i;\n    }\n    eu(t, e) {\n        return this.connection.Ro(\"Listen\", t, e);\n    }\n    onMessage(t) {\n        // A successful response means the stream is healthy\n        this.qo.reset();\n        const e = Qi(this.serializer, t), n = function(t) {\n            // We have only reached a consistent snapshot for the entire stream if there\n            // is a read_time set and it applies to all targets (i.e. the list of\n            // targets is empty). The backend is guaranteed to send such responses.\n            if (!(\"targetChange\" in t)) return rt.min();\n            const e = t.targetChange;\n            return e.targetIds && e.targetIds.length ? rt.min() : e.readTime ? Ni(e.readTime) : rt.min();\n        }(t);\n        return this.listener.nu(e, n);\n    }\n    /**\n     * Registers interest in the results of the given target. If the target\n     * includes a resumeToken it will be included in the request. Results that\n     * affect the target will be streamed back as WatchChange messages that\n     * reference the targetId.\n     */    su(t) {\n        const e = {};\n        e.database = Li(this.serializer), e.addTarget = function(t, e) {\n            let n;\n            const s = e.target;\n            if (n = Fn(s) ? {\n                documents: Hi(t, s)\n            } : {\n                query: Ji(t, s)\n            }, n.targetId = e.targetId, e.resumeToken.approximateByteSize() > 0) {\n                n.resumeToken = Ci(t, e.resumeToken);\n                const s = Si(t, e.expectedCount);\n                null !== s && (n.expectedCount = s);\n            } else if (e.snapshotVersion.compareTo(rt.min()) > 0) {\n                // TODO(wuandy): Consider removing above check because it is most likely true.\n                // Right now, many tests depend on this behaviour though (leaving min() out\n                // of serialization).\n                n.readTime = Di(t, e.snapshotVersion.toTimestamp());\n                const s = Si(t, e.expectedCount);\n                null !== s && (n.expectedCount = s);\n            }\n            return n;\n        }(this.serializer, t);\n        const n = Xi(this.serializer, t);\n        n && (e.labels = n), this.Wo(e);\n    }\n    /**\n     * Unregisters interest in the results of the target associated with the\n     * given targetId.\n     */    iu(t) {\n        const e = {};\n        e.database = Li(this.serializer), e.removeTarget = t, this.Wo(e);\n    }\n}\n\n/**\n * A Stream that implements the Write RPC.\n *\n * The Write RPC requires the caller to maintain special streamToken\n * state in between calls, to help the server understand which responses the\n * client has processed by the time the next request is made. Every response\n * will contain a streamToken; this value must be passed to the next\n * request.\n *\n * After calling start() on this stream, the next request must be a handshake,\n * containing whatever streamToken is on hand. Once a response to this\n * request is received, all pending mutations may be submitted. When\n * submitting multiple batches of mutations at the same time, it's\n * okay to use the same streamToken for the calls to writeMutations.\n *\n * TODO(b/33271235): Use proto types\n */ class Uu extends Lu {\n    constructor(t, e, n, s, i, r) {\n        super(t, \"write_stream_connection_backoff\" /* TimerId.WriteStreamConnectionBackoff */ , \"write_stream_idle\" /* TimerId.WriteStreamIdle */ , \"health_check_timeout\" /* TimerId.HealthCheckTimeout */ , e, n, s, r), \n        this.serializer = i, this.ru = !1;\n    }\n    /**\n     * Tracks whether or not a handshake has been successfully exchanged and\n     * the stream is ready to accept mutations.\n     */    get ou() {\n        return this.ru;\n    }\n    // Override of PersistentStream.start\n    start() {\n        this.ru = !1, this.lastStreamToken = void 0, super.start();\n    }\n    Yo() {\n        this.ru && this.uu([]);\n    }\n    eu(t, e) {\n        return this.connection.Ro(\"Write\", t, e);\n    }\n    onMessage(t) {\n        if (\n        // Always capture the last stream token.\n        F(!!t.streamToken), this.lastStreamToken = t.streamToken, this.ru) {\n            // A successful first write response means the stream is healthy,\n            // Note, that we could consider a successful handshake healthy, however,\n            // the write itself might be causing an error we want to back off from.\n            this.qo.reset();\n            const e = Wi(t.writeResults, t.commitTime), n = Ni(t.commitTime);\n            return this.listener.cu(n, e);\n        }\n        // The first response is always the handshake response\n        return F(!t.writeResults || 0 === t.writeResults.length), this.ru = !0, this.listener.au();\n    }\n    /**\n     * Sends an initial streamToken to the server, performing the handshake\n     * required to make the StreamingWrite RPC work. Subsequent\n     * calls should wait until onHandshakeComplete was called.\n     */    hu() {\n        // TODO(dimond): Support stream resumption. We intentionally do not set the\n        // stream token on the handshake, ignoring any stream token we might have.\n        const t = {};\n        t.database = Li(this.serializer), this.Wo(t);\n    }\n    /** Sends a group of mutations to the Firestore backend to apply. */    uu(t) {\n        const e = {\n            streamToken: this.lastStreamToken,\n            writes: t.map((t => ji(this.serializer, t)))\n        };\n        this.Wo(e);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass Ku extends class {} {\n    constructor(t, e, n, s) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.serializer = s, this.lu = !1;\n    }\n    fu() {\n        if (this.lu) throw new U(q.FAILED_PRECONDITION, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    Io(t, e, n) {\n        return this.fu(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.Io(t, e, n, s, i))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === q.UNAUTHENTICATED && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(q.UNKNOWN, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    vo(t, e, n, s) {\n        return this.fu(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([i, r]) => this.connection.vo(t, e, n, i, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === q.UNAUTHENTICATED && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(q.UNKNOWN, t.toString());\n        }));\n    }\n    terminate() {\n        this.lu = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function Gu(t, e, n) {\n    var s;\n    const i = L(t), {request: r, du: o} = function(t, e, n) {\n        const s = Ji(t, e), i = {}, r = [];\n        let o = 0;\n        return n.forEach((t => {\n            // Map all client-side aliases to a unique short-form\n            // alias. This avoids issues with client-side aliases that\n            // exceed the 1500-byte string size limit.\n            const e = \"aggregate_\" + o++;\n            i[e] = t.alias, \"count\" === t.yt ? r.push({\n                alias: e,\n                count: {}\n            }) : \"avg\" === t.yt ? r.push({\n                alias: e,\n                avg: {\n                    field: sr(t.fieldPath)\n                }\n            }) : \"sum\" === t.yt && r.push({\n                alias: e,\n                sum: {\n                    field: sr(t.fieldPath)\n                }\n            });\n        })), {\n            request: {\n                structuredAggregationQuery: {\n                    aggregations: r,\n                    structuredQuery: s.structuredQuery\n                },\n                parent: s.parent\n            },\n            du: i\n        };\n    }(i.serializer, Jn(e), n), u = r.parent;\n    i.connection.po || delete r.parent;\n    const c = (await i.vo(\"RunAggregationQuery\", u, r, /*expectedResponseCount=*/ 1)).filter((t => !!t.result));\n    // Omit RunAggregationQueryResponse that only contain readTimes.\n        F(1 === c.length);\n    // Remap the short-form aliases that were sent to the server\n    // to the client-side aliases. Users will access the results\n    // using the client-side alias.\n    const a = null === (s = c[0].result) || void 0 === s ? void 0 : s.aggregateFields;\n    return Object.keys(a).reduce(((t, e) => (t[o[e]] = a[e], t)), {});\n}\n\n/**\n * A component used by the RemoteStore to track the OnlineState (that is,\n * whether or not the client as a whole should be considered to be online or\n * offline), implementing the appropriate heuristics.\n *\n * In particular, when the client is trying to connect to the backend, we\n * allow up to MAX_WATCH_STREAM_FAILURES within ONLINE_STATE_TIMEOUT_MS for\n * a connection to succeed. If we have too many failures or the timeout elapses,\n * then we set the OnlineState to Offline, and the client will behave as if\n * it is offline (get()s will return cached data, etc.).\n */\nclass Qu {\n    constructor(t, e) {\n        this.asyncQueue = t, this.onlineStateHandler = e, \n        /** The current OnlineState. */\n        this.state = \"Unknown\" /* OnlineState.Unknown */ , \n        /**\n         * A count of consecutive failures to open the stream. If it reaches the\n         * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to\n         * Offline.\n         */\n        this.wu = 0, \n        /**\n         * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we\n         * transition from OnlineState.Unknown to OnlineState.Offline without waiting\n         * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).\n         */\n        this._u = null, \n        /**\n         * Whether the client should log a warning message if it fails to connect to\n         * the backend (initially true, cleared after a successful stream, or if we've\n         * logged the message already).\n         */\n        this.mu = !0;\n    }\n    /**\n     * Called by RemoteStore when a watch stream is started (including on each\n     * backoff attempt).\n     *\n     * If this is the first attempt, it sets the OnlineState to Unknown and starts\n     * the onlineStateTimer.\n     */    gu() {\n        0 === this.wu && (this.yu(\"Unknown\" /* OnlineState.Unknown */), this._u = this.asyncQueue.enqueueAfterDelay(\"online_state_timeout\" /* TimerId.OnlineStateTimeout */ , 1e4, (() => (this._u = null, \n        this.pu(\"Backend didn't respond within 10 seconds.\"), this.yu(\"Offline\" /* OnlineState.Offline */), \n        Promise.resolve()))));\n    }\n    /**\n     * Updates our OnlineState as appropriate after the watch stream reports a\n     * failure. The first failure moves us to the 'Unknown' state. We then may\n     * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we\n     * actually transition to the 'Offline' state.\n     */    Iu(t) {\n        \"Online\" /* OnlineState.Online */ === this.state ? this.yu(\"Unknown\" /* OnlineState.Unknown */) : (this.wu++, \n        this.wu >= 1 && (this.Tu(), this.pu(`Connection failed 1 times. Most recent error: ${t.toString()}`), \n        this.yu(\"Offline\" /* OnlineState.Offline */)));\n    }\n    /**\n     * Explicitly sets the OnlineState to the specified state.\n     *\n     * Note that this resets our timers / failure counters, etc. used by our\n     * Offline heuristics, so must not be used in place of\n     * handleWatchStreamStart() and handleWatchStreamFailure().\n     */    set(t) {\n        this.Tu(), this.wu = 0, \"Online\" /* OnlineState.Online */ === t && (\n        // We've connected to watch at least once. Don't warn the developer\n        // about being offline going forward.\n        this.mu = !1), this.yu(t);\n    }\n    yu(t) {\n        t !== this.state && (this.state = t, this.onlineStateHandler(t));\n    }\n    pu(t) {\n        const e = `Could not reach Cloud Firestore backend. ${t}\\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.`;\n        this.mu ? (k(e), this.mu = !1) : N(\"OnlineStateTracker\", e);\n    }\n    Tu() {\n        null !== this._u && (this._u.cancel(), this._u = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class ju {\n    constructor(\n    /**\n     * The local store, used to fill the write pipeline with outbound mutations.\n     */\n    t, \n    /** The client-side proxy for interacting with the backend. */\n    e, n, s, i) {\n        this.localStore = t, this.datastore = e, this.asyncQueue = n, this.remoteSyncer = {}, \n        /**\n         * A list of up to MAX_PENDING_WRITES writes that we have fetched from the\n         * LocalStore via fillWritePipeline() and have or will send to the write\n         * stream.\n         *\n         * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or\n         * restart the write stream. When the stream is established the writes in the\n         * pipeline will be sent in order.\n         *\n         * Writes remain in writePipeline until they are acknowledged by the backend\n         * and thus will automatically be re-sent if the stream is interrupted /\n         * restarted before they're acknowledged.\n         *\n         * Write responses from the backend are linked to their originating request\n         * purely based on order, and so we can just shift() writes from the front of\n         * the writePipeline as we receive responses.\n         */\n        this.Eu = [], \n        /**\n         * A mapping of watched targets that the client cares about tracking and the\n         * user has explicitly called a 'listen' for this target.\n         *\n         * These targets may or may not have been sent to or acknowledged by the\n         * server. On re-establishing the listen stream, these targets should be sent\n         * to the server. The targets removed with unlistens are removed eagerly\n         * without waiting for confirmation from the listen stream.\n         */\n        this.Au = new Map, \n        /**\n         * A set of reasons for why the RemoteStore may be offline. If empty, the\n         * RemoteStore may start its network connections.\n         */\n        this.vu = new Set, \n        /**\n         * Event handlers that get called when the network is disabled or enabled.\n         *\n         * PORTING NOTE: These functions are used on the Web client to create the\n         * underlying streams (to support tree-shakeable streams). On Android and iOS,\n         * the streams are created during construction of RemoteStore.\n         */\n        this.Ru = [], this.Pu = i, this.Pu.Yr((t => {\n            n.enqueueAndForget((async () => {\n                // Porting Note: Unlike iOS, `restartNetwork()` is called even when the\n                // network becomes unreachable as we don't have any other way to tear\n                // down our streams.\n                ec(this) && (N(\"RemoteStore\", \"Restarting streams for network reachability change.\"), \n                await async function(t) {\n                    const e = L(t);\n                    e.vu.add(4 /* OfflineCause.ConnectivityChange */), await Wu(e), e.bu.set(\"Unknown\" /* OnlineState.Unknown */), \n                    e.vu.delete(4 /* OfflineCause.ConnectivityChange */), await zu(e);\n                }(this));\n            }));\n        })), this.bu = new Qu(n, s);\n    }\n}\n\nasync function zu(t) {\n    if (ec(t)) for (const e of t.Ru) await e(/* enabled= */ !0);\n}\n\n/**\n * Temporarily disables the network. The network can be re-enabled using\n * enableNetwork().\n */ async function Wu(t) {\n    for (const e of t.Ru) await e(/* enabled= */ !1);\n}\n\n/**\n * Starts new listen for the given target. Uses resume token if provided. It\n * is a no-op if the target of given `TargetData` is already being listened to.\n */\nfunction Hu(t, e) {\n    const n = L(t);\n    n.Au.has(e.targetId) || (\n    // Mark this as something the client is currently listening for.\n    n.Au.set(e.targetId, e), tc(n) ? \n    // The listen will be sent in onWatchStreamOpen\n    Zu(n) : pc(n).Ko() && Yu(n, e));\n}\n\n/**\n * Removes the listen from server. It is a no-op if the given target id is\n * not being listened to.\n */ function Ju(t, e) {\n    const n = L(t), s = pc(n);\n    n.Au.delete(e), s.Ko() && Xu(n, e), 0 === n.Au.size && (s.Ko() ? s.jo() : ec(n) && \n    // Revert to OnlineState.Unknown if the watch stream is not open and we\n    // have no listeners, since without any listens to send we cannot\n    // confirm if the stream is healthy and upgrade to OnlineState.Online.\n    n.bu.set(\"Unknown\" /* OnlineState.Unknown */));\n}\n\n/**\n * We need to increment the the expected number of pending responses we're due\n * from watch so we wait for the ack to process any messages from this target.\n */ function Yu(t, e) {\n    if (t.Vu.qt(e.targetId), e.resumeToken.approximateByteSize() > 0 || e.snapshotVersion.compareTo(rt.min()) > 0) {\n        const n = t.remoteSyncer.getRemoteKeysForTarget(e.targetId).size;\n        e = e.withExpectedCount(n);\n    }\n    pc(t).su(e);\n}\n\n/**\n * We need to increment the expected number of pending responses we're due\n * from watch so we wait for the removal on the server before we process any\n * messages from this target.\n */ function Xu(t, e) {\n    t.Vu.qt(e), pc(t).iu(e);\n}\n\nfunction Zu(t) {\n    t.Vu = new Ei({\n        getRemoteKeysForTarget: e => t.remoteSyncer.getRemoteKeysForTarget(e),\n        le: e => t.Au.get(e) || null,\n        ue: () => t.datastore.serializer.databaseId\n    }), pc(t).start(), t.bu.gu();\n}\n\n/**\n * Returns whether the watch stream should be started because it's necessary\n * and has not yet been started.\n */ function tc(t) {\n    return ec(t) && !pc(t).Uo() && t.Au.size > 0;\n}\n\nfunction ec(t) {\n    return 0 === L(t).vu.size;\n}\n\nfunction nc(t) {\n    t.Vu = void 0;\n}\n\nasync function sc(t) {\n    t.Au.forEach(((e, n) => {\n        Yu(t, e);\n    }));\n}\n\nasync function ic(t, e) {\n    nc(t), \n    // If we still need the watch stream, retry the connection.\n    tc(t) ? (t.bu.Iu(e), Zu(t)) : \n    // No need to restart watch stream because there are no active targets.\n    // The online state is set to unknown because there is no active attempt\n    // at establishing a connection\n    t.bu.set(\"Unknown\" /* OnlineState.Unknown */);\n}\n\nasync function rc(t, e, n) {\n    if (\n    // Mark the client as online since we got a message from the server\n    t.bu.set(\"Online\" /* OnlineState.Online */), e instanceof Ii && 2 /* WatchTargetChangeState.Removed */ === e.state && e.cause) \n    // There was an error on a target, don't wait for a consistent snapshot\n    // to raise events\n    try {\n        await \n        /** Handles an error on a target */\n        async function(t, e) {\n            const n = e.cause;\n            for (const s of e.targetIds) \n            // A watched target might have been removed already.\n            t.Au.has(s) && (await t.remoteSyncer.rejectListen(s, n), t.Au.delete(s), t.Vu.removeTarget(s));\n        }\n        /**\n * Attempts to fill our write pipeline with writes from the LocalStore.\n *\n * Called internally to bootstrap or refill the write pipeline and by\n * SyncEngine whenever there are new mutations to process.\n *\n * Starts the write stream if necessary.\n */ (t, e);\n    } catch (n) {\n        N(\"RemoteStore\", \"Failed to remove targets %s: %s \", e.targetIds.join(\",\"), n), \n        await oc(t, n);\n    } else if (e instanceof yi ? t.Vu.Ht(e) : e instanceof pi ? t.Vu.ne(e) : t.Vu.Xt(e), \n    !n.isEqual(rt.min())) try {\n        const e = await ou(t.localStore);\n        n.compareTo(e) >= 0 && \n        // We have received a target change with a global snapshot if the snapshot\n        // version is not equal to SnapshotVersion.min().\n        await \n        /**\n * Takes a batch of changes from the Datastore, repackages them as a\n * RemoteEvent, and passes that on to the listener, which is typically the\n * SyncEngine.\n */\n        function(t, e) {\n            const n = t.Vu.ce(e);\n            // Update in-memory resume tokens. LocalStore will update the\n            // persistent view of these when applying the completed RemoteEvent.\n                        return n.targetChanges.forEach(((n, s) => {\n                if (n.resumeToken.approximateByteSize() > 0) {\n                    const i = t.Au.get(s);\n                    // A watched target might have been removed already.\n                                        i && t.Au.set(s, i.withResumeToken(n.resumeToken, e));\n                }\n            })), \n            // Re-establish listens for the targets that have been invalidated by\n            // existence filter mismatches.\n            n.targetMismatches.forEach(((e, n) => {\n                const s = t.Au.get(e);\n                if (!s) \n                // A watched target might have been removed already.\n                return;\n                // Clear the resume token for the target, since we're in a known mismatch\n                // state.\n                                t.Au.set(e, s.withResumeToken(Ve.EMPTY_BYTE_STRING, s.snapshotVersion)), \n                // Cause a hard reset by unwatching and rewatching immediately, but\n                // deliberately don't send a resume token so that we get a full update.\n                Xu(t, e);\n                // Mark the target we send as being on behalf of an existence filter\n                // mismatch, but don't actually retain that in listenTargets. This ensures\n                // that we flag the first re-listen this way without impacting future\n                // listens of this target (that might happen e.g. on reconnect).\n                const i = new cr(s.target, e, n, s.sequenceNumber);\n                Yu(t, i);\n            })), t.remoteSyncer.applyRemoteEvent(n);\n        }(t, n);\n    } catch (e) {\n        N(\"RemoteStore\", \"Failed to raise snapshot:\", e), await oc(t, e);\n    }\n}\n\n/**\n * Recovery logic for IndexedDB errors that takes the network offline until\n * `op` succeeds. Retries are scheduled with backoff using\n * `enqueueRetryable()`. If `op()` is not provided, IndexedDB access is\n * validated via a generic operation.\n *\n * The returned Promise is resolved once the network is disabled and before\n * any retry attempt.\n */ async function oc(t, e, n) {\n    if (!Dt(e)) throw e;\n    t.vu.add(1 /* OfflineCause.IndexedDbFailed */), \n    // Disable network and raise offline snapshots\n    await Wu(t), t.bu.set(\"Offline\" /* OnlineState.Offline */), n || (\n    // Use a simple read operation to determine if IndexedDB recovered.\n    // Ideally, we would expose a health check directly on SimpleDb, but\n    // RemoteStore only has access to persistence through LocalStore.\n    n = () => ou(t.localStore)), \n    // Probe IndexedDB periodically and re-enable network\n    t.asyncQueue.enqueueRetryable((async () => {\n        N(\"RemoteStore\", \"Retrying IndexedDB access\"), await n(), t.vu.delete(1 /* OfflineCause.IndexedDbFailed */), \n        await zu(t);\n    }));\n}\n\n/**\n * Executes `op`. If `op` fails, takes the network offline until `op`\n * succeeds. Returns after the first attempt.\n */ function uc(t, e) {\n    return e().catch((n => oc(t, n, e)));\n}\n\nasync function cc(t) {\n    const e = L(t), n = Ic(e);\n    let s = e.Eu.length > 0 ? e.Eu[e.Eu.length - 1].batchId : -1;\n    for (;ac(e); ) try {\n        const t = await au(e.localStore, s);\n        if (null === t) {\n            0 === e.Eu.length && n.jo();\n            break;\n        }\n        s = t.batchId, hc(e, t);\n    } catch (t) {\n        await oc(e, t);\n    }\n    lc(e) && fc(e);\n}\n\n/**\n * Returns true if we can add to the write pipeline (i.e. the network is\n * enabled and the write pipeline is not full).\n */ function ac(t) {\n    return ec(t) && t.Eu.length < 10;\n}\n\n/**\n * Queues additional writes to be sent to the write stream, sending them\n * immediately if the write stream is established.\n */ function hc(t, e) {\n    t.Eu.push(e);\n    const n = Ic(t);\n    n.Ko() && n.ou && n.uu(e.mutations);\n}\n\nfunction lc(t) {\n    return ec(t) && !Ic(t).Uo() && t.Eu.length > 0;\n}\n\nfunction fc(t) {\n    Ic(t).start();\n}\n\nasync function dc(t) {\n    Ic(t).hu();\n}\n\nasync function wc(t) {\n    const e = Ic(t);\n    // Send the write pipeline now that the stream is established.\n        for (const n of t.Eu) e.uu(n.mutations);\n}\n\nasync function _c(t, e, n) {\n    const s = t.Eu.shift(), i = ti.from(s, e, n);\n    await uc(t, (() => t.remoteSyncer.applySuccessfulWrite(i))), \n    // It's possible that with the completion of this mutation another\n    // slot has freed up.\n    await cc(t);\n}\n\nasync function mc(t, e) {\n    // If the write stream closed after the write handshake completes, a write\n    // operation failed and we fail the pending operation.\n    e && Ic(t).ou && \n    // This error affects the actual write.\n    await async function(t, e) {\n        // Only handle permanent errors here. If it's transient, just let the retry\n        // logic kick in.\n        if (n = e.code, oi(n) && n !== q.ABORTED) {\n            // This was a permanent error, the request itself was the problem\n            // so it's not going to succeed if we resend it.\n            const n = t.Eu.shift();\n            // In this case it's also unlikely that the server itself is melting\n            // down -- this was just a bad request so inhibit backoff on the next\n            // restart.\n                        Ic(t).Qo(), await uc(t, (() => t.remoteSyncer.rejectFailedWrite(n.batchId, e))), \n            // It's possible that with the completion of this mutation\n            // another slot has freed up.\n            await cc(t);\n        }\n        var n;\n    }(t, e), \n    // The write stream might have been started by refilling the write\n    // pipeline for failed writes\n    lc(t) && fc(t);\n}\n\nasync function gc(t, e) {\n    const n = L(t);\n    n.asyncQueue.verifyOperationInProgress(), N(\"RemoteStore\", \"RemoteStore received new credentials\");\n    const s = ec(n);\n    // Tear down and re-create our network streams. This will ensure we get a\n    // fresh auth token for the new user and re-fill the write pipeline with\n    // new mutations from the LocalStore (since mutations are per-user).\n        n.vu.add(3 /* OfflineCause.CredentialChange */), await Wu(n), s && \n    // Don't set the network status to Unknown if we are offline.\n    n.bu.set(\"Unknown\" /* OnlineState.Unknown */), await n.remoteSyncer.handleCredentialChange(e), \n    n.vu.delete(3 /* OfflineCause.CredentialChange */), await zu(n);\n}\n\n/**\n * Toggles the network state when the client gains or loses its primary lease.\n */ async function yc(t, e) {\n    const n = L(t);\n    e ? (n.vu.delete(2 /* OfflineCause.IsSecondary */), await zu(n)) : e || (n.vu.add(2 /* OfflineCause.IsSecondary */), \n    await Wu(n), n.bu.set(\"Unknown\" /* OnlineState.Unknown */));\n}\n\n/**\n * If not yet initialized, registers the WatchStream and its network state\n * callback with `remoteStoreImpl`. Returns the existing stream if one is\n * already available.\n *\n * PORTING NOTE: On iOS and Android, the WatchStream gets registered on startup.\n * This is not done on Web to allow it to be tree-shaken.\n */ function pc(t) {\n    return t.Su || (\n    // Create stream (but note that it is not started yet).\n    t.Su = function(t, e, n) {\n        const s = L(t);\n        return s.fu(), new qu(e, s.connection, s.authCredentials, s.appCheckCredentials, s.serializer, n);\n    }\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t.datastore, t.asyncQueue, {\n        uo: sc.bind(null, t),\n        ao: ic.bind(null, t),\n        nu: rc.bind(null, t)\n    }), t.Ru.push((async e => {\n        e ? (t.Su.Qo(), tc(t) ? Zu(t) : t.bu.set(\"Unknown\" /* OnlineState.Unknown */)) : (await t.Su.stop(), \n        nc(t));\n    }))), t.Su;\n}\n\n/**\n * If not yet initialized, registers the WriteStream and its network state\n * callback with `remoteStoreImpl`. Returns the existing stream if one is\n * already available.\n *\n * PORTING NOTE: On iOS and Android, the WriteStream gets registered on startup.\n * This is not done on Web to allow it to be tree-shaken.\n */ function Ic(t) {\n    return t.Du || (\n    // Create stream (but note that it is not started yet).\n    t.Du = function(t, e, n) {\n        const s = L(t);\n        return s.fu(), new Uu(e, s.connection, s.authCredentials, s.appCheckCredentials, s.serializer, n);\n    }(t.datastore, t.asyncQueue, {\n        uo: dc.bind(null, t),\n        ao: mc.bind(null, t),\n        au: wc.bind(null, t),\n        cu: _c.bind(null, t)\n    }), t.Ru.push((async e => {\n        e ? (t.Du.Qo(), \n        // This will start the write stream if necessary.\n        await cc(t)) : (await t.Du.stop(), t.Eu.length > 0 && (N(\"RemoteStore\", `Stopping write stream with ${t.Eu.length} pending writes`), \n        t.Eu = []));\n    }))), t.Du;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\nclass Tc {\n    constructor(t, e, n, s, i) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = s, this.removalCallback = i, \n        this.deferred = new K, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, s, i) {\n        const r = Date.now() + n, o = new Tc(t, e, r, s, i);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(q.CANCELLED, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * Returns a FirestoreError that can be surfaced to the user if the provided\n * error is an IndexedDbTransactionError. Re-throws the error otherwise.\n */ function Ec(t, e) {\n    if (k(\"AsyncQueue\", `${e}: ${t}`), Dt(t)) return new U(q.UNAVAILABLE, `${e}: ${t}`);\n    throw t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * DocumentSet is an immutable (copy-on-write) collection that holds documents\n * in order specified by the provided comparator. We always add a document key\n * comparator on top of what is provided to guarantee document equality based on\n * the key.\n */ class Ac {\n    /** The default ordering is by key if the comparator is omitted */\n    constructor(t) {\n        // We are adding document key comparator to the end as it's the only\n        // guaranteed unique property of a document.\n        this.comparator = t ? (e, n) => t(e, n) || ht.comparator(e.key, n.key) : (t, e) => ht.comparator(t.key, e.key), \n        this.keyedMap = hs(), this.sortedSet = new pe(this.comparator);\n    }\n    /**\n     * Returns an empty copy of the existing DocumentSet, using the same\n     * comparator.\n     */    static emptySet(t) {\n        return new Ac(t.comparator);\n    }\n    has(t) {\n        return null != this.keyedMap.get(t);\n    }\n    get(t) {\n        return this.keyedMap.get(t);\n    }\n    first() {\n        return this.sortedSet.minKey();\n    }\n    last() {\n        return this.sortedSet.maxKey();\n    }\n    isEmpty() {\n        return this.sortedSet.isEmpty();\n    }\n    /**\n     * Returns the index of the provided key in the document set, or -1 if the\n     * document key is not present in the set;\n     */    indexOf(t) {\n        const e = this.keyedMap.get(t);\n        return e ? this.sortedSet.indexOf(e) : -1;\n    }\n    get size() {\n        return this.sortedSet.size;\n    }\n    /** Iterates documents in order defined by \"comparator\" */    forEach(t) {\n        this.sortedSet.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Inserts or updates a document with the same key */    add(t) {\n        // First remove the element if we have it.\n        const e = this.delete(t.key);\n        return e.copy(e.keyedMap.insert(t.key, t), e.sortedSet.insert(t, null));\n    }\n    /** Deletes a document with a given key */    delete(t) {\n        const e = this.get(t);\n        return e ? this.copy(this.keyedMap.remove(t), this.sortedSet.remove(e)) : this;\n    }\n    isEqual(t) {\n        if (!(t instanceof Ac)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.sortedSet.getIterator(), n = t.sortedSet.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, s = n.getNext().key;\n            if (!t.isEqual(s)) return !1;\n        }\n        return !0;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e.toString());\n        })), 0 === t.length ? \"DocumentSet ()\" : \"DocumentSet (\\n  \" + t.join(\"  \\n\") + \"\\n)\";\n    }\n    copy(t, e) {\n        const n = new Ac;\n        return n.comparator = this.comparator, n.keyedMap = t, n.sortedSet = e, n;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * DocumentChangeSet keeps track of a set of changes to docs in a query, merging\n * duplicate events for the same doc.\n */ class vc {\n    constructor() {\n        this.Cu = new pe(ht.comparator);\n    }\n    track(t) {\n        const e = t.doc.key, n = this.Cu.get(e);\n        n ? \n        // Merge the new change with the existing change.\n        0 /* ChangeType.Added */ !== t.type && 3 /* ChangeType.Metadata */ === n.type ? this.Cu = this.Cu.insert(e, t) : 3 /* ChangeType.Metadata */ === t.type && 1 /* ChangeType.Removed */ !== n.type ? this.Cu = this.Cu.insert(e, {\n            type: n.type,\n            doc: t.doc\n        }) : 2 /* ChangeType.Modified */ === t.type && 2 /* ChangeType.Modified */ === n.type ? this.Cu = this.Cu.insert(e, {\n            type: 2 /* ChangeType.Modified */ ,\n            doc: t.doc\n        }) : 2 /* ChangeType.Modified */ === t.type && 0 /* ChangeType.Added */ === n.type ? this.Cu = this.Cu.insert(e, {\n            type: 0 /* ChangeType.Added */ ,\n            doc: t.doc\n        }) : 1 /* ChangeType.Removed */ === t.type && 0 /* ChangeType.Added */ === n.type ? this.Cu = this.Cu.remove(e) : 1 /* ChangeType.Removed */ === t.type && 2 /* ChangeType.Modified */ === n.type ? this.Cu = this.Cu.insert(e, {\n            type: 1 /* ChangeType.Removed */ ,\n            doc: n.doc\n        }) : 0 /* ChangeType.Added */ === t.type && 1 /* ChangeType.Removed */ === n.type ? this.Cu = this.Cu.insert(e, {\n            type: 2 /* ChangeType.Modified */ ,\n            doc: t.doc\n        }) : \n        // This includes these cases, which don't make sense:\n        // Added->Added\n        // Removed->Removed\n        // Modified->Added\n        // Removed->Modified\n        // Metadata->Added\n        // Removed->Metadata\n        O() : this.Cu = this.Cu.insert(e, t);\n    }\n    xu() {\n        const t = [];\n        return this.Cu.inorderTraversal(((e, n) => {\n            t.push(n);\n        })), t;\n    }\n}\n\nclass Rc {\n    constructor(t, e, n, s, i, r, o, u, c) {\n        this.query = t, this.docs = e, this.oldDocs = n, this.docChanges = s, this.mutatedKeys = i, \n        this.fromCache = r, this.syncStateChanged = o, this.excludesMetadataChanges = u, \n        this.hasCachedResults = c;\n    }\n    /** Returns a view snapshot as if all documents in the snapshot were added. */    static fromInitialDocuments(t, e, n, s, i) {\n        const r = [];\n        return e.forEach((t => {\n            r.push({\n                type: 0 /* ChangeType.Added */ ,\n                doc: t\n            });\n        })), new Rc(t, e, Ac.emptySet(e), r, n, s, \n        /* syncStateChanged= */ !0, \n        /* excludesMetadataChanges= */ !1, i);\n    }\n    get hasPendingWrites() {\n        return !this.mutatedKeys.isEmpty();\n    }\n    isEqual(t) {\n        if (!(this.fromCache === t.fromCache && this.hasCachedResults === t.hasCachedResults && this.syncStateChanged === t.syncStateChanged && this.mutatedKeys.isEqual(t.mutatedKeys) && Zn(this.query, t.query) && this.docs.isEqual(t.docs) && this.oldDocs.isEqual(t.oldDocs))) return !1;\n        const e = this.docChanges, n = t.docChanges;\n        if (e.length !== n.length) return !1;\n        for (let t = 0; t < e.length; t++) if (e[t].type !== n[t].type || !e[t].doc.isEqual(n[t].doc)) return !1;\n        return !0;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Holds the listeners and the last received ViewSnapshot for a query being\n * tracked by EventManager.\n */ class Pc {\n    constructor() {\n        this.Nu = void 0, this.listeners = [];\n    }\n}\n\nclass bc {\n    constructor() {\n        this.queries = new os((t => ts(t)), Zn), this.onlineState = \"Unknown\" /* OnlineState.Unknown */ , \n        this.ku = new Set;\n    }\n}\n\nasync function Vc(t, e) {\n    const n = L(t), s = e.query;\n    let i = !1, r = n.queries.get(s);\n    if (r || (i = !0, r = new Pc), i) try {\n        r.Nu = await n.onListen(s);\n    } catch (t) {\n        const n = Ec(t, `Initialization of query '${es(e.query)}' failed`);\n        return void e.onError(n);\n    }\n    if (n.queries.set(s, r), r.listeners.push(e), \n    // Run global snapshot listeners if a consistent snapshot has been emitted.\n    e.Mu(n.onlineState), r.Nu) {\n        e.$u(r.Nu) && xc(n);\n    }\n}\n\nasync function Sc(t, e) {\n    const n = L(t), s = e.query;\n    let i = !1;\n    const r = n.queries.get(s);\n    if (r) {\n        const t = r.listeners.indexOf(e);\n        t >= 0 && (r.listeners.splice(t, 1), i = 0 === r.listeners.length);\n    }\n    if (i) return n.queries.delete(s), n.onUnlisten(s);\n}\n\nfunction Dc(t, e) {\n    const n = L(t);\n    let s = !1;\n    for (const t of e) {\n        const e = t.query, i = n.queries.get(e);\n        if (i) {\n            for (const e of i.listeners) e.$u(t) && (s = !0);\n            i.Nu = t;\n        }\n    }\n    s && xc(n);\n}\n\nfunction Cc(t, e, n) {\n    const s = L(t), i = s.queries.get(e);\n    if (i) for (const t of i.listeners) t.onError(n);\n    // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()\n    // after an error.\n        s.queries.delete(e);\n}\n\n// Call all global snapshot listeners that have been set.\nfunction xc(t) {\n    t.ku.forEach((t => {\n        t.next();\n    }));\n}\n\n/**\n * QueryListener takes a series of internal view snapshots and determines\n * when to raise the event.\n *\n * It uses an Observer to dispatch events.\n */ class Nc {\n    constructor(t, e, n) {\n        this.query = t, this.Ou = e, \n        /**\n         * Initial snapshots (e.g. from cache) may not be propagated to the wrapped\n         * observer. This flag is set to true once we've actually raised an event.\n         */\n        this.Fu = !1, this.Bu = null, this.onlineState = \"Unknown\" /* OnlineState.Unknown */ , \n        this.options = n || {};\n    }\n    /**\n     * Applies the new ViewSnapshot to this listener, raising a user-facing event\n     * if applicable (depending on what changed, whether the user has opted into\n     * metadata-only changes, etc.). Returns true if a user-facing event was\n     * indeed raised.\n     */    $u(t) {\n        if (!this.options.includeMetadataChanges) {\n            // Remove the metadata only changes.\n            const e = [];\n            for (const n of t.docChanges) 3 /* ChangeType.Metadata */ !== n.type && e.push(n);\n            t = new Rc(t.query, t.docs, t.oldDocs, e, t.mutatedKeys, t.fromCache, t.syncStateChanged, \n            /* excludesMetadataChanges= */ !0, t.hasCachedResults);\n        }\n        let e = !1;\n        return this.Fu ? this.Lu(t) && (this.Ou.next(t), e = !0) : this.qu(t, this.onlineState) && (this.Uu(t), \n        e = !0), this.Bu = t, e;\n    }\n    onError(t) {\n        this.Ou.error(t);\n    }\n    /** Returns whether a snapshot was raised. */    Mu(t) {\n        this.onlineState = t;\n        let e = !1;\n        return this.Bu && !this.Fu && this.qu(this.Bu, t) && (this.Uu(this.Bu), e = !0), \n        e;\n    }\n    qu(t, e) {\n        // Always raise the first event when we're synced\n        if (!t.fromCache) return !0;\n        // NOTE: We consider OnlineState.Unknown as online (it should become Offline\n        // or Online if we wait long enough).\n                const n = \"Offline\" /* OnlineState.Offline */ !== e;\n        // Don't raise the event if we're online, aren't synced yet (checked\n        // above) and are waiting for a sync.\n                return (!this.options.Ku || !n) && (!t.docs.isEmpty() || t.hasCachedResults || \"Offline\" /* OnlineState.Offline */ === e);\n        // Raise data from cache if we have any documents, have cached results before,\n        // or we are offline.\n        }\n    Lu(t) {\n        // We don't need to handle includeDocumentMetadataChanges here because\n        // the Metadata only changes have already been stripped out if needed.\n        // At this point the only changes we will see are the ones we should\n        // propagate.\n        if (t.docChanges.length > 0) return !0;\n        const e = this.Bu && this.Bu.hasPendingWrites !== t.hasPendingWrites;\n        return !(!t.syncStateChanged && !e) && !0 === this.options.includeMetadataChanges;\n        // Generally we should have hit one of the cases above, but it's possible\n        // to get here if there were only metadata docChanges and they got\n        // stripped out.\n        }\n    Uu(t) {\n        t = Rc.fromInitialDocuments(t.query, t.docs, t.mutatedKeys, t.fromCache, t.hasCachedResults), \n        this.Fu = !0, this.Ou.next(t);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A complete element in the bundle stream, together with the byte length it\n * occupies in the stream.\n */ class kc {\n    constructor(t, \n    // How many bytes this element takes to store in the bundle.\n    e) {\n        this.Gu = t, this.byteLength = e;\n    }\n    Qu() {\n        return \"metadata\" in this.Gu;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Helper to convert objects from bundles to model objects in the SDK.\n */ class Mc {\n    constructor(t) {\n        this.serializer = t;\n    }\n    rr(t) {\n        return Oi(this.serializer, t);\n    }\n    /**\n     * Converts a BundleDocument to a MutableDocument.\n     */    ur(t) {\n        return t.metadata.exists ? Ki(this.serializer, t.document, !1) : an.newNoDocument(this.rr(t.metadata.name), this.cr(t.metadata.readTime));\n    }\n    cr(t) {\n        return Ni(t);\n    }\n}\n\n/**\n * A class to process the elements from a bundle, load them into local\n * storage and provide progress update while loading.\n */ class $c {\n    constructor(t, e, n) {\n        this.ju = t, this.localStore = e, this.serializer = n, \n        /** Batched queries to be saved into storage */\n        this.queries = [], \n        /** Batched documents to be saved into storage */\n        this.documents = [], \n        /** The collection groups affected by this bundle. */\n        this.collectionGroups = new Set, this.progress = Oc(t);\n    }\n    /**\n     * Adds an element from the bundle to the loader.\n     *\n     * Returns a new progress if adding the element leads to a new progress,\n     * otherwise returns null.\n     */    zu(t) {\n        this.progress.bytesLoaded += t.byteLength;\n        let e = this.progress.documentsLoaded;\n        if (t.Gu.namedQuery) this.queries.push(t.Gu.namedQuery); else if (t.Gu.documentMetadata) {\n            this.documents.push({\n                metadata: t.Gu.documentMetadata\n            }), t.Gu.documentMetadata.exists || ++e;\n            const n = ut.fromString(t.Gu.documentMetadata.name);\n            this.collectionGroups.add(n.get(n.length - 2));\n        } else t.Gu.document && (this.documents[this.documents.length - 1].document = t.Gu.document, \n        ++e);\n        return e !== this.progress.documentsLoaded ? (this.progress.documentsLoaded = e, \n        Object.assign({}, this.progress)) : null;\n    }\n    Wu(t) {\n        const e = new Map, n = new Mc(this.serializer);\n        for (const s of t) if (s.metadata.queries) {\n            const t = n.rr(s.metadata.name);\n            for (const n of s.metadata.queries) {\n                const s = (e.get(n) || gs()).add(t);\n                e.set(n, s);\n            }\n        }\n        return e;\n    }\n    /**\n     * Update the progress to 'Success' and return the updated progress.\n     */    async complete() {\n        const t = await mu(this.localStore, new Mc(this.serializer), this.documents, this.ju.id), e = this.Wu(this.documents);\n        for (const t of this.queries) await gu(this.localStore, t, e.get(t.name));\n        return this.progress.taskState = \"Success\", {\n            progress: this.progress,\n            Hu: this.collectionGroups,\n            Ju: t\n        };\n    }\n}\n\n/**\n * Returns a `LoadBundleTaskProgress` representing the initial progress of\n * loading a bundle.\n */ function Oc(t) {\n    return {\n        taskState: \"Running\",\n        documentsLoaded: 0,\n        bytesLoaded: 0,\n        totalDocuments: t.totalDocuments,\n        totalBytes: t.totalBytes\n    };\n}\n\n/**\n * Returns a `LoadBundleTaskProgress` representing the progress that the loading\n * has succeeded.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Fc {\n    constructor(t) {\n        this.key = t;\n    }\n}\n\nclass Bc {\n    constructor(t) {\n        this.key = t;\n    }\n}\n\n/**\n * View is responsible for computing the final merged truth of what docs are in\n * a query. It gets notified of local and remote changes to docs, and applies\n * the query filters and limits to determine the most correct possible results.\n */ class Lc {\n    constructor(t, \n    /** Documents included in the remote target */\n    e) {\n        this.query = t, this.Yu = e, this.Xu = null, this.hasCachedResults = !1, \n        /**\n         * A flag whether the view is current with the backend. A view is considered\n         * current after it has seen the current flag from the backend and did not\n         * lose consistency within the watch stream (e.g. because of an existence\n         * filter mismatch).\n         */\n        this.current = !1, \n        /** Documents in the view but not in the remote target */\n        this.Zu = gs(), \n        /** Document Keys that have local changes */\n        this.mutatedKeys = gs(), this.tc = is(t), this.ec = new Ac(this.tc);\n    }\n    /**\n     * The set of remote documents that the server has told us belongs to the target associated with\n     * this view.\n     */    get nc() {\n        return this.Yu;\n    }\n    /**\n     * Iterates over a set of doc changes, applies the query limit, and computes\n     * what the new results should be, what the changes were, and whether we may\n     * need to go back to the local cache for more results. Does not make any\n     * changes to the view.\n     * @param docChanges - The doc changes to apply to this view.\n     * @param previousChanges - If this is being called with a refill, then start\n     *        with this set of docs and changes instead of the current view.\n     * @returns a new set of docs, changes, and refill flag.\n     */    sc(t, e) {\n        const n = e ? e.ic : new vc, s = e ? e.ec : this.ec;\n        let i = e ? e.mutatedKeys : this.mutatedKeys, r = s, o = !1;\n        // Track the last doc in a (full) limit. This is necessary, because some\n        // update (a delete, or an update moving a doc past the old limit) might\n        // mean there is some other document in the local cache that either should\n        // come (1) between the old last limit doc and the new last document, in the\n        // case of updates, or (2) after the new last document, in the case of\n        // deletes. So we keep this doc at the old limit to compare the updates to.\n        // Note that this should never get used in a refill (when previousChanges is\n        // set), because there will only be adds -- no deletes or updates.\n        const u = \"F\" /* LimitType.First */ === this.query.limitType && s.size === this.query.limit ? s.last() : null, c = \"L\" /* LimitType.Last */ === this.query.limitType && s.size === this.query.limit ? s.first() : null;\n        // Drop documents out to meet limit/limitToLast requirement.\n        if (t.inorderTraversal(((t, e) => {\n            const a = s.get(t), h = ns(this.query, e) ? e : null, l = !!a && this.mutatedKeys.has(a.key), f = !!h && (h.hasLocalMutations || \n            // We only consider committed mutations for documents that were\n            // mutated during the lifetime of the view.\n            this.mutatedKeys.has(h.key) && h.hasCommittedMutations);\n            let d = !1;\n            // Calculate change\n                        if (a && h) {\n                a.data.isEqual(h.data) ? l !== f && (n.track({\n                    type: 3 /* ChangeType.Metadata */ ,\n                    doc: h\n                }), d = !0) : this.rc(a, h) || (n.track({\n                    type: 2 /* ChangeType.Modified */ ,\n                    doc: h\n                }), d = !0, (u && this.tc(h, u) > 0 || c && this.tc(h, c) < 0) && (\n                // This doc moved from inside the limit to outside the limit.\n                // That means there may be some other doc in the local cache\n                // that should be included instead.\n                o = !0));\n            } else !a && h ? (n.track({\n                type: 0 /* ChangeType.Added */ ,\n                doc: h\n            }), d = !0) : a && !h && (n.track({\n                type: 1 /* ChangeType.Removed */ ,\n                doc: a\n            }), d = !0, (u || c) && (\n            // A doc was removed from a full limit query. We'll need to\n            // requery from the local cache to see if we know about some other\n            // doc that should be in the results.\n            o = !0));\n            d && (h ? (r = r.add(h), i = f ? i.add(t) : i.delete(t)) : (r = r.delete(t), i = i.delete(t)));\n        })), null !== this.query.limit) for (;r.size > this.query.limit; ) {\n            const t = \"F\" /* LimitType.First */ === this.query.limitType ? r.last() : r.first();\n            r = r.delete(t.key), i = i.delete(t.key), n.track({\n                type: 1 /* ChangeType.Removed */ ,\n                doc: t\n            });\n        }\n        return {\n            ec: r,\n            ic: n,\n            zi: o,\n            mutatedKeys: i\n        };\n    }\n    rc(t, e) {\n        // We suppress the initial change event for documents that were modified as\n        // part of a write acknowledgment (e.g. when the value of a server transform\n        // is applied) as Watch will send us the same document again.\n        // By suppressing the event, we only raise two user visible events (one with\n        // `hasPendingWrites` and the final state of the document) instead of three\n        // (one with `hasPendingWrites`, the modified document with\n        // `hasPendingWrites` and the final state of the document).\n        return t.hasLocalMutations && e.hasCommittedMutations && !e.hasLocalMutations;\n    }\n    /**\n     * Updates the view with the given ViewDocumentChanges and optionally updates\n     * limbo docs and sync state from the provided target change.\n     * @param docChanges - The set of changes to make to the view's docs.\n     * @param updateLimboDocuments - Whether to update limbo documents based on\n     *        this change.\n     * @param targetChange - A target change to apply for computing limbo docs and\n     *        sync state.\n     * @returns A new ViewChange with the given docs, changes, and sync state.\n     */\n    // PORTING NOTE: The iOS/Android clients always compute limbo document changes.\n    applyChanges(t, e, n) {\n        const s = this.ec;\n        this.ec = t.ec, this.mutatedKeys = t.mutatedKeys;\n        // Sort changes based on type and query comparator\n        const i = t.ic.xu();\n        i.sort(((t, e) => function(t, e) {\n            const n = t => {\n                switch (t) {\n                  case 0 /* ChangeType.Added */ :\n                    return 1;\n\n                  case 2 /* ChangeType.Modified */ :\n                  case 3 /* ChangeType.Metadata */ :\n                    // A metadata change is converted to a modified change at the public\n                    // api layer.  Since we sort by document key and then change type,\n                    // metadata and modified changes must be sorted equivalently.\n                    return 2;\n\n                  case 1 /* ChangeType.Removed */ :\n                    return 0;\n\n                  default:\n                    return O();\n                }\n            };\n            return n(t) - n(e);\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t.type, e.type) || this.tc(t.doc, e.doc))), this.oc(n);\n        const r = e ? this.uc() : [], o = 0 === this.Zu.size && this.current ? 1 /* SyncState.Synced */ : 0 /* SyncState.Local */ , u = o !== this.Xu;\n        if (this.Xu = o, 0 !== i.length || u) {\n            return {\n                snapshot: new Rc(this.query, t.ec, s, i, t.mutatedKeys, 0 /* SyncState.Local */ === o, u, \n                /* excludesMetadataChanges= */ !1, !!n && n.resumeToken.approximateByteSize() > 0),\n                cc: r\n            };\n        }\n        // no changes\n        return {\n            cc: r\n        };\n    }\n    /**\n     * Applies an OnlineState change to the view, potentially generating a\n     * ViewChange if the view's syncState changes as a result.\n     */    Mu(t) {\n        return this.current && \"Offline\" /* OnlineState.Offline */ === t ? (\n        // If we're offline, set `current` to false and then call applyChanges()\n        // to refresh our syncState and generate a ViewChange as appropriate. We\n        // are guaranteed to get a new TargetChange that sets `current` back to\n        // true once the client is back online.\n        this.current = !1, this.applyChanges({\n            ec: this.ec,\n            ic: new vc,\n            mutatedKeys: this.mutatedKeys,\n            zi: !1\n        }, \n        /* updateLimboDocuments= */ !1)) : {\n            cc: []\n        };\n    }\n    /**\n     * Returns whether the doc for the given key should be in limbo.\n     */    ac(t) {\n        // If the remote end says it's part of this query, it's not in limbo.\n        return !this.Yu.has(t) && (\n        // The local store doesn't think it's a result, so it shouldn't be in limbo.\n        !!this.ec.has(t) && !this.ec.get(t).hasLocalMutations);\n    }\n    /**\n     * Updates syncedDocuments, current, and limbo docs based on the given change.\n     * Returns the list of changes to which docs are in limbo.\n     */    oc(t) {\n        t && (t.addedDocuments.forEach((t => this.Yu = this.Yu.add(t))), t.modifiedDocuments.forEach((t => {})), \n        t.removedDocuments.forEach((t => this.Yu = this.Yu.delete(t))), this.current = t.current);\n    }\n    uc() {\n        // We can only determine limbo documents when we're in-sync with the server.\n        if (!this.current) return [];\n        // TODO(klimt): Do this incrementally so that it's not quadratic when\n        // updating many documents.\n                const t = this.Zu;\n        this.Zu = gs(), this.ec.forEach((t => {\n            this.ac(t.key) && (this.Zu = this.Zu.add(t.key));\n        }));\n        // Diff the new limbo docs with the old limbo docs.\n        const e = [];\n        return t.forEach((t => {\n            this.Zu.has(t) || e.push(new Bc(t));\n        })), this.Zu.forEach((n => {\n            t.has(n) || e.push(new Fc(n));\n        })), e;\n    }\n    /**\n     * Update the in-memory state of the current view with the state read from\n     * persistence.\n     *\n     * We update the query view whenever a client's primary status changes:\n     * - When a client transitions from primary to secondary, it can miss\n     *   LocalStorage updates and its query views may temporarily not be\n     *   synchronized with the state on disk.\n     * - For secondary to primary transitions, the client needs to update the list\n     *   of `syncedDocuments` since secondary clients update their query views\n     *   based purely on synthesized RemoteEvents.\n     *\n     * @param queryResult.documents - The documents that match the query according\n     * to the LocalStore.\n     * @param queryResult.remoteKeys - The keys of the documents that match the\n     * query according to the backend.\n     *\n     * @returns The ViewChange that resulted from this synchronization.\n     */\n    // PORTING NOTE: Multi-tab only.\n    hc(t) {\n        this.Yu = t.ir, this.Zu = gs();\n        const e = this.sc(t.documents);\n        return this.applyChanges(e, /*updateLimboDocuments=*/ !0);\n    }\n    /**\n     * Returns a view snapshot as if this query was just listened to. Contains\n     * a document add for every existing document and the `fromCache` and\n     * `hasPendingWrites` status of the already established view.\n     */\n    // PORTING NOTE: Multi-tab only.\n    lc() {\n        return Rc.fromInitialDocuments(this.query, this.ec, this.mutatedKeys, 0 /* SyncState.Local */ === this.Xu, this.hasCachedResults);\n    }\n}\n\n/**\n * QueryView contains all of the data that SyncEngine needs to keep track of for\n * a particular query.\n */\nclass qc {\n    constructor(\n    /**\n     * The query itself.\n     */\n    t, \n    /**\n     * The target number created by the client that is used in the watch\n     * stream to identify this query.\n     */\n    e, \n    /**\n     * The view is responsible for computing the final merged truth of what\n     * docs are in the query. It gets notified of local and remote changes,\n     * and applies the query filters and limits to determine the most correct\n     * possible results.\n     */\n    n) {\n        this.query = t, this.targetId = e, this.view = n;\n    }\n}\n\n/** Tracks a limbo resolution. */ class Uc {\n    constructor(t) {\n        this.key = t, \n        /**\n         * Set to true once we've received a document. This is used in\n         * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to\n         * decide whether it needs to manufacture a delete event for the target once\n         * the target is CURRENT.\n         */\n        this.fc = !1;\n    }\n}\n\n/**\n * An implementation of `SyncEngine` coordinating with other parts of SDK.\n *\n * The parts of SyncEngine that act as a callback to RemoteStore need to be\n * registered individually. This is done in `syncEngineWrite()` and\n * `syncEngineListen()` (as well as `applyPrimaryState()`) as these methods\n * serve as entry points to RemoteStore's functionality.\n *\n * Note: some field defined in this class might have public access level, but\n * the class is not exported so they are only accessible from this module.\n * This is useful to implement optional features (like bundles) in free\n * functions, such that they are tree-shakeable.\n */ class Kc {\n    constructor(t, e, n, \n    // PORTING NOTE: Manages state synchronization in multi-tab environments.\n    s, i, r) {\n        this.localStore = t, this.remoteStore = e, this.eventManager = n, this.sharedClientState = s, \n        this.currentUser = i, this.maxConcurrentLimboResolutions = r, this.dc = {}, this.wc = new os((t => ts(t)), Zn), \n        this._c = new Map, \n        /**\n         * The keys of documents that are in limbo for which we haven't yet started a\n         * limbo resolution query. The strings in this set are the result of calling\n         * `key.path.canonicalString()` where `key` is a `DocumentKey` object.\n         *\n         * The `Set` type was chosen because it provides efficient lookup and removal\n         * of arbitrary elements and it also maintains insertion order, providing the\n         * desired queue-like FIFO semantics.\n         */\n        this.mc = new Set, \n        /**\n         * Keeps track of the target ID for each document that is in limbo with an\n         * active target.\n         */\n        this.gc = new pe(ht.comparator), \n        /**\n         * Keeps track of the information about an active limbo resolution for each\n         * active target ID that was started for the purpose of limbo resolution.\n         */\n        this.yc = new Map, this.Ic = new Oo, \n        /** Stores user completion handlers, indexed by User and BatchId. */\n        this.Tc = {}, \n        /** Stores user callbacks waiting for all pending writes to be acknowledged. */\n        this.Ec = new Map, this.Ac = lo.Mn(), this.onlineState = \"Unknown\" /* OnlineState.Unknown */ , \n        // The primary state is set to `true` or `false` immediately after Firestore\n        // startup. In the interim, a client should only be considered primary if\n        // `isPrimary` is true.\n        this.vc = void 0;\n    }\n    get isPrimaryClient() {\n        return !0 === this.vc;\n    }\n}\n\n/**\n * Initiates the new listen, resolves promise when listen enqueued to the\n * server. All the subsequent view snapshots or errors are sent to the\n * subscribed handlers. Returns the initial snapshot.\n */\nasync function Gc(t, e) {\n    const n = pa(t);\n    let s, i;\n    const r = n.wc.get(e);\n    if (r) \n    // PORTING NOTE: With Multi-Tab Web, it is possible that a query view\n    // already exists when EventManager calls us for the first time. This\n    // happens when the primary tab is already listening to this query on\n    // behalf of another tab and the user of the primary also starts listening\n    // to the query. EventManager will not have an assigned target ID in this\n    // case and calls `listen` to obtain this ID.\n    s = r.targetId, n.sharedClientState.addLocalQueryTarget(s), i = r.view.lc(); else {\n        const t = await hu(n.localStore, Jn(e)), r = n.sharedClientState.addLocalQueryTarget(t.targetId);\n        s = t.targetId, i = await Qc(n, e, s, \"current\" === r, t.resumeToken), n.isPrimaryClient && Hu(n.remoteStore, t);\n    }\n    return i;\n}\n\n/**\n * Registers a view for a previously unknown query and computes its initial\n * snapshot.\n */ async function Qc(t, e, n, s, i) {\n    // PORTING NOTE: On Web only, we inject the code that registers new Limbo\n    // targets based on view changes. This allows us to only depend on Limbo\n    // changes when user code includes queries.\n    t.Rc = (e, n, s) => async function(t, e, n, s) {\n        let i = e.view.sc(n);\n        i.zi && (\n        // The query has a limit and some docs were removed, so we need\n        // to re-run the query against the local store to make sure we\n        // didn't lose any good docs that had been past the limit.\n        i = await fu(t.localStore, e.query, \n        /* usePreviousResults= */ !1).then((({documents: t}) => e.view.sc(t, i))));\n        const r = s && s.targetChanges.get(e.targetId), o = e.view.applyChanges(i, \n        /* updateLimboDocuments= */ t.isPrimaryClient, r);\n        return ia(t, e.targetId, o.cc), o.snapshot;\n    }(t, e, n, s);\n    const r = await fu(t.localStore, e, \n    /* usePreviousResults= */ !0), o = new Lc(e, r.ir), u = o.sc(r.documents), c = gi.createSynthesizedTargetChangeForCurrentChange(n, s && \"Offline\" /* OnlineState.Offline */ !== t.onlineState, i), a = o.applyChanges(u, \n    /* updateLimboDocuments= */ t.isPrimaryClient, c);\n    ia(t, n, a.cc);\n    const h = new qc(e, n, o);\n    return t.wc.set(e, h), t._c.has(n) ? t._c.get(n).push(e) : t._c.set(n, [ e ]), a.snapshot;\n}\n\n/** Stops listening to the query. */ async function jc(t, e) {\n    const n = L(t), s = n.wc.get(e), i = n._c.get(s.targetId);\n    if (i.length > 1) return n._c.set(s.targetId, i.filter((t => !Zn(t, e)))), void n.wc.delete(e);\n    // No other queries are mapped to the target, clean up the query and the target.\n        if (n.isPrimaryClient) {\n        // We need to remove the local query target first to allow us to verify\n        // whether any other client is still interested in this target.\n        n.sharedClientState.removeLocalQueryTarget(s.targetId);\n        n.sharedClientState.isActiveQueryTarget(s.targetId) || await lu(n.localStore, s.targetId, \n        /*keepPersistedTargetData=*/ !1).then((() => {\n            n.sharedClientState.clearQueryState(s.targetId), Ju(n.remoteStore, s.targetId), \n            na(n, s.targetId);\n        })).catch(vt);\n    } else na(n, s.targetId), await lu(n.localStore, s.targetId, \n    /*keepPersistedTargetData=*/ !0);\n}\n\n/**\n * Initiates the write of local mutation batch which involves adding the\n * writes to the mutation queue, notifying the remote store about new\n * mutations and raising events for any changes this write caused.\n *\n * The promise returned by this call is resolved when the above steps\n * have completed, *not* when the write was acked by the backend. The\n * userCallback is resolved once the write was acked/rejected by the\n * backend (or failed locally for any other reason).\n */ async function zc(t, e, n) {\n    const s = Ia(t);\n    try {\n        const t = await function(t, e) {\n            const n = L(t), s = it.now(), i = e.reduce(((t, e) => t.add(e.key)), gs());\n            let r, o;\n            return n.persistence.runTransaction(\"Locally write mutations\", \"readwrite\", (t => {\n                // Figure out which keys do not have a remote version in the cache, this\n                // is needed to create the right overlay mutation: if no remote version\n                // presents, we do not need to create overlays as patch mutations.\n                // TODO(Overlay): Is there a better way to determine this? Using the\n                //  document version does not work because local mutations set them back\n                //  to 0.\n                let u = cs(), c = gs();\n                return n.Zi.getEntries(t, i).next((t => {\n                    u = t, u.forEach(((t, e) => {\n                        e.isValidDocument() || (c = c.add(t));\n                    }));\n                })).next((() => n.localDocuments.getOverlayedDocuments(t, u))).next((i => {\n                    r = i;\n                    // For non-idempotent mutations (such as `FieldValue.increment()`),\n                    // we record the base state in a separate patch mutation. This is\n                    // later used to guarantee consistent values and prevents flicker\n                    // even if the backend sends us an update that already includes our\n                    // transform.\n                    const o = [];\n                    for (const t of e) {\n                        const e = Gs(t, r.get(t.key).overlayedDocument);\n                        null != e && \n                        // NOTE: The base state should only be applied if there's some\n                        // existing document to override, so use a Precondition of\n                        // exists=true\n                        o.push(new zs(t.key, e, cn(e.value.mapValue), Fs.exists(!0)));\n                    }\n                    return n.mutationQueue.addMutationBatch(t, s, o, e);\n                })).next((e => {\n                    o = e;\n                    const s = e.applyToLocalDocumentSet(r, c);\n                    return n.documentOverlayCache.saveOverlays(t, e.batchId, s);\n                }));\n            })).then((() => ({\n                batchId: o.batchId,\n                changes: ls(r)\n            })));\n        }(s.localStore, e);\n        s.sharedClientState.addPendingMutation(t.batchId), function(t, e, n) {\n            let s = t.Tc[t.currentUser.toKey()];\n            s || (s = new pe(et));\n            s = s.insert(e, n), t.Tc[t.currentUser.toKey()] = s;\n        }\n        /**\n * Resolves or rejects the user callback for the given batch and then discards\n * it.\n */ (s, t.batchId, n), await ua(s, t.changes), await cc(s.remoteStore);\n    } catch (t) {\n        // If we can't persist the mutation, we reject the user callback and\n        // don't send the mutation. The user can then retry the write.\n        const e = Ec(t, \"Failed to persist write\");\n        n.reject(e);\n    }\n}\n\n/**\n * Applies one remote event to the sync engine, notifying any views of the\n * changes, and releasing any pending mutation batches that would become\n * visible because of the snapshot version the remote event contains.\n */ async function Wc(t, e) {\n    const n = L(t);\n    try {\n        const t = await uu(n.localStore, e);\n        // Update `receivedDocument` as appropriate for any limbo targets.\n                e.targetChanges.forEach(((t, e) => {\n            const s = n.yc.get(e);\n            s && (\n            // Since this is a limbo resolution lookup, it's for a single document\n            // and it could be added, modified, or removed, but not a combination.\n            F(t.addedDocuments.size + t.modifiedDocuments.size + t.removedDocuments.size <= 1), \n            t.addedDocuments.size > 0 ? s.fc = !0 : t.modifiedDocuments.size > 0 ? F(s.fc) : t.removedDocuments.size > 0 && (F(s.fc), \n            s.fc = !1));\n        })), await ua(n, t, e);\n    } catch (t) {\n        await vt(t);\n    }\n}\n\n/**\n * Applies an OnlineState change to the sync engine and notifies any views of\n * the change.\n */ function Hc(t, e, n) {\n    const s = L(t);\n    // If we are the secondary client, we explicitly ignore the remote store's\n    // online state (the local client may go offline, even though the primary\n    // tab remains online) and only apply the primary tab's online state from\n    // SharedClientState.\n        if (s.isPrimaryClient && 0 /* OnlineStateSource.RemoteStore */ === n || !s.isPrimaryClient && 1 /* OnlineStateSource.SharedClientState */ === n) {\n        const t = [];\n        s.wc.forEach(((n, s) => {\n            const i = s.view.Mu(e);\n            i.snapshot && t.push(i.snapshot);\n        })), function(t, e) {\n            const n = L(t);\n            n.onlineState = e;\n            let s = !1;\n            n.queries.forEach(((t, n) => {\n                for (const t of n.listeners) \n                // Run global snapshot listeners if a consistent snapshot has been emitted.\n                t.Mu(e) && (s = !0);\n            })), s && xc(n);\n        }(s.eventManager, e), t.length && s.dc.nu(t), s.onlineState = e, s.isPrimaryClient && s.sharedClientState.setOnlineState(e);\n    }\n}\n\n/**\n * Rejects the listen for the given targetID. This can be triggered by the\n * backend for any active target.\n *\n * @param syncEngine - The sync engine implementation.\n * @param targetId - The targetID corresponds to one previously initiated by the\n * user as part of TargetData passed to listen() on RemoteStore.\n * @param err - A description of the condition that has forced the rejection.\n * Nearly always this will be an indication that the user is no longer\n * authorized to see the data matching the target.\n */ async function Jc(t, e, n) {\n    const s = L(t);\n    // PORTING NOTE: Multi-tab only.\n        s.sharedClientState.updateQueryState(e, \"rejected\", n);\n    const i = s.yc.get(e), r = i && i.key;\n    if (r) {\n        // TODO(klimt): We really only should do the following on permission\n        // denied errors, but we don't have the cause code here.\n        // It's a limbo doc. Create a synthetic event saying it was deleted.\n        // This is kind of a hack. Ideally, we would have a method in the local\n        // store to purge a document. However, it would be tricky to keep all of\n        // the local store's invariants with another method.\n        let t = new pe(ht.comparator);\n        // TODO(b/217189216): This limbo document should ideally have a read time,\n        // so that it is picked up by any read-time based scans. The backend,\n        // however, does not send a read time for target removals.\n                t = t.insert(r, an.newNoDocument(r, rt.min()));\n        const n = gs().add(r), i = new mi(rt.min(), \n        /* targetChanges= */ new Map, \n        /* targetMismatches= */ new pe(et), t, n);\n        await Wc(s, i), \n        // Since this query failed, we won't want to manually unlisten to it.\n        // We only remove it from bookkeeping after we successfully applied the\n        // RemoteEvent. If `applyRemoteEvent()` throws, we want to re-listen to\n        // this query when the RemoteStore restarts the Watch stream, which should\n        // re-trigger the target failure.\n        s.gc = s.gc.remove(r), s.yc.delete(e), oa(s);\n    } else await lu(s.localStore, e, \n    /* keepPersistedTargetData */ !1).then((() => na(s, e, n))).catch(vt);\n}\n\nasync function Yc(t, e) {\n    const n = L(t), s = e.batch.batchId;\n    try {\n        const t = await ru(n.localStore, e);\n        // The local store may or may not be able to apply the write result and\n        // raise events immediately (depending on whether the watcher is caught\n        // up), so we raise user callbacks first so that they consistently happen\n        // before listen events.\n                ea(n, s, /*error=*/ null), ta(n, s), n.sharedClientState.updateMutationState(s, \"acknowledged\"), \n        await ua(n, t);\n    } catch (t) {\n        await vt(t);\n    }\n}\n\nasync function Xc(t, e, n) {\n    const s = L(t);\n    try {\n        const t = await function(t, e) {\n            const n = L(t);\n            return n.persistence.runTransaction(\"Reject batch\", \"readwrite-primary\", (t => {\n                let s;\n                return n.mutationQueue.lookupMutationBatch(t, e).next((e => (F(null !== e), s = e.keys(), \n                n.mutationQueue.removeMutationBatch(t, e)))).next((() => n.mutationQueue.performConsistencyCheck(t))).next((() => n.documentOverlayCache.removeOverlaysForBatchId(t, s, e))).next((() => n.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(t, s))).next((() => n.localDocuments.getDocuments(t, s)));\n            }));\n        }\n        /**\n * Returns the largest (latest) batch id in mutation queue that is pending\n * server response.\n *\n * Returns `BATCHID_UNKNOWN` if the queue is empty.\n */ (s.localStore, e);\n        // The local store may or may not be able to apply the write result and\n        // raise events immediately (depending on whether the watcher is caught up),\n        // so we raise user callbacks first so that they consistently happen before\n        // listen events.\n                ea(s, e, n), ta(s, e), s.sharedClientState.updateMutationState(e, \"rejected\", n), \n        await ua(s, t);\n    } catch (n) {\n        await vt(n);\n    }\n}\n\n/**\n * Registers a user callback that resolves when all pending mutations at the moment of calling\n * are acknowledged .\n */ async function Zc(t, e) {\n    const n = L(t);\n    ec(n.remoteStore) || N(\"SyncEngine\", \"The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled.\");\n    try {\n        const t = await function(t) {\n            const e = L(t);\n            return e.persistence.runTransaction(\"Get highest unacknowledged batch id\", \"readonly\", (t => e.mutationQueue.getHighestUnacknowledgedBatchId(t)));\n        }(n.localStore);\n        if (-1 === t) \n        // Trigger the callback right away if there is no pending writes at the moment.\n        return void e.resolve();\n        const s = n.Ec.get(t) || [];\n        s.push(e), n.Ec.set(t, s);\n    } catch (t) {\n        const n = Ec(t, \"Initialization of waitForPendingWrites() operation failed\");\n        e.reject(n);\n    }\n}\n\n/**\n * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,\n * if there are any.\n */ function ta(t, e) {\n    (t.Ec.get(e) || []).forEach((t => {\n        t.resolve();\n    })), t.Ec.delete(e);\n}\n\n/** Reject all outstanding callbacks waiting for pending writes to complete. */ function ea(t, e, n) {\n    const s = L(t);\n    let i = s.Tc[s.currentUser.toKey()];\n    // NOTE: Mutations restored from persistence won't have callbacks, so it's\n    // okay for there to be no callback for this ID.\n        if (i) {\n        const t = i.get(e);\n        t && (n ? t.reject(n) : t.resolve(), i = i.remove(e)), s.Tc[s.currentUser.toKey()] = i;\n    }\n}\n\nfunction na(t, e, n = null) {\n    t.sharedClientState.removeLocalQueryTarget(e);\n    for (const s of t._c.get(e)) t.wc.delete(s), n && t.dc.Pc(s, n);\n    if (t._c.delete(e), t.isPrimaryClient) {\n        t.Ic.Is(e).forEach((e => {\n            t.Ic.containsKey(e) || \n            // We removed the last reference for this key\n            sa(t, e);\n        }));\n    }\n}\n\nfunction sa(t, e) {\n    t.mc.delete(e.path.canonicalString());\n    // It's possible that the target already got removed because the query failed. In that case,\n    // the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.\n    const n = t.gc.get(e);\n    null !== n && (Ju(t.remoteStore, n), t.gc = t.gc.remove(e), t.yc.delete(n), oa(t));\n}\n\nfunction ia(t, e, n) {\n    for (const s of n) if (s instanceof Fc) t.Ic.addReference(s.key, e), ra(t, s); else if (s instanceof Bc) {\n        N(\"SyncEngine\", \"Document no longer in limbo: \" + s.key), t.Ic.removeReference(s.key, e);\n        t.Ic.containsKey(s.key) || \n        // We removed the last reference for this key\n        sa(t, s.key);\n    } else O();\n}\n\nfunction ra(t, e) {\n    const n = e.key, s = n.path.canonicalString();\n    t.gc.get(n) || t.mc.has(s) || (N(\"SyncEngine\", \"New document in limbo: \" + n), t.mc.add(s), \n    oa(t));\n}\n\n/**\n * Starts listens for documents in limbo that are enqueued for resolution,\n * subject to a maximum number of concurrent resolutions.\n *\n * Without bounding the number of concurrent resolutions, the server can fail\n * with \"resource exhausted\" errors which can lead to pathological client\n * behavior as seen in https://github.com/firebase/firebase-js-sdk/issues/2683.\n */ function oa(t) {\n    for (;t.mc.size > 0 && t.gc.size < t.maxConcurrentLimboResolutions; ) {\n        const e = t.mc.values().next().value;\n        t.mc.delete(e);\n        const n = new ht(ut.fromString(e)), s = t.Ac.next();\n        t.yc.set(s, new Uc(n)), t.gc = t.gc.insert(n, s), Hu(t.remoteStore, new cr(Jn(Gn(n.path)), s, \"TargetPurposeLimboResolution\" /* TargetPurpose.LimboResolution */ , Ot.ct));\n    }\n}\n\nasync function ua(t, e, n) {\n    const s = L(t), i = [], r = [], o = [];\n    s.wc.isEmpty() || (s.wc.forEach(((t, u) => {\n        o.push(s.Rc(u, e, n).then((t => {\n            // Update views if there are actual changes.\n            if (\n            // If there are changes, or we are handling a global snapshot, notify\n            // secondary clients to update query state.\n            (t || n) && s.isPrimaryClient && s.sharedClientState.updateQueryState(u.targetId, (null == t ? void 0 : t.fromCache) ? \"not-current\" : \"current\"), \n            t) {\n                i.push(t);\n                const e = tu.Li(u.targetId, t);\n                r.push(e);\n            }\n        })));\n    })), await Promise.all(o), s.dc.nu(i), await async function(t, e) {\n        const n = L(t);\n        try {\n            await n.persistence.runTransaction(\"notifyLocalViewChanges\", \"readwrite\", (t => Rt.forEach(e, (e => Rt.forEach(e.Fi, (s => n.persistence.referenceDelegate.addReference(t, e.targetId, s))).next((() => Rt.forEach(e.Bi, (s => n.persistence.referenceDelegate.removeReference(t, e.targetId, s)))))))));\n        } catch (t) {\n            if (!Dt(t)) throw t;\n            // If `notifyLocalViewChanges` fails, we did not advance the sequence\n            // number for the documents that were included in this transaction.\n            // This might trigger them to be deleted earlier than they otherwise\n            // would have, but it should not invalidate the integrity of the data.\n            N(\"LocalStore\", \"Failed to update sequence numbers: \" + t);\n        }\n        for (const t of e) {\n            const e = t.targetId;\n            if (!t.fromCache) {\n                const t = n.Ji.get(e), s = t.snapshotVersion, i = t.withLastLimboFreeSnapshotVersion(s);\n                // Advance the last limbo free snapshot version\n                                n.Ji = n.Ji.insert(e, i);\n            }\n        }\n    }(s.localStore, r));\n}\n\nasync function ca(t, e) {\n    const n = L(t);\n    if (!n.currentUser.isEqual(e)) {\n        N(\"SyncEngine\", \"User change. New user:\", e.toKey());\n        const t = await iu(n.localStore, e);\n        n.currentUser = e, \n        // Fails tasks waiting for pending writes requested by previous user.\n        function(t, e) {\n            t.Ec.forEach((t => {\n                t.forEach((t => {\n                    t.reject(new U(q.CANCELLED, e));\n                }));\n            })), t.Ec.clear();\n        }(n, \"'waitForPendingWrites' promise is rejected due to a user change.\"), \n        // TODO(b/114226417): Consider calling this only in the primary tab.\n        n.sharedClientState.handleUserChange(e, t.removedBatchIds, t.addedBatchIds), await ua(n, t.er);\n    }\n}\n\nfunction aa(t, e) {\n    const n = L(t), s = n.yc.get(e);\n    if (s && s.fc) return gs().add(s.key);\n    {\n        let t = gs();\n        const s = n._c.get(e);\n        if (!s) return t;\n        for (const e of s) {\n            const s = n.wc.get(e);\n            t = t.unionWith(s.view.nc);\n        }\n        return t;\n    }\n}\n\n/**\n * Reconcile the list of synced documents in an existing view with those\n * from persistence.\n */ async function ha(t, e) {\n    const n = L(t), s = await fu(n.localStore, e.query, \n    /* usePreviousResults= */ !0), i = e.view.hc(s);\n    return n.isPrimaryClient && ia(n, e.targetId, i.cc), i;\n}\n\n/**\n * Retrieves newly changed documents from remote document cache and raises\n * snapshots if needed.\n */\n// PORTING NOTE: Multi-Tab only.\nasync function la(t, e) {\n    const n = L(t);\n    return wu(n.localStore, e).then((t => ua(n, t)));\n}\n\n/** Applies a mutation state to an existing batch.  */\n// PORTING NOTE: Multi-Tab only.\nasync function fa(t, e, n, s) {\n    const i = L(t), r = await function(t, e) {\n        const n = L(t), s = L(n.mutationQueue);\n        return n.persistence.runTransaction(\"Lookup mutation documents\", \"readonly\", (t => s.Sn(t, e).next((e => e ? n.localDocuments.getDocuments(t, e) : Rt.resolve(null)))));\n    }\n    // PORTING NOTE: Multi-Tab only.\n    (i.localStore, e);\n    null !== r ? (\"pending\" === n ? \n    // If we are the primary client, we need to send this write to the\n    // backend. Secondary clients will ignore these writes since their remote\n    // connection is disabled.\n    await cc(i.remoteStore) : \"acknowledged\" === n || \"rejected\" === n ? (\n    // NOTE: Both these methods are no-ops for batches that originated from\n    // other clients.\n    ea(i, e, s || null), ta(i, e), function(t, e) {\n        L(L(t).mutationQueue).Cn(e);\n    }\n    // PORTING NOTE: Multi-Tab only.\n    (i.localStore, e)) : O(), await ua(i, r)) : \n    // A throttled tab may not have seen the mutation before it was completed\n    // and removed from the mutation queue, in which case we won't have cached\n    // the affected documents. In this case we can safely ignore the update\n    // since that means we didn't apply the mutation locally at all (if we\n    // had, we would have cached the affected documents), and so we will just\n    // see any resulting document changes via normal remote document updates\n    // as applicable.\n    N(\"SyncEngine\", \"Cannot apply mutation batch with id: \" + e);\n}\n\n/** Applies a query target change from a different tab. */\n// PORTING NOTE: Multi-Tab only.\nasync function da(t, e) {\n    const n = L(t);\n    if (pa(n), Ia(n), !0 === e && !0 !== n.vc) {\n        // Secondary tabs only maintain Views for their local listeners and the\n        // Views internal state may not be 100% populated (in particular\n        // secondary tabs don't track syncedDocuments, the set of documents the\n        // server considers to be in the target). So when a secondary becomes\n        // primary, we need to need to make sure that all views for all targets\n        // match the state on disk.\n        const t = n.sharedClientState.getAllActiveQueryTargets(), e = await wa(n, t.toArray());\n        n.vc = !0, await yc(n.remoteStore, !0);\n        for (const t of e) Hu(n.remoteStore, t);\n    } else if (!1 === e && !1 !== n.vc) {\n        const t = [];\n        let e = Promise.resolve();\n        n._c.forEach(((s, i) => {\n            n.sharedClientState.isLocalQueryTarget(i) ? t.push(i) : e = e.then((() => (na(n, i), \n            lu(n.localStore, i, \n            /*keepPersistedTargetData=*/ !0)))), Ju(n.remoteStore, i);\n        })), await e, await wa(n, t), \n        // PORTING NOTE: Multi-Tab only.\n        function(t) {\n            const e = L(t);\n            e.yc.forEach(((t, n) => {\n                Ju(e.remoteStore, n);\n            })), e.Ic.Ts(), e.yc = new Map, e.gc = new pe(ht.comparator);\n        }\n        /**\n * Reconcile the query views of the provided query targets with the state from\n * persistence. Raises snapshots for any changes that affect the local\n * client and returns the updated state of all target's query data.\n *\n * @param syncEngine - The sync engine implementation\n * @param targets - the list of targets with views that need to be recomputed\n * @param transitionToPrimary - `true` iff the tab transitions from a secondary\n * tab to a primary tab\n */\n        // PORTING NOTE: Multi-Tab only.\n        (n), n.vc = !1, await yc(n.remoteStore, !1);\n    }\n}\n\nasync function wa(t, e, n) {\n    const s = L(t), i = [], r = [];\n    for (const t of e) {\n        let e;\n        const n = s._c.get(t);\n        if (n && 0 !== n.length) {\n            // For queries that have a local View, we fetch their current state\n            // from LocalStore (as the resume token and the snapshot version\n            // might have changed) and reconcile their views with the persisted\n            // state (the list of syncedDocuments may have gotten out of sync).\n            e = await hu(s.localStore, Jn(n[0]));\n            for (const t of n) {\n                const e = s.wc.get(t), n = await ha(s, e);\n                n.snapshot && r.push(n.snapshot);\n            }\n        } else {\n            // For queries that never executed on this client, we need to\n            // allocate the target in LocalStore and initialize a new View.\n            const n = await du(s.localStore, t);\n            e = await hu(s.localStore, n), await Qc(s, _a(n), t, \n            /*current=*/ !1, e.resumeToken);\n        }\n        i.push(e);\n    }\n    return s.dc.nu(r), i;\n}\n\n/**\n * Creates a `Query` object from the specified `Target`. There is no way to\n * obtain the original `Query`, so we synthesize a `Query` from the `Target`\n * object.\n *\n * The synthesized result might be different from the original `Query`, but\n * since the synthesized `Query` should return the same results as the\n * original one (only the presentation of results might differ), the potential\n * difference will not cause issues.\n */\n// PORTING NOTE: Multi-Tab only.\nfunction _a(t) {\n    return Kn(t.path, t.collectionGroup, t.orderBy, t.filters, t.limit, \"F\" /* LimitType.First */ , t.startAt, t.endAt);\n}\n\n/** Returns the IDs of the clients that are currently active. */\n// PORTING NOTE: Multi-Tab only.\nfunction ma(t) {\n    const e = L(t);\n    return L(L(e.localStore).persistence).$i();\n}\n\n/** Applies a query target change from a different tab. */\n// PORTING NOTE: Multi-Tab only.\nasync function ga(t, e, n, s) {\n    const i = L(t);\n    if (i.vc) \n    // If we receive a target state notification via WebStorage, we are\n    // either already secondary or another tab has taken the primary lease.\n    return void N(\"SyncEngine\", \"Ignoring unexpected query state notification.\");\n    const r = i._c.get(e);\n    if (r && r.length > 0) switch (n) {\n      case \"current\":\n      case \"not-current\":\n        {\n            const t = await wu(i.localStore, ss(r[0])), s = mi.createSynthesizedRemoteEventForCurrentChange(e, \"current\" === n, Ve.EMPTY_BYTE_STRING);\n            await ua(i, t, s);\n            break;\n        }\n\n      case \"rejected\":\n        await lu(i.localStore, e, \n        /* keepPersistedTargetData */ !0), na(i, e, s);\n        break;\n\n      default:\n        O();\n    }\n}\n\n/** Adds or removes Watch targets for queries from different tabs. */ async function ya(t, e, n) {\n    const s = pa(t);\n    if (s.vc) {\n        for (const t of e) {\n            if (s._c.has(t)) {\n                // A target might have been added in a previous attempt\n                N(\"SyncEngine\", \"Adding an already active target \" + t);\n                continue;\n            }\n            const e = await du(s.localStore, t), n = await hu(s.localStore, e);\n            await Qc(s, _a(e), n.targetId, \n            /*current=*/ !1, n.resumeToken), Hu(s.remoteStore, n);\n        }\n        for (const t of n) \n        // Check that the target is still active since the target might have been\n        // removed if it has been rejected by the backend.\n        s._c.has(t) && \n        // Release queries that are still active.\n        await lu(s.localStore, t, \n        /* keepPersistedTargetData */ !1).then((() => {\n            Ju(s.remoteStore, t), na(s, t);\n        })).catch(vt);\n    }\n}\n\nfunction pa(t) {\n    const e = L(t);\n    return e.remoteStore.remoteSyncer.applyRemoteEvent = Wc.bind(null, e), e.remoteStore.remoteSyncer.getRemoteKeysForTarget = aa.bind(null, e), \n    e.remoteStore.remoteSyncer.rejectListen = Jc.bind(null, e), e.dc.nu = Dc.bind(null, e.eventManager), \n    e.dc.Pc = Cc.bind(null, e.eventManager), e;\n}\n\nfunction Ia(t) {\n    const e = L(t);\n    return e.remoteStore.remoteSyncer.applySuccessfulWrite = Yc.bind(null, e), e.remoteStore.remoteSyncer.rejectFailedWrite = Xc.bind(null, e), \n    e;\n}\n\n/**\n * Loads a Firestore bundle into the SDK. The returned promise resolves when\n * the bundle finished loading.\n *\n * @param syncEngine - SyncEngine to use.\n * @param bundleReader - Bundle to load into the SDK.\n * @param task - LoadBundleTask used to update the loading progress to public API.\n */ function Ta(t, e, n) {\n    const s = L(t);\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        (\n    /** Loads a bundle and returns the list of affected collection groups. */\n    async function(t, e, n) {\n        try {\n            const s = await e.getMetadata();\n            if (await function(t, e) {\n                const n = L(t), s = Ni(e.createTime);\n                return n.persistence.runTransaction(\"hasNewerBundle\", \"readonly\", (t => n.qs.getBundleMetadata(t, e.id))).then((t => !!t && t.createTime.compareTo(s) >= 0));\n            }\n            /**\n * Saves the given `BundleMetadata` to local persistence.\n */ (t.localStore, s)) return await e.close(), n._completeWith(function(t) {\n                return {\n                    taskState: \"Success\",\n                    documentsLoaded: t.totalDocuments,\n                    bytesLoaded: t.totalBytes,\n                    totalDocuments: t.totalDocuments,\n                    totalBytes: t.totalBytes\n                };\n            }(s)), Promise.resolve(new Set);\n            n._updateProgress(Oc(s));\n            const i = new $c(s, t.localStore, e.serializer);\n            let r = await e.bc();\n            for (;r; ) {\n                const t = await i.zu(r);\n                t && n._updateProgress(t), r = await e.bc();\n            }\n            const o = await i.complete();\n            return await ua(t, o.Ju, \n            /* remoteEvent */ void 0), \n            // Save metadata, so loading the same bundle will skip.\n            await function(t, e) {\n                const n = L(t);\n                return n.persistence.runTransaction(\"Save bundle\", \"readwrite\", (t => n.qs.saveBundleMetadata(t, e)));\n            }\n            /**\n * Returns a promise of a `NamedQuery` associated with given query name. Promise\n * resolves to undefined if no persisted data can be found.\n */ (t.localStore, s), n._completeWith(o.progress), Promise.resolve(o.Hu);\n        } catch (t) {\n            return M(\"SyncEngine\", `Loading bundle failed with ${t}`), n._failWith(t), Promise.resolve(new Set);\n        }\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Provides all components needed for Firestore with in-memory persistence.\n * Uses EagerGC garbage collection.\n */)(s, e, n).then((t => {\n        s.sharedClientState.notifyBundleLoaded(t);\n    }));\n}\n\nclass Ea {\n    constructor() {\n        this.synchronizeTabs = !1;\n    }\n    async initialize(t) {\n        this.serializer = Fu(t.databaseInfo.databaseId), this.sharedClientState = this.createSharedClientState(t), \n        this.persistence = this.createPersistence(t), await this.persistence.start(), this.localStore = this.createLocalStore(t), \n        this.gcScheduler = this.createGarbageCollectionScheduler(t, this.localStore), this.indexBackfillerScheduler = this.createIndexBackfillerScheduler(t, this.localStore);\n    }\n    createGarbageCollectionScheduler(t, e) {\n        return null;\n    }\n    createIndexBackfillerScheduler(t, e) {\n        return null;\n    }\n    createLocalStore(t) {\n        return su(this.persistence, new eu, t.initialUser, this.serializer);\n    }\n    createPersistence(t) {\n        return new Ko(Qo.zs, this.serializer);\n    }\n    createSharedClientState(t) {\n        return new bu;\n    }\n    async terminate() {\n        this.gcScheduler && this.gcScheduler.stop(), await this.sharedClientState.shutdown(), \n        await this.persistence.shutdown();\n    }\n}\n\nclass Aa extends Ea {\n    constructor(t) {\n        super(), this.cacheSizeBytes = t;\n    }\n    createGarbageCollectionScheduler(t, e) {\n        F(this.persistence.referenceDelegate instanceof jo);\n        const n = this.persistence.referenceDelegate.garbageCollector;\n        return new po(n, t.asyncQueue, e);\n    }\n    createPersistence(t) {\n        const e = void 0 !== this.cacheSizeBytes ? so.withCacheSize(this.cacheSizeBytes) : so.DEFAULT;\n        return new Ko((t => jo.zs(t, e)), this.serializer);\n    }\n}\n\n/**\n * Provides all components needed for Firestore with IndexedDB persistence.\n */ class va extends Ea {\n    constructor(t, e, n) {\n        super(), this.Vc = t, this.cacheSizeBytes = e, this.forceOwnership = n, this.synchronizeTabs = !1;\n    }\n    async initialize(t) {\n        await super.initialize(t), await this.Vc.initialize(this, t), \n        // Enqueue writes from a previous session\n        await Ia(this.Vc.syncEngine), await cc(this.Vc.remoteStore), \n        // NOTE: This will immediately call the listener, so we make sure to\n        // set it after localStore / remoteStore are started.\n        await this.persistence.Ii((() => (this.gcScheduler && !this.gcScheduler.started && this.gcScheduler.start(), \n        this.indexBackfillerScheduler && !this.indexBackfillerScheduler.started && this.indexBackfillerScheduler.start(), \n        Promise.resolve())));\n    }\n    createLocalStore(t) {\n        return su(this.persistence, new eu, t.initialUser, this.serializer);\n    }\n    createGarbageCollectionScheduler(t, e) {\n        const n = this.persistence.referenceDelegate.garbageCollector;\n        return new po(n, t.asyncQueue, e);\n    }\n    createIndexBackfillerScheduler(t, e) {\n        const n = new $t(e, this.persistence);\n        return new Mt(t.asyncQueue, n);\n    }\n    createPersistence(t) {\n        const e = Zo(t.databaseInfo.databaseId, t.databaseInfo.persistenceKey), n = void 0 !== this.cacheSizeBytes ? so.withCacheSize(this.cacheSizeBytes) : so.DEFAULT;\n        return new Jo(this.synchronizeTabs, e, t.clientId, n, t.asyncQueue, $u(), Ou(), this.serializer, this.sharedClientState, !!this.forceOwnership);\n    }\n    createSharedClientState(t) {\n        return new bu;\n    }\n}\n\n/**\n * Provides all components needed for Firestore with multi-tab IndexedDB\n * persistence.\n *\n * In the legacy client, this provider is used to provide both multi-tab and\n * non-multi-tab persistence since we cannot tell at build time whether\n * `synchronizeTabs` will be enabled.\n */ class Ra extends va {\n    constructor(t, e) {\n        super(t, e, /* forceOwnership= */ !1), this.Vc = t, this.cacheSizeBytes = e, this.synchronizeTabs = !0;\n    }\n    async initialize(t) {\n        await super.initialize(t);\n        const e = this.Vc.syncEngine;\n        this.sharedClientState instanceof Pu && (this.sharedClientState.syncEngine = {\n            jr: fa.bind(null, e),\n            zr: ga.bind(null, e),\n            Wr: ya.bind(null, e),\n            $i: ma.bind(null, e),\n            Qr: la.bind(null, e)\n        }, await this.sharedClientState.start()), \n        // NOTE: This will immediately call the listener, so we make sure to\n        // set it after localStore / remoteStore are started.\n        await this.persistence.Ii((async t => {\n            await da(this.Vc.syncEngine, t), this.gcScheduler && (t && !this.gcScheduler.started ? this.gcScheduler.start() : t || this.gcScheduler.stop()), \n            this.indexBackfillerScheduler && (t && !this.indexBackfillerScheduler.started ? this.indexBackfillerScheduler.start() : t || this.indexBackfillerScheduler.stop());\n        }));\n    }\n    createSharedClientState(t) {\n        const e = $u();\n        if (!Pu.D(e)) throw new U(q.UNIMPLEMENTED, \"IndexedDB persistence is only available on platforms that support LocalStorage.\");\n        const n = Zo(t.databaseInfo.databaseId, t.databaseInfo.persistenceKey);\n        return new Pu(e, t.asyncQueue, n, t.clientId, t.initialUser);\n    }\n}\n\n/**\n * Initializes and wires the components that are needed to interface with the\n * network.\n */ class Pa {\n    async initialize(t, e) {\n        this.localStore || (this.localStore = t.localStore, this.sharedClientState = t.sharedClientState, \n        this.datastore = this.createDatastore(e), this.remoteStore = this.createRemoteStore(e), \n        this.eventManager = this.createEventManager(e), this.syncEngine = this.createSyncEngine(e, \n        /* startAsPrimary=*/ !t.synchronizeTabs), this.sharedClientState.onlineStateHandler = t => Hc(this.syncEngine, t, 1 /* OnlineStateSource.SharedClientState */), \n        this.remoteStore.remoteSyncer.handleCredentialChange = ca.bind(null, this.syncEngine), \n        await yc(this.remoteStore, this.syncEngine.isPrimaryClient));\n    }\n    createEventManager(t) {\n        return new bc;\n    }\n    createDatastore(t) {\n        const e = Fu(t.databaseInfo.databaseId), n = (s = t.databaseInfo, new Mu(s));\n        var s;\n        /** Return the Platform-specific connectivity monitor. */        return function(t, e, n, s) {\n            return new Ku(t, e, n, s);\n        }(t.authCredentials, t.appCheckCredentials, n, e);\n    }\n    createRemoteStore(t) {\n        return e = this.localStore, n = this.datastore, s = t.asyncQueue, i = t => Hc(this.syncEngine, t, 0 /* OnlineStateSource.RemoteStore */), \n        r = Su.D() ? new Su : new Vu, new ju(e, n, s, i, r);\n        var e, n, s, i, r;\n        /** Re-enables the network. Idempotent. */    }\n    createSyncEngine(t, e) {\n        return function(t, e, n, \n        // PORTING NOTE: Manages state synchronization in multi-tab environments.\n        s, i, r, o) {\n            const u = new Kc(t, e, n, s, i, r);\n            return o && (u.vc = !0), u;\n        }(this.localStore, this.remoteStore, this.eventManager, this.sharedClientState, t.initialUser, t.maxConcurrentLimboResolutions, e);\n    }\n    terminate() {\n        return async function(t) {\n            const e = L(t);\n            N(\"RemoteStore\", \"RemoteStore shutting down.\"), e.vu.add(5 /* OfflineCause.Shutdown */), \n            await Wu(e), e.Pu.shutdown(), \n            // Set the OnlineState to Unknown (rather than Offline) to avoid potentially\n            // triggering spurious listener events with cached data, etc.\n            e.bu.set(\"Unknown\" /* OnlineState.Unknown */);\n        }(this.remoteStore);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * How many bytes to read each time when `ReadableStreamReader.read()` is\n * called. Only applicable for byte streams that we control (e.g. those backed\n * by an UInt8Array).\n */\n/**\n * Builds a `ByteStreamReader` from a UInt8Array.\n * @param source - The data source to use.\n * @param bytesPerRead - How many bytes each `read()` from the returned reader\n *        will read.\n */\nfunction ba(t, e = 10240) {\n    let n = 0;\n    // The TypeScript definition for ReadableStreamReader changed. We use\n    // `any` here to allow this code to compile with different versions.\n    // See https://github.com/microsoft/TypeScript/issues/42970\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        async read() {\n            if (n < t.byteLength) {\n                const s = {\n                    value: t.slice(n, n + e),\n                    done: !1\n                };\n                return n += e, s;\n            }\n            return {\n                done: !0\n            };\n        },\n        async cancel() {},\n        releaseLock() {},\n        closed: Promise.resolve()\n    };\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * On web, a `ReadableStream` is wrapped around by a `ByteStreamReader`.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*\n * A wrapper implementation of Observer<T> that will dispatch events\n * asynchronously. To allow immediate silencing, a mute call is added which\n * causes events scheduled to no longer be raised.\n */\nclass Va {\n    constructor(t) {\n        this.observer = t, \n        /**\n         * When set to true, will not raise future events. Necessary to deal with\n         * async detachment of listener.\n         */\n        this.muted = !1;\n    }\n    next(t) {\n        this.observer.next && this.Sc(this.observer.next, t);\n    }\n    error(t) {\n        this.observer.error ? this.Sc(this.observer.error, t) : k(\"Uncaught Error in snapshot listener:\", t.toString());\n    }\n    Dc() {\n        this.muted = !0;\n    }\n    Sc(t, e) {\n        this.muted || setTimeout((() => {\n            this.muted || t(e);\n        }), 0);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A class representing a bundle.\n *\n * Takes a bundle stream or buffer, and presents abstractions to read bundled\n * elements out of the underlying content.\n */ class Sa {\n    constructor(\n    /** The reader to read from underlying binary bundle data source. */\n    t, e) {\n        this.Cc = t, this.serializer = e, \n        /** Cached bundle metadata. */\n        this.metadata = new K, \n        /**\n         * Internal buffer to hold bundle content, accumulating incomplete element\n         * content.\n         */\n        this.buffer = new Uint8Array, this.xc = new TextDecoder(\"utf-8\"), \n        // Read the metadata (which is the first element).\n        this.Nc().then((t => {\n            t && t.Qu() ? this.metadata.resolve(t.Gu.metadata) : this.metadata.reject(new Error(`The first element of the bundle is not a metadata, it is\\n             ${JSON.stringify(null == t ? void 0 : t.Gu)}`));\n        }), (t => this.metadata.reject(t)));\n    }\n    close() {\n        return this.Cc.cancel();\n    }\n    async getMetadata() {\n        return this.metadata.promise;\n    }\n    async bc() {\n        // Makes sure metadata is read before proceeding.\n        return await this.getMetadata(), this.Nc();\n    }\n    /**\n     * Reads from the head of internal buffer, and pulling more data from\n     * underlying stream if a complete element cannot be found, until an\n     * element(including the prefixed length and the JSON string) is found.\n     *\n     * Once a complete element is read, it is dropped from internal buffer.\n     *\n     * Returns either the bundled element, or null if we have reached the end of\n     * the stream.\n     */    async Nc() {\n        const t = await this.kc();\n        if (null === t) return null;\n        const e = this.xc.decode(t), n = Number(e);\n        isNaN(n) && this.Mc(`length string (${e}) is not valid number`);\n        const s = await this.$c(n);\n        return new kc(JSON.parse(s), t.length + n);\n    }\n    /** First index of '{' from the underlying buffer. */    Oc() {\n        return this.buffer.findIndex((t => t === \"{\".charCodeAt(0)));\n    }\n    /**\n     * Reads from the beginning of the internal buffer, until the first '{', and\n     * return the content.\n     *\n     * If reached end of the stream, returns a null.\n     */    async kc() {\n        for (;this.Oc() < 0; ) {\n            if (await this.Fc()) break;\n        }\n        // Broke out of the loop because underlying stream is closed, and there\n        // happens to be no more data to process.\n                if (0 === this.buffer.length) return null;\n        const t = this.Oc();\n        // Broke out of the loop because underlying stream is closed, but still\n        // cannot find an open bracket.\n                t < 0 && this.Mc(\"Reached the end of bundle when a length string is expected.\");\n        const e = this.buffer.slice(0, t);\n        // Update the internal buffer to drop the read length.\n                return this.buffer = this.buffer.slice(t), e;\n    }\n    /**\n     * Reads from a specified position from the internal buffer, for a specified\n     * number of bytes, pulling more data from the underlying stream if needed.\n     *\n     * Returns a string decoded from the read bytes.\n     */    async $c(t) {\n        for (;this.buffer.length < t; ) {\n            await this.Fc() && this.Mc(\"Reached the end of bundle when more is expected.\");\n        }\n        const e = this.xc.decode(this.buffer.slice(0, t));\n        // Update the internal buffer to drop the read json string.\n                return this.buffer = this.buffer.slice(t), e;\n    }\n    Mc(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        throw this.Cc.cancel(), new Error(`Invalid bundle format: ${t}`);\n    }\n    /**\n     * Pulls more data from underlying stream to internal buffer.\n     * Returns a boolean indicating whether the stream is finished.\n     */    async Fc() {\n        const t = await this.Cc.read();\n        if (!t.done) {\n            const e = new Uint8Array(this.buffer.length + t.value.length);\n            e.set(this.buffer), e.set(t.value, this.buffer.length), this.buffer = e;\n        }\n        return t.done;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\nclass Da {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(q.INVALID_ARGUMENT, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await async function(t, e) {\n            const n = L(t), s = Li(n.serializer) + \"/documents\", i = {\n                documents: e.map((t => $i(n.serializer, t)))\n            }, r = await n.vo(\"BatchGetDocuments\", s, i, e.length), o = new Map;\n            r.forEach((t => {\n                const e = Gi(n.serializer, t);\n                o.set(e.key.toString(), e);\n            }));\n            const u = [];\n            return e.forEach((t => {\n                const e = o.get(t.toString());\n                F(!!e), u.push(e);\n            })), u;\n        }(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Ys(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = ht.fromPath(e);\n            this.mutations.push(new Xs(n, this.precondition(n)));\n        })), await async function(t, e) {\n            const n = L(t), s = Li(n.serializer) + \"/documents\", i = {\n                writes: e.map((t => ji(n.serializer, t)))\n            };\n            await n.Io(\"Commit\", s, i);\n        }(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw O();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = rt.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q.ABORTED, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(rt.min()) ? Fs.exists(!1) : Fs.updateTime(e) : Fs.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(rt.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(q.INVALID_ARGUMENT, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Fs.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Fs.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */ class Ca {\n    constructor(t, e, n, s, i) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = s, \n        this.deferred = i, this.Bc = n.maxAttempts, this.qo = new Bu(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.Bc -= 1, this.Lc();\n    }\n    Lc() {\n        this.qo.No((async () => {\n            const t = new Da(this.datastore), e = this.qc(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.Uc(t);\n                }))));\n            })).catch((t => {\n                this.Uc(t);\n            }));\n        }));\n    }\n    qc(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !Ft(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    Uc(t) {\n        this.Bc > 0 && this.Kc(t) ? (this.Bc -= 1, this.asyncQueue.enqueueAndForget((() => (this.Lc(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Kc(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !oi(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * FirestoreClient is a top-level class that constructs and owns all of the //\n * pieces of the client SDK architecture. It is responsible for creating the //\n * async queue that is shared by all of the other components in the system. //\n */\nclass xa {\n    constructor(t, e, \n    /**\n     * Asynchronous queue responsible for all of our internal processing. When\n     * we get incoming work from the user (via public API) or the network\n     * (incoming GRPC messages), we should always schedule onto this queue.\n     * This ensures all of our work is properly serialized (e.g. we don't\n     * start processing a new operation while the previous one is waiting for\n     * an async I/O to complete).\n     */\n    n, s) {\n        this.authCredentials = t, this.appCheckCredentials = e, this.asyncQueue = n, this.databaseInfo = s, \n        this.user = V.UNAUTHENTICATED, this.clientId = tt.A(), this.authCredentialListener = () => Promise.resolve(), \n        this.appCheckCredentialListener = () => Promise.resolve(), this.authCredentials.start(n, (async t => {\n            N(\"FirestoreClient\", \"Received user=\", t.uid), await this.authCredentialListener(t), \n            this.user = t;\n        })), this.appCheckCredentials.start(n, (t => (N(\"FirestoreClient\", \"Received new app check token=\", t), \n        this.appCheckCredentialListener(t, this.user))));\n    }\n    async getConfiguration() {\n        return {\n            asyncQueue: this.asyncQueue,\n            databaseInfo: this.databaseInfo,\n            clientId: this.clientId,\n            authCredentials: this.authCredentials,\n            appCheckCredentials: this.appCheckCredentials,\n            initialUser: this.user,\n            maxConcurrentLimboResolutions: 100\n        };\n    }\n    setCredentialChangeListener(t) {\n        this.authCredentialListener = t;\n    }\n    setAppCheckTokenChangeListener(t) {\n        this.appCheckCredentialListener = t;\n    }\n    /**\n     * Checks that the client has not been terminated. Ensures that other methods on //\n     * this class cannot be called after the client is terminated. //\n     */    verifyNotTerminated() {\n        if (this.asyncQueue.isShuttingDown) throw new U(q.FAILED_PRECONDITION, \"The client has already been terminated.\");\n    }\n    terminate() {\n        this.asyncQueue.enterRestrictedMode();\n        const t = new K;\n        return this.asyncQueue.enqueueAndForgetEvenWhileRestricted((async () => {\n            try {\n                this._onlineComponents && await this._onlineComponents.terminate(), this._offlineComponents && await this._offlineComponents.terminate(), \n                // The credentials provider must be terminated after shutting down the\n                // RemoteStore as it will prevent the RemoteStore from retrieving auth\n                // tokens.\n                this.authCredentials.shutdown(), this.appCheckCredentials.shutdown(), t.resolve();\n            } catch (e) {\n                const n = Ec(e, \"Failed to shutdown persistence\");\n                t.reject(n);\n            }\n        })), t.promise;\n    }\n}\n\nasync function Na(t, e) {\n    t.asyncQueue.verifyOperationInProgress(), N(\"FirestoreClient\", \"Initializing OfflineComponentProvider\");\n    const n = await t.getConfiguration();\n    await e.initialize(n);\n    let s = n.initialUser;\n    t.setCredentialChangeListener((async t => {\n        s.isEqual(t) || (await iu(e.localStore, t), s = t);\n    })), \n    // When a user calls clearPersistence() in one client, all other clients\n    // need to be terminated to allow the delete to succeed.\n    e.persistence.setDatabaseDeletedListener((() => t.terminate())), t._offlineComponents = e;\n}\n\nasync function ka(t, e) {\n    t.asyncQueue.verifyOperationInProgress();\n    const n = await $a(t);\n    N(\"FirestoreClient\", \"Initializing OnlineComponentProvider\");\n    const s = await t.getConfiguration();\n    await e.initialize(n, s), \n    // The CredentialChangeListener of the online component provider takes\n    // precedence over the offline component provider.\n    t.setCredentialChangeListener((t => gc(e.remoteStore, t))), t.setAppCheckTokenChangeListener(((t, n) => gc(e.remoteStore, n))), \n    t._onlineComponents = e;\n}\n\n/**\n * Decides whether the provided error allows us to gracefully disable\n * persistence (as opposed to crashing the client).\n */ function Ma(t) {\n    return \"FirebaseError\" === t.name ? t.code === q.FAILED_PRECONDITION || t.code === q.UNIMPLEMENTED : !(\"undefined\" != typeof DOMException && t instanceof DOMException) || (\n    // When the browser is out of quota we could get either quota exceeded\n    // or an aborted error depending on whether the error happened during\n    // schema migration.\n    22 === t.code || 20 === t.code || \n    // Firefox Private Browsing mode disables IndexedDb and returns\n    // INVALID_STATE for any usage.\n    11 === t.code);\n}\n\nasync function $a(t) {\n    if (!t._offlineComponents) if (t._uninitializedComponentsProvider) {\n        N(\"FirestoreClient\", \"Using user provided OfflineComponentProvider\");\n        try {\n            await Na(t, t._uninitializedComponentsProvider._offline);\n        } catch (e) {\n            const n = e;\n            if (!Ma(n)) throw n;\n            M(\"Error using user provided cache. Falling back to memory cache: \" + n), await Na(t, new Ea);\n        }\n    } else N(\"FirestoreClient\", \"Using default OfflineComponentProvider\"), await Na(t, new Ea);\n    return t._offlineComponents;\n}\n\nasync function Oa(t) {\n    return t._onlineComponents || (t._uninitializedComponentsProvider ? (N(\"FirestoreClient\", \"Using user provided OnlineComponentProvider\"), \n    await ka(t, t._uninitializedComponentsProvider._online)) : (N(\"FirestoreClient\", \"Using default OnlineComponentProvider\"), \n    await ka(t, new Pa))), t._onlineComponents;\n}\n\nfunction Fa(t) {\n    return $a(t).then((t => t.persistence));\n}\n\nfunction Ba(t) {\n    return $a(t).then((t => t.localStore));\n}\n\nfunction La(t) {\n    return Oa(t).then((t => t.remoteStore));\n}\n\nfunction qa(t) {\n    return Oa(t).then((t => t.syncEngine));\n}\n\nfunction Ua(t) {\n    return Oa(t).then((t => t.datastore));\n}\n\nasync function Ka(t) {\n    const e = await Oa(t), n = e.eventManager;\n    return n.onListen = Gc.bind(null, e.syncEngine), n.onUnlisten = jc.bind(null, e.syncEngine), \n    n;\n}\n\n/** Enables the network connection and re-enqueues all pending operations. */ function Ga(t) {\n    return t.asyncQueue.enqueue((async () => {\n        const e = await Fa(t), n = await La(t);\n        return e.setNetworkEnabled(!0), function(t) {\n            const e = L(t);\n            return e.vu.delete(0 /* OfflineCause.UserDisabled */), zu(e);\n        }(n);\n    }));\n}\n\n/** Disables the network connection. Pending operations will not complete. */ function Qa(t) {\n    return t.asyncQueue.enqueue((async () => {\n        const e = await Fa(t), n = await La(t);\n        return e.setNetworkEnabled(!1), async function(t) {\n            const e = L(t);\n            e.vu.add(0 /* OfflineCause.UserDisabled */), await Wu(e), \n            // Set the OnlineState to Offline so get()s return from cache, etc.\n            e.bu.set(\"Offline\" /* OnlineState.Offline */);\n        }(n);\n    }));\n}\n\n/**\n * Returns a Promise that resolves when all writes that were pending at the time\n * this method was called received server acknowledgement. An acknowledgement\n * can be either acceptance or rejection.\n */ function ja(t, e) {\n    const n = new K;\n    return t.asyncQueue.enqueueAndForget((async () => async function(t, e, n) {\n        try {\n            const s = await function(t, e) {\n                const n = L(t);\n                return n.persistence.runTransaction(\"read document\", \"readonly\", (t => n.localDocuments.getDocument(t, e)));\n            }(t, e);\n            s.isFoundDocument() ? n.resolve(s) : s.isNoDocument() ? n.resolve(null) : n.reject(new U(q.UNAVAILABLE, \"Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)\"));\n        } catch (t) {\n            const s = Ec(t, `Failed to get document '${e} from cache`);\n            n.reject(s);\n        }\n    }\n    /**\n * Retrieves a latency-compensated document from the backend via a\n * SnapshotListener.\n */ (await Ba(t), e, n))), n.promise;\n}\n\nfunction za(t, e, n = {}) {\n    const s = new K;\n    return t.asyncQueue.enqueueAndForget((async () => function(t, e, n, s, i) {\n        const r = new Va({\n            next: r => {\n                // Remove query first before passing event to user to avoid\n                // user actions affecting the now stale query.\n                e.enqueueAndForget((() => Sc(t, o)));\n                const u = r.docs.has(n);\n                !u && r.fromCache ? \n                // TODO(dimond): If we're online and the document doesn't\n                // exist then we resolve with a doc.exists set to false. If\n                // we're offline however, we reject the Promise in this\n                // case. Two options: 1) Cache the negative response from\n                // the server so we can deliver that even when you're\n                // offline 2) Actually reject the Promise in the online case\n                // if the document doesn't exist.\n                i.reject(new U(q.UNAVAILABLE, \"Failed to get document because the client is offline.\")) : u && r.fromCache && s && \"server\" === s.source ? i.reject(new U(q.UNAVAILABLE, 'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to \"server\" to retrieve the cached document.)')) : i.resolve(r);\n            },\n            error: t => i.reject(t)\n        }), o = new Nc(Gn(n.path), r, {\n            includeMetadataChanges: !0,\n            Ku: !0\n        });\n        return Vc(t, o);\n    }(await Ka(t), t.asyncQueue, e, n, s))), s.promise;\n}\n\nfunction Wa(t, e) {\n    const n = new K;\n    return t.asyncQueue.enqueueAndForget((async () => async function(t, e, n) {\n        try {\n            const s = await fu(t, e, \n            /* usePreviousResults= */ !0), i = new Lc(e, s.ir), r = i.sc(s.documents), o = i.applyChanges(r, \n            /* updateLimboDocuments= */ !1);\n            n.resolve(o.snapshot);\n        } catch (t) {\n            const s = Ec(t, `Failed to execute query '${e} against cache`);\n            n.reject(s);\n        }\n    }\n    /**\n * Retrieves a latency-compensated query snapshot from the backend via a\n * SnapshotListener.\n */ (await Ba(t), e, n))), n.promise;\n}\n\nfunction Ha(t, e, n = {}) {\n    const s = new K;\n    return t.asyncQueue.enqueueAndForget((async () => function(t, e, n, s, i) {\n        const r = new Va({\n            next: n => {\n                // Remove query first before passing event to user to avoid\n                // user actions affecting the now stale query.\n                e.enqueueAndForget((() => Sc(t, o))), n.fromCache && \"server\" === s.source ? i.reject(new U(q.UNAVAILABLE, 'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to \"server\" to retrieve the cached documents.)')) : i.resolve(n);\n            },\n            error: t => i.reject(t)\n        }), o = new Nc(n, r, {\n            includeMetadataChanges: !0,\n            Ku: !0\n        });\n        return Vc(t, o);\n    }(await Ka(t), t.asyncQueue, e, n, s))), s.promise;\n}\n\nfunction Ja(t, e) {\n    const n = new Va(e);\n    return t.asyncQueue.enqueueAndForget((async () => function(t, e) {\n        L(t).ku.add(e), \n        // Immediately fire an initial event, indicating all existing listeners\n        // are in-sync.\n        e.next();\n    }(await Ka(t), n))), () => {\n        n.Dc(), t.asyncQueue.enqueueAndForget((async () => function(t, e) {\n            L(t).ku.delete(e);\n        }(await Ka(t), n)));\n    };\n}\n\n/**\n * Takes an updateFunction in which a set of reads and writes can be performed\n * atomically. In the updateFunction, the client can read and write values\n * using the supplied transaction object. After the updateFunction, all\n * changes will be committed. If a retryable error occurs (ex: some other\n * client has changed any of the data referenced), then the updateFunction\n * will be called again after a backoff. If the updateFunction still fails\n * after all retries, then the transaction will be rejected.\n *\n * The transaction object passed to the updateFunction contains methods for\n * accessing documents and collections. Unlike other datastore access, data\n * accessed with the transaction will not reflect local changes that have not\n * been committed. For this reason, it is required that all reads are\n * performed before any writes. Transactions must be performed while online.\n */ function Ya(t, e, n, s) {\n    const i = function(t, e) {\n        let n;\n        n = \"string\" == typeof t ? hi().encode(t) : t;\n        return function(t, e) {\n            return new Sa(t, e);\n        }(function(t, e) {\n            if (t instanceof Uint8Array) return ba(t, e);\n            if (t instanceof ArrayBuffer) return ba(new Uint8Array(t), e);\n            if (t instanceof ReadableStream) return t.getReader();\n            throw new Error(\"Source of `toByteStreamReader` has to be a ArrayBuffer or ReadableStream\");\n        }(n), e);\n    }(n, Fu(e));\n    t.asyncQueue.enqueueAndForget((async () => {\n        Ta(await qa(t), i, s);\n    }));\n}\n\nfunction Xa(t, e) {\n    return t.asyncQueue.enqueue((async () => function(t, e) {\n        const n = L(t);\n        return n.persistence.runTransaction(\"Get named query\", \"readonly\", (t => n.qs.getNamedQuery(t, e)));\n    }(await Ba(t), e)));\n}\n\nfunction Za(t, e) {\n    return t.asyncQueue.enqueue((async () => async function(t, e) {\n        const n = L(t), s = n.indexManager, i = [];\n        return n.persistence.runTransaction(\"Configure indexes\", \"readwrite\", (t => s.getFieldIndexes(t).next((n => \n        /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        /**\n * Compares two array for equality using comparator. The method computes the\n * intersection and invokes `onAdd` for every element that is in `after` but not\n * `before`. `onRemove` is invoked for every element in `before` but missing\n * from `after`.\n *\n * The method creates a copy of both `before` and `after` and runs in O(n log\n * n), where n is the size of the two lists.\n *\n * @param before - The elements that exist in the original array.\n * @param after - The elements to diff against the original array.\n * @param comparator - The comparator for the elements in before and after.\n * @param onAdd - A function to invoke for every element that is part of `\n * after` but not `before`.\n * @param onRemove - A function to invoke for every element that is part of\n * `before` but not `after`.\n */\n        function(t, e, n, s, i) {\n            t = [ ...t ], e = [ ...e ], t.sort(n), e.sort(n);\n            const r = t.length, o = e.length;\n            let u = 0, c = 0;\n            for (;u < o && c < r; ) {\n                const r = n(t[c], e[u]);\n                r < 0 ? \n                // The element was removed if the next element in our ordered\n                // walkthrough is only in `before`.\n                i(t[c++]) : r > 0 ? \n                // The element was added if the next element in our ordered walkthrough\n                // is only in `after`.\n                s(e[u++]) : (u++, c++);\n            }\n            for (;u < o; ) s(e[u++]);\n            for (;c < r; ) i(t[c++]);\n        }(n, e, wt, (e => {\n            i.push(s.addFieldIndex(t, e));\n        }), (e => {\n            i.push(s.deleteFieldIndex(t, e));\n        })))).next((() => Rt.waitFor(i)))));\n    }\n    /**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    // The format of the LocalStorage key that stores the client state is:\n    //     firestore_clients_<persistence_prefix>_<instance_key>\n    (await Ba(t), e)));\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Compares two `ExperimentalLongPollingOptions` objects for equality.\n */\n/**\n * Creates and returns a new `ExperimentalLongPollingOptions` with the same\n * option values as the given instance.\n */\nfunction th(t) {\n    const e = {};\n    return void 0 !== t.timeoutSeconds && (e.timeoutSeconds = t.timeoutSeconds), e;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const eh = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction nh(t, e, n) {\n    if (!n) throw new U(q.INVALID_ARGUMENT, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */ function sh(t, e, n, s) {\n    if (!0 === e && !0 === s) throw new U(q.INVALID_ARGUMENT, `${t} and ${n} cannot be used together.`);\n}\n\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */ function ih(t) {\n    if (!ht.isDocumentKey(t)) throw new U(q.INVALID_ARGUMENT, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function rh(t) {\n    if (ht.isDocumentKey(t)) throw new U(q.INVALID_ARGUMENT, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction oh(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : O();\n}\n\nfunction uh(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(q.INVALID_ARGUMENT, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = oh(t);\n            throw new U(q.INVALID_ARGUMENT, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction ch(t, e) {\n    if (e <= 0) throw new U(q.INVALID_ARGUMENT, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// settings() defaults:\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass ah {\n    constructor(t) {\n        var e, n;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(q.INVALID_ARGUMENT, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        this.cache = t.localCache, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(q.INVALID_ARGUMENT, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        sh(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling), \n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalForceLongPolling ? this.experimentalAutoDetectLongPolling = !1 : void 0 === t.experimentalAutoDetectLongPolling ? this.experimentalAutoDetectLongPolling = true : \n        // For backwards compatibility, coerce the value to boolean even though\n        // the TypeScript compiler has narrowed the type to boolean already.\n        // noinspection PointlessBooleanExpressionJS\n        this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.experimentalLongPollingOptions = th(null !== (n = t.experimentalLongPollingOptions) && void 0 !== n ? n : {}), \n        function(t) {\n            if (void 0 !== t.timeoutSeconds) {\n                if (isNaN(t.timeoutSeconds)) throw new U(q.INVALID_ARGUMENT, `invalid long polling timeout: ${t.timeoutSeconds} (must not be NaN)`);\n                if (t.timeoutSeconds < 5) throw new U(q.INVALID_ARGUMENT, `invalid long polling timeout: ${t.timeoutSeconds} (minimum allowed value is 5)`);\n                if (t.timeoutSeconds > 30) throw new U(q.INVALID_ARGUMENT, `invalid long polling timeout: ${t.timeoutSeconds} (maximum allowed value is 30)`);\n            }\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        /**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ (this.experimentalLongPollingOptions), this.useFetchStreams = !!t.useFetchStreams;\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && (e = this.experimentalLongPollingOptions, \n        n = t.experimentalLongPollingOptions, e.timeoutSeconds === n.timeoutSeconds) && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n        var e, n;\n    }\n}\n\nclass hh {\n    /** @hideconstructor */\n    constructor(t, e, n, s) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = s, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new ah({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(q.FAILED_PRECONDITION, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(q.FAILED_PRECONDITION, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new ah(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new Q;\n            switch (t.type) {\n              case \"firstParty\":\n                return new H(t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(q.INVALID_ARGUMENT, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        /**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n        return function(t) {\n            const e = eh.get(t);\n            e && (N(\"ComponentProvider\", \"Removing Datastore\"), eh.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function lh(t, e, n, s = {}) {\n    var i;\n    const r = (t = uh(t, hh))._getSettings(), o = `${e}:${n}`;\n    if (\"firestore.googleapis.com\" !== r.host && r.host !== o && M(\"Host has been set in both settings() and connectFirestoreEmulator(), emulator host will be used.\"), \n    t._setSettings(Object.assign(Object.assign({}, r), {\n        host: o,\n        ssl: !1\n    })), s.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof s.mockUserToken) e = s.mockUserToken, n = V.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = createMockUserToken(s.mockUserToken, null === (i = t._app) || void 0 === i ? void 0 : i.options.projectId);\n            const r = s.mockUserToken.sub || s.mockUserToken.user_id;\n            if (!r) throw new U(q.INVALID_ARGUMENT, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new V(r);\n        }\n        t._authCredentials = new j(new G(e, n));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class fh {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new wh(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new fh(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class dh {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new dh(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link (query:1)}).\n */ class wh extends dh {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, Gn(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new fh(this.firestore, \n        /* converter= */ null, new ht(t));\n    }\n    withConverter(t) {\n        return new wh(this.firestore, t, this._path);\n    }\n}\n\nfunction _h(t, e, ...n) {\n    if (t = getModularInstance(t), nh(\"collection\", \"path\", e), t instanceof hh) {\n        const s = ut.fromString(e, ...n);\n        return rh(s), new wh(t, /* converter= */ null, s);\n    }\n    {\n        if (!(t instanceof fh || t instanceof wh)) throw new U(q.INVALID_ARGUMENT, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const s = t._path.child(ut.fromString(e, ...n));\n        return rh(s), new wh(t.firestore, \n        /* converter= */ null, s);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function mh(t, e) {\n    if (t = uh(t, hh), nh(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(q.INVALID_ARGUMENT, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new dh(t, \n    /* converter= */ null, function(t) {\n        return new Un(ut.emptyPath(), t);\n    }(e));\n}\n\nfunction gh(t, e, ...n) {\n    if (t = getModularInstance(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = tt.A()), nh(\"doc\", \"path\", e), t instanceof hh) {\n        const s = ut.fromString(e, ...n);\n        return ih(s), new fh(t, \n        /* converter= */ null, new ht(s));\n    }\n    {\n        if (!(t instanceof fh || t instanceof wh)) throw new U(q.INVALID_ARGUMENT, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const s = t._path.child(ut.fromString(e, ...n));\n        return ih(s), new fh(t.firestore, t instanceof wh ? t.converter : null, new ht(s));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function yh(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), (t instanceof fh || t instanceof wh) && (e instanceof fh || e instanceof wh) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function ph(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), t instanceof dh && e instanceof dh && (t.firestore === e.firestore && Zn(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Ih {\n    constructor() {\n        // The last promise in the queue.\n        this.Gc = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Qc = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.jc = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.zc = [], \n        // visible for testing\n        this.Wc = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Hc = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.Jc = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Yc = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.qo = new Bu(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Xc = () => {\n            const t = Ou();\n            t && N(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.qo.Mo();\n        };\n        const t = Ou();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Xc);\n    }\n    get isShuttingDown() {\n        return this.jc;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Zc(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.ta(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.jc) {\n            this.jc = !0, this.Jc = t || !1;\n            const e = Ou();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Xc);\n        }\n    }\n    enqueue(t) {\n        if (this.Zc(), this.jc) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new K;\n        return this.ta((() => this.jc && this.Jc ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Qc.push(t), this.ea())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async ea() {\n        if (0 !== this.Qc.length) {\n            try {\n                await this.Qc[0](), this.Qc.shift(), this.qo.reset();\n            } catch (t) {\n                if (!Dt(t)) throw t;\n // Failure will be handled by AsyncQueue\n                                N(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Qc.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.qo.No((() => this.ea()));\n        }\n    }\n    ta(t) {\n        const e = this.Gc.then((() => (this.Hc = !0, t().catch((t => {\n            this.Wc = t, this.Hc = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw k(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Hc = !1, t))))));\n        return this.Gc = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Zc(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Yc.indexOf(t) > -1 && (e = 0);\n        const s = Tc.createAndSchedule(this, t, e, n, (t => this.na(t)));\n        return this.zc.push(s), s;\n    }\n    Zc() {\n        this.Wc && O();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async sa() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.Gc, await t;\n        } while (t !== this.Gc);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    ia(t) {\n        for (const e of this.zc) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    ra(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.sa().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.zc.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.zc) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.sa();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    oa(t) {\n        this.Yc.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    na(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.zc.indexOf(t);\n        this.zc.splice(e, 1);\n    }\n}\n\nfunction Th(t) {\n    /**\n * Returns true if obj is an object and contains at least one of the specified\n * methods.\n */\n    return function(t, e) {\n        if (\"object\" != typeof t || null === t) return !1;\n        const n = t;\n        for (const t of e) if (t in n && \"function\" == typeof n[t]) return !0;\n        return !1;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents the task of loading a Firestore bundle. It provides progress of bundle\n * loading, as well as task completion and error events.\n *\n * The API is compatible with `Promise<LoadBundleTaskProgress>`.\n */ (t, [ \"next\", \"error\", \"complete\" ]);\n}\n\nclass Eh {\n    constructor() {\n        this._progressObserver = {}, this._taskCompletionResolver = new K, this._lastProgress = {\n            taskState: \"Running\",\n            totalBytes: 0,\n            totalDocuments: 0,\n            bytesLoaded: 0,\n            documentsLoaded: 0\n        };\n    }\n    /**\n     * Registers functions to listen to bundle loading progress events.\n     * @param next - Called when there is a progress update from bundle loading. Typically `next` calls occur\n     *   each time a Firestore document is loaded from the bundle.\n     * @param error - Called when an error occurs during bundle loading. The task aborts after reporting the\n     *   error, and there should be no more updates after this.\n     * @param complete - Called when the loading task is complete.\n     */    onProgress(t, e, n) {\n        this._progressObserver = {\n            next: t,\n            error: e,\n            complete: n\n        };\n    }\n    /**\n     * Implements the `Promise<LoadBundleTaskProgress>.catch` interface.\n     *\n     * @param onRejected - Called when an error occurs during bundle loading.\n     */    catch(t) {\n        return this._taskCompletionResolver.promise.catch(t);\n    }\n    /**\n     * Implements the `Promise<LoadBundleTaskProgress>.then` interface.\n     *\n     * @param onFulfilled - Called on the completion of the loading task with a final `LoadBundleTaskProgress` update.\n     *   The update will always have its `taskState` set to `\"Success\"`.\n     * @param onRejected - Called when an error occurs during bundle loading.\n     */    then(t, e) {\n        return this._taskCompletionResolver.promise.then(t, e);\n    }\n    /**\n     * Notifies all observers that bundle loading has completed, with a provided\n     * `LoadBundleTaskProgress` object.\n     *\n     * @private\n     */    _completeWith(t) {\n        this._updateProgress(t), this._progressObserver.complete && this._progressObserver.complete(), \n        this._taskCompletionResolver.resolve(t);\n    }\n    /**\n     * Notifies all observers that bundle loading has failed, with a provided\n     * `Error` as the reason.\n     *\n     * @private\n     */    _failWith(t) {\n        this._lastProgress.taskState = \"Error\", this._progressObserver.next && this._progressObserver.next(this._lastProgress), \n        this._progressObserver.error && this._progressObserver.error(t), this._taskCompletionResolver.reject(t);\n    }\n    /**\n     * Notifies a progress update of loading a bundle.\n     * @param progress - The new progress.\n     *\n     * @private\n     */    _updateProgress(t) {\n        this._lastProgress = t, this._progressObserver.next && this._progressObserver.next(t);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Constant used to indicate the LRU garbage collection should be disabled.\n * Set this value as the `cacheSizeBytes` on the settings passed to the\n * {@link Firestore} instance.\n */ const Ah = -1;\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class vh extends hh {\n    /** @hideconstructor */\n    constructor(t, e, n, s) {\n        super(t, e, n, s), \n        /**\n         * Whether it's a {@link Firestore} or Firestore Lite instance.\n         */\n        this.type = \"firestore\", this._queue = new Ih, this._persistenceKey = (null == s ? void 0 : s.name) || \"[DEFAULT]\";\n    }\n    _terminate() {\n        return this._firestoreClient || \n        // The client must be initialized to ensure that all subsequent API\n        // usage throws an exception.\n        Vh(this), this._firestoreClient.terminate();\n    }\n}\n\n/**\n * Initializes a new instance of {@link Firestore} with the provided settings.\n * Can only be called before any other function, including\n * {@link (getFirestore:1)}. If the custom settings are empty, this function is\n * equivalent to calling {@link (getFirestore:1)}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the {@link Firestore} instance will\n * be associated.\n * @param settings - A settings object to configure the {@link Firestore} instance.\n * @param databaseId - The name of the database.\n * @returns A newly initialized {@link Firestore} instance.\n */ function Rh(t, e, n) {\n    n || (n = \"(default)\");\n    const s = _getProvider(t, \"firestore\");\n    if (s.isInitialized(n)) {\n        const t = s.getImmediate({\n            identifier: n\n        }), i = s.getOptions(n);\n        if (deepEqual(i, e)) return t;\n        throw new U(q.FAILED_PRECONDITION, \"initializeFirestore() has already been called with different options. To avoid this error, call initializeFirestore() with the same options as when it was originally called, or call getFirestore() to return the already initialized instance.\");\n    }\n    if (void 0 !== e.cacheSizeBytes && void 0 !== e.localCache) throw new U(q.INVALID_ARGUMENT, \"cache and cacheSizeBytes cannot be specified at the same time as cacheSizeBytes willbe deprecated. Instead, specify the cache size in the cache object\");\n    if (void 0 !== e.cacheSizeBytes && -1 !== e.cacheSizeBytes && e.cacheSizeBytes < 1048576) throw new U(q.INVALID_ARGUMENT, \"cacheSizeBytes must be at least 1048576\");\n    return s.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction Ph(e, n) {\n    const s = \"object\" == typeof e ? e : getApp(), i = \"string\" == typeof e ? e : n || \"(default)\", r = _getProvider(s, \"firestore\").getImmediate({\n        identifier: i\n    });\n    if (!r._initialized) {\n        const t = getDefaultEmulatorHostnameAndPort(\"firestore\");\n        t && lh(r, ...t);\n    }\n    return r;\n}\n\n/**\n * @internal\n */ function bh(t) {\n    return t._firestoreClient || Vh(t), t._firestoreClient.verifyNotTerminated(), t._firestoreClient;\n}\n\nfunction Vh(t) {\n    var e, n, s;\n    const i = t._freezeSettings(), r = function(t, e, n, s) {\n        return new $e(t, e, n, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, th(s.experimentalLongPollingOptions), s.useFetchStreams);\n    }(t._databaseId, (null === (e = t._app) || void 0 === e ? void 0 : e.options.appId) || \"\", t._persistenceKey, i);\n    t._firestoreClient = new xa(t._authCredentials, t._appCheckCredentials, t._queue, r), \n    (null === (n = i.cache) || void 0 === n ? void 0 : n._offlineComponentProvider) && (null === (s = i.cache) || void 0 === s ? void 0 : s._onlineComponentProvider) && (t._firestoreClient._uninitializedComponentsProvider = {\n        _offlineKind: i.cache.kind,\n        _offline: i.cache._offlineComponentProvider,\n        _online: i.cache._onlineComponentProvider\n    });\n}\n\n/**\n * Attempts to enable persistent storage, if possible.\n *\n * Must be called before any other functions (other than\n * {@link initializeFirestore}, {@link (getFirestore:1)} or\n * {@link clearIndexedDbPersistence}.\n *\n * If this fails, `enableIndexedDbPersistence()` will reject the promise it\n * returns. Note that even after this failure, the {@link Firestore} instance will\n * remain usable, however offline persistence will be disabled.\n *\n * There are several reasons why this can fail, which can be identified by\n * the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab.\n *   * unimplemented: The browser is incompatible with the offline\n *     persistence implementation.\n *\n * Persistence cannot be used in a Node.js environment.\n *\n * @param firestore - The {@link Firestore} instance to enable persistence for.\n * @param persistenceSettings - Optional settings object to configure\n * persistence.\n * @returns A `Promise` that represents successfully enabling persistent storage.\n * @deprecated This function will be removed in a future major release. Instead, set\n * `FirestoreSettings.cache` to an instance of `IndexedDbLocalCache` to\n * turn on IndexedDb cache. Calling this function when `FirestoreSettings.cache`\n * is already specified will throw an exception.\n */ function Sh(t, e) {\n    Bh(t = uh(t, vh));\n    const n = bh(t);\n    if (n._uninitializedComponentsProvider) throw new U(q.FAILED_PRECONDITION, \"SDK cache is already specified.\");\n    M(\"enableIndexedDbPersistence() will be deprecated in the future, you can use `FirestoreSettings.cache` instead.\");\n    const s = t._freezeSettings(), i = new Pa;\n    return Ch(n, i, new va(i, s.cacheSizeBytes, null == e ? void 0 : e.forceOwnership));\n}\n\n/**\n * Attempts to enable multi-tab persistent storage, if possible. If enabled\n * across all tabs, all operations share access to local persistence, including\n * shared execution of queries and latency-compensated local document updates\n * across all connected instances.\n *\n * If this fails, `enableMultiTabIndexedDbPersistence()` will reject the promise\n * it returns. Note that even after this failure, the {@link Firestore} instance will\n * remain usable, however offline persistence will be disabled.\n *\n * There are several reasons why this can fail, which can be identified by\n * the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab and\n *     multi-tab is not enabled.\n *   * unimplemented: The browser is incompatible with the offline\n *     persistence implementation.\n *\n * @param firestore - The {@link Firestore} instance to enable persistence for.\n * @returns A `Promise` that represents successfully enabling persistent\n * storage.\n * @deprecated This function will be removed in a future major release. Instead, set\n * `FirestoreSettings.cache` to an instance of `IndexedDbLocalCache` to\n * turn on indexeddb cache. Calling this function when `FirestoreSettings.cache`\n * is already specified will throw an exception.\n */ function Dh(t) {\n    Bh(t = uh(t, vh));\n    const e = bh(t);\n    if (e._uninitializedComponentsProvider) throw new U(q.FAILED_PRECONDITION, \"SDK cache is already specified.\");\n    M(\"enableMultiTabIndexedDbPersistence() will be deprecated in the future, you can use `FirestoreSettings.cache` instead.\");\n    const n = t._freezeSettings(), s = new Pa;\n    return Ch(e, s, new Ra(s, n.cacheSizeBytes));\n}\n\n/**\n * Registers both the `OfflineComponentProvider` and `OnlineComponentProvider`.\n * If the operation fails with a recoverable error (see\n * `canRecoverFromIndexedDbError()` below), the returned Promise is rejected\n * but the client remains usable.\n */ function Ch(t, e, n) {\n    const s = new K;\n    return t.asyncQueue.enqueue((async () => {\n        try {\n            await Na(t, n), await ka(t, e), s.resolve();\n        } catch (t) {\n            const e = t;\n            if (!Ma(e)) throw e;\n            M(\"Error enabling indexeddb cache. Falling back to memory cache: \" + e), s.reject(e);\n        }\n    })).then((() => s.promise));\n}\n\n/**\n * Clears the persistent storage. This includes pending writes and cached\n * documents.\n *\n * Must be called while the {@link Firestore} instance is not started (after the app is\n * terminated or when the app is first initialized). On startup, this function\n * must be called before other functions (other than {@link\n * initializeFirestore} or {@link (getFirestore:1)})). If the {@link Firestore}\n * instance is still running, the promise will be rejected with the error code\n * of `failed-precondition`.\n *\n * Note: `clearIndexedDbPersistence()` is primarily intended to help write\n * reliable tests that use Cloud Firestore. It uses an efficient mechanism for\n * dropping existing data but does not attempt to securely overwrite or\n * otherwise make cached data unrecoverable. For applications that are sensitive\n * to the disclosure of cached data in between user sessions, we strongly\n * recommend not enabling persistence at all.\n *\n * @param firestore - The {@link Firestore} instance to clear persistence for.\n * @returns A `Promise` that is resolved when the persistent storage is\n * cleared. Otherwise, the promise is rejected with an error.\n */ function xh(t) {\n    if (t._initialized && !t._terminated) throw new U(q.FAILED_PRECONDITION, \"Persistence can only be cleared before a Firestore instance is initialized or after it is terminated.\");\n    const e = new K;\n    return t._queue.enqueueAndForgetEvenWhileRestricted((async () => {\n        try {\n            await async function(t) {\n                if (!bt.D()) return Promise.resolve();\n                const e = t + \"main\";\n                await bt.delete(e);\n            }(Zo(t._databaseId, t._persistenceKey)), e.resolve();\n        } catch (t) {\n            e.reject(t);\n        }\n    })), e.promise;\n}\n\n/**\n * Waits until all currently pending writes for the active user have been\n * acknowledged by the backend.\n *\n * The returned promise resolves immediately if there are no outstanding writes.\n * Otherwise, the promise waits for all previously issued writes (including\n * those written in a previous app session), but it does not wait for writes\n * that were added after the function is called. If you want to wait for\n * additional writes, call `waitForPendingWrites()` again.\n *\n * Any outstanding `waitForPendingWrites()` promises are rejected during user\n * changes.\n *\n * @returns A `Promise` which resolves when all currently pending writes have been\n * acknowledged by the backend.\n */ function Nh(t) {\n    return function(t) {\n        const e = new K;\n        return t.asyncQueue.enqueueAndForget((async () => Zc(await qa(t), e))), e.promise;\n    }(bh(t = uh(t, vh)));\n}\n\n/**\n * Re-enables use of the network for this {@link Firestore} instance after a prior\n * call to {@link disableNetwork}.\n *\n * @returns A `Promise` that is resolved once the network has been enabled.\n */ function kh(t) {\n    return Ga(bh(t = uh(t, vh)));\n}\n\n/**\n * Disables network usage for this instance. It can be re-enabled via {@link\n * enableNetwork}. While the network is disabled, any snapshot listeners,\n * `getDoc()` or `getDocs()` calls will return results from cache, and any write\n * operations will be queued until the network is restored.\n *\n * @returns A `Promise` that is resolved once the network has been disabled.\n */ function Mh(t) {\n    return Qa(bh(t = uh(t, vh)));\n}\n\n/**\n * Terminates the provided {@link Firestore} instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` function\n * may be used. Any other function will throw a `FirestoreError`.\n *\n * To restart after termination, create a new instance of FirebaseFirestore with\n * {@link (getFirestore:1)}.\n *\n * Termination does not cancel any pending writes, and any promises that are\n * awaiting a response from the server will not be resolved. If you have\n * persistence enabled, the next time you start this instance, it will resume\n * sending these writes to the server.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all\n * of its resources or in combination with `clearIndexedDbPersistence()` to\n * ensure that all local state is destroyed between test runs.\n *\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function $h(t) {\n    return _removeServiceInstance(t.app, \"firestore\", t._databaseId.database), t._delete();\n}\n\n/**\n * Loads a Firestore bundle into the local cache.\n *\n * @param firestore - The {@link Firestore} instance to load bundles for.\n * @param bundleData - An object representing the bundle to be loaded. Valid\n * objects are `ArrayBuffer`, `ReadableStream<Uint8Array>` or `string`.\n *\n * @returns A `LoadBundleTask` object, which notifies callers with progress\n * updates, and completion or error events. It can be used as a\n * `Promise<LoadBundleTaskProgress>`.\n */ function Oh(t, e) {\n    const n = bh(t = uh(t, vh)), s = new Eh;\n    return Ya(n, t._databaseId, e, s), s;\n}\n\n/**\n * Reads a Firestore {@link Query} from local cache, identified by the given\n * name.\n *\n * The named queries are packaged  into bundles on the server side (along\n * with resulting documents), and loaded to local cache using `loadBundle`. Once\n * in local cache, use this method to extract a {@link Query} by name.\n *\n * @param firestore - The {@link Firestore} instance to read the query from.\n * @param name - The name of the query.\n * @returns A `Promise` that is resolved with the Query or `null`.\n */ function Fh(t, e) {\n    return Xa(bh(t = uh(t, vh)), e).then((e => e ? new dh(t, null, e.query) : null));\n}\n\nfunction Bh(t) {\n    if (t._initialized || t._terminated) throw new U(q.FAILED_PRECONDITION, \"Firestore has already been started and persistence can no longer be enabled. You can only enable persistence before calling any other methods on a Firestore object.\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Lh {\n    /**\n     * Create a new AggregateField<T>\n     * @param _aggregateType Specifies the type of aggregation operation to perform.\n     * @param _internalFieldPath Optionally specifies the field that is aggregated.\n     * @internal\n     */\n    constructor(\n    // TODO (sum/avg) make aggregateType public when the feature is supported\n    t = \"count\", e) {\n        this._aggregateType = t, this._internalFieldPath = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class qh {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        this._userDataWriter = e, this._data = n, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._userDataWriter.convertObjectMap(this._data);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class Uh {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new Uh(Ve.fromBase64String(t));\n        } catch (t) {\n            throw new U(q.INVALID_ARGUMENT, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new Uh(Ve.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class Kh {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(q.INVALID_ARGUMENT, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new at(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function Gh() {\n    return new Kh(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class Qh {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class jh {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(q.INVALID_ARGUMENT, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(q.INVALID_ARGUMENT, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return et(this._lat, t._lat) || et(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const zh = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Wh {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new zs(t, this.data, this.fieldMask, e, this.fieldTransforms) : new js(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class Hh {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new zs(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Jh(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw O();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Yh {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, s, i, r) {\n        this.settings = t, this.databaseId = e, this.serializer = n, this.ignoreUndefinedProperties = s, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === i && this.ua(), this.fieldTransforms = i || [], this.fieldMask = r || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get ca() {\n        return this.settings.ca;\n    }\n    /** Returns a new context with the specified settings overwritten. */    aa(t) {\n        return new Yh(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.serializer, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    ha(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), s = this.aa({\n            path: n,\n            la: !1\n        });\n        return s.fa(t), s;\n    }\n    da(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), s = this.aa({\n            path: n,\n            la: !1\n        });\n        return s.ua(), s;\n    }\n    wa(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.aa({\n            path: void 0,\n            la: !0\n        });\n    }\n    _a(t) {\n        return gl(t, this.settings.methodName, this.settings.ma || !1, this.path, this.settings.ga);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    ua() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.fa(this.path.get(t));\n    }\n    fa(t) {\n        if (0 === t.length) throw this._a(\"Document fields must not be empty\");\n        if (Jh(this.ca) && zh.test(t)) throw this._a('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class Xh {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.serializer = n || Fu(t);\n    }\n    /** Creates a new top-level parse context. */    ya(t, e, n, s = !1) {\n        return new Yh({\n            ca: t,\n            methodName: e,\n            ga: n,\n            path: at.emptyPath(),\n            la: !1,\n            ma: s\n        }, this.databaseId, this.serializer, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Zh(t) {\n    const e = t._freezeSettings(), n = Fu(t._databaseId);\n    return new Xh(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function tl(t, e, n, s, i, r = {}) {\n    const o = t.ya(r.merge || r.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, n, i);\n    dl(\"Data must be an object, but it was:\", o, s);\n    const u = ll(s, o);\n    let c, a;\n    if (r.merge) c = new Re(o.fieldMask), a = o.fieldTransforms; else if (r.mergeFields) {\n        const t = [];\n        for (const s of r.mergeFields) {\n            const i = wl(e, s, n);\n            if (!o.contains(i)) throw new U(q.INVALID_ARGUMENT, `Field '${i}' is specified in your field mask but missing from your input data.`);\n            yl(t, i) || t.push(i);\n        }\n        c = new Re(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Wh(new un(u), c, a);\n}\n\nclass el extends Qh {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.ca) throw 1 /* UserDataSource.Update */ === t.ca ? t._a(`${this._methodName}() can only appear at the top level of your update data`) : t._a(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof el;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function nl(t, e, n) {\n    return new Yh({\n        ca: 3 /* UserDataSource.Argument */ ,\n        ga: e.settings.ga,\n        methodName: t._methodName,\n        la: n\n    }, e.databaseId, e.serializer, e.ignoreUndefinedProperties);\n}\n\nclass sl extends Qh {\n    _toFieldTransform(t) {\n        return new Ms(t.path, new bs);\n    }\n    isEqual(t) {\n        return t instanceof sl;\n    }\n}\n\nclass il extends Qh {\n    constructor(t, e) {\n        super(t), this.pa = e;\n    }\n    _toFieldTransform(t) {\n        const e = nl(this, t, \n        /*array=*/ !0), n = this.pa.map((t => hl(t, e))), s = new Vs(n);\n        return new Ms(t.path, s);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass rl extends Qh {\n    constructor(t, e) {\n        super(t), this.pa = e;\n    }\n    _toFieldTransform(t) {\n        const e = nl(this, t, \n        /*array=*/ !0), n = this.pa.map((t => hl(t, e))), s = new Ds(n);\n        return new Ms(t.path, s);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass ol extends Qh {\n    constructor(t, e) {\n        super(t), this.Ia = e;\n    }\n    _toFieldTransform(t) {\n        const e = new xs(t.serializer, Es(t.serializer, this.Ia));\n        return new Ms(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function ul(t, e, n, s) {\n    const i = t.ya(1 /* UserDataSource.Update */ , e, n);\n    dl(\"Data must be an object, but it was:\", i, s);\n    const r = [], o = un.empty();\n    ge(s, ((t, s) => {\n        const u = ml(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                s = getModularInstance(s);\n        const c = i.da(u);\n        if (s instanceof el) \n        // Add it to the field mask, but don't add anything to updateData.\n        r.push(u); else {\n            const t = hl(s, c);\n            null != t && (r.push(u), o.set(u, t));\n        }\n    }));\n    const u = new Re(r);\n    return new Hh(o, u, i.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function cl(t, e, n, s, i, r) {\n    const o = t.ya(1 /* UserDataSource.Update */ , e, n), u = [ wl(e, s, n) ], c = [ i ];\n    if (r.length % 2 != 0) throw new U(q.INVALID_ARGUMENT, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < r.length; t += 2) u.push(wl(e, r[t])), c.push(r[t + 1]);\n    const a = [], h = un.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!yl(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = getModularInstance(n);\n        const s = o.da(e);\n        if (n instanceof el) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = hl(n, s);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const l = new Re(a);\n    return new Hh(h, l, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function al(t, e, n, s = !1) {\n    return hl(n, t.ya(s ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function hl(t, e) {\n    if (fl(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = getModularInstance(t))) return dl(\"Unsupported field value:\", e, t), ll(t, e);\n    if (t instanceof Qh) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Jh(e.ca)) throw e._a(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e._a(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.la && 4 /* UserDataSource.ArrayArgument */ !== e.ca) throw e._a(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let s = 0;\n            for (const i of t) {\n                let t = hl(i, e.wa(s));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), s++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = getModularInstance(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return Es(e.serializer, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = it.fromDate(t);\n            return {\n                timestampValue: Di(e.serializer, n)\n            };\n        }\n        if (t instanceof it) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new it(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: Di(e.serializer, n)\n            };\n        }\n        if (t instanceof jh) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof Uh) return {\n            bytesValue: Ci(e.serializer, t._byteString)\n        };\n        if (t instanceof fh) {\n            const n = e.databaseId, s = t.firestore._databaseId;\n            if (!s.isEqual(n)) throw e._a(`Document reference is for database ${s.projectId}/${s.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: ki(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e._a(`Unsupported field value: ${oh(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction ll(t, e) {\n    const n = {};\n    return ye(t) ? \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path) : ge(t, ((t, s) => {\n        const i = hl(s, e.ha(t));\n        null != i && (n[t] = i);\n    })), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction fl(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof it || t instanceof jh || t instanceof Uh || t instanceof fh || t instanceof Qh);\n}\n\nfunction dl(t, e, n) {\n    if (!fl(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const s = oh(n);\n        throw \"an object\" === s ? e._a(t + \" a custom object\") : e._a(t + \" \" + s);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function wl(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = getModularInstance(e)) instanceof Kh) return e._internalPath;\n    if (\"string\" == typeof e) return ml(t, e);\n    throw gl(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const _l = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function ml(t, e, n) {\n    if (e.search(_l) >= 0) throw gl(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new Kh(...e.split(\".\"))._internalPath;\n    } catch (s) {\n        throw gl(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction gl(t, e, n, s, i) {\n    const r = s && !s.isEmpty(), o = void 0 !== i;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (r || o) && (c += \" (found\", r && (c += ` in field ${s}`), o && (c += ` in document ${i}`), \n    c += \")\"), new U(q.INVALID_ARGUMENT, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function yl(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class pl {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, s, i) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = s, \n        this._converter = i;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new fh(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new Il(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(Tl(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class Il extends pl {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function Tl(t, e) {\n    return \"string\" == typeof e ? ml(t, e) : e instanceof Kh ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function El(t) {\n    if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(q.UNIMPLEMENTED, \"limitToLast() queries require specifying at least one orderBy() clause\");\n}\n\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */ class Al {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * (endBefore:1)}, {@link (endAt:1)}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link (query:1)} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class vl extends Al {}\n\nfunction Rl(t, e, ...n) {\n    let s = [];\n    e instanceof Al && s.push(e), s = s.concat(n), function(t) {\n        const e = t.filter((t => t instanceof Vl)).length, n = t.filter((t => t instanceof Pl)).length;\n        if (e > 1 || e > 0 && n > 0) throw new U(q.INVALID_ARGUMENT, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (s);\n    for (const e of s) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link (query:1)} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class Pl extends vl {\n    /**\n     * @internal\n     */\n    constructor(t, e, n) {\n        super(), this._field = t, this._op = e, this._value = n, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, n) {\n        return new Pl(t, e, n);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return Ql(t._query, e), new dh(t.firestore, t.converter, Yn(t._query, e));\n    }\n    _parse(t) {\n        const e = Zh(t.firestore), n = function(t, e, n, s, i, r, o) {\n            let u;\n            if (i.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === r || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === r) throw new U(q.INVALID_ARGUMENT, `Invalid Query. You can't perform '${r}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === r || \"not-in\" /* Operator.NOT_IN */ === r) {\n                    Gl(o, r);\n                    const e = [];\n                    for (const n of o) e.push(Kl(s, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = Kl(s, t, o);\n            } else \"in\" /* Operator.IN */ !== r && \"not-in\" /* Operator.NOT_IN */ !== r && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== r || Gl(o, r), \n            u = al(n, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === r || \"not-in\" /* Operator.NOT_IN */ === r);\n            return mn.create(i, r, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return n;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function bl(t, e, n) {\n    const s = e, i = Tl(\"where\", t);\n    return Pl._create(i, s, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n */ class Vl extends Al {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new Vl(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : gn.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function(t, e) {\n            let n = t;\n            const s = e.getFlattenedFilters();\n            for (const t of s) Ql(n, t), n = Yn(n, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new dh(t.firestore, t.converter, Yn(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */ function Sl(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => zl(\"or\", t))), Vl._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */ function Dl(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => zl(\"and\", t))), Vl._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class Cl extends vl {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new Cl(t, e);\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(q.INVALID_ARGUMENT, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(q.INVALID_ARGUMENT, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const s = new dn(e, n);\n            return function(t, e) {\n                if (null === jn(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = zn(t);\n                    null !== n && jl(t, n, e.field);\n                }\n            }(t, s), s;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new dh(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new Un(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function xl(t, e = \"asc\") {\n    const n = e, s = Tl(\"orderBy\", t);\n    return Cl._create(s, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class Nl extends vl {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._limit = e, this._limitType = n;\n    }\n    static _create(t, e, n) {\n        return new Nl(t, e, n);\n    }\n    _apply(t) {\n        return new dh(t.firestore, t.converter, Xn(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function kl(t) {\n    return ch(\"limit\", t), Nl._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Ml(t) {\n    return ch(\"limitToLast\", t), Nl._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link (query:1)} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class $l extends vl {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new $l(t, e, n);\n    }\n    _apply(t) {\n        const e = Ul(t, this.type, this._docOrFields, this._inclusive);\n        return new dh(t.firestore, t.converter, function(t, e) {\n            return new Un(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction Ol(...t) {\n    return $l._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction Fl(...t) {\n    return $l._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class Bl extends vl {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new Bl(t, e, n);\n    }\n    _apply(t) {\n        const e = Ul(t, this.type, this._docOrFields, this._inclusive);\n        return new dh(t.firestore, t.converter, function(t, e) {\n            return new Un(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Ll(...t) {\n    return Bl._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction ql(...t) {\n    return Bl._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Ul(t, e, n, s) {\n    if (n[0] = getModularInstance(n[0]), n[0] instanceof pl) return function(t, e, n, s, i) {\n        if (!s) throw new U(q.NOT_FOUND, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const r = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of Hn(t)) if (n.field.isKeyField()) r.push(We(e, s.key)); else {\n            const t = s.data.field(n.field);\n            if (Ne(t)) throw new U(q.INVALID_ARGUMENT, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(q.INVALID_ARGUMENT, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            r.push(t);\n        }\n        return new hn(r, i);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, s);\n    {\n        const i = Zh(t.firestore);\n        return function(t, e, n, s, i, r) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (i.length > o.length) throw new U(q.INVALID_ARGUMENT, `Too many arguments provided to ${s}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let r = 0; r < i.length; r++) {\n                const c = i[r];\n                if (o[r].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(q.INVALID_ARGUMENT, `Invalid query. Expected a string for document ID in ${s}(), but got a ${typeof c}`);\n                    if (!Wn(t) && -1 !== c.indexOf(\"/\")) throw new U(q.INVALID_ARGUMENT, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${s}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(ut.fromString(c));\n                    if (!ht.isDocumentKey(n)) throw new U(q.INVALID_ARGUMENT, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${s}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const i = new ht(n);\n                    u.push(We(e, i));\n                } else {\n                    const t = al(n, s, c);\n                    u.push(t);\n                }\n            }\n            return new hn(u, r);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, i, e, n, s);\n    }\n}\n\nfunction Kl(t, e, n) {\n    if (\"string\" == typeof (n = getModularInstance(n))) {\n        if (\"\" === n) throw new U(q.INVALID_ARGUMENT, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!Wn(e) && -1 !== n.indexOf(\"/\")) throw new U(q.INVALID_ARGUMENT, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const s = e.path.child(ut.fromString(n));\n        if (!ht.isDocumentKey(s)) throw new U(q.INVALID_ARGUMENT, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${s}' is not because it has an odd number of segments (${s.length}).`);\n        return We(t, new ht(s));\n    }\n    if (n instanceof fh) return We(t, n._key);\n    throw new U(q.INVALID_ARGUMENT, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${oh(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Gl(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(q.INVALID_ARGUMENT, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * This is not a comprehensive check, and this function should be removed in the\n * long term. Validations should occur in the Firestore backend.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one inequality per query.\n * 2. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n */ function Ql(t, e) {\n    if (e.isInequality()) {\n        const n = zn(t), s = e.field;\n        if (null !== n && !n.isEqual(s)) throw new U(q.INVALID_ARGUMENT, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${s.toString()}'`);\n        const i = jn(t);\n        null !== i && jl(t, s, i);\n    }\n    const n = function(t, e) {\n        for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n          case \"in\" /* Operator.IN */ :\n            return [ \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== n) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(q.INVALID_ARGUMENT, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(q.INVALID_ARGUMENT, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction jl(t, e, n) {\n    if (!n.isEqual(e)) throw new U(q.INVALID_ARGUMENT, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction zl(t, e) {\n    if (!(e instanceof Pl || e instanceof Vl)) throw new U(q.INVALID_ARGUMENT, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\nclass Wl {\n    convertValue(t, e = \"none\") {\n        switch (Le(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return Ce(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(xe(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw O();\n        }\n    }\n    convertObject(t, e) {\n        return this.convertObjectMap(t.fields, e);\n    }\n    /**\n     * @internal\n     */    convertObjectMap(t, e = \"none\") {\n        const n = {};\n        return ge(t, ((t, s) => {\n            n[t] = this.convertValue(s, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new jh(Ce(t.latitude), Ce(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = ke(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Me(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = De(t);\n        return new it(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = ut.fromString(t);\n        F(ur(n));\n        const s = new Oe(n.get(1), n.get(3)), i = new ht(n.popFirst(5));\n        return s.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        k(`Document ${i} contains a document reference within a different database (${s.projectId}/${s.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        i;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */ function Hl(t, e, n) {\n    let s;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return s = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    s;\n}\n\nclass Jl extends Wl {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Uh(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new fh(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Create an AggregateField object that can be used to compute the sum of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to sum across the result set.\n * @internal TODO (sum/avg) remove when public\n */ function Yl(t) {\n    return new Lh(\"sum\", wl(\"sum\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the average of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to average across the result set.\n * @internal TODO (sum/avg) remove when public\n */ function Xl(t) {\n    return new Lh(\"avg\", wl(\"average\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the count of\n * documents in the result set of a query.\n * @internal TODO (sum/avg) remove when public\n */ function Zl() {\n    return new Lh(\"count\");\n}\n\n/**\n * Compares two 'AggregateField` instances for equality.\n *\n * @param left Compare this AggregateField to the `right`.\n * @param right Compare this AggregateField to the `left`.\n * @internal TODO (sum/avg) remove when public\n */ function tf(t, e) {\n    var n, s;\n    return t instanceof Lh && e instanceof Lh && t._aggregateType === e._aggregateType && (null === (n = t._internalFieldPath) || void 0 === n ? void 0 : n.canonicalString()) === (null === (s = e._internalFieldPath) || void 0 === s ? void 0 : s.canonicalString());\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function ef(t, e) {\n    return ph(t.query, e.query) && deepEqual(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Metadata about a snapshot, describing the state of the snapshot.\n */ class nf {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this.hasPendingWrites = t, this.fromCache = e;\n    }\n    /**\n     * Returns true if this `SnapshotMetadata` is equal to the provided one.\n     *\n     * @param other - The `SnapshotMetadata` to compare against.\n     * @returns true if this `SnapshotMetadata` is equal to the provided one.\n     */    isEqual(t) {\n        return this.hasPendingWrites === t.hasPendingWrites && this.fromCache === t.fromCache;\n    }\n}\n\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class sf extends pl {\n    /** @hideconstructor protected */\n    constructor(t, e, n, s, i, r) {\n        super(t, e, n, s, r), this._firestore = t, this._firestoreImpl = t, this.metadata = i;\n    }\n    /**\n     * Returns whether or not the data exists. True if the document exists.\n     */    exists() {\n        return super.exists();\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * By default, `serverTimestamp()` values that have not yet been\n     * set to their final value will be returned as `null`. You can override\n     * this by passing an options object.\n     *\n     * @param options - An options object to configure how data is retrieved from\n     * the snapshot (for example the desired behavior for server timestamps that\n     * have not yet been set to their final value).\n     * @returns An `Object` containing all fields in the document or `undefined` if\n     * the document doesn't exist.\n     */    data(t = {}) {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const e = new rf(this._firestore, this._userDataWriter, this._key, this._document, this.metadata, \n                /* converter= */ null);\n                return this._converter.fromFirestore(e, t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value, t.serverTimestamps);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * By default, a `serverTimestamp()` that has not yet been set to\n     * its final value will be returned as `null`. You can override this by\n     * passing an options object.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @param options - An options object to configure how the field is retrieved\n     * from the snapshot (for example the desired behavior for server timestamps\n     * that have not yet been set to their final value).\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t, e = {}) {\n        if (this._document) {\n            const n = this._document.data.field(Tl(\"DocumentSnapshot.get\", t));\n            if (null !== n) return this._userDataWriter.convertValue(n, e.serverTimestamps);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class rf extends sf {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * By default, `serverTimestamp()` values that have not yet been\n     * set to their final value will be returned as `null`. You can override\n     * this by passing an options object.\n     *\n     * @override\n     * @param options - An options object to configure how data is retrieved from\n     * the snapshot (for example the desired behavior for server timestamps that\n     * have not yet been set to their final value).\n     * @returns An `Object` containing all fields in the document.\n     */\n    data(t = {}) {\n        return super.data(t);\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class of {\n    /** @hideconstructor */\n    constructor(t, e, n, s) {\n        this._firestore = t, this._userDataWriter = e, this._snapshot = s, this.metadata = new nf(s.hasPendingWrites, s.fromCache), \n        this.query = n;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        const t = [];\n        return this.forEach((e => t.push(e))), t;\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this._snapshot.docs.size;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.size;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._snapshot.docs.forEach((n => {\n            t.call(e, new rf(this._firestore, this._userDataWriter, n.key, n, new nf(this._snapshot.mutatedKeys.has(n.key), this._snapshot.fromCache), this.query.converter));\n        }));\n    }\n    /**\n     * Returns an array of the documents changes since the last snapshot. If this\n     * is the first snapshot, all documents will be in the list as 'added'\n     * changes.\n     *\n     * @param options - `SnapshotListenOptions` that control whether metadata-only\n     * changes (i.e. only `DocumentSnapshot.metadata` changed) should trigger\n     * snapshot events.\n     */    docChanges(t = {}) {\n        const e = !!t.includeMetadataChanges;\n        if (e && this._snapshot.excludesMetadataChanges) throw new U(q.INVALID_ARGUMENT, \"To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().\");\n        return this._cachedChanges && this._cachedChangesIncludeMetadataChanges === e || (this._cachedChanges = \n        /** Calculates the array of `DocumentChange`s for a given `ViewSnapshot`. */\n        function(t, e) {\n            if (t._snapshot.oldDocs.isEmpty()) {\n                let e = 0;\n                return t._snapshot.docChanges.map((n => {\n                    const s = new rf(t._firestore, t._userDataWriter, n.doc.key, n.doc, new nf(t._snapshot.mutatedKeys.has(n.doc.key), t._snapshot.fromCache), t.query.converter);\n                    return n.doc, {\n                        type: \"added\",\n                        doc: s,\n                        oldIndex: -1,\n                        newIndex: e++\n                    };\n                }));\n            }\n            {\n                // A `DocumentSet` that is updated incrementally as changes are applied to use\n                // to lookup the index of a document.\n                let n = t._snapshot.oldDocs;\n                return t._snapshot.docChanges.filter((t => e || 3 /* ChangeType.Metadata */ !== t.type)).map((e => {\n                    const s = new rf(t._firestore, t._userDataWriter, e.doc.key, e.doc, new nf(t._snapshot.mutatedKeys.has(e.doc.key), t._snapshot.fromCache), t.query.converter);\n                    let i = -1, r = -1;\n                    return 0 /* ChangeType.Added */ !== e.type && (i = n.indexOf(e.doc.key), n = n.delete(e.doc.key)), \n                    1 /* ChangeType.Removed */ !== e.type && (n = n.add(e.doc), r = n.indexOf(e.doc.key)), \n                    {\n                        type: uf(e.type),\n                        doc: s,\n                        oldIndex: i,\n                        newIndex: r\n                    };\n                }));\n            }\n        }(this, e), this._cachedChangesIncludeMetadataChanges = e), this._cachedChanges;\n    }\n}\n\nfunction uf(t) {\n    switch (t) {\n      case 0 /* ChangeType.Added */ :\n        return \"added\";\n\n      case 2 /* ChangeType.Modified */ :\n      case 3 /* ChangeType.Metadata */ :\n        return \"modified\";\n\n      case 1 /* ChangeType.Removed */ :\n        return \"removed\";\n\n      default:\n        return O();\n    }\n}\n\n// TODO(firestoreexp): Add tests for snapshotEqual with different snapshot\n// metadata\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function cf(t, e) {\n    return t instanceof sf && e instanceof sf ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof of && e instanceof of && (t._firestore === e._firestore && ph(t.query, e.query) && t.metadata.isEqual(e.metadata) && t._snapshot.isEqual(e._snapshot));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Reads the document referred to by this `DocumentReference`.\n *\n * Note: `getDoc()` attempts to provide up-to-date data when possible by waiting\n * for data from the server, but it may return cached data or fail if you are\n * offline and the server cannot be reached. To specify this behavior, invoke\n * {@link getDocFromCache} or {@link getDocFromServer}.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */ function af(t) {\n    t = uh(t, fh);\n    const e = uh(t.firestore, vh);\n    return za(bh(e), t._key).then((n => Af(e, t, n)));\n}\n\nclass hf extends Wl {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Uh(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new fh(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by this `DocumentReference` from cache.\n * Returns an error if the document is not currently cached.\n *\n * @returns A `Promise` resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */ function lf(t) {\n    t = uh(t, fh);\n    const e = uh(t.firestore, vh), n = bh(e), s = new hf(e);\n    return ja(n, t._key).then((n => new sf(e, s, t._key, n, new nf(null !== n && n.hasLocalMutations, \n    /* fromCache= */ !0), t.converter)));\n}\n\n/**\n * Reads the document referred to by this `DocumentReference` from the server.\n * Returns an error if the network is not available.\n *\n * @returns A `Promise` resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */ function ff(t) {\n    t = uh(t, fh);\n    const e = uh(t.firestore, vh);\n    return za(bh(e), t._key, {\n        source: \"server\"\n    }).then((n => Af(e, t, n)));\n}\n\n/**\n * Executes the query and returns the results as a `QuerySnapshot`.\n *\n * Note: `getDocs()` attempts to provide up-to-date data when possible by\n * waiting for data from the server, but it may return cached data or fail if\n * you are offline and the server cannot be reached. To specify this behavior,\n * invoke {@link getDocsFromCache} or {@link getDocsFromServer}.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */ function df(t) {\n    t = uh(t, dh);\n    const e = uh(t.firestore, vh), n = bh(e), s = new hf(e);\n    return El(t._query), Ha(n, t._query).then((n => new of(e, s, t, n)));\n}\n\n/**\n * Executes the query and returns the results as a `QuerySnapshot` from cache.\n * Returns an empty result set if no documents matching the query are currently\n * cached.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */ function wf(t) {\n    t = uh(t, dh);\n    const e = uh(t.firestore, vh), n = bh(e), s = new hf(e);\n    return Wa(n, t._query).then((n => new of(e, s, t, n)));\n}\n\n/**\n * Executes the query and returns the results as a `QuerySnapshot` from the\n * server. Returns an error if the network is not available.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */ function _f(t) {\n    t = uh(t, dh);\n    const e = uh(t.firestore, vh), n = bh(e), s = new hf(e);\n    return Ha(n, t._query, {\n        source: \"server\"\n    }).then((n => new of(e, s, t, n)));\n}\n\nfunction mf(t, e, n) {\n    t = uh(t, fh);\n    const s = uh(t.firestore, vh), i = Hl(t.converter, e, n);\n    return Ef(s, [ tl(Zh(s), \"setDoc\", t._key, i, null !== t.converter, n).toMutation(t._key, Fs.none()) ]);\n}\n\nfunction gf(t, e, n, ...s) {\n    t = uh(t, fh);\n    const i = uh(t.firestore, vh), r = Zh(i);\n    let o;\n    o = \"string\" == typeof (\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    e = getModularInstance(e)) || e instanceof Kh ? cl(r, \"updateDoc\", t._key, e, n, s) : ul(r, \"updateDoc\", t._key, e);\n    return Ef(i, [ o.toMutation(t._key, Fs.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * @param reference - A reference to the document to delete.\n * @returns A Promise resolved once the document has been successfully\n * deleted from the backend (note that it won't resolve while you're offline).\n */ function yf(t) {\n    return Ef(uh(t.firestore, vh), [ new Ys(t._key, Fs.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend (Note that it\n * won't resolve while you're offline).\n */ function pf(t, e) {\n    const n = uh(t.firestore, vh), s = gh(t), i = Hl(t.converter, e);\n    return Ef(n, [ tl(Zh(t.firestore), \"addDoc\", s._key, i, null !== t.converter, {}).toMutation(s._key, Fs.exists(!1)) ]).then((() => s));\n}\n\nfunction If(t, ...e) {\n    var n, s, i;\n    t = getModularInstance(t);\n    let r = {\n        includeMetadataChanges: !1\n    }, o = 0;\n    \"object\" != typeof e[o] || Th(e[o]) || (r = e[o], o++);\n    const u = {\n        includeMetadataChanges: r.includeMetadataChanges\n    };\n    if (Th(e[o])) {\n        const t = e[o];\n        e[o] = null === (n = t.next) || void 0 === n ? void 0 : n.bind(t), e[o + 1] = null === (s = t.error) || void 0 === s ? void 0 : s.bind(t), \n        e[o + 2] = null === (i = t.complete) || void 0 === i ? void 0 : i.bind(t);\n    }\n    let c, a, h;\n    if (t instanceof fh) a = uh(t.firestore, vh), h = Gn(t._key.path), c = {\n        next: n => {\n            e[o] && e[o](Af(a, t, n));\n        },\n        error: e[o + 1],\n        complete: e[o + 2]\n    }; else {\n        const n = uh(t, dh);\n        a = uh(n.firestore, vh), h = n._query;\n        const s = new hf(a);\n        c = {\n            next: t => {\n                e[o] && e[o](new of(a, s, n, t));\n            },\n            error: e[o + 1],\n            complete: e[o + 2]\n        }, El(t._query);\n    }\n    return function(t, e, n, s) {\n        const i = new Va(s), r = new Nc(e, i, n);\n        return t.asyncQueue.enqueueAndForget((async () => Vc(await Ka(t), r))), () => {\n            i.Dc(), t.asyncQueue.enqueueAndForget((async () => Sc(await Ka(t), r)));\n        };\n    }(bh(a), h, u, c);\n}\n\nfunction Tf(t, e) {\n    return Ja(bh(t = uh(t, vh)), Th(e) ? e : {\n        next: e\n    });\n}\n\n/**\n * Locally writes `mutations` on the async queue.\n * @internal\n */ function Ef(t, e) {\n    return function(t, e) {\n        const n = new K;\n        return t.asyncQueue.enqueueAndForget((async () => zc(await qa(t), e, n))), n.promise;\n    }(bh(t), e);\n}\n\n/**\n * Converts a {@link ViewSnapshot} that contains the single document specified by `ref`\n * to a {@link DocumentSnapshot}.\n */ function Af(t, e, n) {\n    const s = n.docs.get(e._key), i = new hf(t);\n    return new sf(t, i, e._key, s, new nf(n.hasPendingWrites, n.fromCache), e.converter);\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * The result received from the server is presented, unaltered, without\n * considering any local state. That is, documents in the local cache are not\n * taken into consideration, neither are local modifications not yet\n * synchronized with the server. Previously-downloaded results, if any, are not\n * used: every request using this source necessarily involves a round trip to\n * the server.\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function vf(t) {\n    return Rf(t, {\n        count: Zl()\n    });\n}\n\n/**\n * Calculates the specified aggregations over the documents in the result\n * set of the given query, without actually downloading the documents.\n *\n * Using this function to perform aggregations is efficient because only the\n * final aggregation values, not the documents' data, is downloaded. This\n * function can even perform aggregations of the documents if the result set\n * would be prohibitively large to download entirely (e.g. thousands of documents).\n *\n * The result received from the server is presented, unaltered, without\n * considering any local state. That is, documents in the local cache are not\n * taken into consideration, neither are local modifications not yet\n * synchronized with the server. Previously-downloaded results, if any, are not\n * used: every request using this source necessarily involves a round trip to\n * the server.\n *\n * @param query The query whose result set to aggregate over.\n * @param aggregateSpec An `AggregateSpec` object that specifies the aggregates\n * to perform over the result set. The AggregateSpec specifies aliases for each\n * aggregate, which can be used to retrieve the aggregate result.\n * @example\n * ```typescript\n * const aggregateSnapshot = await getAggregateFromServer(query, {\n *   countOfDocs: count(),\n *   totalHours: sum('hours'),\n *   averageScore: average('score')\n * });\n *\n * const countOfDocs: number = aggregateSnapshot.data().countOfDocs;\n * const totalHours: number = aggregateSnapshot.data().totalHours;\n * const averageScore: number | null = aggregateSnapshot.data().averageScore;\n * ```\n * @internal TODO (sum/avg) remove when public\n */ function Rf(t, e) {\n    const n = uh(t.firestore, vh), s = bh(n), i = function(t, e) {\n        const n = [];\n        for (const s in t) Object.prototype.hasOwnProperty.call(t, s) && n.push(e(t[s], s, t));\n        return n;\n    }(e, ((t, e) => new ni(e, t._aggregateType, t._internalFieldPath)));\n    // Run the aggregation and convert the results\n    return function(t, e, n) {\n        const s = new K;\n        return t.asyncQueue.enqueueAndForget((async () => {\n            // TODO (sum/avg) should we update this to use the event manager?\n            // Implement and call executeAggregateQueryViaSnapshotListener, similar\n            // to the implementation in firestoreClientGetDocumentsViaSnapshotListener\n            // above\n            try {\n                // TODO(b/277628384): check `canUseNetwork()` and handle multi-tab.\n                const i = await Ua(t);\n                s.resolve(Gu(i, e, n));\n            } catch (t) {\n                s.reject(t);\n            }\n        })), s.promise;\n    }(s, t._query, i).then((e => \n    /**\n * Converts the core aggregration result to an `AggregateQuerySnapshot`\n * that can be returned to the consumer.\n * @param query\n * @param aggregateResult Core aggregation result\n * @internal\n */\n    function(t, e, n) {\n        const s = new hf(t);\n        return new qh(e, s, n);\n    }\n    /**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (n, t, e)));\n}\n\nclass Pf {\n    constructor(t) {\n        this.kind = \"memory\", this._onlineComponentProvider = new Pa, (null == t ? void 0 : t.garbageCollector) ? this._offlineComponentProvider = t.garbageCollector._offlineComponentProvider : this._offlineComponentProvider = new Ea;\n    }\n    toJSON() {\n        return {\n            kind: this.kind\n        };\n    }\n}\n\nclass bf {\n    constructor(t) {\n        let e;\n        this.kind = \"persistent\", (null == t ? void 0 : t.tabManager) ? (t.tabManager._initialize(t), \n        e = t.tabManager) : (e = $f(void 0), e._initialize(t)), this._onlineComponentProvider = e._onlineComponentProvider, \n        this._offlineComponentProvider = e._offlineComponentProvider;\n    }\n    toJSON() {\n        return {\n            kind: this.kind\n        };\n    }\n}\n\nclass Vf {\n    constructor() {\n        this.kind = \"memoryEager\", this._offlineComponentProvider = new Ea;\n    }\n    toJSON() {\n        return {\n            kind: this.kind\n        };\n    }\n}\n\nclass Sf {\n    constructor(t) {\n        this.kind = \"memoryLru\", this._offlineComponentProvider = new Aa(t);\n    }\n    toJSON() {\n        return {\n            kind: this.kind\n        };\n    }\n}\n\n/**\n * Creates an instance of `MemoryEagerGarbageCollector`. This is also the\n * default garbage collector unless it is explicitly specified otherwise.\n */ function Df() {\n    return new Vf;\n}\n\n/**\n * Creates an instance of `MemoryLruGarbageCollector`.\n *\n * A target size can be specified as part of the setting parameter. The\n * collector will start deleting documents once the cache size exceeds\n * the given size. The default cache size is 40MB (40 * 1024 * 1024 bytes).\n */ function Cf(t) {\n    return new Sf(null == t ? void 0 : t.cacheSizeBytes);\n}\n\n/**\n * Creates an instance of `MemoryLocalCache`. The instance can be set to\n * `FirestoreSettings.cache` to tell the SDK which cache layer to use.\n */ function xf(t) {\n    return new Pf(t);\n}\n\n/**\n * Creates an instance of `PersistentLocalCache`. The instance can be set to\n * `FirestoreSettings.cache` to tell the SDK which cache layer to use.\n *\n * Persistent cache cannot be used in a Node.js environment.\n */ function Nf(t) {\n    return new bf(t);\n}\n\nclass kf {\n    constructor(t) {\n        this.forceOwnership = t, this.kind = \"persistentSingleTab\";\n    }\n    toJSON() {\n        return {\n            kind: this.kind\n        };\n    }\n    /**\n     * @internal\n     */    _initialize(t) {\n        this._onlineComponentProvider = new Pa, this._offlineComponentProvider = new va(this._onlineComponentProvider, null == t ? void 0 : t.cacheSizeBytes, this.forceOwnership);\n    }\n}\n\nclass Mf {\n    constructor() {\n        this.kind = \"PersistentMultipleTab\";\n    }\n    toJSON() {\n        return {\n            kind: this.kind\n        };\n    }\n    /**\n     * @internal\n     */    _initialize(t) {\n        this._onlineComponentProvider = new Pa, this._offlineComponentProvider = new Ra(this._onlineComponentProvider, null == t ? void 0 : t.cacheSizeBytes);\n    }\n}\n\n/**\n * Creates an instance of `PersistentSingleTabManager`.\n *\n * @param settings Configures the created tab manager.\n */ function $f(t) {\n    return new kf(null == t ? void 0 : t.forceOwnership);\n}\n\n/**\n * Creates an instance of `PersistentMultipleTabManager`.\n */ function Of() {\n    return new Mf;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ff = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */\nclass Bf {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Zh(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const s = Lf(t, this._firestore), i = Hl(s.converter, e, n), r = tl(this._dataReader, \"WriteBatch.set\", s._key, i, null !== s.converter, n);\n        return this._mutations.push(r.toMutation(s._key, Fs.none())), this;\n    }\n    update(t, e, n, ...s) {\n        this._verifyNotCommitted();\n        const i = Lf(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let r;\n        return r = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Kh ? cl(this._dataReader, \"WriteBatch.update\", i._key, e, n, s) : ul(this._dataReader, \"WriteBatch.update\", i._key, e), \n        this._mutations.push(r.toMutation(i._key, Fs.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = Lf(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Ys(e._key, Fs.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(q.FAILED_PRECONDITION, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction Lf(t, e) {\n    if ((t = getModularInstance(t)).firestore !== e) throw new U(q.INVALID_ARGUMENT, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n// legacy SDK.\n/**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */\nclass qf extends class {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Zh(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = Lf(t, this._firestore), n = new Jl(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return O();\n            const s = t[0];\n            if (s.isFoundDocument()) return new pl(this._firestore, n, s.key, s, e.converter);\n            if (s.isNoDocument()) return new pl(this._firestore, n, e._key, null, e.converter);\n            throw O();\n        }));\n    }\n    set(t, e, n) {\n        const s = Lf(t, this._firestore), i = Hl(s.converter, e, n), r = tl(this._dataReader, \"Transaction.set\", s._key, i, null !== s.converter, n);\n        return this._transaction.set(s._key, r), this;\n    }\n    update(t, e, n, ...s) {\n        const i = Lf(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let r;\n        return r = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Kh ? cl(this._dataReader, \"Transaction.update\", i._key, e, n, s) : ul(this._dataReader, \"Transaction.update\", i._key, e), \n        this._transaction.update(i._key, r), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = Lf(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n} {\n    // This class implements the same logic as the Transaction API in the Lite SDK\n    // but is subclassed in order to return its own DocumentSnapshot types.\n    /** @hideconstructor */\n    constructor(t, e) {\n        super(t, e), this._firestore = t;\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = Lf(t, this._firestore), n = new hf(this._firestore);\n        return super.get(t).then((t => new sf(this._firestore, n, e._key, t._document, new nf(\n        /* hasPendingWrites= */ !1, \n        /* fromCache= */ !1), e.converter)));\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function Uf(t, e, n) {\n    t = uh(t, vh);\n    const s = Object.assign(Object.assign({}, Ff), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(q.INVALID_ARGUMENT, \"Max attempts must be at least 1\");\n    }(s);\n    return function(t, e, n) {\n        const s = new K;\n        return t.asyncQueue.enqueueAndForget((async () => {\n            const i = await Ua(t);\n            new Ca(t.asyncQueue, i, n, e, s).run();\n        })), s.promise;\n    }(bh(t), (n => e(new qf(t, n))), s);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Kf() {\n    return new el(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Gf() {\n    return new sl(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function Qf(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new il(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function jf(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new rl(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function zf(t) {\n    return new ol(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single {@link WriteBatch}\n * is 500.\n *\n * Unlike transactions, write batches are persisted offline and therefore are\n * preferable when you don't need to condition your writes on read data.\n *\n * @returns A {@link WriteBatch} that can be used to atomically execute multiple\n * writes.\n */ function Wf(t) {\n    return bh(t = uh(t, vh)), new Bf(t, (e => Ef(t, e)));\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Hf(t, e) {\n    var n;\n    const s = bh(t = uh(t, vh));\n    if (!s._uninitializedComponentsProvider || \"memory\" === (null === (n = s._uninitializedComponentsProvider) || void 0 === n ? void 0 : n._offlineKind)) \n    // PORTING NOTE: We don't return an error if the user has not enabled\n    // persistence since `enableIndexeddbPersistence()` can fail on the Web.\n    return M(\"Cannot enable indexes when persistence is disabled\"), Promise.resolve();\n    const i = function(t) {\n        const e = \"string\" == typeof t ? function(t) {\n            try {\n                return JSON.parse(t);\n            } catch (t) {\n                throw new U(q.INVALID_ARGUMENT, \"Failed to parse JSON: \" + (null == t ? void 0 : t.message));\n            }\n        }(t) : t, n = [];\n        if (Array.isArray(e.indexes)) for (const t of e.indexes) {\n            const e = Jf(t, \"collectionGroup\"), s = [];\n            if (Array.isArray(t.fields)) for (const e of t.fields) {\n                const t = ml(\"setIndexConfiguration\", Jf(e, \"fieldPath\"));\n                \"CONTAINS\" === e.arrayConfig ? s.push(new _t(t, 2 /* IndexKind.CONTAINS */)) : \"ASCENDING\" === e.order ? s.push(new _t(t, 0 /* IndexKind.ASCENDING */)) : \"DESCENDING\" === e.order && s.push(new _t(t, 1 /* IndexKind.DESCENDING */));\n            }\n            n.push(new lt(lt.UNKNOWN_ID, e, s, gt.empty()));\n        }\n        return n;\n    }(e);\n    return Za(s, i);\n}\n\nfunction Jf(t, e) {\n    if (\"string\" != typeof t[e]) throw new U(q.INVALID_ARGUMENT, \"Missing string value for: \" + e);\n    return t[e];\n}\n\n/**\n * Cloud Firestore\n *\n * @packageDocumentation\n */ !function(t, e = !0) {\n    !function(t) {\n        S = t;\n    }(SDK_VERSION), _registerComponent(new Component(\"firestore\", ((t, {instanceIdentifier: n, options: s}) => {\n        const i = t.getProvider(\"app\").getImmediate(), r = new vh(new z(t.getProvider(\"auth-internal\")), new Y(t.getProvider(\"app-check-internal\")), function(t, e) {\n            if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(q.INVALID_ARGUMENT, '\"projectId\" not provided in firebase.initializeApp.');\n            return new Oe(t.options.projectId, e);\n        }(i, n), i);\n        return s = Object.assign({\n            useFetchStreams: e\n        }, s), r._setSettings(s), r;\n    }), \"PUBLIC\").setMultipleInstances(!0)), registerVersion(b, \"3.13.0\", t), \n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n    registerVersion(b, \"3.13.0\", \"esm2017\");\n}();\n\nexport { Wl as AbstractUserDataWriter, Lh as AggregateField, qh as AggregateQuerySnapshot, Uh as Bytes, Ah as CACHE_SIZE_UNLIMITED, wh as CollectionReference, fh as DocumentReference, sf as DocumentSnapshot, Kh as FieldPath, Qh as FieldValue, vh as Firestore, U as FirestoreError, jh as GeoPoint, Eh as LoadBundleTask, dh as Query, Vl as QueryCompositeFilterConstraint, vl as QueryConstraint, rf as QueryDocumentSnapshot, Bl as QueryEndAtConstraint, Pl as QueryFieldFilterConstraint, Nl as QueryLimitConstraint, Cl as QueryOrderByConstraint, of as QuerySnapshot, $l as QueryStartAtConstraint, nf as SnapshotMetadata, it as Timestamp, qf as Transaction, Bf as WriteBatch, Oe as _DatabaseId, ht as _DocumentKey, X as _EmptyAppCheckTokenProvider, Q as _EmptyAuthCredentialsProvider, at as _FieldPath, ci as _TestingHooks, uh as _cast, B as _debugAssert, be as _isBase64Available, M as _logWarn, sh as _validateIsNotUsedTogether, pf as addDoc, tf as aggregateFieldEqual, ef as aggregateQuerySnapshotEqual, Dl as and, jf as arrayRemove, Qf as arrayUnion, Xl as average, xh as clearIndexedDbPersistence, _h as collection, mh as collectionGroup, lh as connectFirestoreEmulator, Zl as count, yf as deleteDoc, Kf as deleteField, Mh as disableNetwork, gh as doc, Gh as documentId, Sh as enableIndexedDbPersistence, Dh as enableMultiTabIndexedDbPersistence, kh as enableNetwork, ql as endAt, Ll as endBefore, bh as ensureFirestoreConfigured, Ef as executeWrite, Rf as getAggregateFromServer, vf as getCountFromServer, af as getDoc, lf as getDocFromCache, ff as getDocFromServer, df as getDocs, wf as getDocsFromCache, _f as getDocsFromServer, Ph as getFirestore, zf as increment, Rh as initializeFirestore, kl as limit, Ml as limitToLast, Oh as loadBundle, Df as memoryEagerGarbageCollector, xf as memoryLocalCache, Cf as memoryLruGarbageCollector, Fh as namedQuery, If as onSnapshot, Tf as onSnapshotsInSync, Sl as or, xl as orderBy, Nf as persistentLocalCache, Of as persistentMultipleTabManager, $f as persistentSingleTabManager, Rl as query, ph as queryEqual, yh as refEqual, Uf as runTransaction, Gf as serverTimestamp, mf as setDoc, Hf as setIndexConfiguration, x as setLogLevel, cf as snapshotEqual, Fl as startAfter, Ol as startAt, Yl as sum, $h as terminate, gf as updateDoc, Nh as waitForPendingWrites, bl as where, Wf as writeBatch };\n//# sourceMappingURL=index.esm2017.js.map\n","import { _registerComponent, registerVersion, _getProvider, getApp } from '@firebase/app';\nimport { FirebaseError, getModularInstance, getDefaultEmulatorHostnameAndPort } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\r\nconst UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\r\nfunction mapValues(\r\n// { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\no, f) {\r\n    const result = {};\r\n    for (const key in o) {\r\n        if (o.hasOwnProperty(key)) {\r\n            result[key] = f(o[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Takes data and encodes it in a JSON-friendly way, such that types such as\r\n * Date are preserved.\r\n * @internal\r\n * @param data - Data to encode.\r\n */\r\nfunction encode(data) {\r\n    if (data == null) {\r\n        return null;\r\n    }\r\n    if (data instanceof Number) {\r\n        data = data.valueOf();\r\n    }\r\n    if (typeof data === 'number' && isFinite(data)) {\r\n        // Any number in JS is safe to put directly in JSON and parse as a double\r\n        // without any loss of precision.\r\n        return data;\r\n    }\r\n    if (data === true || data === false) {\r\n        return data;\r\n    }\r\n    if (Object.prototype.toString.call(data) === '[object String]') {\r\n        return data;\r\n    }\r\n    if (data instanceof Date) {\r\n        return data.toISOString();\r\n    }\r\n    if (Array.isArray(data)) {\r\n        return data.map(x => encode(x));\r\n    }\r\n    if (typeof data === 'function' || typeof data === 'object') {\r\n        return mapValues(data, x => encode(x));\r\n    }\r\n    // If we got this far, the data is not encodable.\r\n    throw new Error('Data cannot be encoded in JSON: ' + data);\r\n}\r\n/**\r\n * Takes data that's been encoded in a JSON-friendly form and returns a form\r\n * with richer datatypes, such as Dates, etc.\r\n * @internal\r\n * @param json - JSON to convert.\r\n */\r\nfunction decode(json) {\r\n    if (json == null) {\r\n        return json;\r\n    }\r\n    if (json['@type']) {\r\n        switch (json['@type']) {\r\n            case LONG_TYPE:\r\n            // Fall through and handle this the same as unsigned.\r\n            case UNSIGNED_LONG_TYPE: {\r\n                // Technically, this could work return a valid number for malformed\r\n                // data if there was a number followed by garbage. But it's just not\r\n                // worth all the extra code to detect that case.\r\n                const value = Number(json['value']);\r\n                if (isNaN(value)) {\r\n                    throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                }\r\n                return value;\r\n            }\r\n            default: {\r\n                throw new Error('Data cannot be decoded from JSON: ' + json);\r\n            }\r\n        }\r\n    }\r\n    if (Array.isArray(json)) {\r\n        return json.map(x => decode(x));\r\n    }\r\n    if (typeof json === 'function' || typeof json === 'object') {\r\n        return mapValues(json, x => decode(x));\r\n    }\r\n    // Anything else is safe to return.\r\n    return json;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Functions.\r\n */\r\nconst FUNCTIONS_TYPE = 'functions';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\r\nconst errorCodeMap = {\r\n    OK: 'ok',\r\n    CANCELLED: 'cancelled',\r\n    UNKNOWN: 'unknown',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    DEADLINE_EXCEEDED: 'deadline-exceeded',\r\n    NOT_FOUND: 'not-found',\r\n    ALREADY_EXISTS: 'already-exists',\r\n    PERMISSION_DENIED: 'permission-denied',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    RESOURCE_EXHAUSTED: 'resource-exhausted',\r\n    FAILED_PRECONDITION: 'failed-precondition',\r\n    ABORTED: 'aborted',\r\n    OUT_OF_RANGE: 'out-of-range',\r\n    UNIMPLEMENTED: 'unimplemented',\r\n    INTERNAL: 'internal',\r\n    UNAVAILABLE: 'unavailable',\r\n    DATA_LOSS: 'data-loss'\r\n};\r\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\r\nclass FunctionsError extends FirebaseError {\r\n    constructor(\r\n    /**\r\n     * A standard error code that will be returned to the client. This also\r\n     * determines the HTTP status code of the response, as defined in code.proto.\r\n     */\r\n    code, message, \r\n    /**\r\n     * Extra data to be converted to JSON and included in the error response.\r\n     */\r\n    details) {\r\n        super(`${FUNCTIONS_TYPE}/${code}`, message || '');\r\n        this.details = details;\r\n    }\r\n}\r\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\r\nfunction codeForHTTPStatus(status) {\r\n    // Make sure any successful status is OK.\r\n    if (status >= 200 && status < 300) {\r\n        return 'ok';\r\n    }\r\n    switch (status) {\r\n        case 0:\r\n            // This can happen if the server returns 500.\r\n            return 'internal';\r\n        case 400:\r\n            return 'invalid-argument';\r\n        case 401:\r\n            return 'unauthenticated';\r\n        case 403:\r\n            return 'permission-denied';\r\n        case 404:\r\n            return 'not-found';\r\n        case 409:\r\n            return 'aborted';\r\n        case 429:\r\n            return 'resource-exhausted';\r\n        case 499:\r\n            return 'cancelled';\r\n        case 500:\r\n            return 'internal';\r\n        case 501:\r\n            return 'unimplemented';\r\n        case 503:\r\n            return 'unavailable';\r\n        case 504:\r\n            return 'deadline-exceeded';\r\n    }\r\n    return 'unknown';\r\n}\r\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\r\nfunction _errorForResponse(status, bodyJSON) {\r\n    let code = codeForHTTPStatus(status);\r\n    // Start with reasonable defaults from the status code.\r\n    let description = code;\r\n    let details = undefined;\r\n    // Then look through the body for explicit details.\r\n    try {\r\n        const errorJSON = bodyJSON && bodyJSON.error;\r\n        if (errorJSON) {\r\n            const status = errorJSON.status;\r\n            if (typeof status === 'string') {\r\n                if (!errorCodeMap[status]) {\r\n                    // They must've included an unknown error code in the body.\r\n                    return new FunctionsError('internal', 'internal');\r\n                }\r\n                code = errorCodeMap[status];\r\n                // TODO(klimt): Add better default descriptions for error enums.\r\n                // The default description needs to be updated for the new code.\r\n                description = status;\r\n            }\r\n            const message = errorJSON.message;\r\n            if (typeof message === 'string') {\r\n                description = message;\r\n            }\r\n            details = errorJSON.details;\r\n            if (details !== undefined) {\r\n                details = decode(details);\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // If we couldn't parse explicit error data, that's fine.\r\n    }\r\n    if (code === 'ok') {\r\n        // Technically, there's an edge case where a developer could explicitly\r\n        // return an error code of OK, and we will treat it as success, but that\r\n        // seems reasonable.\r\n        return null;\r\n    }\r\n    return new FunctionsError(code, description, details);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n * @internal\r\n */\r\nclass ContextProvider {\r\n    constructor(authProvider, messagingProvider, appCheckProvider) {\r\n        this.auth = null;\r\n        this.messaging = null;\r\n        this.appCheck = null;\r\n        this.auth = authProvider.getImmediate({ optional: true });\r\n        this.messaging = messagingProvider.getImmediate({\r\n            optional: true\r\n        });\r\n        if (!this.auth) {\r\n            authProvider.get().then(auth => (this.auth = auth), () => {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n        if (!this.messaging) {\r\n            messagingProvider.get().then(messaging => (this.messaging = messaging), () => {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n        if (!this.appCheck) {\r\n            appCheckProvider.get().then(appCheck => (this.appCheck = appCheck), () => {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n    }\r\n    async getAuthToken() {\r\n        if (!this.auth) {\r\n            return undefined;\r\n        }\r\n        try {\r\n            const token = await this.auth.getToken();\r\n            return token === null || token === void 0 ? void 0 : token.accessToken;\r\n        }\r\n        catch (e) {\r\n            // If there's any error when trying to get the auth token, leave it off.\r\n            return undefined;\r\n        }\r\n    }\r\n    async getMessagingToken() {\r\n        if (!this.messaging ||\r\n            !('Notification' in self) ||\r\n            Notification.permission !== 'granted') {\r\n            return undefined;\r\n        }\r\n        try {\r\n            return await this.messaging.getToken();\r\n        }\r\n        catch (e) {\r\n            // We don't warn on this, because it usually means messaging isn't set up.\r\n            // console.warn('Failed to retrieve instance id token.', e);\r\n            // If there's any error when trying to get the token, leave it off.\r\n            return undefined;\r\n        }\r\n    }\r\n    async getAppCheckToken(limitedUseAppCheckTokens) {\r\n        if (this.appCheck) {\r\n            const result = limitedUseAppCheckTokens\r\n                ? await this.appCheck.getLimitedUseToken()\r\n                : await this.appCheck.getToken();\r\n            if (result.error) {\r\n                // Do not send the App Check header to the functions endpoint if\r\n                // there was an error from the App Check exchange endpoint. The App\r\n                // Check SDK will already have logged the error to console.\r\n                return null;\r\n            }\r\n            return result.token;\r\n        }\r\n        return null;\r\n    }\r\n    async getContext(limitedUseAppCheckTokens) {\r\n        const authToken = await this.getAuthToken();\r\n        const messagingToken = await this.getMessagingToken();\r\n        const appCheckToken = await this.getAppCheckToken(limitedUseAppCheckTokens);\r\n        return { authToken, messagingToken, appCheckToken };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_REGION = 'us-central1';\r\n/**\r\n * Returns a Promise that will be rejected after the given duration.\r\n * The error will be of type FunctionsError.\r\n *\r\n * @param millis Number of milliseconds to wait before rejecting.\r\n */\r\nfunction failAfter(millis) {\r\n    // Node timers and browser timers are fundamentally incompatible, but we\r\n    // don't care about the value here\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    let timer = null;\r\n    return {\r\n        promise: new Promise((_, reject) => {\r\n            timer = setTimeout(() => {\r\n                reject(new FunctionsError('deadline-exceeded', 'deadline-exceeded'));\r\n            }, millis);\r\n        }),\r\n        cancel: () => {\r\n            if (timer) {\r\n                clearTimeout(timer);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * The main class for the Firebase Functions SDK.\r\n * @internal\r\n */\r\nclass FunctionsService {\r\n    /**\r\n     * Creates a new Functions service for the given app.\r\n     * @param app - The FirebaseApp to use.\r\n     */\r\n    constructor(app, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain = DEFAULT_REGION, fetchImpl) {\r\n        this.app = app;\r\n        this.fetchImpl = fetchImpl;\r\n        this.emulatorOrigin = null;\r\n        this.contextProvider = new ContextProvider(authProvider, messagingProvider, appCheckProvider);\r\n        // Cancels all ongoing requests when resolved.\r\n        this.cancelAllRequests = new Promise(resolve => {\r\n            this.deleteService = () => {\r\n                return Promise.resolve(resolve());\r\n            };\r\n        });\r\n        // Resolve the region or custom domain overload by attempting to parse it.\r\n        try {\r\n            const url = new URL(regionOrCustomDomain);\r\n            this.customDomain = url.origin;\r\n            this.region = DEFAULT_REGION;\r\n        }\r\n        catch (e) {\r\n            this.customDomain = null;\r\n            this.region = regionOrCustomDomain;\r\n        }\r\n    }\r\n    _delete() {\r\n        return this.deleteService();\r\n    }\r\n    /**\r\n     * Returns the URL for a callable with the given name.\r\n     * @param name - The name of the callable.\r\n     * @internal\r\n     */\r\n    _url(name) {\r\n        const projectId = this.app.options.projectId;\r\n        if (this.emulatorOrigin !== null) {\r\n            const origin = this.emulatorOrigin;\r\n            return `${origin}/${projectId}/${this.region}/${name}`;\r\n        }\r\n        if (this.customDomain !== null) {\r\n            return `${this.customDomain}/${name}`;\r\n        }\r\n        return `https://${this.region}-${projectId}.cloudfunctions.net/${name}`;\r\n    }\r\n}\r\n/**\r\n * Modify this instance to communicate with the Cloud Functions emulator.\r\n *\r\n * Note: this must be called before this instance has been used to do any operations.\r\n *\r\n * @param host The emulator host (ex: localhost)\r\n * @param port The emulator port (ex: 5001)\r\n * @public\r\n */\r\nfunction connectFunctionsEmulator$1(functionsInstance, host, port) {\r\n    functionsInstance.emulatorOrigin = `http://${host}:${port}`;\r\n}\r\n/**\r\n * Returns a reference to the callable https trigger with the given name.\r\n * @param name - The name of the trigger.\r\n * @public\r\n */\r\nfunction httpsCallable$1(functionsInstance, name, options) {\r\n    return (data => {\r\n        return call(functionsInstance, name, data, options || {});\r\n    });\r\n}\r\n/**\r\n * Returns a reference to the callable https trigger with the given url.\r\n * @param url - The url of the trigger.\r\n * @public\r\n */\r\nfunction httpsCallableFromURL$1(functionsInstance, url, options) {\r\n    return (data => {\r\n        return callAtURL(functionsInstance, url, data, options || {});\r\n    });\r\n}\r\n/**\r\n * Does an HTTP POST and returns the completed response.\r\n * @param url The url to post to.\r\n * @param body The JSON body of the post.\r\n * @param headers The HTTP headers to include in the request.\r\n * @return A Promise that will succeed when the request finishes.\r\n */\r\nasync function postJSON(url, body, headers, fetchImpl) {\r\n    headers['Content-Type'] = 'application/json';\r\n    let response;\r\n    try {\r\n        response = await fetchImpl(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n            headers\r\n        });\r\n    }\r\n    catch (e) {\r\n        // This could be an unhandled error on the backend, or it could be a\r\n        // network error. There's no way to know, since an unhandled error on the\r\n        // backend will fail to set the proper CORS header, and thus will be\r\n        // treated as a network error by fetch.\r\n        return {\r\n            status: 0,\r\n            json: null\r\n        };\r\n    }\r\n    let json = null;\r\n    try {\r\n        json = await response.json();\r\n    }\r\n    catch (e) {\r\n        // If we fail to parse JSON, it will fail the same as an empty body.\r\n    }\r\n    return {\r\n        status: response.status,\r\n        json\r\n    };\r\n}\r\n/**\r\n * Calls a callable function asynchronously and returns the result.\r\n * @param name The name of the callable trigger.\r\n * @param data The data to pass as params to the function.s\r\n */\r\nfunction call(functionsInstance, name, data, options) {\r\n    const url = functionsInstance._url(name);\r\n    return callAtURL(functionsInstance, url, data, options);\r\n}\r\n/**\r\n * Calls a callable function asynchronously and returns the result.\r\n * @param url The url of the callable trigger.\r\n * @param data The data to pass as params to the function.s\r\n */\r\nasync function callAtURL(functionsInstance, url, data, options) {\r\n    // Encode any special types, such as dates, in the input data.\r\n    data = encode(data);\r\n    const body = { data };\r\n    // Add a header for the authToken.\r\n    const headers = {};\r\n    const context = await functionsInstance.contextProvider.getContext(options.limitedUseAppCheckTokens);\r\n    if (context.authToken) {\r\n        headers['Authorization'] = 'Bearer ' + context.authToken;\r\n    }\r\n    if (context.messagingToken) {\r\n        headers['Firebase-Instance-ID-Token'] = context.messagingToken;\r\n    }\r\n    if (context.appCheckToken !== null) {\r\n        headers['X-Firebase-AppCheck'] = context.appCheckToken;\r\n    }\r\n    // Default timeout to 70s, but let the options override it.\r\n    const timeout = options.timeout || 70000;\r\n    const failAfterHandle = failAfter(timeout);\r\n    const response = await Promise.race([\r\n        postJSON(url, body, headers, functionsInstance.fetchImpl),\r\n        failAfterHandle.promise,\r\n        functionsInstance.cancelAllRequests\r\n    ]);\r\n    // Always clear the failAfter timeout\r\n    failAfterHandle.cancel();\r\n    // If service was deleted, interrupted response throws an error.\r\n    if (!response) {\r\n        throw new FunctionsError('cancelled', 'Firebase Functions instance was deleted.');\r\n    }\r\n    // Check for an error status, regardless of http status.\r\n    const error = _errorForResponse(response.status, response.json);\r\n    if (error) {\r\n        throw error;\r\n    }\r\n    if (!response.json) {\r\n        throw new FunctionsError('internal', 'Response is not valid JSON object.');\r\n    }\r\n    let responseData = response.json.data;\r\n    // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\r\n    // backwards compatibility.\r\n    if (typeof responseData === 'undefined') {\r\n        responseData = response.json.result;\r\n    }\r\n    if (typeof responseData === 'undefined') {\r\n        // Consider the response malformed.\r\n        throw new FunctionsError('internal', 'Response is missing data field.');\r\n    }\r\n    // Decode any special types, such as dates, in the returned data.\r\n    const decodedData = decode(responseData);\r\n    return { data: decodedData };\r\n}\n\nconst name = \"@firebase/functions\";\nconst version = \"0.10.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst AUTH_INTERNAL_NAME = 'auth-internal';\r\nconst APP_CHECK_INTERNAL_NAME = 'app-check-internal';\r\nconst MESSAGING_INTERNAL_NAME = 'messaging-internal';\r\nfunction registerFunctions(fetchImpl, variant) {\r\n    const factory = (container, { instanceIdentifier: regionOrCustomDomain }) => {\r\n        // Dependencies\r\n        const app = container.getProvider('app').getImmediate();\r\n        const authProvider = container.getProvider(AUTH_INTERNAL_NAME);\r\n        const messagingProvider = container.getProvider(MESSAGING_INTERNAL_NAME);\r\n        const appCheckProvider = container.getProvider(APP_CHECK_INTERNAL_NAME);\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return new FunctionsService(app, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain, fetchImpl);\r\n    };\r\n    _registerComponent(new Component(FUNCTIONS_TYPE, factory, \"PUBLIC\" /* ComponentType.PUBLIC */).setMultipleInstances(true));\r\n    registerVersion(name, version, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name, version, 'esm2017');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a {@link Functions} instance for the given app.\r\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\r\n * @param regionOrCustomDomain - one of:\r\n *   a) The region the callable functions are located in (ex: us-central1)\r\n *   b) A custom domain hosting the callable functions (ex: https://mydomain.com)\r\n * @public\r\n */\r\nfunction getFunctions(app = getApp(), regionOrCustomDomain = DEFAULT_REGION) {\r\n    // Dependencies\r\n    const functionsProvider = _getProvider(getModularInstance(app), FUNCTIONS_TYPE);\r\n    const functionsInstance = functionsProvider.getImmediate({\r\n        identifier: regionOrCustomDomain\r\n    });\r\n    const emulator = getDefaultEmulatorHostnameAndPort('functions');\r\n    if (emulator) {\r\n        connectFunctionsEmulator(functionsInstance, ...emulator);\r\n    }\r\n    return functionsInstance;\r\n}\r\n/**\r\n * Modify this instance to communicate with the Cloud Functions emulator.\r\n *\r\n * Note: this must be called before this instance has been used to do any operations.\r\n *\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 5001)\r\n * @public\r\n */\r\nfunction connectFunctionsEmulator(functionsInstance, host, port) {\r\n    connectFunctionsEmulator$1(getModularInstance(functionsInstance), host, port);\r\n}\r\n/**\r\n * Returns a reference to the callable HTTPS trigger with the given name.\r\n * @param name - The name of the trigger.\r\n * @public\r\n */\r\nfunction httpsCallable(functionsInstance, name, options) {\r\n    return httpsCallable$1(getModularInstance(functionsInstance), name, options);\r\n}\r\n/**\r\n * Returns a reference to the callable HTTPS trigger with the specified url.\r\n * @param url - The url of the trigger.\r\n * @public\r\n */\r\nfunction httpsCallableFromURL(functionsInstance, url, options) {\r\n    return httpsCallableFromURL$1(getModularInstance(functionsInstance), url, options);\r\n}\n\n/**\r\n * Cloud Functions for Firebase\r\n *\r\n * @packageDocumentation\r\n */\r\nregisterFunctions(fetch.bind(self));\n\nexport { connectFunctionsEmulator, getFunctions, httpsCallable, httpsCallableFromURL };\n//# sourceMappingURL=index.esm2017.js.map\n","﻿export const videosList = [\t\t\t\t\t\t\t\t\t\t\t\t\r\n  { fields : { title : \"What is The Matrix?\", link:\"https://www.youtube.com/watch?v=Td_ieom1g88\", subtitle:\"This is where I'm coming from\",host:\"Morpheous\", guest: \"Neo\", duration: \"3 minutes\", Order: 200 } },\r\n  { fields : { title : \"What is money?\", link:\"https://www.youtube.com/watch?v=J4IylYhh6Vw\", subtitle:\"Crash course on money\",host:\"Robert Breedlove\", guest: \"null\", duration: \"8 minutes\", Order: 200 } },\r\n  { fields : { title : \"Bitcoin Fixes Everything\", link:\"https://www.youtube.com/watch?v=gvnsSXq6UAI\", subtitle:\"Every institution is build on top of this global credit mess\",host:\"Anthony Pompliano\", guest: \"Jeff Booth\", duration: \"55 minutes\", Order: 200 } },\r\n  { fields : { title : \"What is a CDO (and a CDS?)\", link:\"https://www.youtube.com/watch?v=xbiDrzTd8fE\", subtitle:\"And the best part is they're eating 3 day old halibut\",host:\"null\", guest: \"null\", duration: \"10 minutes\", Order: 200 } },\r\n  { fields : { title : \"Michael Burry Vanderbilt lecture 11 years ago\", link:\"https://www.youtube.com/watch?v=fx2ClTpnAAs\", subtitle:\"null\",host:\"Michael Burry\", guest: \"null\", duration: \"35 minutes\", Order: 200 } },\r\n  { fields : { title : \"Authoritarianism\", link:\"https://www.youtube.com/watch?v=kSbMU5CbFM0\", subtitle:\"A human trying to save other humans from themselves and others\",host:\"Lex Friedman\", guest: \"Alex Gladstein\", duration: \">2+ hours\", Order: 200 } },\r\n  { fields : { title : \"Core Values\", link:\"https://www.youtube.com/watch?v=mDyBbGCiBUU\", subtitle:\"A war on block size\",host:\"Lex Friedman\", guest: \"Nic Carter\", duration: \">2+ hours\", Order: 200 } },\r\n  { fields : { title : \"I'm also curious as an outsider'\", link:\"https://www.youtube.com/watch?v=FXvQcuIb5rU\", subtitle:\"Saifedean Ammous\",host:\"Jordan Peterson\", guest: \"Saifedean Ammous\", duration: \">1+ hours\", Order: 200 } },\r\n  { fields : { title : \"Austrian Economics\", link:\"https://www.youtube.com/watch?v=gp4U5aH_T6A\", subtitle:\"Author of The Bitcoin Standard and The Fiat Standard\",host:\"Lex Friedman\", guest: \"Saifedean Ammous\", duration: \">4+ hours\", Order: 200 } },\r\n  { fields : { title : \"Spaceforce's BTC insider\", link:\"https://www.youtube.com/watch?v=wRxc7uUqAyE\", subtitle:\"Jason Lowery from MIT and Spaceforce\",host:\"Robert Breedlove\", guest: \"Jason Lowery\", duration: \">2+ hours\", Order: 200 } },\r\n  { fields : { title : \"Bitcoin’s Killer App\", link:\"https://youtu.be/B1PI7BCjopk\", subtitle:\"\",host:\"\", guest: \"Michael Saylor\", duration: \"1.2\", Order: 200 } },\r\n  { fields : { title : \"The UnCommunist Manifesto\", link:\"https://bitcoinmagazine.com/culture/bitcoin-independence-and-uncommunism\", subtitle:\"Bitcoin Magazine\",host:\"\", guest: \"\", duration: \"\", Order: 200 } },\r\n  { fields : { title : \"Everything you know about the Economy is wrong\", link:\"https://youtu.be/KNa-fewraJA\", subtitle:\"\",host:\"What Bitcoin Did\", guest: \"Jeff Snider\", duration: \"1.5\", Order: 200 } },\r\n  { fields : { title : \"A look at lightning\", link:\"https://www.swanbitcoin.com/a-look-at-the-lightning-network/\", subtitle:\"\",host:\"Lyn Alden\", guest: \"\", duration: \"\", Order: 200 } },\r\n  { fields : { title : \"Economy basics\", link:\"https://youtu.be/PHe0bXAIuk0\", subtitle:\"\",host:\"Ray Dalio\", guest: \"\", duration: \"\", Order: 200 } },\r\n  { fields : { title : \"What is ACID inflation\", link:\"https://youtu.be/PR9A3Oyvo5E\", subtitle:\"\",host:\"Anthony Pompliano\", guest: \"Michael Saylor\", duration: \"10\", Order: 200 } },\r\n]\t\t\t\t\t\t\t\t\t\t\t\t","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, collection, addDoc, getDocs } from \"firebase/firestore\";\r\nimport { getFunctions, httpsCallable } from 'firebase/functions';\r\nimport { videosList } from \"./videosList\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n// Your web app's Firebase configuration\r\n  // Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBBJKklaYU772b6kHbOWQFmcpm5zw8pPI4\",\r\n  authDomain: \"btcv2-9892c.firebaseapp.com\",\r\n  projectId: \"btcv2-9892c\",\r\n  storageBucket: \"btcv2-9892c.appspot.com\",\r\n  messagingSenderId: \"926821013818\",\r\n  appId: \"1:926821013818:web:8c320fdfd845978fcb9803\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig)\r\n\r\n// Initialize Cloud Firestore and get a reference to the service\r\nconst db = getFirestore(app);\r\n\r\n//Initialize Cloud Functions and get a reference to the service\r\nconst functions = getFunctions(app);\r\n\r\n//https://firebase.google.com/docs/hosting/manage-hosting-resources\r\n\r\nexport const callAirtable = () => {\r\n  \r\n  console.count(\"CallAT \");\r\n\r\n  const ytLinks = httpsCallable(functions, 'ytlinks');\r\n  \r\n  return ytLinks({ text: \"\" })\r\n  .then( ({data}) => {\r\n    return data;\r\n  })\r\n  .catch ( e => {\r\n    console.error(\" ERR: \", e)\r\n  })\r\n  \r\n}\r\n\r\n//make sure to pay attention to the name of the database.\r\n//THIS IS FIRESTORE!!\r\nexport const queryFirebase = async () => {\r\n  const results = [];\r\n\r\n  const queryDB = async () => {\r\n    const x = await getDocs(collection(db, 'test'))\r\n    x.forEach( (doc) => {\r\n      results.push(doc.data())\r\n    });\r\n  }\r\n  console.count(` FIREBASE QUERY${ x.length}`)\r\n  \r\n  await queryDB();\r\n  return results;\r\n}","import React, {useEffect, useState, Suspense, useCallback} from \"react\";\r\nimport CardColumn from \"../Components/ColumnDataContainer\";\r\nimport { Card } from \"../Components/Card\";\r\nimport { callAirtable } from \"../main\";\r\nimport { videosList } from \"../videosList\";\r\n\r\nexport default () => {\r\n  let [results, setResults] = useState([]);\r\n\r\n  const callAirtableAPI = useCallback( () => {\r\n    callAirtable()\r\n    .then( (data) => {      \r\n      \r\n      if(data?.records){\r\n        setResults(data.records);\r\n      }\r\n      setResults(videosList);\r\n      return;\r\n    \r\n    })\r\n    .catch( e => {\r\n      console.error( \" ERR \", e);            \r\n      return () => \"error\";\r\n    })\r\n  \r\n  })\r\n\r\n  useEffect( () => {\r\n    callAirtableAPI()\r\n  }, [callAirtableAPI])\r\n\r\n  return (\r\n    <CardColumn key=\"HelloWorld\">      \r\n      {\r\n        results ?\r\n        results\r\n        .sort( (a, b) => a.fields.Order - b.fields.Order)\r\n        .map( ( i, idx ) => {\r\n          return <Card {...i.fields} key={idx} />\r\n        })\r\n        : <p className=\"watchNow\">Loading...</p>\r\n      }\r\n    </CardColumn>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport default ({children, onClick, style, direction=\"row\" }) => {\r\n  return(\r\n    <div \r\n      onClick = { onClick }\r\n      style= {{\r\n        display: \"flex\",\r\n        flexGrow: \"1\",\r\n        direction: direction,\r\n        justifyContent: \"center\",\r\n        alignItems:\"center\",\r\n        ...style        \r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\n\r\nconst Text = ({ as, font, children }) => {\r\n  const Component = as;\r\n\r\n  const style = {\r\n    fontFamily: font\r\n  };\r\n\r\n  return <Component style={style}>{children}</Component>;\r\n};\r\n\r\nText.defaultProps = {\r\n  as: 'p',\r\n  font: 'monospace',\r\n  margin: 0,\r\n  padding: 0,\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\n\r\nexport const Hamburger = ({thick=12, height=20, width=20}) => {\r\n\r\n\r\n  return(\r\n    <svg viewBox=\"0 0 100 80\" width={width} height={height}>\r\n      <rect width=\"100\" height={thick}></rect>\r\n      <rect y=\"30\" width=\"100\" height={thick}></rect>\r\n      <rect y=\"60\" width=\"100\" height={thick}></rect>\r\n    </svg>\r\n  )\r\n}","import React from 'react';\r\nimport {atom} from 'recoil';\r\n\r\nexport const showNav = atom({\r\n  key: 'showNav', // unique ID (with respect to other atoms/selectors)\r\n  default: false, // default value (aka initial value)\r\n});","import React from \"react\";\r\nimport FlexOne from \"./FlexOne\";\r\nimport FlexThree from \"./FlexThree\";\r\nimport Text from \"./Text\";\r\nimport { Hamburger } from \"../Icons\";\r\nimport {\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n} from 'recoil';\r\nimport {showNav} from \"../state\"\r\n\r\nexport default () => {\r\n\r\n  const [open, setOpen] = useRecoilState(showNav);\r\n  return (\r\n    <div className=\"header-template\" >\r\n      <div onClick = { () => setOpen(!open) } style={{display: \"grid\", placeItems: \"center\", gridArea: \"menuIcon\"}}>\r\n        <Hamburger\r\n          style={{\r\n            padding: '1px',\r\n            border: '1px solid black',\r\n            borderRadius: '13%',\r\n            boxShadow: '2px 2px 3px grey',\r\n            width: '50%',\r\n            height: '20px',\r\n            margin: '10px'\r\n          }} \r\n        />\r\n      </div>    \r\n      <h1 style={{\r\n            fontFamily: 'DatalegreyaThin',\r\n            fontWeight: 'normal',\r\n            fontStyle: 'normal',\r\n            gridArea:\"headerTitle\",\r\n            textAlign: \"center\"\r\n          }}\r\n      >BTC Chokidar</h1>\r\n      <p style={{gridArea: \"subHeader\", fontFamily:\"DatalegreyaThin\", textAlign:\"center\", fontSize: \"1.2em\"}}>\r\n        The gods help those who help themselves\r\n      </p>\r\n    </div>\r\n  )\r\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import React, {useState} from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default () => {\r\n  const [ consent, setConsent ] = useState(true);\r\n  \r\n  try{\r\n\r\n    if(!consent){\r\n      return;\r\n    }else{\r\n      console.log(\" mounted Remember Me\");\r\n      const cookieValue = localStorage.getItem(`btcchokidar`);\r\n      console.log(\" FOUND COOKIE 2\", cookieValue);\r\n      if(!cookieValue){\r\n        console.log(\"hello there\", uuidv4() );\r\n        let buildNewGuid = uuidv4()\r\n        localStorage.setItem(`btcchokidar`, buildNewGuid);\r\n      }\r\n    }\r\n\r\n    return null;\r\n    \r\n  }catch(e){\r\n    console.error(\" Error Rendering Remember Me...\", e);\r\n    return null;\r\n  }\r\n  \r\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UilNotebooks = (props) => {\n  const { color, size, ...otherProps } = props\n  return React.createElement('svg', {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: size,\n    height: size,\n    viewBox: '0 0 24 24',\n    fill: color,\n    ...otherProps\n  }, React.createElement('path', {\n    d: 'M21,6a1,1,0,0,0-1,1V17a3,3,0,0,1-3,3H7a1,1,0,0,0,0,2H17a5,5,0,0,0,5-5V7A1,1,0,0,0,21,6Zm-3,9V5a3,3,0,0,0-3-3H5A3,3,0,0,0,2,5V15a3,3,0,0,0,3,3H15A3,3,0,0,0,18,15ZM10,4h2V8.86l-.36-.3a1,1,0,0,0-1.28,0l-.36.3ZM4,15V5A1,1,0,0,1,5,4H8v7a1,1,0,0,0,1.65.76L11,10.63l1.35,1.13A1,1,0,0,0,13,12a1.06,1.06,0,0,0,.42-.09A1,1,0,0,0,14,11V4h1a1,1,0,0,1,1,1V15a1,1,0,0,1-1,1H5A1,1,0,0,1,4,15Z'\n  }));\n};\n\nUilNotebooks.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nUilNotebooks.defaultProps = {\n  color: 'currentColor',\n  size: '24',\n};\n\nexport default UilNotebooks;","import React from \"react\";\r\nimport {\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n} from 'recoil';\r\nimport IconColumn from \"./ColumnDataContainer\";\r\nimport Text from \"./Text\";\r\nimport UniFilm from '@iconscout/react-unicons/icons/uil-film';\r\nimport Comment from '@iconscout/react-unicons/icons/uil-6-plus';\r\nimport Thing2 from '@iconscout/react-unicons/icons/uil-apple';\r\nimport Thing4 from '@iconscout/react-unicons/icons/uil-bookmark-full'\r\nimport Thing5 from '@iconscout/react-unicons/icons/uil-notebooks'\r\nimport IconContainer from \"./FlexOne\";\r\nimport TextContainer from \"./FlexOne\";\r\nimport NavLinkContainer from \"./FlexOne\";\r\nimport { showNav } from \"../state/\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default () => {\r\n  const [open, setOpen] = useRecoilState(showNav);\r\n  console.log(\" SIDE NAV MOUNTED\", open)\r\n  return (\r\n\r\n    <div className={`navBar ${open ? 'show' : ''}`}>\r\n      <IconColumn style={{ backgroundColor: '#e6e6e6' }}>\r\n\r\n        <NavLinkContainer onClick={() => { setOpen(false)}} style={{ flexDirection: \"column\", margin: \"2px\", padding: \"1px\" }}>\r\n          <Link to={`/`}>\r\n            <IconContainer>\r\n              <UniFilm />\r\n            </IconContainer>\r\n            <TextContainer>\r\n              <Text as={\"div\"}>Video </Text>\r\n            </TextContainer>\r\n          </Link>\r\n        </NavLinkContainer>\r\n  {/*\r\n        <NavLinkContainer onClick={() => { setOpen(false) }} style={{ flexDirection: \"column\", margin: \"2px\", padding: \"1px\" }}>\r\n          <Link to={`/texts`}>\r\n            <IconContainer>\r\n              <Comment />\r\n            </IconContainer>\r\n            <TextContainer>\r\n              <Text as={\"div\"}>Texts </Text>\r\n            </TextContainer>\r\n          </Link>\r\n        </NavLinkContainer >\r\n\r\n        <NavLinkContainer onClick={() => { setOpen(false) }} style={{ flexDirection: \"column\", margin: \"2px\", padding: \"1px\" }}>\r\n          <Link to={`/blog`}>\r\n            <IconContainer>\r\n              <Thing2 />\r\n            </IconContainer>\r\n            <TextContainer>\r\n              <Text as={\"div\"}>Blog </Text>\r\n            </TextContainer>\r\n          </Link>\r\n        </NavLinkContainer>\r\n\r\n        <NavLinkContainer onClick={() => {  setOpen(false)}} style={{ flexDirection: \"column\", margin: \"2px\", padding: \"1px\" }}>\r\n          <Link to={`/junkdrawer`}>\r\n            <IconContainer>\r\n              <Thing4 />\r\n            </IconContainer>\r\n            <TextContainer>\r\n              <Text as={\"div\"}>Junk Drawer </Text>\r\n            </TextContainer>\r\n          </Link>\r\n        </NavLinkContainer>\r\n\r\n        <NavLinkContainer onClick={() => {  setOpen(false)}} style={{ flexDirection: \"column\", margin: \"2px\", padding: \"1px\" }}>\r\n          <Link to={`/store`}>\r\n            <IconContainer>\r\n              <Thing5 />\r\n            </IconContainer>\r\n            <TextContainer>\r\n              <Text as={\"div\"}>Store </Text>\r\n            </TextContainer>\r\n          </Link>\r\n        </NavLinkContainer>\r\n  */}\r\n        <NavLinkContainer onClick={() => {  setOpen(false)}} style={{ flexDirection: \"column\", margin: \"2px\", padding: \"1px\" }}>\r\n          <Link to={`/ocr`}>\r\n            <IconContainer>\r\n              <Thing5 />\r\n            </IconContainer>\r\n            <TextContainer>\r\n              <Text as={\"div\"}>Tools </Text>\r\n            </TextContainer>\r\n          </Link>\r\n        </NavLinkContainer>\r\n\r\n      </IconColumn>\r\n    </div>\r\n  \r\n  )\r\n}","import React, { useState, useRef, Suspense } from 'react';\r\nimport FlexColumn from \"../ColumnDataContainer\";\r\n\r\nconst onError = () => {\r\n  return (\r\n    <p> Some Error </p>\r\n  )\r\n}\r\n\r\nconst onSuccess = () => {\r\n  return (\r\n    <p> Some Success </p>\r\n  )\r\n}\r\n\r\nconst onUploadProgress = () => {\r\n  return (\r\n    <p> Progress Started</p>\r\n  )\r\n}\r\n\r\nconst onUploadStart = () => {\r\n  return (\r\n    <p>Upload Started </p>\r\n  )\r\n}\r\n\r\nexport const FormUpload = () => {\r\n\r\n  const [file, setFile] = useState();\r\n  const [text, setText] = useState();\r\n  const [filePath, setFilePath] = useState();\r\n  const [discoveredText, setDiscoveredText] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    const uploadForm = document.getElementById('uploadForm');\r\n    const devURL = \"http://127.0.0.1:5001/btcv2-9892c/us-central1/ocr\";\r\n    const URL = \"https://us-central1-btcv2-9892c.cloudfunctions.net/ocr\";\r\n    const formData = new FormData(uploadForm);\r\n\r\n    fetch(devURL, {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n    .then(response => response.json()) // Assuming the response will be JSON\r\n    .then(data => {\r\n        console.log('Success:', data);\r\n        // Handle success (e.g., show a message, redirect, etc.)\r\n        const tempText = Object.values(data);\r\n        const tempFileName = Object.entries(data);\r\n        console.log(\" eventPhase: \", e.eventPhase)\r\n        setDiscoveredText(tempText[0])\r\n        setFilePath(tempFileName[0])\r\n        \r\n    })\r\n    .catch((error) => {\r\n        console.error('Error:', error);\r\n        // Handle error (e.g., show an error message)\r\n    });\r\n  }\r\n\r\n  //In order to use the SDK, you need to provide it with a few configuration parameters. \r\n  //The configuration parameters can be applied directly to the IKImage component or using \r\n  //an IKContext component.\r\n\r\n  return (\r\n    <FlexColumn>            \r\n      <h2>File upload</h2>    \r\n      <div>  \r\n        <p>Hi there! Here you can upload a file that contains some text. In a few moments the app will return the text to you so you can copy it</p>\r\n        <p>We do not retain copies of anything you do here. A cloud function runs, processes the image text and the function stops. There are no database connections</p>\r\n        <p>If you would like us to add that feature, let us know by clicking <a href=\"/dbrequested\">here</a> </p>\r\n      </div>\r\n      <div>\r\n        <form method=\"post\" encType=\"multipart/form-data\" id=\"uploadForm\">\r\n          <input onChange={handleChange} filename={text} type='file' id=\"avatar\" name=\"avatar\" accept=\"image/png, image/jpeg\" />\r\n          <input type=\"submit\" value=\"Upload Image\" name=\"submit\" onClick={submit}/>        \r\n        </form>\r\n      </div>\r\n      <div className='response'> \r\n        <div className=\"image\">\r\n          <img src={file} />\r\n        </div>\r\n        <div className=\"text-from-image\">\r\n          <p>{discoveredText}</p>\r\n        </div>\r\n      </div>\r\n    </FlexColumn>\r\n  )\r\n  }\r\n","import React, { useState } from \"react\";\r\nimport { RecoilRoot } from 'recoil';\r\nimport YTLinks from \"./Integrations/AirtableRequest\";\r\nimport Header from \"./Components/Header\";\r\nimport RememberMe from \"./Components/RememberMe\";\r\nimport SideNavigationPanel from \"./Components/SideNavigationPanel\";\r\nimport Column from \"./Components/ColumnDataContainer\";\r\nimport {FormUpload} from './Components/FormUpload/formUpload';\r\nimport {Routes, Route } from \"react-router-dom\";\r\n\r\nexport default () => {\r\n  return (\r\n    <RecoilRoot> \r\n      <Header />\r\n      <Routes>\r\n        <Route path=\"/\" element={<YTLinks/>} />\r\n        <Route path=\"/ocr\" element={<FormUpload/>} />\r\n      </Routes>\r\n      <SideNavigationPanel className=\"navBar show\" />\r\n      <RememberMe />\r\n    </RecoilRoot>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App.jsx\";\r\n\r\nconst domContainer = document.querySelector('#root');\r\nconst root = createRoot(domContainer);\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n)"],"names":["__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactCurrentDispatcher","current","ReactCurrentBatchConfig","transition","ReactCurrentActQueue","isBatchingLegacy","didScheduleLegacyUpdate","ReactCurrentOwner","ReactDebugCurrentFrame","currentExtraStackFrame","setExtraStackFrame","stack","getCurrentStack","getStackAddendum","impl","enableScopeAPI","enableCacheElement","enableTransitionTracing","enableLegacyHidden","enableDebugTracing","ReactSharedInternals","warn","format","_len","arguments","length","args","Array","_key","printWarning","error","_len2","_key2","level","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","didWarnStateUpdateForUnmountedComponent","warnNoop","publicInstance","callerName","_constructor","constructor","componentName","displayName","name","warningKey","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","callback","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","Component","props","context","updater","this","refs","freeze","isReactComponent","setState","forceUpdate","deprecatedAPIs","replaceState","defineDeprecationWarning","methodName","info","defineProperty","get","fnName","hasOwnProperty","ComponentDummy","PureComponent","pureComponentPrototype","isPureReactComponent","isArrayImpl","isArray","a","testStringCoercion","value","checkKeyStringCoercion","e","willCoercionThrow","toStringTag","typeName","getContextName","type","getComponentNameFromType","tag","$$typeof","_context","outerType","innerType","wrapperName","functionName","getWrappedName","render","outerName","lazyComponent","payload","_payload","init","_init","x","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","RESERVED_PROPS","key","ref","__self","__source","hasValidRef","config","getter","getOwnPropertyDescriptor","isReactWarning","undefined","hasValidKey","ReactElement","self","source","owner","element","_owner","_store","configurable","enumerable","writable","createElement","children","propName","stateNode","warnIfStringRefCannotBeAutoConverted","childrenLength","childArray","i","defaultProps","warnAboutAccessingKey","defineKeyPropWarningGetter","warnAboutAccessingRef","defineRefPropWarningGetter","cloneElement","_self","_source","isValidElement","object","SEPARATOR","SUBSEPARATOR","didWarnAboutMaps","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","replace","getElementKey","index","escaperLookup","match","toString","mapIntoArray","array","escapedPrefix","nameSoFar","oldElement","newKey","child","invokeCallback","_child","mappedChild","childKey","escapedChildKey","c","push","subtreeCount","nextNamePrefix","iteratorFn","iterableChildren","entries","step","ii","next","done","childrenString","keys","join","mapChildren","func","result","count","REACT_MODULE_REFERENCE","Uninitialized","Pending","Resolved","Rejected","lazyInitializer","_status","thenable","ctor","_result","then","moduleObject","resolved","rejected","pending","default","isValidElementType","getModuleId","resolveDispatcher","dispatcher","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledDepth","disabledLog","__reactDisabledLog","prefix","ReactCurrentDispatcher$1","describeBuiltInComponentFrame","ownerFn","trim","componentFrameCache","reentry","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","control","frame","previousDispatcher","previousPrepareStackTrace","prepareStackTrace","log","group","groupCollapsed","groupEnd","defineProperties","disableLogs","Fake","set","Reflect","sample","sampleLines","split","controlLines","s","_frame","includes","reenableLogs","syntheticFrame","describeUnknownElementTypeFrameInDEV","shouldConstruct","propTypesMisspellWarningShown","loggedTypeFailures","ReactDebugCurrentFrame$1","setCurrentlyValidatingElement","setCurrentlyValidatingElement$1","getDeclarationErrorAddendum","ownerHasKeyUseWarning","validateExplicitKey","parentType","validated","currentComponentErrorInfo","parentName","getCurrentComponentErrorInfo","childOwner","validateChildKeys","node","validatePropTypes","propTypes","typeSpecs","values","location","has","bind","typeSpecName","error$1","err","ex","message","checkPropTypes","PropTypes","getDefaultProps","isReactClassApproved","createElementWithValidation","elementProps","validType","typeString","sourceInfo","fileName","lineNumber","fragment","validateFragmentProps","didWarnAboutDeprecatedCreateFactory","didWarnAboutMessageChannel","enqueueTaskImpl","actScopeDepth","didWarnNoAwaitAct","popActScope","prevActScopeDepth","recursivelyFlushAsyncActWork","returnValue","resolve","reject","queue","flushActQueue","task","requireString","Math","random","slice","module","setImmediate","_err","MessageChannel","channel","port1","onmessage","port2","postMessage","enqueueTask","isFlushing","createElement$1","cloneElement$1","newElement","createFactory","validatedFactory","Children","forEach","forEachFunc","forEachContext","n","toArray","only","exports","Fragment","Profiler","StrictMode","Suspense","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","hasWarnedAboutUsingNestedContextConsumers","hasWarnedAboutUsingConsumerProvider","hasWarnedAboutDisplayNameOnConsumer","_Provider","_currentRenderer","_currentRenderer2","createRef","refObject","seal","forwardRef","ownName","elementType","lazy","lazyType","newDefaultProps","newPropTypes","memo","compare","startTransition","scope","options","prevTransition","currentTransition","_updatedFibers","Set","size","clear","unstable_act","prevIsBatchingLegacy","thenableResult","wasAwaited","Promise","_queue","useCallback","deps","useContext","Context","realContext","useDebugValue","formatterFn","useDeferredValue","useEffect","create","useId","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","reducer","initialArg","useRef","initialValue","useState","initialState","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","useTransition","version","registerInternalModuleStop","require$$0","enableSchedulerDebugging","enableProfiling","heap","parentIndex","parent","siftUp","peek","pop","first","last","halfLength","leftIndex","left","rightIndex","right","siftDown","b","diff","sortIndex","id","performance","now","localPerformance","localDate","Date","initialTime","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","localSetTimeout","setTimeout","localClearTimeout","clearTimeout","localSetImmediate","advanceTimers","currentTime","timer","startTime","expirationTime","handleTimeout","requestHostCallback","flushWork","firstTimer","requestHostTimeout","hasTimeRemaining","cancelHostTimeout","previousPriorityLevel","shouldYieldToHost","priorityLevel","continuationCallback","unstable_now","workLoop","navigator","scheduling","isInputPending","isMessageLoopRunning","scheduledHostCallback","taskTimeoutID","frameInterval","schedulePerformWorkUntilDeadline","performWorkUntilDeadline","hasMoreWork","port","ms","unstable_requestPaint","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","unstable_continueExecution","unstable_forceFrameRate","fps","floor","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","eventHandler","unstable_pauseExecution","unstable_runWithPriority","unstable_scheduleCallback","timeout","delay","newTask","unstable_shouldYield","unstable_wrapCallback","parentPriorityLevel","React","Scheduler","require$$1","suppressWarning","FunctionComponent","ClassComponent","IndeterminateComponent","HostRoot","HostPortal","HostComponent","HostText","Mode","ContextConsumer","ContextProvider","ForwardRef","SuspenseComponent","MemoComponent","SimpleMemoComponent","LazyComponent","IncompleteClassComponent","DehydratedFragment","SuspenseListComponent","ScopeComponent","OffscreenComponent","LegacyHiddenComponent","CacheComponent","TracingMarkerComponent","enableClientRenderFallbackOnTextMismatch","enableNewReconciler","enableLazyContextPropagation","enableSuspenseAvoidThisFallback","disableCommentsAsDOMContainers","enableCustomElementPropertySupport","warnAboutStringRefs","enableSchedulingProfiler","enableProfilerTimer","enableProfilerCommitHooks","allNativeEvents","registrationNameDependencies","possibleRegistrationNames","registerTwoPhaseEvent","registrationName","dependencies","registerDirectEvent","lowerCasedName","toLowerCase","ondblclick","add","canUseDOM","window","document","checkAttributeStringCoercion","attributeName","checkFormFieldValueStringCoercion","RESERVED","BOOLEAN","OVERLOADED_BOOLEAN","NUMERIC","POSITIVE_NUMERIC","ATTRIBUTE_NAME_START_CHAR","ATTRIBUTE_NAME_CHAR","VALID_ATTRIBUTE_NAME_REGEX","RegExp","illegalAttributeNameCache","validatedAttributeNameCache","isAttributeNameSafe","test","shouldIgnoreAttribute","propertyInfo","isCustomComponentTag","shouldRemoveAttributeWithWarning","acceptsBooleans","shouldRemoveAttribute","isNaN","getPropertyInfo","properties","PropertyInfoRecord","mustUseProperty","attributeNamespace","sanitizeURL","removeEmptyString","propertyName","_ref","CAMELIZE","capitalize","token","toUpperCase","isJavaScriptProtocol","didWarn","url","JSON","stringify","getValueForProperty","expected","stringValue","hasAttribute","getAttribute","getValueForAttribute","setValueForProperty","_attributeName","removeAttribute","setAttribute","attributeValue","_type","setAttributeNS","describeFunctionComponentFrame","describeFiber","fiber","_debugOwner","_debugSource","getStackByFiberInDevAndProd","workInProgress","return","getContextName$1","getComponentNameFromFiber","isRendering","getCurrentFiberOwnerNameInDevOrNull","getCurrentFiberStackInDev","resetCurrentFiber","setCurrentFiber","setIsRendering","rendering","getToStringValue","hasReadOnlyValue","button","checkbox","image","hidden","radio","reset","submit","checkControlledValueProps","tagName","onChange","onInput","readOnly","disabled","checked","isCheckable","elem","nodeName","getTracker","_valueTracker","track","valueField","descriptor","currentValue","tracker","getValue","setValue","stopTracking","detachTracker","trackValueOnNode","updateValueIfChanged","lastValue","nextValue","getValueFromNode","getActiveElement","doc","activeElement","body","didWarnValueDefaultValue","didWarnCheckedDefaultChecked","didWarnControlledToUncontrolled","didWarnUncontrolledToControlled","isControlled","getHostProps","defaultChecked","_wrapperState","initialChecked","initWrapperState","controlled","updateChecked","updateWrapper","setDefaultValue","postMountWrapper","isHydrating","restoreControlledState","rootNode","queryRoot","parentNode","querySelectorAll","otherNode","form","otherProps","getFiberCurrentPropsFromNode","updateNamedCousins","ownerDocument","didWarnSelectedSetOnOption","didWarnInvalidChild","didWarnInvalidInnerHTML","validateProps","dangerouslySetInnerHTML","selected","didWarnValueDefaultValue$1","ownerName","valuePropNames","updateOptions","multiple","propValue","setDefaultSelected","selectedValues","selectedValue","_i","defaultSelected","_selectedValue","_i2","getHostProps$1","initWrapperState$1","propNameIsArray","checkSelectPropTypes","wasMultiple","didWarnValDefaultVal","getHostProps$2","initWrapperState$2","updateWrapper$1","newValue","postMountWrapper$3","textContent","HTML_NAMESPACE","MATH_NAMESPACE","SVG_NAMESPACE","getIntrinsicNamespace","getChildNamespace","parentNamespace","reusableSVGContainer","setInnerHTML","html","namespaceURI","innerHTML","valueOf","svgNode","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","arg0","arg1","arg2","arg3","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","setTextContent","lastChild","nodeType","nodeValue","shorthandToLonghand","animation","background","backgroundPosition","border","borderBlockEnd","borderBlockStart","borderBottom","borderColor","borderImage","borderInlineEnd","borderInlineStart","borderLeft","borderRadius","borderRight","borderStyle","borderTop","borderWidth","columnRule","columns","flex","flexFlow","font","fontVariant","gap","grid","gridArea","gridColumn","gridColumnGap","gridGap","gridRow","gridRowGap","gridTemplate","listStyle","margin","marker","mask","maskPosition","outline","overflow","padding","placeContent","placeItems","placeSelf","textDecoration","textEmphasis","wordWrap","isUnitlessNumber","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRowEnd","gridRowSpan","gridRowStart","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixes","dangerousStyleValue","isCustomProperty","checkCSSPropertyStringCoercion","prop","charAt","substring","prefixKey","uppercasePattern","msPattern","hyphenateStyleName","warnValidStyle","badVendoredStyleNamePattern","msPattern$1","hyphenPattern","badStyleValueWithSemicolonPattern","warnedStyleNames","warnedStyleValues","warnedForNaNValue","warnedForInfinityValue","warnHyphenatedStyleName","_","character","indexOf","warnBadVendoredStyleName","warnStyleValueWithSemicolon","warnStyleValueIsNaN","isFinite","warnStyleValueIsInfinity","warnValidStyle$1","createDangerousStringForStyles","styles","serialized","delimiter","styleName","styleValue","setValueForStyles","style","setProperty","expandShorthandMap","expanded","longhands","voidElementTags","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","wbr","HTML","assertValidProps","suppressContentEditableWarning","contentEditable","isCustomComponent","is","possibleStandardNames","accept","acceptcharset","accesskey","action","allowfullscreen","alt","as","async","autocapitalize","autocomplete","autocorrect","autofocus","autoplay","autosave","capture","cellpadding","cellspacing","challenge","charset","cite","class","classid","classname","cols","colspan","content","contenteditable","contextmenu","controls","controlslist","coords","crossorigin","dangerouslysetinnerhtml","data","datetime","defaultchecked","defaultvalue","defer","dir","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","formmethod","formaction","formenctype","formnovalidate","formtarget","frameborder","headers","height","high","href","hreflang","htmlfor","httpequiv","icon","imagesizes","imagesrcset","innerhtml","inputmode","integrity","itemid","itemprop","itemref","itemscope","itemtype","keyparams","keytype","kind","label","lang","list","loop","low","manifest","marginwidth","marginheight","max","maxlength","media","mediagroup","method","min","minlength","muted","nomodule","nonce","novalidate","open","optimum","pattern","placeholder","playsinline","poster","preload","profile","radiogroup","readonly","referrerpolicy","rel","required","reversed","role","rows","rowspan","sandbox","scoped","scrolling","seamless","shape","sizes","span","spellcheck","src","srcdoc","srclang","srcset","start","summary","tabindex","target","title","usemap","width","wmode","wrap","about","accentheight","accumulate","additive","alignmentbaseline","allowreorder","alphabetic","amplitude","arabicform","ascent","attributename","attributetype","autoreverse","azimuth","basefrequency","baselineshift","baseprofile","bbox","begin","bias","by","calcmode","capheight","clip","clippath","clippathunits","cliprule","color","colorinterpolation","colorinterpolationfilters","colorprofile","colorrendering","contentscripttype","contentstyletype","cursor","cx","cy","d","datatype","decelerate","descent","diffuseconstant","direction","display","divisor","dominantbaseline","dur","dx","dy","edgemode","elevation","enablebackground","end","exponent","externalresourcesrequired","fill","fillopacity","fillrule","filter","filterres","filterunits","floodopacity","floodcolor","focusable","fontfamily","fontsize","fontsizeadjust","fontstretch","fontstyle","fontvariant","fontweight","from","fx","fy","g1","g2","glyphname","glyphorientationhorizontal","glyphorientationvertical","glyphref","gradienttransform","gradientunits","hanging","horizadvx","horizoriginx","ideographic","imagerendering","in2","in","inlist","intercept","k1","k2","k3","k4","k","kernelmatrix","kernelunitlength","kerning","keypoints","keysplines","keytimes","lengthadjust","letterspacing","lightingcolor","limitingconeangle","local","markerend","markerheight","markermid","markerstart","markerunits","markerwidth","maskcontentunits","maskunits","mathematical","mode","numoctaves","offset","operator","orient","orientation","origin","overlineposition","overlinethickness","paintorder","panose1","pathlength","patterncontentunits","patterntransform","patternunits","pointerevents","points","pointsatx","pointsaty","pointsatz","preservealpha","preserveaspectratio","primitiveunits","property","r","radius","refx","refy","renderingintent","repeatcount","repeatdur","requiredextensions","requiredfeatures","resource","restart","results","rotate","rx","ry","scale","security","seed","shaperendering","slope","spacing","specularconstant","specularexponent","speed","spreadmethod","startoffset","stddeviation","stemh","stemv","stitchtiles","stopcolor","stopopacity","strikethroughposition","strikethroughthickness","string","stroke","strokedasharray","strokedashoffset","strokelinecap","strokelinejoin","strokemiterlimit","strokewidth","strokeopacity","suppresscontenteditablewarning","suppresshydrationwarning","surfacescale","systemlanguage","tablevalues","targetx","targety","textanchor","textdecoration","textlength","textrendering","to","transform","typeof","u1","u2","underlineposition","underlinethickness","unicode","unicodebidi","unicoderange","unitsperem","unselectable","valphabetic","vectoreffect","vertadvy","vertoriginx","vertoriginy","vhanging","videographic","viewbox","viewtarget","visibility","vmathematical","vocab","widths","wordspacing","writingmode","x1","x2","xchannelselector","xheight","xlinkactuate","xlinkarcrole","xlinkhref","xlinkrole","xlinkshow","xlinktitle","xlinktype","xmlbase","xmllang","xmlns","xmlnsxlink","xmlspace","y1","y2","y","ychannelselector","z","zoomandpan","ariaProperties","warnedProperties","rARIA","rARIACamel","validateProperty","ariaName","correctName","standardName","validateProperties","invalidProps","unknownPropString","warnInvalidARIAProps","didWarnValueNull","validateProperty$1","warnedProperties$1","EVENT_NAME_REGEX","INVALID_EVENT_NAME_REGEX","rARIA$1","rARIACamel$1","eventRegistry","isReserved","validateProperties$2","unknownProps","warnUnknownProperties","IS_EVENT_HANDLE_NON_MANAGED_NODE","IS_NON_DELEGATED","IS_CAPTURE_PHASE","SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS","currentReplayingEvent","getEventTarget","nativeEvent","srcElement","correspondingUseElement","restoreImpl","restoreTarget","restoreQueue","restoreStateOfTarget","internalInstance","getInstanceFromNode","_props","enqueueStateRestore","restoreStateIfNeeded","queuedTargets","batchedUpdatesImpl","bookkeeping","flushSyncImpl","isInsideEventHandler","finishEventHandler","batchedUpdates","getListener","inst","listener","shouldPreventMouseEvent","passiveBrowserEventsSupported","addEventListener","removeEventListener","invokeGuardedCallbackProd","f","funcArgs","onError","invokeGuardedCallbackImpl","dispatchEvent","createEvent","fakeNode","evt","didCall","didError","windowEvent","event","windowEventDescriptor","restoreAfterDispatch","evtType","callCallback","didSetError","isCrossOriginError","handleWindowError","colno","lineno","defaultPrevented","_suppressLogging","inner","initEvent","invokeGuardedCallbackImpl$1","hasError","caughtError","hasRethrowError","rethrowError","reporter","invokeGuardedCallback","clearCaughtError","_reactInternals","NoFlags","PerformedWork","Placement","Update","ChildDeletion","ContentReset","Callback","DidCapture","ForceClientRender","Ref","Snapshot","Passive","Hydrating","Visibility","StoreConsistency","LifecycleEffectMask","HostEffectMask","Incomplete","ShouldCapture","ForceUpdateForLegacySuspense","Forked","RefStatic","LayoutStatic","PassiveStatic","MountLayoutDev","MountPassiveDev","BeforeMutationMask","MutationMask","LayoutMask","PassiveMask","StaticMask","getNearestMountedFiber","nearestMounted","alternate","nextNode","flags","getSuspenseInstanceFromFiber","suspenseState","memoizedState","dehydrated","getContainerFromFiber","containerInfo","assertIsMounted","findCurrentFiberUsingSlowPath","parentA","parentB","nextParent","sibling","didFindChild","findCurrentHostFiber","currentParent","findCurrentHostFiberImpl","findCurrentHostFiberWithNoPortals","findCurrentHostFiberWithNoPortalsImpl","scheduleCallback","cancelCallback","shouldYield","requestPaint","getCurrentPriorityLevel","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","unstable_yieldValue","unstable_setDisableYieldValue","rendererID","injectedHook","injectedProfilingHooks","hasLoggedError","isDevToolsPresent","setIsStrictModeForDevtools","newIsStrictMode","setStrictMode","injectProfilingHooks","profilingHooks","getLaneLabelMap","lane","TotalLanes","getLabelForLane","markCommitStopped","markComponentRenderStarted","markComponentRenderStopped","markComponentLayoutEffectMountStarted","markComponentLayoutEffectUnmountStarted","markComponentLayoutEffectUnmountStopped","markComponentErrored","thrownValue","lanes","markComponentSuspended","wakeable","markRenderStarted","markRenderStopped","markStateUpdateScheduled","NoMode","ConcurrentMode","ProfileMode","StrictLegacyMode","StrictEffectsMode","clz32","asUint","LN2","NoLanes","NoLane","SyncLane","InputContinuousHydrationLane","InputContinuousLane","DefaultHydrationLane","DefaultLane","TransitionHydrationLane","TransitionLanes","TransitionLane1","TransitionLane2","TransitionLane3","TransitionLane4","TransitionLane5","TransitionLane6","TransitionLane7","TransitionLane8","TransitionLane9","TransitionLane10","TransitionLane11","TransitionLane12","TransitionLane13","TransitionLane14","TransitionLane15","TransitionLane16","RetryLanes","RetryLane1","RetryLane2","RetryLane3","RetryLane4","RetryLane5","SomeRetryLane","SelectiveHydrationLane","NonIdleLanes","IdleHydrationLane","IdleLane","OffscreenLane","NoTimestamp","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","getHighestPriorityLane","getNextLanes","root","wipLanes","pendingLanes","nextLanes","suspendedLanes","pingedLanes","nonIdlePendingLanes","nonIdleUnblockedLanes","nonIdlePingedLanes","unblockedLanes","nextLane","wipLane","entangledLanes","entanglements","pickArbitraryLaneIndex","computeExpirationTime","getLanesToRetrySynchronouslyOnError","everythingButOffscreen","includesNonIdleWork","includesOnlyRetries","includesBlockingLane","isTransitionLane","claimNextTransitionLane","pickArbitraryLane","laneToIndex","includesSomeLane","isSubsetOfLanes","subset","mergeLanes","removeLanes","intersectLanes","createLaneMap","initial","laneMap","markRootUpdated","updateLane","eventTime","eventTimes","markRootPinged","markRootEntangled","rootEntangledLanes","addFiberToLanesMap","pendingUpdatersLaneMap","movePendingFibersToMemoized","memoizedUpdaters","updaters","_attemptSynchronousHydration","attemptContinuousHydration","attemptHydrationAtCurrentPriority","getCurrentUpdatePriority$1","attemptHydrationAtPriority","DiscreteEventPriority","ContinuousEventPriority","DefaultEventPriority","IdleEventPriority","currentUpdatePriority","getCurrentUpdatePriority","setCurrentUpdatePriority","newPriority","isHigherEventPriority","lanesToEventPriority","isRootDehydrated","isDehydrated","attemptSynchronousHydration","hasScheduledReplayAttempt","queuedDiscreteEvents","queuedFocus","queuedDrag","queuedMouse","queuedPointers","queuedPointerCaptures","queuedExplicitHydrationTargets","discreteReplayableEvents","clearIfContinuousEvent","domEventName","pointerId","delete","_pointerId","accumulateOrCreateContinuousQueuedReplayableEvent","existingQueuedEvent","blockedOn","eventSystemFlags","targetContainer","queuedEvent","targetContainers","createQueuedReplayableEvent","_fiber2","attemptExplicitHydrationTarget","queuedTarget","targetInst","getClosestInstanceFromNode","instance","priority","attemptReplayContinuousQueuedEvent","nextBlockedOn","findInstanceBlockingEvent","_fiber3","nativeEventClone","shift","attemptReplayContinuousQueuedEventInMap","replayUnblockedEvents","scheduleCallbackIfUnblocked","unblocked","retryIfBlockedOn","unblock","nextExplicitTarget","_enabled","setEnabled","enabled","dispatchDiscreteEvent","container","previousPriority","dispatchContinuousEvent","dispatchEventForPluginEventSystem","return_targetInst","pointerEvent","_pointerEvent","_pointerId2","queueIfContinuousEvent","stopPropagation","eventType","isDiscreteEventThatRequiresHydration","dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay","getEventPriority","startText","fallbackText","getData","startValue","startLength","endValue","getText","endLength","minEnd","sliceTail","getEventCharCode","charCode","keyCode","functionThatReturnsTrue","functionThatReturnsFalse","createSyntheticEvent","Interface","SyntheticBaseEvent","reactName","reactEventType","nativeEventTarget","_propName","_reactName","_targetInst","currentTarget","normalize","isDefaultPrevented","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","lastMovementX","lastMovementY","lastMouseEvent","EventInterface","eventPhase","bubbles","cancelable","timeStamp","isTrusted","SyntheticEvent","UIEventInterface","view","detail","SyntheticUIEvent","MouseEventInterface","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","getEventModifierState","buttons","relatedTarget","fromElement","toElement","movementX","updateMouseMovementPolyfillState","movementY","SyntheticMouseEvent","SyntheticDragEvent","dataTransfer","SyntheticFocusEvent","SyntheticAnimationEvent","animationName","elapsedTime","pseudoElement","SyntheticClipboardEvent","clipboardData","SyntheticCompositionEvent","SyntheticInputEvent","normalizeKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","translateToKey","modifierKeyToProp","Alt","Control","Meta","Shift","modifierStateGetter","keyArg","keyProp","SyntheticKeyboardEvent","fromCharCode","code","repeat","locale","which","SyntheticPointerEvent","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","SyntheticTouchEvent","touches","targetTouches","changedTouches","SyntheticTransitionEvent","SyntheticWheelEvent","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","END_KEYCODES","START_KEYCODE","canUseCompositionEvent","documentMode","canUseTextInputEvent","useFallbackCompositionData","SPACEBAR_CODE","SPACEBAR_CHAR","hasSpaceKeypress","isFallbackCompositionEnd","getDataFromCustomEvent","isUsingKoreanIME","isComposing","extractCompositionEvent","dispatchQueue","fallbackData","getCompositionEventType","isFallbackCompositionStart","initialize","listeners","accumulateTwoPhaseListeners","customData","getFallbackBeforeInputChars","chars","isKeypressCommand","char","extractBeforeInputEvent","getNativeBeforeInputChars","supportedInputTypes","date","email","month","number","password","range","search","tel","time","week","isTextInputElement","createAndAccumulateChangeEvent","activeElementInst","runEventInBatch","processDispatchQueue","getInstIfValueChanged","getNodeFromInstance","getTargetInstForChangeEvent","isInputEventSupported","stopWatchingForValueChange","detachEvent","handlePropertyChange","manualDispatchChangeEvent","handleEventsForInputEventPolyfill","attachEvent","startWatchingForValueChange","getTargetInstForInputEventPolyfill","getTargetInstForClickEvent","getTargetInstForInputOrChangeEvent","extractEvents$1","getTargetInstFunc","handleEventFunc","state","targetNode","shouldUseClickEvent","extractEvents$2","isOverEvent","isOutEvent","related","isContainerMarkedAsRoot","win","defaultView","parentWindow","_related","SyntheticEventCtor","leaveEventType","enterEventType","eventTypePrefix","fromNode","toNode","leave","enter","enterEvent","leaveEvent","common","instA","instB","nodeA","nodeB","depthA","tempA","getParent","depthB","tempB","depth","getLowestCommonAncestor","accumulateEnterLeaveListenersForEvent","accumulateEnterLeaveTwoPhaseListeners","eventNameSuffix","eventName","isSupported","isEventSupported","objectIs","shallowEqual","objA","objB","keysA","keysB","currentKey","getLeafNode","getSiblingNode","nextSibling","getNodeForCharacterOffset","nodeStart","nodeEnd","getOffsets","outerNode","selection","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","indexWithinAnchor","indexWithinFocus","outer","getModernOffsetsFromPoints","isTextNode","containsNode","innerNode","contains","compareDocumentPosition","isInDocument","documentElement","isSameOriginFrame","iframe","contentWindow","getActiveElementDeep","HTMLIFrameElement","hasSelectionCapabilities","restoreSelection","priorSelectionInformation","curFocusedElem","priorFocusedElem","focusedElem","priorSelectionRange","selectionRange","offsets","selectionStart","selectionEnd","extend","temp","startMarker","endMarker","createRange","setStart","removeAllRanges","addRange","setEnd","setOffsets","setSelection","ancestors","ancestor","scrollLeft","top","scrollTop","focus","skipSelectionChangeEvent","activeElement$1","activeElementInst$1","lastSelection","mouseDown","constructSelectEvent","eventTarget","currentSelection","getSelection$1","makePrefixMap","styleProp","vendorPrefixes","animationend","animationiteration","animationstart","transitionend","prefixedEventNames","getVendorPrefixedEventName","prefixMap","ANIMATION_END","ANIMATION_ITERATION","ANIMATION_START","TRANSITION_END","topLevelEventsToReactNames","simpleEventPluginEvents","registerSimpleEvent","extractEvents$4","inCapturePhase","accumulateTargetOnly","_listeners","targetFiber","nativeEventType","captureName","reactEventName","lastHostComponent","_instance2","createDispatchListener","accumulateSinglePhaseListeners","_event","extractEvents$5","extractEvents$3","extractEvents","registerSimpleEvents","mediaEventTypes","nonDelegatedEvents","executeDispatch","invokeGuardedCallbackAndCatchFirstError","processDispatchQueueItemsInOrder","dispatchListeners","previousInstance","_dispatchListeners$i","_dispatchListeners$_i","_instance","_currentTarget","_listener","_dispatchQueue$i","rethrowCaughtError","listenToNonDelegatedEvent","targetElement","listenerSet","elementListenerSet","internalEventHandlersKey","getEventListenerSet","listenerSetKey","getListenerSetKey","addTrappedEventListener","listenToNativeEvent","isCapturePhaseListener","listeningMarker","listenToAllSupportedEvents","rootContainerElement","isDeferredListenerForLegacyFBSupport","listenerWrapper","createEventListenerWrapperWithPriority","isPassiveListener","passive","addEventCaptureListenerWithPassiveFlag","addEventCaptureListener","addEventBubbleListenerWithPassiveFlag","addEventBubbleListener","isMatchingRootContainer","grandContainer","ancestorInst","targetContainerNode","mainLoop","nodeTag","grandNode","grandTag","parentTag","dispatchEventsForPlugins","_instance3","captureListener","bubbleListener","_instance4","warnedUnknownTags","validatePropertiesInDevelopment","warnForPropDifference","warnForExtraAttributes","warnForInvalidEventListener","canDiffStyleForHydrationWarning","normalizeHTML","didWarnInvalidHydration","DANGEROUSLY_SET_INNER_HTML","SUPPRESS_CONTENT_EDITABLE_WARNING","SUPPRESS_HYDRATION_WARNING","AUTOFOCUS","CHILDREN","STYLE","HTML$1","dialog","webview","validateProperties$1","serverValue","clientValue","normalizedClientValue","normalizeMarkupForTextOrAttribute","normalizedServerValue","attributeNames","names","testElement","createElementNS","NORMALIZE_NEWLINES_REGEX","NORMALIZE_NULL_AND_REPLACEMENT_REGEX","markup","checkHtmlStringCoercion","checkForUnmatchedText","serverText","clientText","isConcurrentMode","shouldWarnDev","normalizedClientText","normalizedServerText","getOwnerDocumentFromRootContainer","noop","trapClickOnNonInteractiveElement","onclick","setInitialProperties","domElement","rawProps","nextProps","propKey","nextProp","nextHtml","setInitialDOMProperties","postMountWrapper$1","postMountWrapper$2","onClick","diffProperties","lastRawProps","nextRawProps","lastProps","updatePayload","styleUpdates","lastStyle","lastProp","lastHtml","nextStyles","expandedUpdates","expandedStyles","warnedAbout","originalKey","correctOriginalKey","validateShorthandPropertyCollisionInDev","updateProperties","wasCustomComponentTag","updateDOMProperties","postUpdateWrapper","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","validateDOMNesting","updatedAncestorInfo","specialTags","inScopeTags","buttonScopeTags","impliedEndTags","emptyAncestorInfo","formTag","aTagInScope","buttonTagInScope","nobrTagInScope","pTagInButtonScope","listItemTagAutoclosing","dlItemTagAutoclosing","oldInfo","ancestorInfo","didWarn$1","childTag","childText","parentInfo","invalidParent","isTagValidWithParent","invalidAncestor","findInvalidAncestorForTag","invalidParentOrAncestor","ancestorTag","warnKey","tagDisplayName","whitespaceInfo","SUPPRESS_HYDRATION_WARNING$1","SUSPENSE_START_DATA","SUSPENSE_END_DATA","SUSPENSE_PENDING_START_DATA","SUSPENSE_FALLBACK_START_DATA","STYLE$1","eventsEnabled","selectionInformation","prepareForCommit","createInstance","rootContainerInstance","hostContext","internalInstanceHandle","hostContextDev","ownAncestorInfo","div","namespace","precacheFiberNode","updateFiberProps","shouldSetTextContent","__html","createTextInstance","textNode","createTextNode","scheduleTimeout","cancelTimeout","noTimeout","localPromise","scheduleMicrotask","queueMicrotask","catch","handleErrorInNextTick","resetTextContent","clearSuspenseBoundary","parentInstance","suspenseInstance","hideInstance","unhideInstance","unhideTextInstance","textInstance","isSuspenseInstancePending","isSuspenseInstanceFallback","getNextHydratable","nodeData","getNextHydratableSibling","hydrateInstance","extraAttributeNames","attributes","serverHTML","expectedHTML","expectedStyle","isMismatchDueToBadCasing","ownNamespace","diffHydratedProperties","getParentSuspenseInstance","targetInstance","previousSibling","randomKey","internalInstanceKey","internalPropsKey","internalContainerInstanceKey","internalEventHandlerListenersKey","internalEventHandlesSetKey","hostInst","markContainerAsRoot","hostRoot","unmarkContainerAsRoot","targetSuspenseInst","fiberStack","valueStack","warnedAboutMissingGetChildContext","createCursor","emptyContextObject","contextStackCursor","didPerformWorkStackCursor","previousContext","getUnmaskedContext","didPushOwnContextIfProvider","isContextProvider","cacheContext","unmaskedContext","maskedContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","getMaskedContext","contextTypes","hasContextChanged","childContextTypes","popContext","popTopLevelContextObject","pushTopLevelContextObject","didChange","processChildContext","parentContext","getChildContext","childContext","contextKey","pushContextProvider","memoizedMergedChildContext","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","mergedContext","findCurrentUnmaskedContext","isFiberMounted","LegacyRoot","ConcurrentRoot","syncQueue","includesLegacySyncCallbacks","isFlushingSyncQueue","scheduleSyncCallback","flushSyncCallbacksOnlyInLegacyMode","flushSyncCallbacks","previousUpdatePriority","forkStack","forkStackIndex","treeForkProvider","treeForkCount","idStack","idStackIndex","treeContextProvider","treeContextId","treeContextOverflow","getTreeId","getBitLength","getLeadingBit","pushTreeFork","totalChildren","warnIfNotHydrating","pushTreeId","baseIdWithLeadingBit","baseOverflow","baseLength","baseId","slot","numberOfOverflowBits","newOverflow","restOfBaseId","restOfBaseLength","restOfLength","pushMaterializedTreeId","popTreeContext","getIsHydrating","hydrationParentFiber","nextHydratableInstance","didSuspendOrErrorDEV","hydrationErrors","warnIfHydrating","markDidThrowWhileHydratingDEV","enterHydrationState","reenterHydrationStateFromDehydratedSuspenseInstance","treeContext","suspendedContext","restoreSuspendedTreeContext","warnUnhydratedInstance","returnFiber","parentContainer","didNotHydrateInstanceWithinContainer","parentProps","didNotHydrateInstance","memoizedProps","didNotHydrateInstanceWithinSuspenseInstance","deleteHydratableInstance","childToDelete","createFiber","deletions","warnNonhydratedInstance","pendingProps","didNotFindHydratableInstanceWithinContainer","didNotFindHydratableTextInstanceWithinContainer","didNotFindHydratableInstance","didNotFindHydratableTextInstance","_parentInstance","_type2","didNotFindHydratableInstanceWithinSuspenseInstance","didNotFindHydratableTextInstanceWithinSuspenseInstance","insertNonHydratedInstance","tryHydrate","nextInstance","canHydrateInstance","canHydrateTextInstance","canHydrateSuspenseInstance","retryLane","dehydratedFragment","dehydratedNode","createFiberFromDehydratedFragment","shouldClientRenderOnMismatch","throwOnHydrationMismatch","tryToClaimNextHydratableInstance","firstAttemptedInstance","prevHydrationParentFiber","prepareToHydrateHostTextInstance","shouldUpdate","diffHydratedText","hydrateTextInstance","didNotMatchHydratedContainerTextInstance","didNotMatchHydratedTextInstance","prepareToHydrateHostSuspenseInstance","hydrateSuspenseInstance","skipPastDehydratedSuspenseInstance","getNextHydratableInstanceAfterSuspenseInstance","popToNextHostParent","popHydrationState","warnIfUnhydratedTailNodes","resetHydrationState","upgradeHydrationErrorsToRecoverable","queueRecoverableErrors","queueHydrationError","ReactCurrentBatchConfig$1","NoTransition","ReactStrictModeWarnings","recordUnsafeLifecycleWarnings","flushPendingUnsafeLifecycleWarnings","recordLegacyContextWarning","flushLegacyContextWarning","discardPendingWarnings","setToSortedString","sort","pendingComponentWillMountWarnings","pendingUNSAFE_ComponentWillMountWarnings","pendingComponentWillReceivePropsWarnings","pendingUNSAFE_ComponentWillReceivePropsWarnings","pendingComponentWillUpdateWarnings","pendingUNSAFE_ComponentWillUpdateWarnings","didWarnAboutUnsafeLifecycles","componentWillMount","__suppressDeprecationWarning","UNSAFE_componentWillMount","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","componentWillUpdate","UNSAFE_componentWillUpdate","componentWillMountUniqueNames","UNSAFE_componentWillMountUniqueNames","componentWillReceivePropsUniqueNames","UNSAFE_componentWillReceivePropsUniqueNames","componentWillUpdateUniqueNames","UNSAFE_componentWillUpdateUniqueNames","pendingLegacyContextWarning","didWarnAboutLegacyContext","resolveDefaultProps","baseProps","strictRoot","maybeStrictRoot","findStrictRoot","warningsForRoot","fiberArray","firstFiber","uniqueNames","sortedNames","rendererSigil","valueCursor","currentlyRenderingFiber","lastContextDependency","lastFullyObservedContext","isDisallowedContextReadInDEV","resetContextDependencies","enterDisallowedContextReadInDEV","exitDisallowedContextReadInDEV","pushProvider","providerFiber","popProvider","scheduleContextWorkOnParentPath","renderLanes","propagationRoot","childLanes","propagateContextChange","nextFiber","dependency","firstContext","update","createUpdate","ForceUpdate","updateQueue","sharedQueue","shared","parentSuspense","_alternate","propagateContextChange_eager","prepareToReadContext","markWorkInProgressReceivedUpdate","readContext","contextItem","memoizedValue","concurrentQueues","pushConcurrentUpdateQueue","enqueueConcurrentHookUpdate","interleaved","markUpdateLaneFromFiberToRoot","enqueueConcurrentRenderForLane","unsafe_markUpdateLaneFromFiberToRoot","sourceFiber","warnAboutUpdateOnNotYetMountedFiberInDEV","didWarnUpdateInsideUpdate","currentlyProcessingQueue","UpdateState","ReplaceState","CaptureUpdate","hasForceUpdate","initializeUpdateQueue","baseState","firstBaseUpdate","lastBaseUpdate","effects","cloneUpdateQueue","currentQueue","clone","enqueueUpdate","executionContext","RenderContext","NoContext","enqueueConcurrentClassUpdate","entangleTransitions","queueLanes","newQueueLanes","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","getStateFromUpdate","prevState","nextState","processUpdateQueue","pendingQueue","lastPendingUpdate","firstPendingUpdate","currentLastBaseUpdate","newState","newLanes","newBaseState","newFirstBaseUpdate","newLastBaseUpdate","updateEventTime","_clone","_lastPendingUpdate","_firstPendingUpdate","lastInterleaved","markSkippedUpdateLanes","resetHasForceUpdateBeforeProcessing","checkHasForceUpdateAfterProcessing","commitUpdateQueue","finishedWork","finishedQueue","effect","didWarnAboutStateAssignmentForComponent","didWarnAboutUninitializedState","didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate","didWarnAboutLegacyLifecyclesAndDerivedState","didWarnAboutUndefinedDerivedState","warnOnUndefinedDerivedState","warnOnInvalidCallback","didWarnAboutDirectlyAssigningPropsToState","didWarnAboutContextTypeAndContextTypes","didWarnAboutInvalidateContextType","fakeInternalInstance","emptyRefsObject","didWarnOnInvalidCallback","applyDerivedStateFromProps","getDerivedStateFromProps","didWarnAboutGenerators","ownerHasFunctionTypeWarning","classComponentUpdater","component","ownerFiber","_warnedAboutRefsInRender","requestEventTime","requestUpdateLane","scheduleUpdateOnFiber","markForceUpdateScheduled","checkShouldComponentUpdate","oldProps","newProps","oldState","nextContext","shouldComponentUpdate","adoptClassInstance","_reactInternalInstance","constructClassInstance","isLegacyContextConsumer","contextType","addendum","getSnapshotBeforeUpdate","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","_componentName","newApiName","callComponentWillReceiveProps","mountClassInstance","getInitialState","componentShouldUpdate","componentDidUnmount","componentDidReceiveProps","componentWillRecieveProps","UNSAFE_componentWillRecieveProps","hasMutatedProps","componentDidUpdate","getDerivedStateFromError","_state","checkClassInstance","callComponentWillMount","componentDidMount","fiberFlags","warnForMissingKey","coerceRef","mixedRef","resolvedInst","checkPropStringCoercion","stringRef","_stringRef","throwOnInvalidObjectType","newChild","childString","warnOnFunctionType","resolveLazy","ChildReconciler","shouldTrackSideEffects","deleteChild","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","placeSingleChild","updateTextNode","created","createFiberFromText","existing","updateElement","updateFragment","isCompatibleFamilyForHotReloading","createFiberFromElement","updatePortal","portal","implementation","createFiberFromPortal","createFiberFromFragment","createChild","_created","_created2","_created3","updateSlot","oldFiber","updateFromMap","newIdx","warnOnInvalidKey","knownKeys","reconcileChildFibers","_existing","_created4","reconcileSingleElement","reconcileSinglePortal","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","_newFiber","_newFiber2","reconcileChildrenArray","newChildrenIterable","_newChildren","_step","_newFiber3","_newFiber4","reconcileChildrenIterator","reconcileSingleTextNode","mountChildFibers","resetChildFibers","resetWorkInProgress","NO_CONTEXT","contextStackCursor$1","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","getRootHostContainer","pushHostContainer","nextRootInstance","nextRootContext","validatedTag","getRootHostContext","popHostContainer","getHostContext","pushHostContext","parentHostContext","parentHostContextDev","popHostContext","SubtreeSuspenseContextMask","InvisibleParentSuspenseContext","ForceSuspenseFallback","suspenseStackCursor","hasSuspenseContext","flag","setDefaultShallowSuspenseContext","setShallowSuspenseContext","shallowContext","pushSuspenseContext","newContext","popSuspenseContext","shouldCaptureSuspense","hasInvisibleParent","findFirstSuspended","row","revealOrder","NoFlags$1","HasEffect","Insertion","Layout","Passive$1","workInProgressSources","resetWorkInProgressVersions","_workInProgressVersionPrimary","registerMutableSourceForHydration","mutableSource","getVersion","_getVersion","mutableSourceEagerHydrationData","didWarnAboutMismatchedHooksForComponent","didWarnUncachedGetSnapshot","ReactCurrentBatchConfig$2","currentlyRenderingFiber$1","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","localIdCounter","globalClientIdCounter","RE_RENDER_LIMIT","currentHookNameInDev","hookTypesDev","hookTypesUpdateIndexDev","ignorePreviousDependencies","mountHookTypesDev","hookName","updateHookTypesDev","currentHookName","table","secondColumnStart","oldHookName","newHookName","warnOnHookMismatchInDev","checkDepsAreArrayDev","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","_debugHookTypes","HooksDispatcherOnUpdateInDEV","HooksDispatcherOnMountWithHookTypesInDEV","HooksDispatcherOnMountInDEV","numberOfReRenders","HooksDispatcherOnRerenderInDEV","ContextOnlyDispatcher","didRenderTooFewHooks","checkDidRenderIdHook","didRenderIdHook","bailoutHooks","resetHooksAfterThrow","hook","isUpdatingOpaqueValueInRenderPhase","mountWorkInProgressHook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","newHook","basicStateReducer","mountReducer","dispatch","lastRenderedReducer","lastRenderedState","dispatchReducerAction","updateReducer","baseFirst","pendingFirst","newBaseQueueFirst","newBaseQueueLast","hasEagerState","eagerState","interleavedLane","rerenderReducer","lastRenderPhaseUpdate","firstRenderPhaseUpdate","mountSyncExternalStore","nextSnapshot","cachedSnapshot","getWorkInProgressRoot","pushStoreConsistencyCheck","mountEffect","subscribeToStore","pushEffect","updateStoreInstance","updateSyncExternalStore","prevSnapshot","snapshotChanged","updateEffect","renderedSnapshot","check","componentUpdateQueue","lastEffect","stores","checkIfSnapshotChanged","forceStoreRerender","latestGetSnapshot","prevValue","mountState","dispatchSetState","updateState","rerenderState","destroy","firstEffect","mountRef","_ref2","updateRef","mountEffectImpl","hookFlags","updateEffectImpl","prevEffect","mountInsertionEffect","updateInsertionEffect","mountLayoutEffect","updateLayoutEffect","imperativeHandleEffect","refCallback","_inst","_inst2","mountImperativeHandle","effectDeps","updateImperativeHandle","mountDebugValue","updateDebugValue","mountCallback","updateCallback","mountMemo","nextCreate","updateMemo","mountDeferredValue","updateDeferredValue","updateDeferredValueImpl","rerenderDeferredValue","deferredLane","setPending","higherEventPriority","mountTransition","_mountState","isPending","updateTransition","rerenderTransition","mountId","identifierPrefix","localId","updateId","isRenderPhaseUpdate","enqueueRenderPhaseUpdate","entangleTransitionUpdate","markUpdateInDevTools","prevDispatcher","InvalidNestedHooksDispatcherOnUpdateInDEV","currentState","enqueueConcurrentHookUpdateAndEagerlyBailout","useMutableSource","unstable_isNewReconciler","InvalidNestedHooksDispatcherOnMountInDEV","InvalidNestedHooksDispatcherOnRerenderInDEV","warnInvalidContextAccess","warnInvalidHookAccess","now$1","commitTime","layoutEffectStartTime","profilerStartTime","passiveEffectStartTime","currentUpdateIsNested","nestedUpdateScheduled","isCurrentUpdateNested","getCommitTime","recordCommitTime","startProfilerTimer","actualStartTime","stopProfilerTimerIfRunning","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","actualDuration","selfBaseDuration","recordLayoutEffectDuration","parentFiber","effectDuration","recordPassiveEffectDuration","passiveEffectDuration","parentStateNode","startLayoutEffectTimer","startPassiveEffectTimer","transferActualDuration","createCapturedValueAtFiber","digest","createCapturedValue","logCapturedError","boundary","errorInfo","logError","componentStack","combinedMessage","PossiblyWeakMap$1","createRootErrorUpdate","onUncaughtError","createClassErrorUpdate","markFailedErrorBoundaryForHotReloading","componentDidCatch","legacyErrorBoundariesThatAlreadyFailed","attachPingListener","threadIDs","pingCache","ping","pingSuspendedRoot","restorePendingUpdaters","getNearestSuspenseBoundaryToCapture","markSuspenseBoundaryShouldCapture","suspenseBoundary","rootRenderLanes","throwException","currentSource","resetSuspendedComponent","wakeables","attachRetryListener","renderDidSuspendDelayIfPossible","_suspenseBoundary","workInProgressRootExitStatus","RootSuspendedWithDelay","RootErrored","workInProgressRootConcurrentErrors","renderDidError","_errorInfo","isAlreadyFailedLegacyErrorBoundary","_lane","didWarnAboutBadClass","didWarnAboutModulePatternComponent","didWarnAboutContextTypeOnFunctionComponent","didWarnAboutGetDerivedStateOnFunctionComponent","didWarnAboutFunctionRefs","didWarnAboutReassigningProps","didWarnAboutRevealOrder","didWarnAboutTailOptions","ReactCurrentOwner$1","didReceiveUpdate","reconcileChildren","nextChildren","updateForwardRef","innerPropTypes","hasId","bailoutOnAlreadyFinishedWork","updateMemoComponent","shouldConstruct$1","isSimpleFunctionComponent","resolvedType","resolveFunctionForHotReloading","validateFunctionComponentInDev","updateSimpleMemoComponent","createFiberFromTypeAndProps","_innerPropTypes","currentChild","checkScheduledUpdateOrContext","prevProps","outerMemoType","outerPropTypes","updateFunctionComponent","updateOffscreenComponent","_subtreeRenderLanes","baseLanes","cachePool","transitions","pushRenderLanes","nextBaseLanes","_nextState","_nextState2","markRef","updateClassComponent","shouldErrorImpl","hasContext","resetSuspendedCurrentOnMountInLegacyMode","oldContext","hasNewLifecycles","_fiberFlags","_fiberFlags2","resumeMountClassInstance","unresolvedOldProps","unresolvedNewProps","updateClassInstance","nextUnitOfWork","finishClassComponent","didCaptureError","forceUnmountCurrentAndReconcile","pushHostRootContext","pendingContext","mountHostRootWithoutHydrating","recoverableError","mountLazyComponent","_current","resolvedTag","resolveLazyComponentTag","resolvedProps","resolveClassForHotReloading","resolveForwardRefForHotReloading","hint","debugSource","_componentName3","_componentName4","SUSPENDED_MARKER","mountSuspenseOffscreenState","updateSuspenseComponent","shouldSuspendImpl","suspenseContext","showFallback","didSuspend","shouldRemainOnFallback","mountDehydratedSuspenseComponent","nextPrimaryChildren","nextFallbackChildren","fallback","fallbackFragment","primaryChildren","fallbackChildren","primaryChildFragment","fallbackChildFragment","progressedPrimaryFragment","primaryChildProps","treeBaseDuration","mountWorkInProgressOffscreenFiber","mountSuspenseFallbackChildren","mountSuspensePrimaryChildren","_dehydrated","retrySuspenseComponentWithoutHydrating","fiberMode","mountSuspenseFallbackAfterRetryWithoutHydrating","_getSuspenseInstanceF","dataset","dgst","msg","stck","getSuspenseInstanceFallbackErrorDetails","attemptHydrationAtLane","getBumpedLaneForHydration","retry","retryDehydratedSuspenseBoundary","_reactRetry","updateDehydratedSuspenseComponent","_nextFallbackChildren","currentPrimaryChildFragment","currentFallbackChildFragment","updateWorkInProgressOffscreenFiber","subtreeFlags","updateSuspenseFallbackChildren","_primaryChildFragment2","prevOffscreenState","updateSuspenseOffscreenState","getRemainingWorkInPrimaryTree","_primaryChildFragment3","updateSuspensePrimaryChildren","offscreenProps","createFiberFromOffscreen","scheduleSuspenseWorkOnFiber","validateSuspenseListNestedChild","childSlot","isAnArray","isIterable","initSuspenseListRenderState","isBackwards","tail","lastContentRow","tailMode","renderState","renderingStartTime","updateSuspenseListComponent","validateRevealOrder","validateTailOptions","childrenIterator","validateSuspenseListChildren","propagateSuspenseContextChange","currentRow","findLastContentRow","_tail","nextRow","hasWarnedAboutUsingNoValuePropOnContextProvider","appendAllChildren","updateHostContainer","updateHostComponent$1","updateHostText$1","hasWarnedAboutUsingContextAsConsumer","cloneChildFibers","beginWork","_debugNeedsRemount","oldWorkInProgress","newWorkInProgress","prevSibling","remountFiber","didSuspendBefore","_hasChildWork","attemptEarlyBailoutIfNoScheduledUpdate","isForkedChild","slotIndex","_componentName2","mountIndeterminateComponent","unresolvedProps","_Component","_unresolvedProps","prevChildren","overrideState","cache","pendingSuspenseBoundaries","updateHostRoot","updateHostComponent","updateHostText","updatePortalComponent","_unresolvedProps2","updateMode","updateProfiler","providerPropTypes","oldValue","updateContextProvider","updateContextConsumer","_resolvedProps3","_Component2","_unresolvedProps4","mountIncompleteClassComponent","markUpdate","markRef$1","cutOffTailIfNeeded","hasRenderedATailFallback","tailNode","lastTailNode","_tailNode","_lastTailNode","bubbleProperties","completedWork","didBailout","newChildLanes","_treeBaseDuration","_child2","_child3","completeDehydratedSuspenseBoundary","wasHydrated","_primaryChildFragment","completeWork","fiberRoot","currentHostContext","shouldWarnIfMismatchDev","prepareToHydrateHostInstance","autoFocus","finalizeInitialChildren","newText","oldText","_rootContainerInstance","_currentHostContext","nextDidTimeout","unstable_avoidThisFallback","RootInProgress","RootSuspended","didSuspendAlready","renderedTail","suspended","newThenables","getRenderTargetTime","_suspended","_newThenables","popRenderLanes","nextIsHidden","subtreeRenderLanes","unwindWork","_flags","_flags2","unwindInterruptedWork","interruptedWork","needsVisibilityToggle","isHidden","prepareUpdate","didWarnAboutUndefinedSnapshotBeforeUpdate","offscreenSubtreeIsHidden","offscreenSubtreeWasHidden","PossiblyWeakSet","WeakSet","nextEffect","inProgressLanes","inProgressRoot","callComponentWillUnmountWithTimer","componentWillUnmount","safelyCallCommitHookLayoutEffectListMount","nearestMountedAncestor","commitHookEffectListMount","captureCommitPhaseError","safelyCallComponentWillUnmount","safelyAttachRef","commitAttachRef","safelyDetachRef","retVal","safelyCallDestroy","shouldFireAfterActiveInstanceBlur","commitBeforeMutationEffects","commitBeforeMutationEffects_complete","commitBeforeMutationEffects_begin","shouldFire","commitBeforeMutationEffectsOnFiber","snapshot","didWarnSet","__reactInternalSnapshotBeforeUpdate","commitHookEffectListUnmount","markComponentPassiveEffectUnmountStarted","setIsRunningInsertionEffect","markComponentPassiveEffectUnmountStopped","markComponentPassiveEffectMountStarted","markComponentPassiveEffectMountStopped","markComponentLayoutEffectMountStopped","commitPassiveEffectDurations","finishedRoot","_finishedWork$memoize","onPostCommit","phase","commitLayoutEffectOnFiber","committedLanes","_updateQueue","commitMount","_finishedWork$memoize2","onCommit","onRender","pendingPassiveProfilerEffects","rootDoesHavePassiveEffects","scheduleCallback$1","flushPassiveEffects","commitHydratedSuspenseInstance","commitSuspenseHydrationCallbacks","reappearLayoutEffectsOnFiber","safelyCallComponentDidMount","instanceToUse","detachFiberAfterEffects","hostInstance","isHostParent","getHostSibling","siblings","commitPlacement","getHostParentFiber","insertOrAppendPlacementNode","_parent","insertOrAppendPlacementNodeIntoContainer","before","beforeChild","insertBefore","insertInContainerBefore","_reactRootContainer","appendChildToContainer","hostParent","hostParentIsContainer","commitDeletionEffects","deletedFiber","findParent","commitDeletionEffectsOnFiber","recursivelyTraverseDeletionEffects","onCommitFiberUnmount","onCommitUnmount","prevHostParent","prevHostParentIsContainer","clearSuspenseBoundaryFromContainer","_prevHostParent","_prevHostParentIsContainer","_effect","prevOffscreenSubtreeWasHidden","attachSuspenseRetryListeners","retryCache","resolveRetryWakeable","recursivelyTraverseMutationEffects","prevDebugFiber","commitMutationEffectsOnFiber","commitReconciliationEffects","commitUpdate","commitTextUpdate","offscreenFiber","offscreenInstance","globalMostRecentFallbackTime","commitSuspenseCallback","_wasHidden","_offscreenInstance","_isHidden","offscreenBoundary","offscreenChild","disappearLayoutEffects_begin","hostSubtreeRoot","hideOrUnhideAllChildren","commitLayoutEffects","commitLayoutEffects_begin","subtreeRoot","isModernRoot","newOffscreenSubtreeIsHidden","commitLayoutMountEffects_complete","wasHidden","prevOffscreenSubtreeIsHidden","reappearLayoutEffects_begin","disappearLayoutEffects_complete","reappearLayoutEffects_complete","commitPassiveMountEffects","committedTransitions","commitPassiveMountEffects_complete","commitPassiveMountEffects_begin","commitPassiveMountOnFiber","commitPassiveUnmountEffects","fiberToDelete","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","previousFiber","detachedChild","detachedSibling","commitPassiveUnmountEffects_complete","commitPassiveUnmountEffects_begin","commitPassiveUnmountOnFiber","deletedSubtreeRoot","commitPassiveUnmountInsideDeletedTreeOnFiber","commitPassiveUnmountEffectsInsideOfDeletedTree_complete","invokeLayoutEffectMountInDEV","invokePassiveEffectMountInDEV","invokeLayoutEffectUnmountInDEV","invokePassiveEffectUnmountInDEV","symbolFor","commitHooks","isConcurrentActEnvironment","isReactActEnvironmentGlobal","IS_REACT_ACT_ENVIRONMENT","ceil","ReactCurrentDispatcher$2","ReactCurrentOwner$2","ReactCurrentBatchConfig$3","ReactCurrentActQueue$1","BatchedContext","CommitContext","RootFatalErrored","RootCompleted","RootDidNotComplete","workInProgressRoot","workInProgressRootRenderLanes","subtreeRenderLanesCursor","workInProgressRootFatalError","workInProgressRootSkippedLanes","workInProgressRootInterleavedUpdatedLanes","workInProgressRootPingedLanes","workInProgressRootRecoverableErrors","FALLBACK_THROTTLE_MS","workInProgressRootRenderTargetTime","Infinity","RENDER_TIMEOUT_MS","workInProgressTransitions","resetRenderTimer","hasUncaughtError","firstUncaughtError","rootWithPendingPassiveEffects","pendingPassiveEffectsLanes","pendingPassiveTransitions","NESTED_UPDATE_LIMIT","nestedUpdateCount","rootWithNestedUpdates","isFlushingPassiveEffects","didScheduleUpdateDuringPassiveEffects","NESTED_PASSIVE_UPDATE_LIMIT","nestedPassiveUpdateCount","rootWithPassiveNestedUpdates","currentEventTime","currentEventTransitionLane","isRunningInsertionEffect","currentEvent","requestRetryLane","checkForNestedUpdates","renderingComponentName","dedupeKey","didWarnAboutUpdateInRenderForAnotherComponent","didWarnAboutUpdateInRender","warnAboutRenderPhaseUpdatesInDEV","jest","warnIfUpdatesNotWrappedWithActDEV","markRootSuspended$1","ensureRootIsScheduled","existingCallbackNode","callbackNode","expirationTimes","expiredLanes","markStarvedLanesAsExpired","cancelCallback$1","callbackPriority","newCallbackPriority","existingCallbackPriority","fakeActCallbackNode","newCallbackNode","performSyncWorkOnRoot","schedulerPriorityLevel","performConcurrentWorkOnRoot","didTimeout","originalCallbackNode","shouldTimeSlice","includesExpiredLane","exitStatus","prevExecutionContext","pushDispatcher","prepareFreshStack","workLoopConcurrent","handleError","popDispatcher","markRenderYielded","renderRootConcurrent","renderRootSync","errorRetryLanes","recoverFromConcurrentError","fatalError","renderWasConcurrent","checks","renderedValue","isRenderConsistentWithExternalStores","_errorRetryLanes","_fatalError","finishedLanes","commitRoot","shouldForceFlushFallbacksInDEV","msUntilTimeout","timeoutHandle","includesOnlyTransitions","mostRecentEventTime","getMostRecentEventTime","eventTimeMs","timeElapsedMs","_msUntilTimeout","timeElapsed","finishConcurrentRender","errorsFromFirstAttempt","errorsFromSecondAttempt","errors","markRootSuspended","batchedUpdates$1","flushSync","isAlreadyRendering","rootWorkInProgress","lastInterleavedUpdate","firstInterleavedUpdate","finishQueueingConcurrentUpdates","erroredWork","completeUnitOfWork","yetAnotherThrownValue","workLoopSync","performUnitOfWork","unitOfWork","beginWork$1","_next","siblingFiber","recoverableErrors","previousUpdateLanePriority","renderPriorityLevel","flushRenderPhaseStrictModeWarningsInDEV","markCommitStarted","remainingLanes","noLongerPendingLanes","mutableReadLanes","markRootFinished","subtreeHasEffects","rootHasEffect","commitMutationEffects","markLayoutEffectsStarted","markLayoutEffectsStopped","rootDidHavePassiveEffects","commitDoubleInvokeEffectsInDEV","eventPriority","onCommitFiberRoot","schedulerPriority","onCommitRoot","commitHook","onCommitRoot$1","onRecoverableError","commitRootImpl","renderPriority","lowerEventPriority","markPassiveEffectsStarted","profilerEffects","markPassiveEffectsStopped","onPostCommitFiberRoot","onPostCommitRoot","flushPassiveEffectsImpl","captureCommitPhaseErrorOnRoot","rootFiber","reportUncaughtErrorInDEV","warnIfSuspenseResolutionNotWrappedWithActDEV","retryTimedOutBoundary","boundaryFiber","hasPassiveEffects","invokeEffectsInDev","invokeEffectFn","primarySubtreeFlag","didWarnStateUpdateForNotYetMountedComponent","originalWorkInProgressCopy","assignFiberPropertiesInDEV","originalError","replayError","schedulingFiber","actQueue","isRunning","resolveFamily","failedBoundaries","setRefreshHandler","handler","family","currentRender","syntheticType","prevType","nextType","needsCompareFamilies","$$typeofNextType","prevFamily","scheduleRefresh","staleFamilies","updatedFamilies","scheduleFibersWithFamiliesRecursively","scheduleRoot","updateContainer","candidateType","needsRender","needsRemount","_root","hasBadMapPolyfill","findHostInstancesForRefresh","families","hostInstances","types","findHostInstancesForMatchingFibersRecursively","didMatch","foundHostInstances","findChildHostInstancesForFiberShallowly","findHostInstancesForFiberShallowly","nonExtensibleObject","preventExtensions","FiberNode","Number","NaN","currentDependencies","fiberTag","getTag","createFiberFromProfiler","createFiberFromSuspense","createFiberFromSuspenseList","elements","pendingChildren","FiberRootNode","hydrate","_debugRootType","createFiberRoot","initialChildren","hydrationCallbacks","isStrictMode","concurrentUpdatesByDefaultOverride","transitionCallbacks","uninitializedFiber","createHostRootFiber","_initialState","didWarnAboutNestedUpdates","didWarnAboutFindNodeInStrictMode","ReactVersion","createPortal","getContextForSubtree","parentComponent","createContainer","createHydrationContainer","scheduleInitialHydrationOnRoot","onScheduleFiberRoot","onScheduleRoot","current$1","markRenderScheduled","getPublicRootInstance","containerFiber","markRetryLaneImpl","higherPriorityLane","markRetryLaneIfNotHydrated","findHostInstanceWithNoPortals","hostFiber","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","scheduleUpdate","setErrorHandler","setSuspenseHandler","copyWithDeleteImpl","obj","path","updated","splice","copyWithDelete","copyWithRenameImpl","oldPath","newPath","oldKey","copyWithRename","copyWithSetImpl","copyWithSet","findHook","findHostInstanceByFiber","emptyFindFiberByHostInstance","getCurrentFiberForDevTools","newShouldErrorImpl","newShouldSuspendImpl","defaultOnRecoverableError","reportError","ReactDOMRoot","internalRoot","_internalRoot","ReactDOMHydrationRoot","isValidContainer","isValidContainerLegacy","warnIfReactDOMContainerInDEV","unmount","unstable_scheduleHydration","updatePriority","queueExplicitHydrationTarget","topLevelUpdateWarnings","ReactCurrentOwner$3","getReactRootElementInContainer","noopOnRecoverableError","legacyRenderSubtreeIntoContainer","forceHydrate","warnOnInvalidCallback$1","maybeRoot","originalCallback","isHydrationContainer","rootSibling","_originalCallback","legacyCreateRootFromDOMContainer","isRootRenderedBySomeReact","rootEl","getHighestPriorityPendingLanes","flushRoot","setAttemptContinuousHydration","setAttemptHydrationAtCurrentPriority","setGetCurrentUpdatePriority","setAttemptHydrationAtPriority","restoreControlledState$2","restoreControlledState$1","Internals","usingClientEntryPoint","Events","foundDevTools","devToolsConfig","findFiberByHostInstance","internals","isDisabled","supportsFiber","inject","checkDCE","injectInternals","bundleType","rendererPackageName","rendererConfig","currentDispatcherRef","getCurrentFiber","reconcilerVersion","injectIntoDevTools","userAgent","protocol","reactDom_development","createRoot","unstable_strictMode","findDOMNode","componentOrElement","findHostInstanceWithWarning","hydrateRoot","mutableSources","hydratedSources","unmountComponentAtNode","_rootEl","hasNonRootReactChild","isContainerReactRoot","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","containerNode","Action","m","_extends","o","PopStateEventType","createBrowserHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","idx","handlePop","nextIndex","delta","Push","createLocation","historyState","getHistoryState","pushState","DOMException","Replace","createURL","createPath","invariant","URL","listen","encodeLocation","pathname","hash","go","getUrlBasedHistory","usr","warning","cond","parsePath","substr","parsedPath","hashIndex","searchIndex","ResultType","matchRoutes","routes","locationArg","basename","stripBasename","branches","flattenRoutes","score","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","_route$path","exploded","explodeOptionalSegments","segments","rest","isOptional","endsWith","restExploded","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","some","reduce","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","matcher","paramNames","regexpSource","paramName","compilePath","captureGroups","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","startIndex","nextChar","getInvalidPathError","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","DataRouterContext","React.createContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","React.useContext","useLocation","UNSAFE_invariant","navigateEffectWarning","useIsomorphicLayoutEffect","cb","static","React.useLayoutEffect","useNavigate","router","ctx","getDataRouterConsoleError","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","React.useRef","navigate","React.useCallback","UNSAFE_warning","fromRouteId","useNavigateStable","dataRouterContext","routePathnamesJson","UNSAFE_getPathContributingMatches","parse","relative","useNavigateUnstable","useResolvedPath","_temp2","React.useMemo","useRoutes","dataRouterState","parentMatches","routeMatch","parentParams","parentPathname","parentPathnameBase","parentRoute","alreadyWarned","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_dataRouterState2","_dataRouterState","errorIndex","findIndex","reduceRight","errorElement","defaultErrorElement","getChildren","React.createElement","RenderedRoute","routeContext","ErrorBoundary","RenderErrorBoundary","revalidation","_renderMatches","navigationType","useRoutesImpl","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","routeId","useRouteError","status","statusText","internal","isRouteErrorResponse","lightgrey","preStyles","backgroundColor","codeStyles","devInfo","React.Fragment","fontStyle","React.Component","super","staticContext","_deepestRenderedBoundaryId","useRouteContext","thisRoute","Route","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","AwaitRenderStatus","React.Children","React.isValidElement","treePath","loader","hasErrorBoundary","shouldRevalidate","handle","_objectWithoutPropertiesLoose","excluded","sourceKeys","React$2","defaultMethod","defaultEncType","isHtmlElement","_formDataSupportsSubmitter","supportedFormEncTypes","getFormEncType","encType","getFormSubmissionInfo","formData","attr","FormData","isButtonElement","isInputElement","isFormDataSubmitterSupported","append","_excluded","_excluded2","_excluded3","startTransitionImpl","BrowserRouter","future","historyRef","setStateImpl","React.useState","v7_startTransition","isBrowser","ABSOLUTE_URL_REGEX","Link","React.forwardRef","_ref4","absoluteHref","reloadDocument","preventScrollReset","UNSAFE_NavigationContext","isExternal","currentUrl","targetUrl","_temp","joinedPathname","useHref","internalOnClick","replaceProp","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","ariaCurrentProp","className","classNameProp","routerState","UNSAFE_DataRouterStateContext","nextLocationPathname","navigation","isActive","ariaCurrent","Boolean","UNSAFE_DataRouterContext","UseSubmit","currentRouteId","UseRouteId","validateClientSideSubmission","formMethod","formEncType","useSubmit","FormImpl","forwardedRef","onSubmit","formAction","UNSAFE_RouteContext","URLSearchParams","useFormAction","submitter","submitMethod","Recoil_err","Recoil_isPromise","p","Recoil_nullthrows","_defineProperty","BaseLoadable","toPromise","valueMaybe","valueOrThrow","promiseMaybe","promiseOrThrow","errorMaybe","errorOrThrow","other","contents","_map","ValueLoadable","loadableWithPromise","isLoadable","loadableWithValue","loadableWithError","ErrorLoadable","LoadingLoadable","promise","nextLoadable","loadableLoading","loadableAll","inputs","normalizedInputs","getOwnPropertyNames","output","find","all","loadableAllArray","outputs","out","LoadableStaticInterface","of","loading","Recoil_Loadable","RecoilLoadable","Recoil_Loadable_1","Recoil_Loadable_2","Recoil_Loadable_3","Recoil_Loadable_4","Recoil_Loadable_5","Recoil_Loadable_6","Recoil_Loadable_7","Recoil_Loadable$1","__proto__","env","RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED","RECOIL_GKS_ENABLED","_process","process","_process$env$name","_process$env$name$toL","sanitizedValue","readProcessEnvBooleanFlag","_process$env$name2","readProcessEnvStringArrayFlag","gk","Recoil_RecoilEnv","Recoil_gkx_OSS","setPass","setFail","Recoil_gkx","_createMutableSource","_useMutableSource","_useSyncExternalStore","Recoil_recoverableViolation","_projectName","createMutableSource","react","unstable_createMutableSource","unstable_useMutableSource","React$1","unstable_useSyncExternalStore","ReactRendererVersionMismatchWarnOnce","Recoil_ReactMode","currentRendererSupportsUseSyncExternalStore","_ReactCurrentDispatch","isUseSyncExternalStoreSupported","currentDispatcher","reactMode","early","concurrent","$disableRecoilValueMutableSource_TEMP_HACK_DO_NOT_USE","isFastRefreshEnabled","AbstractRecoilValue","toJSON","RecoilState","RecoilValueReadOnly","Recoil_RecoilValue","isRecoilValue","Recoil_RecoilValue_1","Recoil_RecoilValue_2","Recoil_RecoilValue_3","Recoil_RecoilValue_4","Recoil_RecoilValue$1","sprintf_1","Recoil_expectationViolation","Recoil_mapIterable","iterable","isFastRefreshEnabled$1","DefaultValue","DEFAULT_VALUE","nodes","recoilValues","NodeMissingError","configDeletionHandlers","getConfigDeletionHandler","Recoil_Node","registerNode","checkForDuplicateAtomKey","recoilValue","getNode","getNodeMaybe","deleteNodeConfigIfPossible","_node$shouldDeleteCon","_getConfigDeletionHan","shouldDeleteConfigOnRelease","setConfigDeletionHandler","recoilValuesForKeys","Recoil_Queue","enqueueExecution","hamt_1","createCommonjsModule","_typeof","hamt","BUCKET_SIZE","pow","MASK","MAX_INDEX_NODE","MIN_ARRAY_NODE","nothing","constant","str","len","charCodeAt","hashFragment","h","toBitmap","fromBitmap","bitmap","bit","popcount","arrayUpdate","mutate","at","v","arr","arraySpliceOut","newLen","g","empty","__hamt_isEmpty","isEmptyNode","Leaf","edit","_modify","Leaf__modify","Collision","Collision__modify","IndexedNode","IndexedNode__modify","ArrayNode","ArrayNode__modify","mergeLeaves","h1","n1","h2","n2","subH1","subH2","canEditNode","keyEq","_v","_newValue","updateCollisionList","frag","indx","exists","canEdit","subNodes","expand","arraySpliceIn","removed","pack","editable","_editable","_edit","_config","_size","setTree","newRoot","newSize","tryGetHash","tryGet","getHash","hasHash","defKeyCompare","make","isEmpty","modifyHash","modify","setHash","del","removeHash","deleteHash","remove","beginMutation","endMutation","transient","appk","lazyVisitChildren","lazyVisit","DONE","MapIterator","v0","visit","buildPairs","buildKeys","buildValues","fold","toVisit","BuiltInMap","persistentMap","toMap","HashArrayMappedTrieMap","_hamt","Recoil_PersistentMap_1","Recoil_PersistentMap$1","Recoil_differenceSets","setsWithValuesToRemove","ret","FIRST","otherSet","Recoil_mapMap","mergeDepsIntoGraph","newDeps","graph","olderGraph","nodeDeps","nodeToNodeSubscriptions","oldDeps","addedDeps","dep","removedDeps","Recoil_Graph","cloneGraph","saveDepsToStore","store","_storeState$nextTree","_storeState$previousT","_storeState$previousT2","_storeState$previousT3","storeState","getState","currentTree","nextTree","previousTree","getGraph","_storeState$nextTree2","nextVersion","nextTreeStateVersion","nextStoreID","nextComponentID","Recoil_Keys","getNextTreeStateVersion","getNextStoreID","getNextComponentID","persistentMap$1","getNextTreeStateVersion$1","makeEmptyTreeState","stateID","transactionMetadata","dirtyAtoms","atomValues","nonvalidatedAtoms","Recoil_State","makeEmptyStoreState","commitDepth","knownAtoms","knownSelectors","transactionSubscriptions","nodeTransactionSubscriptions","nodeToComponentSubscriptions","queuedComponentCallbacks_DEPRECATED","suspendedComponentResolvers","graphsByVersion","retention","referenceCounts","nodesRetainedByZone","retainablesToCheckForRelease","nodeCleanupFunctions","RetentionZone","Recoil_RetentionZone","retentionZone","Recoil_CopyOnWrite","setByAddingToSet","setByDeletingFromSet","mapBySettingInMap","mapByUpdatingInMap","mapByDeletingFromMap","mapByDeletingMultipleFromMap","ks","Recoil_filterIterable","predicate","Recoil_lazyProxy","factories","Proxy","ownKeys","getNode$1","getNodeMaybe$1","recoilValuesForKeys$1","RetentionZone$1","setByAddingToSet$1","emptySet","ReadOnlyRecoilValueError","initializeNodeIfNewToStore","treeState","trigger","retentionCleanup","nodeKey","retainedBy","addToZone","zone","deleteFromZone","initializeRetentionForNode","nodeCleanup","peekNodeLoadable","getDownstreamNodes","visitedNodes","visitingNodes","_graph$nodeToNodeSubs","subscribedNodes","downstreamNode","Recoil_FunctionalCore","getNodeLoadable","setNodeValue","initializeNode","cleanUpNode","_state$nodeCleanupFun","setUnvalidatedAtomValue_DEPRECATED","_node$invalidate","invalidate","peekNodeInfo","loadable","isSet","isModified","_graph$nodeDeps$get","subscribers","_storeState$nodeToCom","_storeState$nodeToCom2","components","_invalidateMemoizedSnapshot","Recoil_SnapshotCache","setInvalidateMemoizedSnapshot","invalidateMemoizedSnapshot","_invalidateMemoizedSn","getDownstreamNodes$1","getNodeLoadable$1","setNodeValue$1","getNextComponentID$1","getNode$2","getNodeMaybe$2","DefaultValue$1","reactMode$1","AbstractRecoilValue$1","RecoilState$1","RecoilValueReadOnly$1","isRecoilValue$1","invalidateMemoizedSnapshot$1","applyAction","valueOrUpdater","valueFromValueOrUpdater","writes","writeLoadableToTreeState","unvalidatedValue","applyActionsToStore","actions","copyTreeState","invalidateDownstreams","queueOrPerformStateUpdate","batchStack","actionsByStore","downstreams","_getNodeMaybe","_getNodeMaybe$invalid","setRecoilValue","Recoil_RecoilValueInterface","getRecoilValueAsLoadable","setRecoilValueLoadable","markRecoilValueModified","setUnvalidatedRecoilValue","subscribeToRecoilValue","componentDebugName","subID","release","releaseStoreState","subs","applyAtomValueWrites","batchStart","refreshRecoilValue","_node$clearCache","clearCache","Recoil_someSet","entry","cleanUpNode$1","deleteNodeConfigIfPossible$1","getNode$3","RetentionZone$2","emptySet$1","releaseRetainablesNowOnCurrentTree","retainables","releasableNodes","searchFromNodes","nonReleasableNodes","findReleasableNodesInner","releasableNodesFoundThisIteration","doNotDescendInto1","doNotDescendInto2","answer","visited","getDownstreamNodesInTopologicalOrder","_storeState$retention","zonesThatCouldRetainNode","nodeChildren","parents","findReleasableNodes","releaseNode","zones","_storeState$retention2","_storeState$retention3","updateRetainCountToZero","retainable","scheduleOrPerformPossibleReleaseOfRetainable","Recoil_Retention","SUSPENSE_TIMEOUT_MS","updateRetainCount","_map$get","newCount","releaseScheduledRetainablesNow","retainedByOptionWithDefault","reactDom","ReactBatchedUpdates","unstable_batchedUpdates$1","Recoil_ReactBatchedUpdates","batchStart$1","unstable_batchedUpdates$2","batcher","batchFn","Recoil_Batching","getBatcher","setBatcher","newBatcher","batchUpdates","batchEnd","Recoil_concatIterables","iters","iter","val","isSSR","Window","isReactNative","product","Recoil_Environment","isWindow","Recoil_Memoize","memoizeWithArgsHash","hashFunction","memoizeOneWithArgsHash","lastKey","lastResult","memoizeOneWithArgsHashAndInvalidation","batchUpdates$1","initializeNode$1","peekNodeInfo$1","graph$1","getNextStoreID$1","DEFAULT_VALUE$1","recoilValues$1","recoilValuesForKeys$2","AbstractRecoilValue$2","getRecoilValueAsLoadable$1","setRecoilValue$1","setUnvalidatedRecoilValue$1","updateRetainCount$1","setInvalidateMemoizedSnapshot$1","getNextTreeStateVersion$2","makeEmptyStoreState$1","isSSR$1","memoizeOneWithArgsHashAndInvalidation$1","parentStoreID","checkRefCount_INTERNAL","getLoadable","opt","isInitialized","mapper","mutableSnapshot","MutableSnapshot","retain","autoRelease_INTERNAL","storeID","replacer","graphs","newGraph","subscribeToTransactions","addTransactionMetadata","_refCount","released","_release","cleanup","isRetained","getStore_INTERNAL","getID","getStoreID","cloneStoreState","bumpVersion","memoizedCloneSnapshot","invalidateMemoizedSnapshot$2","_store$getState$nextT","_store$getState$previ","batch","recoilState","newValueOrUpdater","_batch","Recoil_Snapshot","freshSnapshot","initializeState","cloneSnapshot","Recoil_Snapshot_1","Recoil_Snapshot_2","Recoil_Snapshot_3","Recoil_Snapshot_4","Recoil_Snapshot$1","Recoil_unionSets","sets","Recoil_useRefInitOnce","getNextTreeStateVersion$3","makeEmptyStoreState$2","cleanUpNode$2","getDownstreamNodes$2","initializeNode$2","setNodeValue$2","setUnvalidatedAtomValue_DEPRECATED$1","graph$2","cloneGraph$1","getNextStoreID$2","createMutableSource$1","reactMode$2","applyAtomValueWrites$1","releaseScheduledRetainablesNow$1","freshSnapshot$1","useRef$1","notInAContext","defaultStore","stateReplacerIsBeingExecuted","startNextTreeIfNeeded","AppContext","useStoreRef","MutableSourceContext","notifyComponents","dependentNodes","comps","_subID","_debugName","sendEndOfBatchNotifications","subscriptions","subscription","Batcher","setNotifyBatcherOfChange","storeRef","endBatch","$recoilDebugStates","nextID","RecoilRoot_INTERNAL","initializeState_DEPRECATED","store_INTERNAL","storeProp","storeStateRef","metadata","replaced","notifyBatcherOfChange","atom","writtenNodes","setUnvalidatedAtomValues","initialStoreState_DEPRECATED","initialStoreState","atomKey","Recoil_RecoilRoot","RecoilRoot","override","propsExceptOverride","ancestorStoreRef","useRecoilMutableSource","useRecoilStoreID","notifyComponents_FOR_TESTING","sendEndOfBatchNotifications_FOR_TESTING","Recoil_shallowArrayEqual","l","useEffect$1","useRef$2","Recoil_usePrevious","useStoreRef$1","SUSPENSE_TIMEOUT_MS$1","updateRetainCount$2","RetentionZone$3","useEffect$2","useRef$3","isSSR$2","Recoil_useRetain","toRetain","timeoutID","previousRetainables","useRetain_ACTUAL","Recoil_useComponentName","batchUpdates$2","DEFAULT_VALUE$2","currentRendererSupportsUseSyncExternalStore$1","reactMode$3","useMutableSource$1","useSyncExternalStore$1","useRecoilMutableSource$1","useStoreRef$2","isRecoilValue$2","AbstractRecoilValue$3","getRecoilValueAsLoadable$2","setRecoilValue$2","setUnvalidatedRecoilValue$2","subscribeToRecoilValue$1","useCallback$1","useEffect$3","useMemo$1","useRef$4","useState$1","setByAddingToSet$2","isSSR$3","handleLoadable","finally","validateRecoilValue","recoilComponentGetRecoilValueCount_FOR_TESTING","useRecoilValueLoadable_SYNC_EXTERNAL_STORE","memoizePreviousSnapshot","_prevState","_prevState2","getMemoizedSnapshot","notify","useRecoilValueLoadable_MUTABLE_SOURCE","_storeState$nextTree3","getLoadableWithTesting","_storeState","newLoadable","prevLoadableRef","useRecoilValueLoadable_TRANSITION_SUPPORT","_storeState$nextTree4","useRecoilValueLoadable_LEGACY","_storeState$nextTree5","_prevLoadableRef$curr","_prevLoadableRef$curr2","useRecoilValueLoadable","TRANSITION_SUPPORT","SYNC_EXTERNAL_STORE","MUTABLE_SOURCE","LEGACY","useRecoilValue","useSetRecoilState","useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE","useRecoilValue_TRANSITION_SUPPORT_UNSTABLE","Recoil_Hooks","useRecoilInterface","recoilValuesUsed","previousSubscriptions","unsubscribeFrom","sub","currentSubscriptions","getRecoilValue","getRecoilValueLoadable","getRecoilState","getRecoilStateLoadable","getSetRecoilState","getResetRecoilState","useRecoilState","useRecoilStateLoadable","useResetRecoilState","useSetUnvalidatedAtomValues","useRecoilState_TRANSITION_SUPPORT_UNSTABLE","Recoil_filterMap","Recoil_filterSet","Recoil_mergeMaps","maps","nextKey","batchUpdates$3","DEFAULT_VALUE$3","getNode$4","nodes$1","useStoreRef$3","AbstractRecoilValue$4","setRecoilValueLoadable$1","SUSPENSE_TIMEOUT_MS$2","cloneSnapshot$1","useCallback$2","useEffect$4","useRef$5","useState$2","isSSR$4","useTransactionSubscription","externallyVisibleAtomValuesInState","persistedAtomContentsValues","persistence","persistence_UNSTABLE","gotoSnapshot","prev","keysToUpdate","_prev$atomValues$get","_next$atomValues$get","shouldRestoreFromSnapshots","Recoil_SnapshotHooks","useRecoilSnapshot","setSnapshot","previousSnapshot","releaseRef","_releaseRef$current","_releaseRef$current2","_releaseRef$current3","useGotoRecoilSnapshot","useRecoilTransactionObserver","useTransactionObservation_DEPRECATED","previousAtomValues","atomInfo","_node$persistence_UNS","_node$persistence_UNS2","_node$persistence_UNS3","_node$persistence_UNS4","backButton","modifiedAtoms","useTransactionSubscription_DEPRECATED","peekNodeInfo$2","useStoreRef$4","Recoil_useGetRecoilValueInfo","reactMode$4","RecoilRoot$1","useStoreRef$5","useMemo$2","Recoil_useRecoilBridgeAcrossReactRoots","loadableWithValue$1","initializeNode$3","DEFAULT_VALUE$4","getNode$5","copyTreeState$1","getRecoilValueAsLoadable$3","invalidateDownstreams$1","writeLoadableToTreeState$1","isAtom","TransactionInterfaceImpl","_changes","_treeState","newTreeState_INTERNAL","Recoil_AtomicUpdates_1","changeset","Recoil_AtomicUpdates$1","atomicUpdater","Recoil_invariant","condition","atomicUpdater$1","batchUpdates$4","DEFAULT_VALUE$5","useStoreRef$6","refreshRecoilValue$1","setRecoilValue$3","cloneSnapshot$2","gotoSnapshot$1","useCallback$3","Sentinel","SENTINEL","recoilCallback","extraInterface","releaseSnapshot","_releaseSnapshot2","errMsg","callbackInterface","refresh","transact_UNSTABLE","transaction","_releaseSnapshot","Recoil_useRecoilCallback","useRecoilCallback","useStoreRef$7","refreshRecoilValue$2","useCallback$4","Recoil_useRecoilRefresher","atomicUpdater$2","useStoreRef$8","useMemo$3","Recoil_useRecoilTransaction","atomicUpdate","transactionInterface","Recoil_Wrapper_1","Recoil_Wrapper$1","WrappedValue","isFastRefreshEnabled$2","ChangedPathError","Recoil_TreeCache","_options$onHit","_options$onSet","_options$mapNodeValue","_name","_numLeafs","_onHit","onHit","_onSet","onSet","_mapNodeValue","mapNodeValue","getNodeValue","handlers","_this$getLeafNode","onNodeVisit","addLeaf","_node2","_node3","_this$_root2","_handlers$onNodeVisit2","branchKey","_node","_handlers$onNodeVisit","_this$_root","invalidCacheError","oldLeaf","leafNode","leaf","_node4","CHANGED_PATH_ERROR_MESSAGE","Recoil_TreeCache_1","Recoil_TreeCache$1","TreeCache","Recoil_LRUCache","_options$mapKey","_maxSize","maxSize","_head","_keyMapper","mapKey","head","mappedKey","_maybeDeleteLRU","deleteLru","Recoil_LRUCache_1","Recoil_LRUCache$1","LRUCache","LRUCache$1","TreeCache$1","Recoil_treeCacheLRU","lruCache","lruNode","allowFunctions","_JSON$stringify","localeCompare","Recoil_stableStringify","endTime","TreeCache$2","defaultPolicy","equality","eviction","Recoil_treeCacheFromPolicy","valueMapper","getValueMapper","getTreeCache","Recoil_isNode","_ownerDocument","_doc$defaultView","Node","isReactNative$1","isWindow$1","Recoil_deepFreezeValue","deepFreezeValue","ArrayBuffer","isView","shouldNotBeFrozen","isFrozen","Recoil_PerformanceTimings","startPerfBlock","_id","isLoadable$1","loadableWithError$1","loadableWithPromise$1","loadableWithValue$2","WrappedValue$1","getNodeLoadable$2","peekNodeLoadable$1","setNodeValue$3","saveDepsToStore$1","DEFAULT_VALUE$6","getConfigDeletionHandler$1","getNode$6","registerNode$1","isRecoilValue$3","markRecoilValueModified$1","retainedByOptionWithDefault$1","recoilCallback$1","startPerfBlock$1","Canceled","CANCELED","dependencyStack","waitingStores","getNewExecutionID","executionID","selector","cachePolicy_UNSTABLE","cachePolicy","discoveredDependencyNodeKeys","retainedBy_UNSTABLE","executionInfoMap","liveStoresCount","selectorIsLive","selectorInit","selectorShouldDeleteConfigOnRelease","resolveAsync","depValues","setCache","notifyStoresOfResolvedAsync","isLatestExecution","clearExecutionInfo","notifyWaitingStores","clearWaitlist","waitingStore","markStoreWaitingForResolvedAsync","wrapPendingDependencyPromise","existingDeps","loadingDepsState","resolvedDep","loadingDepKey","loadingDepPromise","cachedLoadable","getLoadableFromCacheAndUpdateDeps","getExecutionInfo","executionInfo","getInProgressExecutionInfo","loadingLoadable","evaluateSelectorGetter","updateDeps","_store$getState","_store$getState$curre","_store$getState2","_store$getState2$next","_store$getState3","_store$getState3$next","endPerfBlock","duringSynchronousExecution","duringAsynchronousExecution","finishEvaluation","resultIsError","depKey","depLoadable","stateVersions","notifyStoresOfNewAsyncDep","getCallback","errorOrPromise","wrapResultPromise","errorOrDepPromise","depValuesDiscoveredSoFarDuringAsyncWork","updateExecutionInfoDepValues","depsAfterCacheLookup","_getExecutionInfo","getSelectorLoadableAndUpdateDeps","cachedVal","inProgressExecutionInfo","_inProgressExecutionI","newExecutionID","newDepValues","setExecutionInfo","pendingExecutions","execInfo","anyDepChanged","execDepValues","execLoadable","_getExecutionInfo2","dangerouslyAllowMutability","valLoadable","depValuesToDepRoute","selectorPeek","_peekNodeLoadable","selectorGet","detectCircularDependencies","invalidateSelector","clearSelectorCache","selectorSet","syncSelectorSetFinished","setRecoilState","Recoil_selector","isLoadable$2","loadableWithError$2","loadableWithPromise$2","loadableWithValue$3","WrappedValue$2","peekNodeInfo$3","DEFAULT_VALUE$7","DefaultValue$2","getConfigDeletionHandler$2","registerNode$2","setConfigDeletionHandler$1","isRecoilValue$4","getRecoilValueAsLoadable$4","markRecoilValueModified$2","setRecoilValue$4","setRecoilValueLoadable$2","retainedByOptionWithDefault$2","unwrap","baseAtom","unwrapPromise","defaultLoadable","cachedAnswerForUnvalidatedValue","maybeFreezeValueOrPromise","cleanupEffectsByStore","valueOrPromise","peekAtom","_state$atomValues$get3","nonvalidatedValue","validatorResult","validator","validatedValueLoadable","initState","_options$effects","notifyDefaultSubscribers","_store$getState$nextT3","effects_UNSTABLE","initValue","isDuringInit","isInitError","pendingSetSelf","retValue","getPromise","getInfo_UNSTABLE","_store$getState$nextT4","setSelf","currentLoadable","resetSelf","_cleanupEffectsByStor2","currentStore","_currentTree$atomValu","_previousTree$atomVal","_pendingSetSelf","_pendingSetSelf2","_pendingSetSelf3","oldLoadable","parentStoreID_UNSTABLE","_cleanupEffectsByStor3","_store$getState$nextT5","initLoadable","wrappedPromise","_state$atomValues$get","_store$getState$nextT2","_state$atomValues$get2","wrapPendingPromise","_cleanupEffectsByStor","restOptions","optionsDefault","storedValue","sel","baseValue","atomWithFallback","Recoil_atom","Recoil_MapCache","Recoil_MapCache_1","Recoil_MapCache$1","MapCache","LRUCache$2","MapCache$1","defaultPolicy$1","Recoil_cacheFromPolicy","getValueMapper$1","getCache","setConfigDeletionHandler$2","Recoil_atomFamily","_options$cachePolicyF","_options$cachePolicyF2","atomCache","cachePolicyForParams_UNSTABLE","_stableStringify","cachedAtom","atomOptions","newAtom","setConfigDeletionHandler$3","Recoil_selectorFamily","selectorCache","cachedSelector","myKey","myGet","callbacks","myCachePolicy","newSelector","constantSelector","Recoil_constSelector","throwingSelector","Recoil_errorSelector","Recoil_readOnlySelector","loadableWithError$3","loadableWithPromise$3","loadableWithValue$4","concurrentRequests","exceptions","isError","exp","unwrapDependencies","wrapResults","wrapLoadables","exception","waitForNone","waitForAny","waitForAll","exceptionResults","syncResults","waitForAllSettled","Recoil_WaitFor","noWait","DefaultValue$3","RecoilRoot$2","useRecoilStoreID$1","isRecoilValue$5","retentionZone$1","freshSnapshot$2","useRecoilState$1","useRecoilState_TRANSITION_SUPPORT_UNSTABLE$1","useRecoilStateLoadable$1","useRecoilValue$1","useRecoilValue_TRANSITION_SUPPORT_UNSTABLE$1","useRecoilValueLoadable$1","useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE$1","useResetRecoilState$1","useSetRecoilState$1","useGotoRecoilSnapshot$1","useRecoilSnapshot$1","useRecoilTransactionObserver$1","useRecoilCallback$1","noWait$1","waitForAll$1","waitForAllSettled$1","waitForAny$1","waitForNone$1","Recoil_index","RecoilEnv","useRecoilBridgeAcrossReactRoots_UNSTABLE","atomFamily","selectorFamily","constSelector","errorSelector","readOnlySelector","useGetRecoilValueInfo_UNSTABLE","useRecoilRefresher_UNSTABLE","useRecoilTransaction_UNSTABLE","useRecoilTransactionObserver_UNSTABLE","snapshot_UNSTABLE","useRetain","Recoil_index_5","Recoil_index_8","Recoil_index_22","FlexColumn","_ref$bgHex","bgHex","_objectSpread","flexDirection","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","objectAssign","test1","test2","test3","letter","shouldUseNative","symbols","TypeError","toObject","ReactPropTypesSecret_1","ReactPropTypesSecret","getStack","checkPropTypes$1","resetWarningCache","checkPropTypes_1","_assign","hasSymbol","REACT_CONCURRENT_MODE_TYPE","REACT_BLOCK_TYPE","REACT_FUNDAMENTAL_TYPE","REACT_RESPONDER_TYPE","REACT_SCOPE_TYPE","BEFORE_SLASH_RE","getComponentName","resolvedThenable","currentlyValidatingElement","pathBeforeSlash","describeComponentFrame","suspense","IsSomeRendererActing","argIndex","ReactComponentTreeHook","POOL_SIZE","traverseContextPool","getPooledTraverseContext","mapResult","keyPrefix","mapFunction","mapContext","traverseContext","releaseTraverseContext","traverseAllChildrenImpl","getComponentKey","traverseAllChildren","forEachSingleChild","bookKeeping","mapSingleChildIntoContext","mapIntoWithKeyPrefixInternal","frozenObject","testMap","testSet","react_development","calculateChangedBits","_calculateChangedBits","_ctor","unstable_observedBits","REACT_ASYNC_MODE_TYPE","typeOf","$$typeofType","AsyncMode","Element","Lazy","Memo","Portal","hasWarnedAboutDeprecatedIsAsyncMode","reactIs_development","isAsyncMode","isContextConsumer","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isSuspense","ReactIs","require$$2","require$$3","require$$4","emptyFunctionThatReturnsNull","propTypesModule","throwOnDirectAccess","ITERATOR_SYMBOL","ANONYMOUS","ReactPropTypes","createPrimitiveTypeChecker","bigint","bool","symbol","any","createChainableTypeChecker","arrayOf","typeChecker","propFullName","PropTypeError","getPropType","instanceOf","expectedClass","expectedClassName","isNode","objectOf","propType","oneOf","expectedValues","valuesString","getPreciseType","oneOfType","arrayOfTypeCheckers","checker","getPostfixForTypeWarning","expectedTypes","checkerResult","expectedType","shapeTypes","invalidValidatorError","exact","allKeys","validate","manualPropTypeCallCache","manualPropTypeWarningCount","checkType","isRequired","secret","cacheKey","chainedCheckType","isSymbol","UilFilm","viewBox","UniFilm","Watch","HostGuest","host","guest","VideoDescription","_ref3","subtitle","textOverflow","Card","stringToByteArray$1","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","webSafe","init_","byteToCharMap","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","bytes","pos","c1","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","byte4","DecodeBase64StringError","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","getDefaultsFromGlobal","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaultsFromCookie","cookie","decoded","base64Decode","getDefaults","defaultsJsonString","getDefaultsFromEnvVariable","getDefaultEmulatorHostnameAndPort","productName","_a","_b","emulatorHosts","getDefaultEmulatorHost","separatorIndex","lastIndexOf","parseInt","getDefaultAppConfig","Deferred","wrapCallback","FirebaseError","setPrototypeOf","captureStackTrace","ErrorFactory","service","serviceName","fullCode","template","PATTERN","replaceTemplate","fullMessage","deepEqual","aKeys","bKeys","aProp","bProp","isObject","thing","getModularInstance","_delegate","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","setMultipleInstances","setServiceProps","setInstanceCreatedCallback","DEFAULT_ENTRY_NAME","instances","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","shouldAutoInitialize","getOrInitializeService","instanceIdentifier","getImmediate","optional","getComponent","setComponent","isComponentEager","instanceDeferred","clearInstance","services","INTERNAL","_delete","isComponentSet","getOptions","opts","onInit","existingCallbacks","existingInstance","invokeOnInitCallbacks","ComponentContainer","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","LogLevel","levelStringToEnum","debug","DEBUG","verbose","VERBOSE","INFO","WARN","ERROR","silent","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","logLevel","toISOString","Logger","_logLevel","_logHandler","_userLogHandler","setLogLevel","logHandler","userLogHandler","instanceOfAny","constructors","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","receiver","IDBTransaction","objectStoreNames","objectStore","wrapFunction","IDBDatabase","IDBCursor","advance","continue","continuePrimaryKey","storeNames","tx","transformCachableValue","unlisten","complete","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","IDBRequest","request","success","promisifyRequest","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","oldTraps","PlatformLoggerServiceImpl","getPlatformInfoString","isVersionServiceProvider","library","logString","name$o","version$1","logger","PLATFORM_LOG_STRING","firebase","_apps","_components","_addComponent","app","_registerComponent","_getProvider","heartbeatController","triggerHeartbeat","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","appName","initializeApp","rawConfig","existingApp","newApp","getApp","registerVersion","libraryKeyOrName","variant","libraryMismatch","versionMismatch","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","blocked","upgrade","blocking","terminated","indexedDB","openPromise","oldVersion","newVersion","db","openDB","createObjectStore","originalErrorMessage","writeHeartbeatsToIndexedDB","heartbeatObject","put","computeKey","idbGetError","appId","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","agent","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","overwrite","getHeartbeatsHeader","heartbeatsToSend","unsentEntries","heartbeatsCache","heartbeatEntry","hb","dates","countBytes","extractHeartbeatsForHeader","headerString","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","isIndexedDBAvailable","preExist","DB_CHECK_NAME","onsuccess","close","deleteDatabase","onupgradeneeded","onerror","idbHeartbeatObject","readHeartbeatsFromIndexedDB","heartbeatsObject","existingHeartbeatsObject","commonjsGlobal","globalThis","goog","aa","ca","da","ea","fa","q","ha","$","ac","sa","N","ka","ma","na","w","oa","pa","qa","ta","ua","va","wa","xa","ya","Aa","Ba","exec","Ca","parseFloat","A","Ga","Ha","Ia","Ja","proxy","la","ia","Ka","Na","Pa","Qa","Ra","Sa","Ua","Ta","Va","Wa","Ya","once","Za","$a","O","ab","bb","eb","addListener","removeListener","P","fb","gb","handleEvent","B","S","J","C","ib","t","jb","lb","mb","ob","j","pb","qb","rb","sb","tb","vb","ub","wb","xb","ga","T","yb","zb","Ab","Bb","Cb","Db","Fb","Gb","D","Jb","Ea","E","Lb","Mb","Nb","Ob","Pb","STAT_EVENT","stat","F","Qb","Rb","Sb","NO_ERROR","Eb","TIMEOUT","Ib","Ub","Vb","$b","Xb","OPEN","Hb","Yb","Zb","bc","W","U","cc","V","I","L","G","Y","M","ba","K","dc","XMLHttpRequest","ec","fc","gc","hc","ic","jc","kc","lc","nb","oc","rc","uc","qc","vc","pc","wc","nc","H","sc","abort","xc","yc","zc","Ac","Fa","Bc","ra","La","Ma","getResponseHeader","Cc","Da","Dc","Ec","Fc","Gc","Hc","Kc","Z","Jc","Ic","ja","mc","TextDecoder","decode","stream","getAllResponseHeaders","Oa","tc","cancel","Kb","Lc","Nc","Oc","Pc","Qc","Rc","$c","Xc","Sc","Yc","abs","encodeURI","Zc","M$1","Tc","encodeURIComponent","Uc","Vc","Wc","Mc","ad","bd","cd","dd","PerformanceNavigationTiming","getEntriesByType","nextHopProtocol","ed","fd","gd","hd","kd","onload","onabort","ontimeout","ld","md","readyState","nd","responseType","responseText","response","onreadystatechange","Headers","qd","Xa","pd","od","send","credentials","fetch","Request","arrayBuffer","ReadableStream","getReader","Uint8Array","setRequestHeader","rd","sd","td","ud","vd","yd","zd","Ad","wd","mozResponseArrayBuffer","Bd","Cd","Dd","internalChannelParams","Ed","xmlHttpFactory","supportsCrossDomainXhr","concurrentRequestLimit","fastHandshake","encodeInitMessageHeaders","forceLongPolling","detectBufferingProxy","longPollingTimeout","Fd","Gd","sendBeacon","Image","Hd","Ld","Kd","round","Jd","Md","Id","jd","za","hostname","Nd","Q","messageUrlParams","messageHeaders","clientProtocolHeaderRequired","initMessageHeaders","messageContentType","sendRawJson","httpSessionIdParam","R","Pd","__headers__","statusCode","__status__","__sm__","Qd","blockSize","Sd","k$1","getPrototypeOf","withCredentials","xd","kb","__data__","S$1","Td","Ud","Wd","Xd","X","Zd","$d","ae","Yd","be","and","or","xor","HTTP_ERROR","CLOSE","MESSAGE","listenOnce","getLastError","getLastErrorCode","getStatus","getResponseJson","getResponseText","setWithCredentials","multiply","modulo","toNumber","getBits","fromNumber","fromString","Vd","Integer","uid","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","user","getToken","invalidateToken","enqueueRetryable","shutdown","changeListener","currentUser","forceRefresh","auth","addAuthTokenListener","accessToken","removeAuthTokenListener","getUid","appCheck","addTokenListener","removeTokenListener","crypto","msCrypto","getRandomValues","tt","Dt","$e","databaseId","persistenceKey","ssl","autoDetectLongPolling","longPollingOptions","useFetchStreams","Oe","projectId","database","isDefaultDatabase","ri","Ou","Bu","timerId","Po","bo","Vo","So","Do","Co","xo","No","ko","enqueueAfterDelay","Mo","skipDelay","asyncQueue","targetTimeMs","op","removalCallback","createAndSchedule","timerHandle","handleDelayElapsed","enqueueAndForget","authCredentials","appCheckCredentials","databaseInfo","clientId","authCredentialListener","appCheckCredentialListener","getConfiguration","initialUser","maxConcurrentLimboResolutions","setCredentialChangeListener","setAppCheckTokenChangeListener","verifyNotTerminated","isShuttingDown","terminate","enterRestrictedMode","enqueueAndForgetEvenWhileRestricted","_onlineComponents","_offlineComponents","th","timeoutSeconds","eh","uh","oh","ah","ignoreUndefinedProperties","localCache","cacheSizeBytes","sh","experimentalForceLongPolling","experimentalAutoDetectLongPolling","experimentalLongPollingOptions","hh","_authCredentials","_appCheckCredentials","_databaseId","_app","_persistenceKey","_settings","_settingsFrozen","_initialized","_terminated","_terminateTask","_setSettings","sessionIndex","iamToken","authTokenFactory","client","_getSettings","_freezeSettings","_terminate","settings","lh","mockUserToken","project","iat","user_id","iss","aud","auth_time","sign_in_provider","identities","alg","createMockUserToken","Ih","qo","visibilityState","enqueue","verifyOperationInProgress","vh","_firestoreClient","_offlineComponentProvider","_onlineComponentProvider","_uninitializedComponentsProvider","_offlineKind","_offline","_online","Vh","LONG_TYPE","UNSIGNED_LONG_TYPE","mapValues","encode","json","FUNCTIONS_TYPE","errorCodeMap","FunctionsError","details","authProvider","messagingProvider","appCheckProvider","messaging","getAuthToken","getMessagingToken","Notification","permission","getAppCheckToken","limitedUseAppCheckTokens","getLimitedUseToken","getContext","authToken","messagingToken","appCheckToken","DEFAULT_REGION","FunctionsService","regionOrCustomDomain","fetchImpl","emulatorOrigin","contextProvider","cancelAllRequests","deleteService","customDomain","region","_url","httpsCallable$1","functionsInstance","failAfterHandle","millis","failAfter","race","postJSON","bodyJSON","codeForHTTPStatus","description","errorJSON","_errorForResponse","responseData","callAtURL","registerFunctions","videosList","fields","duration","Order","apiKey","authDomain","storageBucket","messagingSenderId","Ph","functions","emulator","connectFunctionsEmulator$1","connectFunctionsEmulator","getFunctions","callAirtable","ytLinks","httpsCallable","YTLinks","_useState2","_slicedToArray","setResults","callAirtableAPI","records","CardColumn","TextContainer","_ref$direction","justifyContent","alignItems","Text","fontFamily","Hamburger","_ref$thick","thick","_ref$height","_ref$width","showNav","Header","_useRecoilState2","setOpen","boxShadow","textAlign","fontSize","rnds8","rng","byteToHex","native","randomUUID","v4","buf","rnds","unsafeStringify","RememberMe","consent","cookieValue","localStorage","getItem","uuidv4","buildNewGuid","setItem","UilNotebooks","Thing5","SideNavigationPanel","IconColumn","NavLinkContainer","IconContainer","FormUpload","file","setFile","_useState4","_useState6","setFilePath","_useState8","discoveredText","setDiscoveredText","files","filename","uploadForm","getElementById","tempText","tempFileName","App","querySelector"],"mappings":"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"}